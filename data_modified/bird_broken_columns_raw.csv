db_id,train_example
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the highest eligible free rate for K-12 students in the schools in Alameda County? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list the lowest three eligible free rates for students aged 5-17 in continuation schools. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list the zip code of all the charter schools in Fresno County Office of Education. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many schools with an average score in Math under 400 in the SAT test are exclusively virtual? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list the codes of the schools with a total enrollment of over 500. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list the phone numbers of the schools with the top 3 SAT excellence rate. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which active district has the highest average score in Reading?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many schools in merged Alameda have number of test takers less than 100?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the charter number of the school that the average score in Writing is 499?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many schools in Contra Costa (directly funded) have number of test takers not more than 250?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the phone number of the school that has the highest average score in Math?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many schools in Amador which the Low Grade is 9 and the High Grade is 12?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which school in Contra Costa has the highest number of test takers?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: When did the first-through-twelfth-grade school with the largest enrollment open? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which cities have the top 5 lowest enrollment number for students in grades 1 through 12? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the telephone number for the school with the lowest average score in reading in Fresno Unified? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which exclusively virtual schools have the top 5 highest average reading scores? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the type of education offered in the school who scored the highest average in Math?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the average math score of the school with the lowest average score for all subjects, and in which county is it located? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which state special schools have the highest number of enrollees from grades 1 through 12? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the postal street address for the school with the 6th highest Math average? Indicate the school's name. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many test takers are there at the school/s whose mailing city address is in Fresno?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Of all the schools with a mailing state address in California, how many are active in San Joaquin?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the phone number and extension number for the school that had the 333rd highest average writing score?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the websites for all the partially virtual chartered schools located in San Joaquin? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many chartered schools located in the city of Hickman are owned by the Elementary School District? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the total amount of Community College District closure in 1989 in the city of San Francisco?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many active and closed District Community Day Schools are there in the county of Alpine?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the district code for the School that does not offer a magnet program in the city of Fresno? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the most common type of grade span served in the city of Adelanto?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the grade span offered in the school with the highest longitude?

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the two most common first names among the school administrators? Indicate the district to which they administer.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school. 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools? 

"
california_schools,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE frpm (
column_0 text,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
column_13 text,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 real,
column_19 real,
column_20 real,
column_21 real,
column_22 real,
column_23 real,
column_24 real,
column_25 real,
column_26 real,
column_27 real,
column_28 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE satscores (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_0) REFERENCES schools(column_0),
);
CREATE TABLE schools (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 text,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 date,
column_21 date,
column_22 integer,
column_23 text,
column_24 text,
column_25 text,
column_26 text,
column_27 text,
column_28 text,
column_29 text,
column_30 text,
column_31 text,
column_32 text,
column_33 text,
column_34 text,
column_35 text,
column_36 integer,
column_37 real,
column_38 real,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 date,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many accounts who choose issuance after transaction are staying in East Bohemia region? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many accounts who have region in Prague are eligible for loans? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: The average unemployment ratio of 1995 and 1996, which one has higher percentage? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List out the no. of districts that have female average salary is more than 6000 but less than 10000? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many male customers who are living in North Bohemia have average salary greater than 8000? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List out the account numbers of clients who are youngest and have highest average salary? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many customers who choose statement of weekly issuance are Owner? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List out the clients who choose statement of issuance after transaction are Disponent? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List out the accounts who have the earliest trading date in 1995 ?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Which client issued his/her card in 1994/3/3, give his/her client id.

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: The transaction of 840 USD happened in 1998/10/14, when was this account opened?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the gender of the oldest client who opened his/her account in the highest average salary branch? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many clients opened their accounts in Jesenik branch were women? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many accounts were opened in Litomerice in 1996? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For the female client who was born in 1976/1/29, which district did she opened her account? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For the first client who opened his/her account in Prague, what is his/her account ID? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the percentage of loan amount that has been fully paid with no issue. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List account ID and account opening date for accounts from 'Prachatice'. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: State the district and region for loan ID '4990'. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Provide the account ID, district and region for loan amount greater than USD300,000. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List the loan ID, district and average salary for loan with duration of 60 months. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List the account IDs with monthly issuance of statements. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many of the account holders in South Bohemia still do not own credit cards? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Which district has highest active loan? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the average loan amount by male borrowers? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: In 1996, which districts have the highest unemployment rate? List their branch location and district name. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: In the branch where the largest number of crimes were committed in 1996, how many accounts were opened? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many accounts have running contracts in Branch location 1? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many high-level credit cards have ""disponent"" type of disposition? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many accounts are there in the district of ""Pisek""? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Which districts have transactions greater than USS$10,000 in 1997?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Which accounts placed orders for household payment in Pisek? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What are the accounts that have both gold and junior credit cards?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How much is the average amount in credit card made by account holders in a month, in year 2021? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Who are the account holder identification numbers whose spent per month on the credit card is less than the average, in 1998? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Who are the female account holders who own credit cards and also have loans? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many female clients' accounts are in the region of South Bohemia? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Please list the accounts whose district is Tabor that are eligible for loans. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many accounts in North Bohemia has made a transaction with the partner's bank being AB? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Please list the name of the districts with accounts that made withdrawal transactions. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many 'classic' cards are eligible for loan? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many male clients in 'Hl.m. Praha' district? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many percent of 'Gold' cards were issued prior to 1998? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Who is the owner of the account with the largest loan amount?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the number of committed crimes in 1995 in the district of the account with the id 532? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the district Id of the account that placed the order with the id 33333?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List all the withdrawals in cash transactions that the client with the id 3356 makes. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Among the weekly issuance accounts, how many have a loan of under 200000? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What type of credit card does the client with the id 13539 own?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the region of the client with the id 3541 from? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Which district has the most accounts with loan contracts finished with no problems? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Who placed the order with the id 32423?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Please list all the transactions made by accounts from district 5.

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many of the accounts are from Jesenik district?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List all the clients' IDs whose junior credit cards were issued after 1996. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many credit card withdrawals were recorded after 1995? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What was the difference in the number of crimes committed in East and North Bohemia in 1996? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many owner and disponent dispositions are there from account number 1 to account number 10?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What year was account owner number 130 born?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many accounts have an owner disposition and request for a statement to be generated upon a transaction? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the amount of debt that client number 992 has, and how is this client doing with payments?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Which kind of credit card does client number 9 possess?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How much, in total, did client number 617 pay for all of the transactions in 1998?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Please provide the IDs of the 3 female clients with the largest loans. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many accounts in Beroun were opened after 1996?

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many female customers have a junior credit card? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What proportion of customers who have accounts at the Prague branch are female? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What percentage of male clients request for weekly statements to be issued? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many clients who choose statement of weekly issuance are User? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Name the account numbers of female clients who are oldest and have lowest average salary? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many clients who were born in 1920 stay in east Bohemia? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: What is the average amount of loan which are still on running contract with statement issuance after each transaction? 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: List all ID and district for clients that can only have the right to issue permanent orders or apply for loans. 

"
financial,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE account (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES district(column_0),
);
CREATE TABLE card (
column_0 integer,
column_1 integer,
column_2 text,
column_3 date,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES disp(column_0),
);
CREATE TABLE client (
column_0 integer,
column_1 text,
column_2 date,
column_3 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES district(column_0),
);
CREATE TABLE disp (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES client(column_0),
FOREIGN KEY (column_2) REFERENCES account(column_0),
);
CREATE TABLE district (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 integer,
column_9 real,
column_10 integer,
column_11 real,
column_12 real,
column_13 integer,
column_14 integer,
column_15 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE loan (
column_0 integer,
column_1 integer,
column_2 date,
column_3 integer,
column_4 integer,
column_5 real,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE order (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 real,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
CREATE TABLE trans (
column_0 integer,
column_1 integer,
column_2 date,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 text,
column_8 text,
column_9 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES account(column_0),
);
---------------------
QUESTION: Provide the IDs and age of the client with high level credit card, which is eligible for loans. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the most common bond type? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: In the non-carcinogenic molecules, how many contain chlorine atoms? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Calculate the average number of oxygen atoms in single-bonded molecules. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: On average how many carcinogenic molecules are single bonded? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: In the molecule containing sodium atoms, how many are non-carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Find the triple-bonded molecules which are carcinogenic. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the percentage of carbon in double-bond molecules? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many triple type bonds are there? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: In how many atoms is there no bromine? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Of the first 100 molecules in number order, how many are carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Identify by their ID the molecules in which there is silicon. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What elements are in the TR004_8_9 bond atoms? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What elements are in a double type bond? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which type of label is the most numerous in atoms with hydrogen? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Tellurium is in what type of bond? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What atoms are connected in single type bonds? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Indicate which atoms are connected in non-carcinogenic type molecules. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which element is the least numerous in non-carcinogenic molecules? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What type of bond is there between the atoms TR004_8 and TR004_20? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What type of label is not on molecules with atoms with tin? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many atoms with iodine and sulfur type elements are there in single bond molecules? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Identify all connected atoms with a triple bond. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Identify all the atoms that are connected to the atoms of the TR181 molecule. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What percentage of carcinogenic-type molecules does not contain fluorine? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the percentage of carcinogenic molecules in triple type bonds? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list top three elements of the toxicology of the molecule TR000 in alphabetical order. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the difference between the number of molecules that are carcinogenic and those that are not? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the atom IDs of the bond TR_000_2_5? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the bond IDs that have the same atom ID 2 of TR000_2? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list top five molecules that have double bonds in alphabetical order. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the percentage of double bonds in the molecule TR008? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the percentage of molecules that are carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the type of bond that molecule TR000 has when involved in any bonds? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the elements of the toxicology and label of molecule TR060? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Please list top two bonds that happened with the molecule TR006 in alphabetical order. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many bonds which involved atom 12 does molecule TR009 have? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many molecules are carcinogenic and have the bromine element? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the bond type and the atoms of the bond ID of TR001_6_9? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many molecules have a triple bond type? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many connections does the atom 19 have? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List all the elements of the toxicology of the molecule ""TR004"". 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many of the molecules are not carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among all the atoms from 21 to 25, list all the molecules that are carcinogenic. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the bonds that have phosphorus and nitrogen as their atom elements? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Is the molecule with the most double bonds carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the average number of bonds the atoms with the element iodine have? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List the bond type and the bond ID of the atom 45. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List all the elements of atoms that can not bond with any other atoms. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the atoms of the triple bond with the molecule ""TR447""? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the elements of the atoms of TR144_8_19? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Of all the carcinogenic molecules, which one has the most double bonds? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the least common element of all carcinogenic molecules? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the atoms that can bond with the atom that has the element lead? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List the elements of all the triple bonds. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What percentage of bonds have the most common combination of atoms' elements? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What proportion of single bonds are carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Calculate the total atoms consisting of the element carbon and hydrogen. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List down atom id2 for atoms with element sulfur. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the bond type for atoms with element Tin? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many elements are there for single bond molecules? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Write down bond id for molecules that are carcinogenic. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the single bond molecule id, which molecules are not carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the composition of element chlorine in percentage among the single bond molecules? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the labels for TR000, TR001 and TR002? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List down the molecule id for non carcinogenic molecules. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Calculate the total carcinogenic molecules for molecule id from TR000 to TR030. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List down the bond type for molecules from molecule id TR000 to TR050. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the elements for bond id TR001_10_11? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many bond id have element iodine? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Does bond id TR001_1_8 have both element of chlorine and carbon? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List down two molecule id of triple bond non carcinogenic molecules with element carbon. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the percentage of element chlorine in carcinogenic molecules? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List the toxicology elements associated with molecule TR001. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Give me the molecule ID of the double bond type. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Write down the atom IDs of the first and second atoms of triple bond type molecules. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What are the toxicology elements associated with bond ID TR005_16_26? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many of the single bond type molecules are non-carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the label for bond ID TR001_10_11? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Tally the toxicology element of the 4th atom of each molecule that was carcinogenic. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Identify whether the chemical compound that contains Calcium is carcinogenic. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Determine the bond type that is formed in the chemical compound containing element Tellurium. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Name chemical elements that form a bond TR001_10_11. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among all chemical compounds identified in the database, what percent of compounds form a triple-bond. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Identify whether the molecule that contains atom TR001_1 is carcinogenic. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Is molecule TR151 carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which toxic element can be found in the molecule TR151? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many chemical compounds in the database are identified as carcinogenic. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many atoms belong to the molecule labeled with carcinogenic compounds? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which bond ids are double-bond with carcinogenic compound? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Indicate the molecule id is belonging to the TR00_1_2 bond that has the first atom named TR00_1.

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the atoms that contain element carbon, which one does not contain compound carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Is molecule TR124 carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What atoms comprise TR186? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the bond type of TR007_4_19? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Name the elements that comprise the atoms of bond TR001_2_4. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many double bonds does TR006 have and is it carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List all carcinogenic molecules and their elements. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Name all bonds with single bond types and what atoms are connected to the molecules. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which molecules have triple bonds and list all the elements they contain. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Name the atoms' elements that form bond TR000_2_3. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many bonds are created by bonding atoms with chlorine element? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List out the atom id that belongs to the TR346 molecule and how many bond type can be created by this molecule?

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many molecules without sulphur element is not having double bond? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the carcinogenic label for bond TR001_2_4? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many atoms belong to molecule id TR005?

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many single bonds are there in the list? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the molecules which contain ""cl"" element, which of them are carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the molecules which contain ""c"" element, which of them are not carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Calculate the percentage of carcinogenic molecules which contain the Chlorine element. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the molecule id of bond id TR001_1_7?

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many elements are contained in bond_id TR001_3_4? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the molecule of atom id ""TR000_2"" and atom id 2 ""TR000_4""?

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the element of toxicology for the atom with the ID of TR000_1? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Is molecule TR000 is carcinogenic or not? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Find the percentage of atoms with single bond. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many carcinogenic molecules that consisted of Nitrogen? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which molecule consisted of Sulphur atom with double bond? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which non-carcinogenic molecules consisted more than 5 atoms? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List all the elements with double bond, consisted in molecule TR024. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Which carcinogenic molecule have the highest number of atoms consisted in it? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: How many of the molecules are carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: Among the molecules between TR004 to TR010, how many of them has single bonds? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: In the molecule TR008, how many carbons are present? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the total number of molecules with double bonded oxygen? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: in molecules with triple bonds, how many of them are not carcinogenic? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List the element and bond type included in the molecule with molecule ID of TR016. 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: What is the atom ID of double bonded carbon in TR012 molecule? 

"
toxicology,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE atom (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE bond (
column_0 text,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES molecule(column_0),
);
CREATE TABLE connected (
column_0 text,
column_1 text,
column_2 text,
FOREIGN KEY (column_0) REFERENCES atom(column_0),
FOREIGN KEY (column_1) REFERENCES atom(column_0),
FOREIGN KEY (column_2) REFERENCES bond(column_0),
);
CREATE TABLE molecule (
column_0 text,
column_1 text,
PRIMARY KEY (column_0),
);
---------------------
QUESTION: List the atom ID of the carcinogenic molecule that contains oxygen? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which are the cards that have incredibly powerful foils. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the borderless cards available without powerful foils? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List the card names with value that cost more converted mana for the face. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Name all cards with 2015 frame style ranking below 100 on EDHRec. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List all the mythic rarity print cards banned in gladiator format. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: For artifact type of cards that do not have multiple faces on the same card, state its legalities for vintage play format. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List all the card id and artist with unknown power which are legal for commander play format. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Describe the information about rulings for card named 'Sublime Epiphany' with number 74s. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Name the card and artist with the most ruling information. Also state if the card is a promotional printing. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: State the alternative languages available for card named Annul numbered 29. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Name all the cards which have alternative language in Japanese. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Calculate the percentage of the cards availabe in Chinese Simplified. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List all the sets available in Italian translation. State the total number of cards per set. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many types of cards does the artist Aaron Boyd illustrated about card art? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the keyword found on card 'Angel of Mercy'? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards have infinite power? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What type of promotion is of card 'Duress'? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the border color of card ""Ancestor's Chosen""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the type of the card ""Ancestor's Chosen"" as originally printed? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question
What are the languages available for the set that card 'Angel of Mercy' is in? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards of legalities whose status is restricted have text boxes? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the description about the ruling of card ""Condemn""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards of legalities whose status is restricted are found in a starter deck? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the status of card ""Cloudchaser Eagle""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the type of card ""Benalish Knight""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the rule of playing card ""Benalish Knight""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please provide the names of the artists who illustrated the card art in Phyrexian. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the percentage of borderless cards? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards that illusrtated in German have been reprinted? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many borderless cards are illustrated in Russian? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the percentage of cards whose language is French among the Story Spotlight cards? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards are there with toughness of 99?

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Name the cards that were illustrated by Aaron Boyd. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many black border cards are only available on mtgo? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List down all the card IDs with converted mana cost of 0. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the card layout of cards with keyword of flying?

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards with original type of ""Summon - Angel"" have subtype other than ""Angel""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the cards belong to duel deck a? List the ID. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List the edhrecRank for cards with frame version 2015.

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List down the name of artists for cards in Chinese Simplified. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the cards that only available in paper and Japanese language? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many of the banned cards are white border? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List down the uuid for legacy cards and the foreign language of these cards. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Write down the ruling of Beacon of Immortality. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards are having future frame version and what are the legality status of these cards? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the cards for set OGW? State the colour for these cards. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the cards in set 10E with converted mana of 5 have translation and what are the languages? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List down the name of cards with original types of Creature - Elf and the date of rulings for these cards. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the colors of cards from ID 1-20? What are the format of these cards? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the Artifact cards, which are black color and comes with foreign languague translation? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Pick 3 cards with rarity of uncommon, list down name these cards according to ascending order of it's ruling date. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: On how many cards designed by John Avon is its foil non-powerful? John Avon refer to artist; foil poweful foils refers to cardKingdomId and cardKingdomFoildId is NOT NULL

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many white bordered cards are powerful? white bordered cards refer to borderColor = 'white'; powerful cards refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null (replace)

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards with a 1993 frame version and available on paper have a sensitive content warning? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo? available in paper refers to availability = 'paper'; available in mtgo refers to availability = 'mtgo; frameVersion = 2003;borderColor = 'black'

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How much unconverted mana do all the cards created by Rob Alexander cost in total? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Lists all types of cards available in arena. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Lists the set code of all cards translated into Spanish. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What percentage of legendary frame effect cards have a maximum starting maximun hand
size of +3? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the percentage of Story Spotlight cards that also have a text box? List them by their ID. Story Spotlight cards that do not have a text box refers to isStorylight = 1 and isTextless = 1; Percentage refer to DIVIDE(SUM(count(id) where isStorylight = 1), SUM(count(id))) * 100

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Calculate the percentage of cards in Spanish. List them by name. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Indicates the name of all the languages into which the set whose number of cards is 309 is translated. set refer to setCode; number of cards refers to baseSetSize; baseSetsize = 309

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many Brazilian Portuguese translated sets are inside the Commander block? Commander block refer to block = 'Commander'; sets refer to setCode; Portuguese refer to language = 'Portuguese (Brasil)'

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Lists by ID all Creature-type cards with legal status. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Lists all types of cards in German. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many null power cards contain info about the triggered ability 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Indicates the number of cards with pre-modern format, ruling text ""This is a triggered mana ability"" that do not have multiple faces. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: To which artist does the card with the text ""Das perfekte Gegenmittel zu einer dichten Formation"" belong?

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards with print rarity have ruling text printed on 10/01/2009? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What language is the set of 180 cards that belongs to the Ravnica block translated into? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What percentage of cards with format commander and legal status do not have a content warning? do not have a content warning refers to hasContentWarning = 0; 
percentage refers to DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100 where 
format = 'commander' AND Status = 'legal';

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What percentage of cards without power are in French? in French refers to language = 'French'; cards without power refers to power IS NULL OR power = '*'; 
percentage = DIVIDE(COUNT(language = 'French' and power is NULL or power = '*'), COUNT( power is NULL or power = '*'))*100

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What percentage of Japanese translated sets are expansion sets? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What kind of printing is on the card that Daren Bader created? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many color cards with no borders have been ranked higher than 12000 on EDHRec? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards are oversized, reprinted, and printed for promotions? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list top three unknown power cards that have promotional types for arena league in alphabetical order. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the language of the card with the multiverse number 149934? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please provide the ids of top three powerful pairs of Kingdom Foil and Kingdom Cards sorted by Kingdom Foil id in alphabetical order. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What proportion of cards do not have a text box with a normal layout? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What languages are available in the set known as Archenemy on the magic card market and having the code ARC? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the name of set number 5 and its translation? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the language and expansion type of set number 206? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list top two sets of cards with their IDs that have Italian-language cards and are located in the Shadowmoor block in alphabetical order.

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which Russian set of cards contains the most cards overall? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many sets are available just in Japanese and not in Magic: The Gathering Online? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many card border with black color ? List out the card id. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards have frame effect as extendedart? List out the id of those cards. 
frame effect as extendedart refers to frameEffects = 'extendedart'

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among black card borders, which card has full artwork? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Point out the language of set id ""174""?

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List out the set name of the set code ""ALL"".

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which foreign language used by ""A Pedra Fellwar""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: State the set code of the set with release date of 07/13/2007?

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Mention the base set size and set code of the set that was in block named ""Masques"" and ""Mirage"".

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Give the code of sets have expansion type of 'expansion'? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Name the foreign name of the card that has boros watermark? List out the type of this card.

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is percentage of the cards with a converted Mana Cost of 10 in set of Abyssal Horror? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Give the code of sets have expansion commander type? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Name the foreign name of the card that has abzan watermark? List out the type of this card.

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the language of the card that has azorius watermark? List out the type of this card.

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards available in paper have a positive starting maximum hand size? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list the names of the cards that have a text box. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What's the unconverted mana cost of the card ""Ancestor's Chosen""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the cards with a white border color, how many of them have unknown power? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What's the list of all types for the card ""Molimo, Maro-Sorcerer""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list the websites where I can purchase the cards that have the promotional type of ""bundle"". 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many artists have designed a card with a black border color and is available in both ""arena"" and ""mtgo"" printing type? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which card costs more converted mana, ""Serra Angel"" or ""Shrine Keeper""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which artist designed the card whose promotional name is ""Battra, Dark Destroyer""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What's the Italian name of the set of cards with ""Ancestor's Chosen"" is in? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many translations are there for the set of cards with ""Angel of Mercy"" in it? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list the names of the cards in the set ""Hauptset Zehnte Edition"". 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: For the set of cards with ""Ancestor's Chosen"" in it, is there a Korean version of it? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the cards in the set ""Hauptset Zehnte Edition"", how many of them are designed by Adam Rex? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards are there in the base set of ""Hauptset Zehnte Edition""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the Simplified Chinese translation of the name of the set ""Eighth Edition""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Did the set of cards with ""Angel of Mercy"" appear on Magic: The Gathering Online? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: When was the set of cards with ""Ancestor's Chosen"" released? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the expansion type of the set ""Hauptset Zehnte Edition""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the sets in the block ""Ice Age"", how many of them have an Italian translation? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Is the set of cards with Adarkar Valkyrie only available outside the United States? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the sets of cards that have an Italian translation, how many of them have a base set number of under 10? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards in the set Coldsnap have a black border color? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list the name of the cards in the set Coldsnap with the highest converted mana cost. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is card number 4 in the set Coldsnap? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the Italian flavor text of the card ""Ancestor's Chosen""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list all the foreign languages in which the card ""Ancestor's Chosen"" has a flavor text. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What's the German type of the card ""Ancestor's Chosen""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list the Italian text ruling of all the cards in the set Coldsnap. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Please list the Italian names of the cards in the set Coldsnap with the highest converted mana cost. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: When was the ruling for the card 'Reminisce' created? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the percentage of incredibly powerful cards in the set Coldsnap? card set Coldsnap refers to name = 'Coldsnap'; foil is incredibly powerful refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null; the percentage of incredibly powerful cards in the set refers to DIVIDE(SUM(incredibly powerful), SUM(name = 'Coldsnap'))*100

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What's the code for the set which was released on 2017/7/14? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List the keyrune code for the set whose code is 'PKHC'. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: For the set which had 'SS2' as the code, what is its magic card market id? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What's the magic card market name for the set which was released on 2017/6/9? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: For the set ""From the Vault: Lore"", what is its expansion type? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: For the set ""Commander 2014 Oversized"" , give its parent code. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What was the release date for the set which card ""Evacuation"" in it? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the number of cards are there in the set of ""Rinascita di Alara""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List the expansion type of the set ""Huitième édition"". 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What's the French name of the set of cards with ""Tendo Ice Bridge"" is in? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many translations of the name of the set ""Salvat 2011""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Tell the Japanese name of the set which card ""Fellwar Stone"" is in it. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the release date for the set ""Ola de frío""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What was the expansion type for the set which card ""Samite Pilgrim"" in it? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Show the Simplified Chinese translation of the name of the set ""Mirrodin""? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the unique id of the set that has the highest number of cards? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the most common visual frame effects among the incredibly powerful foils? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards with unknown power that can't be found in foil is in duel deck A? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: In duels, what are the top 10 cards with the highest uncoverted mana cost? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: When was the oldest mythic card released and what are its legal play formats? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many cards did Volkan BaÇµa illustrated whose foreign language is in French? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: How many rare enchantment Abundance cards are there whose play format status are all legal? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which of the play formats has the highest number of banned status? Indicate the play format and the name of the card. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the language of the ""Battlebond"" set? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Who is the illustrator that illustrated the least amount of cards? List the format of play of the cards that he/she illustrated. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Which cards are ranked 1st on EDHRec? List all of the cards name and its banned play format. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List the artists who illustrated cards with black borders which are available only in arena. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Find the uuid of cards in which the old school format is restricted or banned. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Among the card designed by Matthew D. Wilson, how many are available only in the paper? 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: Find and list the names of sets which doesn't have Japanese translation but have Korean translation. 

"
card_games,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE cards (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
column_8 text,
column_9 text,
column_10 real,
column_11 text,
column_12 integer,
column_13 real,
column_14 text,
column_15 text,
column_16 text,
column_17 text,
column_18 text,
column_19 text,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 text,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 text,
column_44 text,
column_45 text,
column_46 text,
column_47 text,
column_48 text,
column_49 text,
column_50 text,
column_51 text,
column_52 text,
column_53 text,
column_54 text,
column_55 text,
column_56 text,
column_57 text,
column_58 text,
column_59 text,
column_60 text,
column_61 text,
column_62 text,
column_63 text,
column_64 text,
column_65 text,
column_66 text,
column_67 text,
column_68 text,
column_69 text,
column_70 text,
column_71 text,
column_72 text,
column_73 text,
PRIMARY KEY (column_0),
);
CREATE TABLE foreign_data (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 text,
column_5 text,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES cards(column_71),
);
CREATE TABLE legalities (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
CREATE TABLE sets (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
column_4 text,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 text,
column_11 integer,
column_12 integer,
column_13 text,
column_14 text,
column_15 text,
column_16 text,
column_17 date,
column_18 integer,
column_19 integer,
column_20 text,
PRIMARY KEY (column_0),
);
CREATE TABLE set_translations (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES sets(column_4),
);
CREATE TABLE rulings (
column_0 integer,
column_1 date,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES cards(column_71),
);
---------------------
QUESTION: List all the frame styles and cards Allen Williams worked on and find any banned cards if there are any. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which user has a higher reputation, Harlan or Jarrod Dixon? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Please list the display names of all the users whose accounts were created in the year 2014. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users last accessed the website after 2014/9/1? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the display name of the user who has the most number of views? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users with more than 10 views created their account after the year 2013? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many posts does the user csgillespie own? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Please list the titles of the posts owned by the user csgillespie? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Who is the owner of the post ""Eliciting priors from experts""? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the title of the post that is owned by csgillespie and has the highest popularity? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the display name of the user who is the owner of the most valuable post? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the total number of comments of all the posts owned by csgillespie? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: For the post that got the most number of answers owned by csgillespie, how many answers did it get? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the display name of the user who last edited the post ""Examples for teaching: Correlation does not mean causation""? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the posts owned by csgillespie, how many of them are root posts? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Please list the display names of all the users who owns a post that is well-finished. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the posts owned by an elder user, how many of them have a score of over 19? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the location of the owner of the post ""Eliciting priors from experts""? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: From which post is the tag ""bayesian"" excerpted from? Please give the body of the post. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: From which post is the most popular tag excerpted from? Please give the body of the post. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many badges has the user csgillespie obtained? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Please list the names of the badges obtained by csgillespie. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the badges obtained by csgillespie, how many of them were obtained in the year 2011? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the display name of the user who has obtained the most number of badges? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the average score of the posts owned by the user csgillespie? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the average number of badges obtained by a user with over 200 views? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the posts with a score of over 20, what is the percentage of them being owned by an elder user? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many votes did the user No.58 take on 2010/7/19? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Indicate the creation date of the maximum number of votes. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Give the number of ""Revival"" badges. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the title for the post which got the highest score comment? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: For the post which got 1910 view counts, how many comments does it get?

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Give the only one comment text of the post with parent id 107829. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: User No.23853 gave a comment to a post at 9:08:18 on 2013/7/12, was that post well-finished? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: For the owner user of post No. 65041, what is his/her reputation points? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: For the user with the display name of ""Tiago Pasqualini"", how many posts did he/she own? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Provide the display name of the user who made the vote No.6347. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Give the number of votes for the post about data visualization. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: For the user whose display name is ""DatEpicCoderGuyWhoPrograms"", what is his/her badge's name? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: For the user No.24, how many times is the number of his/her posts compared to his/her votes? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Write the contents of comments with a score of 17. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which user has the website URL listed at 'http://stackoverflow.com' 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the badge name that user 'SilentGhost' obtained? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Name the user that commented 'thank you user93!' 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Write all comments made by user 'A Lion.' 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Write all comments made on the post titled 'How does gentle boosting differ from AdaBoost?' 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Name 10 users with the badge name 'Necromancer.' 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?' 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List the title of posts which were edited by Vebjorn Ljosa. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the total score of the posts edited by Yevgeny and include the user's website URL. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Write all the comments left by users who edited the post titled 'Why square the difference instead of taking the absolute value in standard deviation?' 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How much is the total bounty amount of the post titled about 'data' 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which user added a bounty amount of 50 to the post title mentioning variance? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Calculate the average view count of posts tagged as 'humor' and write the title and the comments of the posts alongside their scores if applicable. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Give the total number of comments posted by user ID 13.

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which user ID has the highest reputation? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which user ID has the lowest view? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users are awarded with supporter badge during year 2011? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users are awarded with more than 5 badges? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users from New York have a teacher and supporter badge? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which user created post ID 1 and what is the reputation of this user?

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which user have only one post history per post and having at least 1000 views? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which users have posted the most comments. List out the user's badge? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users from India have the teacher badges? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the percentage difference of student badges given during 2010 and 2011? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List out all post that are related to post ID 61217 and what is the popularity of this post? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the score and the link type ID for post ID 395?

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List out all post ID with score more than 60 and list out all the user ID that created these post. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the sum of favourite count gained by user ID 686 in 2011? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the average of the up votes and the average user age for users creating more than 10 posts? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users obtained the ""Announcer"" badge? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List out the name of badges that users obtained on 7/19/2010 7:39:08 PM. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many positive comments are there on the list? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many posts have a score of 10 on the list? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What are the names of badges that users who have the highest reputation obtained? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Mention the reputation of users who had obtained the badge on 7/19/2010 7:39:08 PM. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the name of badge that the user whose display name is ""Pierre"" obtained?

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List out the dates that users who are located in Rochester, NY obtained their badges? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the users who obtained the ""Teacher"" badge, calculate their percentage of users 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the users who obtained the ""Organizer"" badges, calculate the percentage of users who are teenagers. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List out the age of users who located in Vienna, Austria obtained the badge? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many adults who obtained the badge Supporter? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: State the number of views of users who obtained the badge on 7/19/2010 7:39:08 PM. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What are the name of badges that users who have the lowest reputation obtained? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: State the name of badge that the user whose display name is ""Sharpie"" obtained. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many elders obtained the ""Supporter"" badge? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the name of user with the ID of 30? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users were from New York? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many votes were made in 2010? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users were adult? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which users have the highest number of views? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Calculate the ratio of votes in 2010 and 2011. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the name of tags used by John Stauffer's? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many posts were created by Daniel Vassallo? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many votes were made by Harlan? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which post by slashnick has the most answers count? State the post ID. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many posts by Matt Parker have more than 4 votes? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many negative comments did Neil McGuigan get in his posts? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: State all the tags used by Mark Meckes in his posts that doesn't have comments. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List all the name of users that obtained the Organizer Badges. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Based on posts posted by Community, calculate the percentage of posts that use the R language. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Calculate the difference in view count from post posted by mornington and view count from posts posted by Amos. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users received commentator badges in 2014? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many posts were created on 21st July, 2010? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What are the display names and ages of user who got the highest in views? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Provide the last edit date and last edit user ID for the post ""Detecting a given face in a database of facial images"". 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many negative comments were given by user ID 13? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Describe the post title which got positive comments and display names of the users who posted those comments. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Provide the badge names received in 2011 for the user whose location is in the North Pole. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Provide the users' display names and available website URLs of the post with favorite count of more than 150. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Describe the post history counts and last edit date of the post title ""What is the best introductory Bayesian statistics textbook?""

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Describe the last accessed date and location of the users who received the outliers badge. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Provide the related post title of ""How to tell if something happened in a data set which monitors a value over time"".

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List the post IDs and badge names of the user Samuel in 2013. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the owner's display name of the most popular post? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Mention the display name and location of the user who owned the excerpt post with hypothesis-testing tag. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Write down the related posts titles and link type IDs of the post ""What are principal component scores?"". 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Describe the display name of the parent ID for child post with the highest score. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What are the titles of the top 5 posts with the highest popularity? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many tags have post count between 5,000 to 7,000? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the owner user id of the most valuable post? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How old is the most influential user? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many posts with votes that were created in 2011 have a bounty of 50? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the id of the youngest user? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the score of the post with the most popular tag? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the average monthly number of links created in 2010 for posts that have no more than 2 answers? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the posts that were voted by user 1465, what is the id of the most valuable post? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the title of the post with the oldest post link? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the display name of the user who acquired the highest amount of badges? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: When did ""chl"" cast its first vote in a post? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the date when the youngest user made his or her first post? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the display name of the user who acquired the first Autobiographer badge? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the average number of posts voted by the oldest users? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Who has the highest reputation? Please give the display name. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users whose reputations are higher than 2000 and the number of views is higher than 1000? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Please list all display names of users who are adults. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many posts did Jay Stevens have in 2010? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which post by Harvey Motulsky has the most views? Please give the id and title of this post. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which post has the highest score? Please give its id and title's name. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the average score of Stephen Turner's posts? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Please list the users' display names whose posts had over 20000 views in 2011. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Which is the most valuable post in 2010? Please give its id and the owner's display name. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the percentage of posts whose owners had a reputation of over 1000 in 2011? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the percentage of teenage users. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the total number of posts with views above average. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many comments were added to the post with the highest score? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the number of posts that have been viewed over 35000 times but have received no comments from other users. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the display name and location of the user, who was the last to edit the post with ID 183. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the latest badge awarded to the user with the display name Emmett. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the number of adult users who have cast over 5000 upvotes. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the number of posts and comments left by the user, who has the latest created user account. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Provide the text of the latest comment to the post with the title 'Analysing wind data with R' and the display name of the user who left it. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many users were awarded with 'Citizen Patrol' badge? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Count the number of posts with a tag specified as 'careers'. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: When did the user known as 'IrishStat' create his or her account? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Identify the number of posts that offer a bounty amount over 30. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among all the posts posted by the most influential user, identify the percentage with a score above 50. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: How many posts have a score less than 20? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the tags with tag ID below 15, how many of them have 20 count of posts and below? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the excerpt post ID and wiki post ID of the tag named sample? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Give the user's reputation and up vote number of the user that commented ""fine, you win :)"". 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Give the texts commented on the post about linear regression. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the posts with views ranging from 100 to 150, what is the comment with the highest score? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List the creation date and age of the user that commented with webiste. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: In comments with 0 score, how many of the posts have view count lower than 5? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: In posts with 1 comment, how many of the comments have 0 score? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among products comments with 0 score, what is the total number of users ages 40 years old?

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the post ID and the comments commented in the post titled by ""Group differences on a five point Likert item""? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: What is the up vote number of the user that commented ""R is also lazy evaluated.""? 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: List the comments commented by the user with a username of Harvey Motulsky. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: In comments with score between 1 to 5, list down the display names of the users with 0 down votes. 

"
codebase_community,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE badges (
column_0 integer,
column_1 integer,
column_2 text,
column_3 datetime,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES users(column_0),
);
CREATE TABLE comments (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postHistory (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 datetime,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_5) REFERENCES users(column_0),
);
CREATE TABLE postLinks (
column_0 integer,
column_1 datetime,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_2) REFERENCES posts(column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE posts (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 datetime,
column_4 integer,
column_5 integer,
column_6 text,
column_7 integer,
column_8 datetime,
column_9 text,
column_10 text,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 datetime,
column_16 datetime,
column_17 integer,
column_18 datetime,
column_19 text,
column_20 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES users(column_0),
FOREIGN KEY (column_14) REFERENCES users(column_0),
FOREIGN KEY (column_17) REFERENCES posts(column_0),
);
CREATE TABLE tags (
column_0 integer,
column_1 text,
column_2 integer,
column_3 integer,
column_4 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES posts(column_0),
);
CREATE TABLE users (
column_0 integer,
column_1 integer,
column_2 datetime,
column_3 text,
column_4 datetime,
column_5 text,
column_6 text,
column_7 text,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 text,
PRIMARY KEY (column_0),
);
CREATE TABLE votes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 date,
column_4 integer,
column_5 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES posts(column_0),
FOREIGN KEY (column_4) REFERENCES users(column_0),
);
---------------------
QUESTION: Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Please list all the superpowers of 3-D Man. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes have the super power of ""Super Strength""? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among the superheroes with the super power of ""Super Strength"", how many of them have a height of over 200cm? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Please list the full names of all the superheroes with over 15 super powers. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes have blue eyes? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the colour of Apocalypse's skin? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among the superheroes with blue eyes, how many of them have the super power of ""Agility""? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Please list the superhero names of all the superheroes that have blue eyes and blond hair. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes are published by Marvel Comics? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Please give the full name of the tallest hero published by Marvel Comics. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Who is the publisher of Sauron? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among the superheroes from Marvel Comics, how many of them have blue eyes? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the average height of the superheroes from Marvel Comics? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among the superheroes from Marvel Comics, what is the percentage of those who have the super power of ""Super Strength""? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes did DC Comics publish? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Which publisher published the slowest superhero? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many gold-eyed superheroes did Marvel Comics publish? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the publisher's name of Blue Beetle II? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes with blonde hair are there? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Who is the dumbest superhero? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is Copycat's race? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes have durability of less than 50? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What are the names of the superheroes with the power of death touch? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many female superheroes have a strength value of 100? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the name of the superhero that has the most powers? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many vampire superheroes are there? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Give the publisher ID of Star Trek. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Calculate the average attribute value of all superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the total number of superheroes without full name? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the eye colour of superhero with superhero ID 75? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the superpowers of the superhero called Deathlok. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the average weight of all female superheroes? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List down at least five superpowers of male superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Give the name of the alien superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among the superheroes with height from 170 to 190, list the names of the superheroes with no eye color. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the superpower of hero ID 56? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List down at least five full name of Demi-God superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many bad superheroes are there? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Identify the race of the superhero who weighed 169 kg. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the hair colour of the human superhero who is 185 cm tall. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the eye clolour of the heaviest superhero? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Which power do superheroes have the most of? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Indicate the attribute value of superhero Abomination. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What are the superpowers of heroes with ID 1? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many heroes have stealth power? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the hero's full name with the highest attribute in strength? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the average of superheroes with no skin colour? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes were published by Dark Horse Comics? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Which superhero has the most durability published by Dark Horse Comics? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the eyes colour of Abraham Sapien? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the name of superheroes with flight power. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Which group does superhero A-Bomb belong to? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the percentage of blue female superheroes among all female superheroes? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the hero name and race of Charles Chandler. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the gender of Agent 13 hero? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide superheroes' names who have the adaptation power. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many powers does Amazo hero have? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the powers of Hunter Zolomon. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the heights of the heroes whose eye colours are amber. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the heroes' names whose eyes and hair colours are both black. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the eye colours of the heroes whose skin colours are gold. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the full names of vampire heroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Describe the names of neutral alignment superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many heroes have the highest attribute value in strength? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What are the race and alignment of Cameron Hicks? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many percent of female heroes were published by Marvel Comics? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Find the average weight of the heroes who are aliens. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Calculate the average height for each superhero. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is Abomination's superpower? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among the superheroes with the race of god/eternal, how many of them are male 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Which hero was the fastest? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes have a neutral alignment? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: State all of 3-D Man's attributes along with their values. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Which superheroes have blue eyes with brown hair? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the publisher for Hawkman, Karate Kid and Speedy? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many superheroes didn't have any publisher? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Calculate the percentage of superheroes with blue eyes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Find the ratio between male superheroes and female superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Who is the tallest superhero? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the power ID of cryokinesis? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the name of superhero with superhero ID 294. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the full names of superheroes with missing weight. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the eye colour of the superhero who has Karen Beecher-Duncan as their full name. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the superpowers of the superhero has Helen Parr as their full name? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Find the race of the superhero who weighs 108kg and is 188cm tall. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the publisher name of the superhero ID 38? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the race of the superhero with maximum attribute value? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Give the alignment and superpowers of the superhero named Atom IV. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List down at least five full names of superheroes with blue eyes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Calculate the average attribute value of all neutral superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the skin colour of the superheroes with 100 attribute value. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Count the good female superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the names of superheroes with attribute value between 75 to 80. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Give the race of the blue-haired male superhero. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among the bad superheroes, what is the percentage of female superheroes? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How strong is the Hulk? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List down Ajax's superpowers. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many green-skinned villains are there in the superhero universe? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: How many female superheroes are in Marvel Comics? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Identify superheroes who can control wind and list their names in alphabetical order. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Identify the gender of the superhero who has the ability of Phoenix Force. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Identify the heaviest superhero in DC Comics. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the average height of a non-human superhero in Dark Horse Comics? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Count the fastest superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Identify the weakest attribute of the Black Panther. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is Abomination's eye colour? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Name the tallest superhero. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Name the superhero, otherwise known as Charles Chandler. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among all superheroes created by George Lucas, identify the percentage of female superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: What is the total number of superheroes that have John as their first name? 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Give the hero ID of superhero with the lowest attribute value. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the full name of the superhero named Alien.

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: In superheroes with weight less than 100, list the full name of the superheroes with brown eyes. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the attribute value of the superhero named Aquababy.

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Provide the weight and race of the superhero with superhero ID 40. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Calculate the average height of all neutral superheroes.

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the hero ID of superheroes have intellegence as their power. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: Give the eye colour of Blackwulf. 

"
superhero,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE alignment (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attribute (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE colour (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gender (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE publisher (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE race (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE superhero (
column_0 integer,
column_1 text,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_3) REFERENCES gender(column_0),
FOREIGN KEY (column_4) REFERENCES colour(column_0),
FOREIGN KEY (column_5) REFERENCES colour(column_0),
FOREIGN KEY (column_6) REFERENCES colour(column_0),
FOREIGN KEY (column_7) REFERENCES race(column_0),
FOREIGN KEY (column_8) REFERENCES publisher(column_0),
FOREIGN KEY (column_9) REFERENCES alignment(column_0),
);
CREATE TABLE hero_attribute (
column_0 integer,
column_1 integer,
column_2 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES attribute(column_0),
);
CREATE TABLE superpower (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE hero_power (
column_0 integer,
column_1 integer,
FOREIGN KEY (column_0) REFERENCES superhero(column_0),
FOREIGN KEY (column_1) REFERENCES superpower(column_0),
);
---------------------
QUESTION: List the power of superheroes with height greater than 80% of the average height of all superheroes. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the reference names of the drivers who are eliminated in the first period in race number 18. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the surname of the driver with the best lap time in race number 19 in the second period? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the year during which the race is held on circuits in Shanghai. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Where can the introduction of the races held on Circuit de Barcelona-Catalunya be found? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please give the name of the race held on the circuits in Germany. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the positions of the circuits built by the constructor Renault. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many races in the year 2010 are held on grand prixs outside Asia and Europe?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please give the names of the races held on the circuits in Spain. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the location coordinates of the circuits for Australian grand prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Where can I find the information about the races held on Sepang International Circuit? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the time of the races held on Sepang International Circuit.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Give the coordinate position for Abu Dhabi Grand Prix. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which country is the constructor which got 1 point in the race No. 24 from? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What's Bruno Senna's Q1 result in the qualifying race No. 354? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is his number of the driver who finished 0:01:54 in the Q3 of qualifying race No.903? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the Bahrain Grand Prix in 2007, how many drivers not finished the game? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Show me the season page of year when the race No. 901 took place. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the race happened on 2015/11/29, how many drivers finished the game? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For all the drivers who finished the game in race No. 592, who is the oldest? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the driver who set the fastest lap speed in race No.933, where does he come from? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Where is Malaysian Grand Prix held? Give the location coordinates. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the constructor which got the highest point in the race No. 9 , what is its introduction website? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What's Lucas di Grassi's Q1 result in the race No. 345? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the actual finish time for Bruce McLaren in the race No.743? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Who finished second in the San Marino Grand Prix in 2006? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Show me the season page of year when the race No. 901 took place. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the race happened in 2015/11/29, how many drivers finished the game?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For all the drivers who finished the game in race No. 872, who is the youngest? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Who was the driver that got the best lap time in the race No. 348? Give his full name. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the driver who set the fastest lap speed, what is his nationality? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: For the drivers who took part in the race in 1983/7/16, what's their race completion rate? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which year was the first Singapore Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many races were there in 2005? Name all the races in descending order.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Name the first race recorded. What are the other races that happened within the same month and year of that race. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: State the name and date of the last round of race in year 1999. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which year has the most number of races? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Name the races in year 2017 that are not hosted in year 2000. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In which country was the first European Grand Prix hosted? Name the circuit and location. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: When was the last f1 season whereby Brands Hatch hosted the British Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many seasons has Silverstone Circuit hosted the United Kindom grand prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Name all drivers in the 2010 Singapore Grand Prix order by their position stands.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: State the driver with the most points scored. Find his full name with that points. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the best lap time recorded? List the driver and race with such recorded lap time. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the average lap time for Sebastian Vettel in the 2009 Chinese Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Name the driver with the most winning. Mention his nationality and what is his average point scores. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How old is the youngest Japanese driver? What is his name? youngest Japanese driver refers to max(dob); Japanese refers to nationality = 'Japanese'; age = 2022-year(dob)+1

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List circuits which host 4 f1 races from year 1990 to 2000. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Name the races along with its circuit name and location for f1 races hosted in September 2005. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which race was Alex Yoong in when he was in track number less than 10? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many times did Michael Schumacher won from races hosted in Sepang International Circuit? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: State the race and year of race in which Michael Schumacher had his fastest lap. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is Eddie Irvine's average points scored in year 2000? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which was Lewis Hamilton first race? What was his points recorded for his first race event? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List all races in 2017 and the hosting country order by date of the event.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Among all European Grand Prix races, what is the percentage of the races were hosted in Germany? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What's the location coordinates of Silverstone Circuit? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What's the reference name of Marina Bay Street Circuit? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In which country can I find the circuit with the highest altitude? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many drivers don't have a code? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which country is the oldest driver from? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the surnames of all the Italian drivers. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which website should I go to if I want to know more about Anthony Davidson? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What's Lewis Hamilton's reference name? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which circuit did the 2009 Spanish Grand Prix use?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list all the years that Silverstone Circuit was used in a Formula_1 race.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please give more information about the Formula_1 races that used the Silverstone Circuit. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many Formula_1 races took place on the circuits in Italy?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the exact dates on which a Formula_1 race took place on the Barcelona-Catalunya circuit.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What's the fastest lap time ever in a race for Lewis Hamilton? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which driver ranked the first in the Australian Grand Prix in 2008? Please give his reference name. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the Formula_1 races that Lewis Hamilton participated.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In which Formula_1 race did Lewis Hamilton rank the highest? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In which years did Lewis Hamilton participate in a Formula_1 race?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What was Lewis Hamilton's final rank in the 2008 Australian Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which driver was in the no. 4 grid formation when starting the race in 2008's Australian Grand Prix? Please give his forename and surname. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many drivers managed to finish the race in the 2008 Australian Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What's the finish time for the driver who ranked second in 2008's Australian Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Who was the champion of 2008's Australian Grand Prix and where can I know more about him? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many drivers from the USA participated in the 2008 Australian Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Among the drivers that finished the race in the 2008 Australian Grand Prix, how many of them have participated in Formula_1 races? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the rate of drivers completing all the laps in the 2008 Australian Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many circuits are there in Melbourne, Australia? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the location coordinates of the US circuits. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many British drivers were born after 1980? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What are the average points of British constructors? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which constructor has the highest point?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the constructor names with 0 points at race 291. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many Japanese constructors have 0 points in 2 races? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which constructors have been ranked 1?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many French constructors have a lap number of over 50? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please calculate the race completion percentage of Japanese drivers from 2007 to 2009. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the average time in seconds of champion for each year? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many Italian drivers haven't finished the race? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which driver has the fastest lap time? Please give their forenames and surnames.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the fastest lap number of the champion in 2009? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the average of fastest lap speed in the 2009 Spanish Grand Prix race? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which race has the shortest actual finishing time? Please give the name and year. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many French drivers who obtain the laptime less than 02:00.00? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List out the code for drivers who have nationality in America. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List out the Id number of races which were hold in 2009.

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many driver participated in race ID number 18?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is reference name of Robert Kubica? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many Australian drivers who were born in 1980? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List out top 3 German drivers who were born from 1980-1990 and have the earliest lap time. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please state the reference name of the oldest German driver. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which drivers who were born in 1971 and has the fastest lap time on the race? Give id and code of these drivers. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List out top 10 Spanish drivers who were born before 1982 and have the latest lap time. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: State the racing year which has the fastest lap time? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which year has the lowest speed of lap time? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: From race no. 50 to 100, how many finishers have been disqualified? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many times the circuits were held in Austria? Please give their location and coordinates. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What race number has the most finishers? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: On what year did the youngest driver had his first qualifying race? State the name, date and time of the race. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many American drivers have been disqualified from the race. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which of the Italian constructor got the highest point to date? Give its introduction website? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the website of the constructor who tallied the most total wins. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Among the drivers who participated in the French Grand Prix, who has the slowest time in the 3rd lap. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In which race did the fastest 1st lap time was recorded? Please indicate the time in milliseconds. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: List down top 5 German drivers who has the shortest average pit stop duration and were born between 1980-1985. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the full name and date of birth of Austrian drivers born between 1981 and 1991? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In which location does the Hungaroring circuit located? Also, find the country and coordinates of this circuit? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the average score of Lewis Hamilton among all the Turkish Grand Prix? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the annual average number of races held during the first 10 years of the 21st century? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which citizenship do the vast majority of the drivers hold? Citizenship of majority of drivers = MAX(nationality); citizenship and nationality are synonyms

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In terms of number of points acquired, how many victories did the driver who ranked 91st acquired? victories refer to wins; 91st refers to points

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer? Fastest lap speed refers to MIN(fastestLapTime)

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which racetrack hosted the most recent race? Indicate the full location. full location refers to location+country; most recent race = MAX(date)

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined. full name refers to forename+surname; Youngest racer = MAX(dob)

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many accidents did the driver who had the highest number accidents in the Canadian Grand Prix have? number of accidents refers to the number where statusid = 3; Canadian Grand Prix refers to the race of name

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: How many wins was achieved by the oldest racer? Indicate his/her full name. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What was the longest time a driver had ever spent at a pit stop? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Among all the lap records set on various circuits, what is the time for the fastest one?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What was the longest time that Lewis Hamilton had spent at a pit stop? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the time each driver spent at the pit stop during the 2011 Australian Grand Prix. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the lap record set by Lewis Hamilton in a Formula_1 race? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Which driver created the shortest lap time ever record in a Formula_1 race? Please give his full name. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the lap record for the Austrian Grand Prix Circuit? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the lap records for the circuits in Italy. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: Please list the location coordinates of the circuits whose lap record is 1:29.488. 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What was the average time in milliseconds Lewis Hamilton spent at a pit stop during Formula_1 races? 

"
formula_1,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE circuits (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 real,
column_6 real,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE constructors (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE drivers (
column_0 integer,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
column_6 date,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
);
CREATE TABLE seasons (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE races (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 date,
column_6 text,
column_7 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES seasons(column_0),
FOREIGN KEY (column_3) REFERENCES circuits(column_0),
);
CREATE TABLE constructorResults (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE constructorStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES constructors(column_0),
);
CREATE TABLE driverStandings (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
);
CREATE TABLE lapTimes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE pitStops (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 text,
column_5 text,
column_6 integer,
FOREIGN KEY (column_0) REFERENCES races(column_0),
FOREIGN KEY (column_1) REFERENCES drivers(column_0),
);
CREATE TABLE qualifying (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
);
CREATE TABLE status (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE results (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 text,
column_8 integer,
column_9 real,
column_10 integer,
column_11 text,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 text,
column_16 text,
column_17 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES races(column_0),
FOREIGN KEY (column_2) REFERENCES drivers(column_0),
FOREIGN KEY (column_3) REFERENCES constructors(column_0),
FOREIGN KEY (column_17) REFERENCES status(column_0),
);
---------------------
QUESTION: What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which player has the highest overall rating? Indicate the player's api id. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the height of the tallest player? Indicate his name. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the preferred foot when attacking of the player with the lowest potential? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Who are the top 5 players who perform better in crossing actions? Indicate their player id. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which league had the most goals in the 2016 season? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which home team had lost the fewest matches in the 2016 season? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Indicate the full names of the top 10 players with the highest number of penalties. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: In Scotland Premier League, which away team won the most during the 2010 season? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which League had the most matches end as draw in the 2016 season? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Give the name of the league with the highest matches of all time and how many matches were played in the said league. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the average height of players born between 1990 and 1995? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List the players' api id who had the highest above average overall ratings in 2010. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List the long name of teams with above-average build-up play passing in 2012. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List the top 5 leagues in ascending order of the number of goals made in all seasons combined. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Find the average number of long-shot done by Ahmed Samir Farag. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the short name of the football team Queens Park Rangers? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List the football players with a birthyear of 1970 and a birthmonth of October. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the attacking work rate of the football playerr Franco Zennaro?

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the football player Francois Affolter header's finishing rate on 18/09/2014? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the overall rating of the football player Gabriel Tamas in year 2011? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many matches in the 2015/2016 season were held in Scotland Premier League
? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the preferred foot when attacking of the youngest football player? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List all the football player with the highest potential score. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Among all the players whose weight is under 130, how many of them preferred foot in attacking is left? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List the football teams that has a chance creation passing class of Risky. Inidcate its short name only. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the defensive work rate of the football player David Wilson
?

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: When is the birthday of the football player who has the highest overall rating? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the name of the football league in the country of Netherlands? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Calculate the average home team goal in the 2010/2011 season in the country of Poland. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Who has the highest average finishing rate between the highest and shortest football player? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please list player names which are higher than 180. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many players were born after 1990? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many players whose first names are Adam and weigh more than 170? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which players had an overall rating of over 80 from 2008 to 2010? Please list player names. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is Aaron Doran's potential score? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List out of players whose preferred foot is left. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please list all team names which the speed class is fast. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the passing class of CLB team? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which teams have build up play passing more than 70? Please list their short names. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: From 2010 to 2015, what was the average overall rating of players who are higher than 170? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which football player has the shortest height? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which country is the league Italy Serie A from? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the average overall rating of the football player Aaron Doran? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many matches were held in the league Germany 1. Bundesliga
from August to October 2008? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List all the short name of the football team that had a home team goal of 10? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List all the football player with the highest balance score and potential score of 61. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What's the long name for the team GEN? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which player is older, Aaron Lennon or Abdelaziz Barrada? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which player is the tallest? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which country is the Belgium Jupiler League from? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please list the leagues from Germany. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which player has the strongest overall strength? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which of these players performs the best in crossing actions, Alexis, Ariel Borysiuk or Arouna Kone? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What's the heading accuracy of Ariel Borysiuk?

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Among the players whose height is over 180, how many of them have a volley score of over 70? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please list the names of the players whose volley score and dribbling score are over 70. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many matches in the 2008/2009 season were held in Belgium? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the long passing score of the oldest player? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many matches were held in the Belgium Jupiler League in April, 2009? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which league had the most matches in the 2008/2009 season? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the average overall rating of the players born before the year 1986? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How much is the average build up play speed of the Heart of Midlothian team? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Calculate the average overall rating of Pietro Marino. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is Aaron Lennox's total crossing score? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is Ajax's highest chance creation passing score and what is it classified as? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which foot is preferred by Abdou Diallo? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the highest overall rating received by Dorlan Pabon? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the average number of goals made by Parma as the away team while playing in Italy? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What was the overall rating for Aaron Mooy on 2016/2/4? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What was the potiential for Francesco Parravicini on 2010/8/30? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How was Francesco Migliore's attacking work rate on 2015/5/1? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Tell the defensive work rate for Kevin Berigaud on 2013/2/22. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: When was the first time did Kevin Constant have his highest crossing score? Give the date. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What was the build up play speed class for ""Willem II"" on 2011/2/22? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How was the build up play dribbling class for ""LEI"" on 2015/9/10? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Tell the build Up play passing class for ""FC Lorient"" on 2010/2/22. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: State the chance creation passing class for ""PEC Zwolle"" on 2013/9/20. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What was the chance creation crossing class for ""Hull City"" on 2010/2/22? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: For the team ""Hannover 96"", what was its defence aggression class on 2015/9/10? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List down 5 tallest players' name. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What are the player api id of 10 heaviest players? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List down the name of players who are 35 years old and above. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many home team goal have been scored by Aaron Lennon? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Sum up the away team goal scored by both Daan Smith and Filipe Ferreira. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Calculate the total home team goal scored by players whose age are 30 years old and below. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: State 10 names of the strongest players. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the name of players with the highest potential? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Who are the players that tend to be attacking when their mates were doing attack moves? List down their name. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Among the players with finishing rate of 1, pick the eldest player and state the player's name. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: State the name of players who came from Belgium. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Locate players with vision scores of 90 and above, state the country of these players. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which country's players have the heaviest average weights? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: List down the long name for slow speed class team. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What are the short name of team who played safe while creating chance of passing? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the average heights of Italy players? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please provide the names of top three football players who are over 180 cm tall in alphabetical order. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many football players born after the 1990s have the first name ""Aaron""? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the difference between players 6 and 23's jumping scores? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please provide top three football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: How many players had the highest potential score for crossing that preferred to use their left foots while attacking? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What percentage of players have a strength and stamina score of more than 80? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: In what country did the Poland Ekstraklasa take place?

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What are Alexis Blin's sprint speed, agility, and acceleration scores? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Does the KSV Cercle Brugge team have a slow, balanced or fast speed class? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: In the 2015–2016 season, how many games were played in the Italian Serie A league? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What was the highest score of the home team in the Netherlands Eredivisie league? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please state the finishing rate and curve score of the player who has the heaviest weight. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Which league had the most games in the 2015–2016 season? 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please provide the full name of the away team that scored the most goals. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: Please name one player whose overall strength is the greatest. 

"
european_football_2,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Player_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 integer,
column_6 text,
column_7 text,
column_8 text,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Player(column_3),
FOREIGN KEY (column_2) REFERENCES Player(column_1),
);
CREATE TABLE Player (
column_0 integer,
column_1 integer,
column_2 text,
column_3 integer,
column_4 text,
column_5 integer,
column_6 integer,
PRIMARY KEY (column_0),
);
CREATE TABLE League (
column_0 integer,
column_1 integer,
column_2 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Country(column_0),
);
CREATE TABLE Country (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Team_Attributes (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 integer,
column_9 text,
column_10 text,
column_11 integer,
column_12 text,
column_13 integer,
column_14 text,
column_15 integer,
column_16 text,
column_17 text,
column_18 integer,
column_19 text,
column_20 integer,
column_21 text,
column_22 integer,
column_23 text,
column_24 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_1) REFERENCES Team(column_2),
FOREIGN KEY (column_2) REFERENCES Team(column_1),
);
CREATE TABLE Match (
column_0 integer,
column_1 integer,
column_2 integer,
column_3 text,
column_4 integer,
column_5 text,
column_6 integer,
column_7 integer,
column_8 integer,
column_9 integer,
column_10 integer,
column_11 integer,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 integer,
column_17 integer,
column_18 integer,
column_19 integer,
column_20 integer,
column_21 integer,
column_22 integer,
column_23 integer,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 integer,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 integer,
column_32 integer,
column_33 integer,
column_34 integer,
column_35 integer,
column_36 integer,
column_37 integer,
column_38 integer,
column_39 integer,
column_40 integer,
column_41 integer,
column_42 integer,
column_43 integer,
column_44 integer,
column_45 integer,
column_46 integer,
column_47 integer,
column_48 integer,
column_49 integer,
column_50 integer,
column_51 integer,
column_52 integer,
column_53 integer,
column_54 integer,
column_55 integer,
column_56 integer,
column_57 integer,
column_58 integer,
column_59 integer,
column_60 integer,
column_61 integer,
column_62 integer,
column_63 integer,
column_64 integer,
column_65 integer,
column_66 integer,
column_67 integer,
column_68 integer,
column_69 integer,
column_70 integer,
column_71 integer,
column_72 integer,
column_73 integer,
column_74 integer,
column_75 integer,
column_76 integer,
column_77 text,
column_78 text,
column_79 text,
column_80 text,
column_81 text,
column_82 text,
column_83 text,
column_84 text,
column_85 real,
column_86 real,
column_87 real,
column_88 real,
column_89 real,
column_90 real,
column_91 real,
column_92 real,
column_93 real,
column_94 real,
column_95 real,
column_96 real,
column_97 real,
column_98 real,
column_99 real,
column_100 real,
column_101 real,
column_102 real,
column_103 real,
column_104 real,
column_105 real,
column_106 real,
column_107 real,
column_108 real,
column_109 real,
column_110 real,
column_111 real,
column_112 real,
column_113 real,
column_114 real,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES Team(column_1),
FOREIGN KEY (column_8) REFERENCES Team(column_1),
FOREIGN KEY (column_55) REFERENCES Player(column_1),
FOREIGN KEY (column_56) REFERENCES Player(column_1),
FOREIGN KEY (column_57) REFERENCES Player(column_1),
FOREIGN KEY (column_58) REFERENCES Player(column_1),
FOREIGN KEY (column_59) REFERENCES Player(column_1),
FOREIGN KEY (column_60) REFERENCES Player(column_1),
FOREIGN KEY (column_61) REFERENCES Player(column_1),
FOREIGN KEY (column_62) REFERENCES Player(column_1),
FOREIGN KEY (column_63) REFERENCES Player(column_1),
FOREIGN KEY (column_64) REFERENCES Player(column_1),
FOREIGN KEY (column_65) REFERENCES Player(column_1),
FOREIGN KEY (column_66) REFERENCES Player(column_1),
FOREIGN KEY (column_67) REFERENCES Player(column_1),
FOREIGN KEY (column_68) REFERENCES Player(column_1),
FOREIGN KEY (column_69) REFERENCES Player(column_1),
FOREIGN KEY (column_70) REFERENCES Player(column_1),
FOREIGN KEY (column_71) REFERENCES Player(column_1),
FOREIGN KEY (column_72) REFERENCES Player(column_1),
FOREIGN KEY (column_73) REFERENCES Player(column_1),
FOREIGN KEY (column_74) REFERENCES Player(column_1),
FOREIGN KEY (column_75) REFERENCES Player(column_1),
FOREIGN KEY (column_76) REFERENCES Player(column_1),
);
---------------------
QUESTION: What is the percentage of players that are under 180 cm who have an overall strength of more than 70? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Are there more in-patient or outpatient who were male? What is the deviation in percentage? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the percentage of female patient were born after 1930? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For patient born between Year 1930 to 1940, how many percent of them were inpatient? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List the patient ID, sex and birthday of patient with LDH beyond normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: State the ID and age of patient with positive degree of coagulation. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For patients with severe degree of thrombosis, list their ID, sex and dieseas the patient is diagnosed with. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List all patients who were born in 1937 whose total cholesterol was beyond the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For patient with albumin level lower than 3.5, list their ID, sex and diagnosis. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the percentage of female patient had total protein not within the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What was the age of the youngest patient when they initially arrived at the hospital? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many of the patients with the most serious thrombosis cases examined in 1997 are women? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the age gap between the youngest and oldest patient with a normal triglyceride recorded? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the ratio of male to female patients among all those with abnormal uric acid counts? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients hadn't undergone a medical examination until at least a year following their initial hospital visit? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many underage patients were examined during the course of the three-year period from 1990 to 1993? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many male patients have elevated total bilirubin count? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the average age of patients examined in the laboratory for the October of the year 1991? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How old was the patient who had the highest hemoglobin count at the time of the examination, and what is the doctor's diagnosis? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What was the anti-nucleus antibody concentration level for the patient id 3605340 on 1996/12/2? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What was the gender of the first AORTITIS diagnosed patient? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient who was diagnosed with SLE on 1994/2/19, what was his/her anti-Cardiolipin antibody concentration status on 1993/11/12? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient who first came to the hospital on 1991/6/13 who was diagnosed with SJS, what is the total number of his/her Laboratory tests in 1995? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient whose birthday was 1959/3/1, what symptoms did he/she have during the examination on 1993/9/27?

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Lists all patients by ID who were diagnosed with Behcet's and had their exams between 01/01/197 and 12/31/1997. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many female patients born in 1964 were admitted to the hospital? List them by ID. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the most common sign of patients with SLE disease? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: When was the medical information on patient number 48473 first documented, and what disease did she have? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many female patients were given an APS diagnosis? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients who underwent testing in 1997 had protein levels outside the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What proportion of patients who had signs of thrombocytopenia had SLE diagnosed? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What percentage of patients who were born in 1980 and were diagnosed with RA are women? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with BEHCET disease did not stay in the hospital for treatment? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients who were female got white blood cells that were below 3.5? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Was the patient with the number 57266's uric acid within a normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: When is the laboratory examination of patient '48473' where his/her AST glutamic oxaloacetic transaminase (GOT) index is above the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List all patients with their sex and date of birthday, whose AST glutamic oxaloacetic transaminase (GOT) index is within normal range for loboratory examination in 1994. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please provide the diagnosis of patients with ALT glutamic pylvic transaminase beyond the normal range by ascending order of their date of birth. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For patients with alkaliphophatase (ALP) within normal range, were they treated as inpatient or outpatient? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Name the ID of the patient who is born on the April 1st, 1982. Is his/her alkaliphophatase (ALP) within normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List ID, sex and date of birth of patient whose total protein (TP) below the lower range of the normal index. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Sort in descending order all patients by birthday for male patient with albumin not within range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For all patient born in 1982, state if their albumin is within normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the percentage of the female patient whose uric acid (UA) beyond the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For all patients with normal uric acid (UA), what is the average UA index based on their latest laboratory examination result? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Provide the ID, sex, birthday of all patients diagnosed with 'RA' that are within the UN normal index. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many male patients are are with creatinine index out of the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Are there more male patients with creatinine not within the normal range than female? True or False? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List and group all patients by sex for total bilirubin (T-BIL) level not within the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the average age of the male patient with high cholesterol? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List all outpatient within normal range of creatinine phosphokinase. Give me the distinct ids. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List each patient's ID and blood glucose (GLU) index that were within normal range for patient's whose data was first recorded in 1991. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List the patient ID, sex and birthday who has abnormal white blood cell count. Group them by sex and list the patient by age in ascending order. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: From laboratory examinations in 1991, what is the average hematoclit level that is lower than the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients with an abnormal activated partial prothrom bin time, how many of them have a mild thrombosis? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients born after 1980/1/1 have an abnormal fibrinogen level? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the disease names of the patients that have a proteinuria level higher than normal. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients with an Ig G lower than normal has the symptom of abortion? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients with a normal Ig G level, how many of them have symptoms? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient who has the highest Ig A within the normal range, what is his or her diagnosis? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients with a normal Ig A level came to the hospital after 1990/1/1? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients with a normal C-reactive protein don't have their data recorded? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients whose C-reactive protein level is abnormal, how many of them aren't 18 yet? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the diseases of the patients born after 1995-1-1 and have a normal Rhuematoid Factor. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the ID of the patient whose RF is normal and who is older than 60. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients with a normal RF don't have thrombosis? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients with a normal level of complement 3 have a P pattern observed in the sheet of ANA examination? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients whose level of Hematoclit isn't normal, which patient has the highest anti-Cardiolipin antibody concentration? Please list his or her ID. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients have blood clots in veins, how many of them have a normal level of complement 4? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients with normal anti-SM, how many of them have the most severe degree of thrombosis? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the IDs of the patients who had the examination done after 1997/1/1 and had a normal anti-scl70. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients who has a normal anti-scl70, how many of them are male and have the symptom of vertigo? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients with a normal anti-SSA came to the hospital before 1990? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients have a normal anti-SSB and are diagnosed with SLE in the examination? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients whose anti-SSB are normal, how many of them have other symptoms observed in their examination? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients have a normal anti-DNA level, yet their data are not recorded. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Of the patients with an abnormal level of anti-DNA-II, how many of them admitted to the hospital? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the percentage of patient who has a abnormal level of glutamic oxaloacetic transaminase level, yet he or she is diagnosed with SLE? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many male patients have their glutamic oxaloacetic transaminase in the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the top three patients' birthdays with the highest glutamic pylvic transaminase in the normal range. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients with the normal glutamic pylvic transaminase level, how many of them are male? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient with the highest lactate dehydrogenase in the normal range, when was his or her data first recorded? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patient with an abnormal alkaliphophatase level, how many of them are admitted to the hospital? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients followed at the outpatient clinic, how many of them have a normal level of alkaliphophatase? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the diagnosis of the patients whose total protein is lower than normal. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients who are diagnosed with SJS, how many of them have a normal level of total protein? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the examination date of the patient whose albumin is the highest in the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many male patients have a normal level of both albumin and total protein? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the patient's ID whose creatinine level is normal and whose anti Cardiolipin antibody concentration level is the highest. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the anti-nucleus antibody concentration of the patient whose total bilirubin is the highest in the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients whose total cholesterol is within the normal range, how many of them have a P pattern observed in the sheet of ANA examination? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients with the normal level of triglyceride, how many of them have other symptoms observed? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: What is the disease name of the patient who has the highest level of triglyceride within the normal range? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the IDs of the patients with no thrombosis and an abnormal level of creatinine phosphokinase. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: When is the birthday of the oldest patient whose blood glucose is abnormal? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients with a normal blood glucose, how many of them don't have thrombosis? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients accepted to the hospital have a normal level of white blood cells? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients diagnosed with SLE have a normal white blood cell level? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Among the patients who have a normal platelet level, how many of them have other symptoms observed? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD. 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: For the male patients that have a normal prothrombin time, what is their average prothrombin time? 

"
thrombosis_prediction,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE Examination (
column_0 integer,
column_1 date,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 integer,
column_7 text,
column_8 text,
column_9 text,
column_10 text,
column_11 text,
column_12 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
CREATE TABLE Patient (
column_0 integer,
column_1 text,
column_2 date,
column_3 date,
column_4 date,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE Laboratory (
column_0 integer,
column_1 date,
column_2 integer,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 real,
column_7 real,
column_8 real,
column_9 integer,
column_10 real,
column_11 real,
column_12 integer,
column_13 integer,
column_14 integer,
column_15 integer,
column_16 real,
column_17 real,
column_18 real,
column_19 real,
column_20 integer,
column_21 real,
column_22 integer,
column_23 real,
column_24 integer,
column_25 integer,
column_26 integer,
column_27 text,
column_28 integer,
column_29 integer,
column_30 integer,
column_31 text,
column_32 text,
column_33 text,
column_34 integer,
column_35 integer,
column_36 text,
column_37 text,
column_38 text,
column_39 text,
column_40 text,
column_41 text,
column_42 text,
column_43 integer,
FOREIGN KEY (column_0) REFERENCES Patient(column_0),
);
---------------------
QUESTION: How many patients with severe thrombosis have a normal prothrombin time? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What's Angela Sanders's major? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many students in the Student_Club are from the College of Engineering?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Please list the full names of the students in the Student_Club that come from the Art and Design Department. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many students of the Student_Club have attended the event ""Women's Soccer""? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Please list the phone numbers of the students from the Student_Club that has attended the event ""Women's Soccer"". 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among the students from the Student_Club who attended the event ""Women's Soccer"", how many of them want a T-shirt that's in medium size? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the event that has the highest attendance of the students from the Student_Club? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which college is the vice president of the Student_Club from? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Please list the event names of all the events attended by Maya Mclean.

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many events of the Student_Club did Sacha Harrison attend in 2019? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among the events attended by more than 10 members of the Student_Club, how many of them are meetings? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Please list the names of all the events of the Student_Club that had an attendance of over 20 students. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the average attendance of meetings in 2020? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the most expensive item that was spent in support of club events? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many members of the Student_Club have majored Environmental Engineering?
 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the full name of all the members of the Student_Club who attended the ""Laugh Out Loud"" event. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the last name of all the students who majored Law and Constitutional Studies. 
 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What county did Sherri Ramsey grew up?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What college offers the major that Tyler Hewitt took?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the amount of the funds that the Vice President received? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How much did the Student_Club members spend on food in September Meeting? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What city and state did the President of the Student_Club grow up? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the full name of the Student_Club members that grew up in Illinois state. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How much did the Student_Club members spend on advertisement in September Meeting? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What department offers the major that Pierce and Guidi took?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the total budgeted amount for all category in ""October Speaker"" event? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Was each expense in October Meeting on October 8, 2019 approved? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Calculate the total average cost that Elijah Allen spent in the events on September and October. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Give the location for ""Spring Budget Review"". 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What was the cost for the ""Posters"" on 2019/9/4? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: With the biggest budget for the ""Food"", what was the remaining of it? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What was the notes of the fundraising on 2019/9/14? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many majors are there in ""College of Humanities and Social Sciences""?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Tell the phone number of ""Carlo Jacobs"".

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Tell the hometown county for ""Adela O'Gallagher"". 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: For all the budgets for ""November Meeting"", how many of them had exceeded the budget? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Provide the total number of the budget amount for ""September Speaker"" event. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the status of the event which bought ""Post Cards, Posters"" on 2019/8/20? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What was Brent Thomason's major? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: For all the club members from ""Human Development and Family Studies"" major, how many of them wear large size t-shirt? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What's Christof Nielson's zip code type?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: State the major name for the Vice President of the club. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Where is the hometown state for ""Sacha Harrison""? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which department was the President of the club in? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: State the date Connor Hilton paid his/her dues. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Who was the first one paid his/her dues? Tell the full name. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What percentage was the budget for Parking to the total budget for the ""November Speaker""? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the total cost of the pizzas for all the events? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many cities are there in Orange County, Virginia? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List all of the College of Humanities and Social Sciences' departments.

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Where is Amy Firth's hometown? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What are the expenses of the budget with the lowest remaining? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List all the members who attended the event ""October Meeting"". 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which college do most of the members go to? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What does the person with the phone number ""809-555-3360"" major in? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which event has the highest budget amount? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List all the expenses incurred by the vice president. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many members attended the ""Women's Soccer"" event? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: When did the member, Casey Mason, received the income? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many of the members' hometowns are from Maryland state?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many events did the member with the phone number ""954-555-6240"" attend?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List all the members of the ""School of Applied Sciences, Technology and Education"" department. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among all the closed events, which event has the highest spend-to-budget ratio? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many student have the position of president? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the highest amount of budget spend for an event? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many meeting events were held in 2020? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the total amount of money spent for food? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the name of students that have attended more than 7 events. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among the students majored in interior design, who have attended the Community Theater event? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: State the name of students from Georgetown, South Carolina. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many income generated by Grant Gilmour? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which student was able to generate income more than $40? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the total expense for the Yearly Kickoff? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which student has been entrusted to manage the budget for the Yearly Kickoff? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which students manage to generate the highest income. State his/her full name along with the income source. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which event has the lowest cost? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the ratio between students majored in finance and physics? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Indicate the top source of funds received in September 2019 based on their amount. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Provide the full name and email address of the Student_Club's Secretary. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many members of the Student_Club have major in 'Physics Teaching'? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many members did attend the event 'Community Theater' in 2019? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Provide the number of events attended by Luisa Guidi. What is her major? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: On average, how much did the Student_Club spend on food for the typical event in the past? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Name the event with the highest amount spent on advertisement. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Did Maya Mclean attend the 'Women's Soccer' event? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among all events hold by the Student_Club in 2019, find the percentage share of events related to 'Community Service' 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Indicate the cost of posters for 'September Speaker' event. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the most popular size of t-shirt ordered by the club members? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Indicate the name of the closed event whose cost has exceeded the budget the most. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Identify the type of expenses and their total value approved for 'October Meeting' event. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among the budgets for Food, which one has the highest budgeted amount? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among the budgets for Advertising, list out top three which have the most budgeted amount? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Calculate the total cost spent for Parking in the list. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Mention the total expense used on 8/20/2019. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List out the full name and total cost that member id ""rec4BLdZHS2Blfp4v"" incurred? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: State what kind of expenses that Sacha Harrison incurred? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What kind of expenses incurred by members who have X-Large in size of tee shirt? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Mention the zip code of member who incurred less than 50USD. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: State the name of major that Phillip Cullen has joined. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List out the position of members who joined major of Business. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many members of Business have the Medium size of tee shirt? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List out the type of events which have remaining budget more than 30 USD. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Mention the category of events which were held at MU 215. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the category of event which was taken place in 2020-03-24T12:00:00? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: State the name of major that Vice President has joined. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Calculate the percentage of members who are major Mathematics in the list? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: State the category of events were held at MU 215. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many income are received with an amount of 50? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among the members, how many of them have an extra large t-shirt size? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the last name of members with a major in environmental engineering and include its department and college name. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the city and state of members enrolled under electrical and computer engineering department. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the last name and position of the student that bought pizza on 09/10/2019? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the last name of the members of the club that attended the women's soccer event. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which countries have zip codes with post office boxes? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What are the zip codes that have post office boxes in the country of the country of San Juan Municipio whose state is Puerto Rico? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the names of closed event as ""game"" that was closed from 3/15/2019 to 3/20/2020. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Please provide links to events for members who have paid more than 50 dollar. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Please indicate the college of the person whose first name is Katy with the link to the major ""rec1N0upiVLy5esTO"".

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Please list the phone numbers of the members who majored in business at the College of Agriculture and Applied Sciences. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List emails of people who paid more than 20 dollars from 9/10/2019 to 11/19/2019. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: How many members have education major in the College of Education & Human Services? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the percentage of the events that went over budget? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Give the event ID, location, and status of events conducted from November 2019 to March 2020. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the expenses that spend more than fifty dollars on average. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Find the full name of members whose t-shirt size is extra large. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Calculate the percentage of zip codes that are PO boxes. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the name and location of events that underspend its budget. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the name and major of members who had to spend more than a hundred dollars on an expense? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: In the events with more than forty incomes, list the city and country in which the event is happening. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Among the members who incurred expenses in more than one event, who paid the most amount? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the average amount paid by students in a position other than a member? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the name of events with less than average parking cost. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the percentage of the cost for the game events? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which budget allowed the most money for water, chips, and cookies? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the full name of the top five members who spend the most money in the descending order of spending. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Give the full name and contact number of members who had to spend more than average on each expense. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Calculate the difference in the percentage of members in Maine and Vermont. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What is the major of Garrett Gerke and which department does it belong to? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the last names of students under the Elementary Education major and include their phone numbers. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: List the event names which were budgeted for the food. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Write the full names of students who received funds on the date of 9/9/2019 and include the amount received. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which budget category does the expense 'Posters' fall to? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Write the full name of the club member with the position of 'Secretary' and list which college the club member belongs to. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Calculate the total amount spent on speaker gifts and list the name of the event they were spent on. 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Where is the hometown of Garrett Girke? 

"
student_club,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE event (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
);
CREATE TABLE major (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE zip_code (
column_0 integer,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
);
CREATE TABLE attendance (
column_0 text,
column_1 text,
FOREIGN KEY (column_0) REFERENCES event(column_0),
FOREIGN KEY (column_1) REFERENCES member(column_0),
);
CREATE TABLE budget (
column_0 text,
column_1 text,
column_2 real,
column_3 real,
column_4 integer,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_6) REFERENCES event(column_0),
);
CREATE TABLE expense (
column_0 text,
column_1 text,
column_2 text,
column_3 real,
column_4 text,
column_5 text,
column_6 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
FOREIGN KEY (column_6) REFERENCES budget(column_0),
);
CREATE TABLE income (
column_0 text,
column_1 text,
column_2 integer,
column_3 text,
column_4 text,
column_5 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_5) REFERENCES member(column_0),
);
CREATE TABLE member (
column_0 text,
column_1 text,
column_2 text,
column_3 text,
column_4 text,
column_5 text,
column_6 text,
column_7 integer,
column_8 text,
PRIMARY KEY (column_0),
FOREIGN KEY (column_7) REFERENCES zip_code(column_0),
FOREIGN KEY (column_8) REFERENCES major(column_0),
);
---------------------
QUESTION: Which student has the hometown of Lincolnton, North Carolina with the zip code of 28092? List their full name and position. 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How many gas stations in CZE has Premium gas?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the ratio of costumers who pay in EUR against customers who pay in CZK? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: In 2012, who had the least consumption in LAM? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What was the average monthly consumption of customers in SME for the year 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which customers, paying in CZK, consumed the most gas in 2011? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How many customers in KAM had a consumption of less than 30,000 for the year 2012? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which year recorded the most gas use paid in EUR?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which segment had the least consumption?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which year recorded the most consumption of gas paid in CZK? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What was the gas consumption peak month for SME customers in 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How much did customer 6 consume in total between August and November 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How many more ""discount"" gas stations does the Czech Republic have compared to Slovakia? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How much more was customer 7 consuming in April 2013 than customer 5? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which LAM customer used the Euro as their currency and had the highest consumption in October 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Who among KAM's customers consumed the most? How much did it consume?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How much did the KAM customers consume in total in May 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How many percent of LAM customer consumed more than 46.73? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which country has more ""value for money"" gas stations? Please give a total number of ""value for money"" gas stations in each country.

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What percentage of KAM customers pay in euros? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: In February 2012, what percentage of customers consumed more than 528.3? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What percentage of Slovakian gas stations are premium? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which client ID consumed the most in September 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which client segment consumed the least in September 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which SME customer consumed the least in June 2012? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the highest monthly consumption in the year 2012? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the biggest monthly consumption of the customers who use euro as their currency? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Please list the product description of the products consumed in September, 2013. 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Please list the countries of the gas stations with transactions taken place in June, 2013. 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Please list the chains of the gas stations with transactions in euro.

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Please list the product description of the products bought in transactions in euro.

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the average total price of the transactions taken place in January, 2012? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic. 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the average total price of the transactions taken place in gas stations in the Czech Republic? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: For the customers who paid in the euro, what is their average total price of the transactions?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which customer paid the most in 2012/8/25? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which country's gas station had the first paid cusomer in 2012/8/25? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What kind of currency did the customer paid at 16:25:00 in 2012/8/24? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What segment did the customer have at 2012/8/23 21:20:00? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: How many transactions were paid in EUR in the morning of 2012/8/26? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: For the earliest customer, what segment did he/she have?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: For the deal happened at 2012/8/24 12:42:00, which country was it? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What was the product id of the transaction happened at 2012/8/23 21:20:00? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: There's one customer spent 214582.17 in the June of 2013, which currency did he/she use? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which country was the card owner of No.667467 in?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What's the nationality of the customer who spent 548.4 in 2012/8/24? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the percentage of the customers who used EUR in 2012/8/25? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which gas station has the highest amount of revenue?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the percentage of ""premium"" against the overall segment in ""SVK""?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: What is the amount spent by customer ""38508"" at the gas stations? How much had the customer spent in January 2012? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which are the top five best selling products? Please state the full name of them. 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used? 

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: Which country had the gas station that sold the most expensive product id No.2 for one unit?

"
debit_card_specializing,"Based on the database schema below and the question, create a SQL query that will return the desired result:
DATABASE SCHEMA
---------------------
CREATE TABLE customers (
column_0 integer,
column_1 text,
column_2 text,
PRIMARY KEY (column_0),
);
CREATE TABLE gasstations (
column_0 integer,
column_1 integer,
column_2 text,
column_3 text,
PRIMARY KEY (column_0),
);
CREATE TABLE products (
column_0 integer,
column_1 text,
PRIMARY KEY (column_0),
);
CREATE TABLE transactions_1k (
column_0 integer,
column_1 date,
column_2 text,
column_3 integer,
column_4 integer,
column_5 integer,
column_6 integer,
column_7 integer,
column_8 real,
PRIMARY KEY (column_0),
);
CREATE TABLE yearmonth (
column_0 integer,
column_1 text,
column_2 real,
FOREIGN KEY (column_0) REFERENCES customers(column_0),
);
---------------------
QUESTION: For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012. 

"
