{"0": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the highest eligible free rate for K-12 students in the schools in Alameda County? Eligible free rate for K-12 = `Free Meal Count (K-12)` / `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "1": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list the lowest three eligible free rates for students aged 5-17 in continuation schools. Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "2": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list the zip code of all the charter schools in Fresno County Office of Education. Charter schools refers to `Charter School (Y/N)` = 1 in the table fprm\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "3": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "4": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1. Charter schools refers to `Charter School (Y/N)` = 1 in the frpm\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "5": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many schools with an average score in Math under 400 in the SAT test are exclusively virtual? Exclusively virtual refers to Virtual = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "6": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program. Magnet schools or offer a magnet program means that Magnet = 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "7": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "8": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "9": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "10": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "11": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list the codes of the schools with a total enrollment of over 500. Total enrollment can be represented by `Enrollment (K-12)` + `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "12": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17? Excellence rate = NumGE1500 / NumTstTakr; Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "13": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list the phone numbers of the schools with the top 3 SAT excellence rate. Excellence rate = NumGE1500 / NumTstTakr\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "14": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "15": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which active district has the highest average score in Reading?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "16": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many schools in merged Alameda have number of test takers less than 100?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "17": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the charter number of the school that the average score in Writing is 499?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "18": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many schools in Contra Costa (directly funded) have number of test takers not more than 250?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "19": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the phone number of the school that has the highest average score in Math?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "20": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many schools in Amador which the Low Grade is 9 and the High Grade is 12?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "21": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "22": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which school in Contra Costa has the highest number of test takers?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "23": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools. Diffrence in enrollement = `Enrollment (K-12)` - `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "24": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "25": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools? Average of average math = sum(average math scores) / count(schools).\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "26": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17? Full communication address should include Zip, Street, City, State\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "27": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any. Communication number refers to phone number.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "28": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average. Difference between K-12 enrollment and 15-17 enrollment can be computed by `Enrollment (K-12)` - `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "29": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: When did the first-through-twelfth-grade school with the largest enrollment open? K-12 means First-through-twelfth-grade\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "30": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which cities have the top 5 lowest enrollment number for students in grades 1 through 12? K-12 refers to students in grades 1 through 12.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "31": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12? K-12 refers to students in grades 1 through 12; Eligible free rate for K-12 = `Free Meal Count (K-12)` / `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "32": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66? grades 1-12 means K-12; Eligible free or reduced price meal rate for K-12 = `FRPM Count (K-12)` / `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "33": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "34": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson? Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "35": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12? Charted school means `Charter School (Y/N)` = 1 in the table frpm; Students enrolled in grades 1 through 12 refers to `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "36": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name. full name means first name, last name; There are at most 3 administrators for each school; SAT Scores are greater or equal to 1500 refers to NumGE1500\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "37": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State. Execellence Rate = NumGE1500 / NumTstTakr; complete address has Street, City, State, Zip code\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "38": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "39": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980? between 1/1/1980 and 12/31/1980 means the year = 1980\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "40": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the telephone number for the school with the lowest average score in reading in Fresno Unified? Fresno Unified is a name of district;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "41": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which exclusively virtual schools have the top 5 highest average reading scores? Exclusively virtual refers to Virtual = 'F'.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "42": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the type of education offered in the school who scored the highest average in Math?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "43": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the average math score of the school with the lowest average score for all subjects, and in which county is it located? Average score for all subjects can be computed by AvgScrMath + AvgScrRead + AvgScrWrite\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "44": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "45": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores. Usually, administrators manage the school stuff.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "46": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which state special schools have the highest number of enrollees from grades 1 through 12? State Special Schools refers to DOC = 31; Grades 1 through 12 means K-12\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "47": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980? Elementary School District refers to DOC = 52; Monthly average number of schools that opened in 2018 = count(schools that opened in 1980) / 12\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "48": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools? Elementary School District refers to DOC = 52; Unified School District refers to DOC = 54.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "49": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date. Closure date and closed date are synonyms; 'Closed' was mentioned in schools.StatusType.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "50": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the postal street address for the school with the 6th highest Math average? Indicate the school's name. Postal street and mailing street are synonyms.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "51": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "52": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport? Total SAT scores can be computed by AvgScrRead + AvgScrMath + AvgScrWrite\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "53": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many test takers are there at the school/s whose mailing city address is in Fresno?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "54": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "55": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt? Ratio = count(schools in Colusa) / count(schools in Humboldt)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "56": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Of all the schools with a mailing state address in California, how many are active in San Joaquin?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "57": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the phone number and extension number for the school that had the 333rd highest average writing score?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "58": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "59": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "60": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the websites for all the partially virtual chartered schools located in San Joaquin? Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "61": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many chartered schools located in the city of Hickman are owned by the Elementary School District? Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "62": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%? non-chartered schools refer to schools whose Charter = 0; K-12 means grades 1 through 12; percent of eligible free rate for K-12 = `Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "63": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs Chartered schools refer to Charter = 1 in the table schools; Full name refers to first name, last name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "64": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "65": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding? Ratio in percentage = (count(locally funded schools in Santa Clara) / count(all funding type schools in Santa Clara) * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "66": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus? Directly funded schools refers to FundingType = 'Directly Funded'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "67": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the total amount of Community College District closure in 1989 in the city of San Francisco?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "68": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)? Youth Authority Facilities (CEA) refers to SOC = 11; 1980s = years between 1980 and 1989\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "69": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools. State Special Schools means that SOC = 31.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "70": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many active and closed District Community Day Schools are there in the county of Alpine?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "71": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the district code for the School that does not offer a magnet program in the city of Fresno? When magent is equal to 0 in the database, it means ths school doesn't offer a magnet program.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "72": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year? State Special School means EdOpsCode = 'SSS'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "73": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "74": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360? District Special Education Consortia School refers to EdOpsCode = 'SPECON'.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "75": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "76": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced? High school can be represented as EILCode = 'HS'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "77": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)? Percent (%) Eligible FRPM (Ages 5-17) can be acquired by `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "78": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the most common type of grade span served in the city of Adelanto?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "79": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount. 'Does not offer physical building' means Virtual = F in the database.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "80": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "81": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name. State of California refers to state = 'CA'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "82": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the grade span offered in the school with the highest longitude?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "83": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city. Kindergarten to 8th grade refers to K-8; 'Offers a magnet program' means Magnet = 1.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "84": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the two most common first names among the school administrators? Indicate the district to which they administer.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "85": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school. Percent (%) Eligible Free (K-12) = `Free Meal Count (K-12)` / `Enrollment (K-12)` * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "86": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "87": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools? Intermediate/Middle Schools refers to SOC = 62; Unified School refers to DOC = 54; years between 2009 and 2010 can refer to 'between 1/1/2009 to 12/31/2010'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "88": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 integer,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 real,\ncolumn_19 real,\ncolumn_20 real,\ncolumn_21 real,\ncolumn_22 real,\ncolumn_23 real,\ncolumn_24 real,\ncolumn_25 real,\ncolumn_26 real,\ncolumn_27 real,\ncolumn_28 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE satscores (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_0) REFERENCES schools(column_0),\n);\nCREATE TABLE schools (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 text,\ncolumn_12 text,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 date,\ncolumn_21 date,\ncolumn_22 integer,\ncolumn_23 text,\ncolumn_24 text,\ncolumn_25 text,\ncolumn_26 text,\ncolumn_27 text,\ncolumn_28 text,\ncolumn_29 text,\ncolumn_30 text,\ncolumn_31 text,\ncolumn_32 text,\ncolumn_33 text,\ncolumn_34 text,\ncolumn_35 text,\ncolumn_36 integer,\ncolumn_37 real,\ncolumn_38 real,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 date,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "89": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many accounts who choose issuance after transaction are staying in East Bohemia region? A3 contains the data of region; 'POPLATEK PO OBRATU' represents for 'issuance after transaction'.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "90": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many accounts who have region in Prague are eligible for loans? A3 contains the data of region\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "91": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: The average unemployment ratio of 1995 and 1996, which one has higher percentage? A12 refers to unemploymant rate 1995; A13 refers to unemploymant rate 1996\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "92": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List out the no. of districts that have female average salary is more than 6000 but less than 10000? A11 refers to average salary; Female mapps to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "93": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many male customers who are living in North Bohemia have average salary greater than 8000? Male means that gender = 'M'; A3 refers to region; A11 pertains to average salary.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "94": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary? Female means gender = 'F'; A11 refers to average salary; Gap = highest average salary - lowest average salary; If the person A's birthdate > B's birthdate, it means that person B is order than person A.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "95": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List out the account numbers of clients who are youngest and have highest average salary? If the person A's birthdate < B's birthdate, it means that person B is younger than person A; A11 refers to average salary\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "96": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many customers who choose statement of weekly issuance are Owner? 'POPLATEK TYDNE' stands for weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "97": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List out the clients who choose statement of issuance after transaction are Disponent? 'POPLATEK PO OBRATU' stands for issuance after transaction\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "98": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement. 'POPLATEK TYDNE' stands for weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "99": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993. Loan validity more than 12 months refers to duration > 12\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "100": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov? Customers refer to clients; Female refers to gender = 'F'; Names of districts appear in column A2\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "101": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List out the accounts who have the earliest trading date in 1995 ?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "102": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "103": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Which client issued his/her card in 1994/3/3, give his/her client id.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "104": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: The transaction of 840 USD happened in 1998/10/14, when was this account opened?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "105": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "106": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "107": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the gender of the oldest client who opened his/her account in the highest average salary branch? Earlier birthdate refers to older age; A11 refers to average salary\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "108": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "109": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many clients opened their accounts in Jesenik branch were women? A2 has region names; Woman and female share the same meaning; female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "110": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "111": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many accounts were opened in Litomerice in 1996? A2 refers to district name; Litomerice is one of district names.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "112": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For the female client who was born in 1976/1/29, which district did she opened her account? Female refers to gender = 'F'; A2 refers to district names\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "113": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "114": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For the first client who opened his/her account in Prague, what is his/her account ID? A3 stands for region names\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "115": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients? Percentage of the male clients = DIVIDE(COUNT(male clients), COUNT(clients)) * 100%; Male refers to gender = 'M', A3 is the region name. A4 contains the information about inhabitants.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "116": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27? Increase rate of his/her account balance = [(balance of date A - balance of date B) / balance of Date B] * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "117": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the percentage of loan amount that has been fully paid with no issue. Loan paid with no issue means contract finished, no problems; status = 'A' means contract finished, no problems; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "118": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue. Status = 'C' stands for running contract, ok so far; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "119": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region. Records about district names could be found in A2; A3 contains the information about regions. 'POPLATEK PO OBRATU' stands for issuance after transaction\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "120": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance. Accounts holder refers to the person who own this account.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "121": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List account ID and account opening date for accounts from 'Prachatice'. A2 refers to the names of districts.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "122": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: State the district and region for loan ID '4990'. A2, A3 contains the information about district and region respectively.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "123": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Provide the account ID, district and region for loan amount greater than USD300,000. A2 contains district names and A3 contains region names.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "124": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List the loan ID, district and average salary for loan with duration of 60 months. A3 refers to regions; A11 refers to average salary\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "125": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996. Unemployment increment rate in percentage = [(unemployment rate 2016 - unemployment rate 2015) / unemployment rate 2015] * 100%; unemployment rate 2015 appears in the A12; unemployment rate 2016 appears in the A13; Loan contracts which are still running where client are in debt can be presented as status = 'D'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "126": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993. A2 contains the information about district.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "127": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List the account IDs with monthly issuance of statements. 'POPLATEK MESICNE' stands for monthly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "128": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders. A2 refers to districts; Female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "129": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996? Non-credit card withdraws refers to type = 'VYDAJ'; January 1996 can be found by date LIKE '1996-01%' in the database; A2 means district names\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "130": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many of the account holders in South Bohemia still do not own credit cards? A3 contains the region names; South Bohemia is one of region names.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "131": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Which district has highest active loan? A3 refers to district names; Active loan refers to running contracts; Status = 'C' stands for running contract, OK so far; Status = 'D' stands for running contract, client in debt\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "132": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the average loan amount by male borrowers? Male refers to gender = 'M'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "133": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: In 1996, which districts have the highest unemployment rate? List their branch location and district name. A2 refers to district names; A13 refers to unemploymant rate in 1996\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "134": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: In the branch where the largest number of crimes were committed in 1996, how many accounts were opened? A16 stands for no. of committed crimes 1996\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "135": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance? Negative balance means balance < 0; Operation = 'VYBER KARTOU' stands for credit card withdraw. Frequency = 'POPLATEK MESICNE' stands for monthly issurance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "136": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved? Frequency = 'POPLATEK MESICNE' stands for monthly issurance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "137": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many accounts have running contracts in Branch location 1? Status = 'C' stands for running contract, OK so far; Status = 'D' stands for running contract, client in debt\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "138": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there? Male refers to gender = 'M'; A15 stands for no. of commited crimes 1995\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "139": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many high-level credit cards have \"disponent\" type of disposition? High-level credit cards refers to the cards with the gold type.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "140": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many accounts are there in the district of \"Pisek\"? A2 refers to district name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "141": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Which districts have transactions greater than USS$10,000 in 1997?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "142": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Which accounts placed orders for household payment in Pisek? k_symbol = 'SIPO' refers to household payment\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "143": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What are the accounts that have both gold and junior credit cards?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "144": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How much is the average amount in credit card made by account holders in a month, in year 2021? Operation = 'VYBER KARTOU' refers to credit card withdrawn\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "145": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Who are the account holder identification numbers whose spent per month on the credit card is less than the average, in 1998? Operation = 'VYBER KARTOU' refers to credit card withdrawal\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "146": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Who are the female account holders who own credit cards and also have loans? Female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "147": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many female clients' accounts are in the region of South Bohemia? Female refers to gender = 'F'; A3 contains the region 'south Bohemia'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "148": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Please list the accounts whose district is Tabor that are eligible for loans. District refers to column A2; when the account type = 'OWNER', it's eligible for loans\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "149": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000. A11 represents the average salary; Salary and income share the similar meanings; when the account type = 'OWNER', it's eligible for loans\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "150": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many accounts in North Bohemia has made a transaction with the partner's bank being AB? A3 contains the region names; North Bohemia is a region.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "151": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Please list the name of the districts with accounts that made withdrawal transactions. A2 refers to district name; type = 'VYDAJ' stands for withdrawal transactions\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "152": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997? A3 refers to region names; A15 stands for the average number of crimes commited in 1995.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "153": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many 'classic' cards are eligible for loan? when the account type = 'OWNER', it's eligible for loan\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "154": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many male clients in 'Hl.m. Praha' district? District data appears in the A2; Male means that gender = 'M'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "155": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many percent of 'Gold' cards were issued prior to 1998? Percent of Gold = [ count(type = 'gold' and issued date < 1998) / count(all cards)] * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "156": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Who is the owner of the account with the largest loan amount?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "157": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the number of committed crimes in 1995 in the district of the account with the id 532? A15 contains information about number of committed crimes in 1995\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "158": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the district Id of the account that placed the order with the id 33333?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "159": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List all the withdrawals in cash transactions that the client with the id 3356 makes. operation = 'VYBER' refers to withdrawal in cash\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "160": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Among the weekly issuance accounts, how many have a loan of under 200000? frequency = 'POPLATEK TYDNE' stands for weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "161": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What type of credit card does the client with the id 13539 own?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "162": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the region of the client with the id 3541 from? A3 refers to region\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "163": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Which district has the most accounts with loan contracts finished with no problems? status = 'A' refers to loan contracts finished with no problems\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "164": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Who placed the order with the id 32423?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "165": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Please list all the transactions made by accounts from district 5.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "166": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many of the accounts are from Jesenik district?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "167": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List all the clients' IDs whose junior credit cards were issued after 1996. After 1996 means date > = '1997-01-01\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "168": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women? Female refers to gender = 'F'; Woman and female are closed; Average salary can be found in A11\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "169": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997? Growth rate = (sum of amount_1997 - sum of amount_1996) / (sum of amount_1996) * 100%; Male refers to gender = 'M'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "170": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many credit card withdrawals were recorded after 1995? Operation = 'VYBER KARTOU' means credit card withdrawals\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "171": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What was the difference in the number of crimes committed in East and North Bohemia in 1996? Difference in no. of committed crimes between 2 regions = Total no. of committed crimes in 1996 in North Bohemia - Total no. of committed crimes in 1996 in East Bohemia. A3 refers to region. Data about no. of committed crimes 1996 appears in A16\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "172": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many owner and disponent dispositions are there from account number 1 to account number 10?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "173": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total? k_symbol refers to the purpose of payments\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "174": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What year was account owner number 130 born?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "175": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many accounts have an owner disposition and request for a statement to be generated upon a transaction? Frequency = 'POPLATEK PO OBRATU' stands for issuance after transaction\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "176": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the amount of debt that client number 992 has, and how is this client doing with payments?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "177": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "178": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Which kind of credit card does client number 9 possess?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "179": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How much, in total, did client number 617 pay for all of the transactions in 1998?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "180": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "181": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Please provide the IDs of the 3 female clients with the largest loans. Female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "182": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000? Man and male refers to gender = 'M'; 'SIPO' stands for household payment\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "183": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many accounts in Beroun were opened after 1996?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "184": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many female customers have a junior credit card? Female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "185": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What proportion of customers who have accounts at the Prague branch are female? Female refers to gender = 'F'; Percentage of female clients in Prague branch = count[female clients with accounts in Prague branch / count(clients with accounts in Prague branch)] * 100%; A3 may contain information about Prague\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "186": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What percentage of male clients request for weekly statements to be issued? Percentage of male clients = [count(male clients who requested weekly statements / count(clients who requested weekly statements)] * 100%; Male means gender = 'M'; 'POPLATEK TYDNE' stands for weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "187": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many clients who choose statement of weekly issuance are User? Frequency = 'POPLATEK TYDNE' refers to weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "188": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "189": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Name the account numbers of female clients who are oldest and have lowest average salary? Female refers to 'F' in the gender; A11 contains information about average salary\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "190": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many clients who were born in 1920 stay in east Bohemia? East Bohemia appears in the column A3, which refers to the region.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "191": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement. Frequency = 'POPLATEK TYDNE' referes to weekly statement\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "192": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: What is the average amount of loan which are still on running contract with statement issuance after each transaction? status = 'C' stands for running contract, OK so far; status = 'D' stands for running contract, client in debt. 'POPLATEK PO OBRATU' stands for issuance after transaction\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "193": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: List all ID and district for clients that can only have the right to issue permanent orders or apply for loans. Only the owner accounts have the right to issue permanent orders or apply for loans\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "194": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES district(column_0),\n);\nCREATE TABLE card (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 date,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES disp(column_0),\n);\nCREATE TABLE client (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 date,\ncolumn_3 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES district(column_0),\n);\nCREATE TABLE disp (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES client(column_0),\nFOREIGN KEY (column_2) REFERENCES account(column_0),\n);\nCREATE TABLE district (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 real,\ncolumn_12 real,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 integer,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE loan (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 real,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE order (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 real,\ncolumn_5 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\nCREATE TABLE trans (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 date,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES account(column_0),\n);\n---------------------\nQUESTION: Provide the IDs and age of the client with high level credit card, which is eligible for loans. When type is gold, the credit card is high-level\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "195": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the most common bond type? most common bond type refers MAX(COUNT(bond_type))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "196": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: In the non-carcinogenic molecules, how many contain chlorine atoms? non-carcinogenic molecules refers to label = '-'; chlorine atoms refers to element = 'cl'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "197": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Calculate the average number of oxygen atoms in single-bonded molecules. single-bonded molecules refers to bond_type = '-' ; average number of oxygen atom = AVG(element = 'o')\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "198": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: On average how many carcinogenic molecules are single bonded? carcinogenic molecules refers to label = '+'; single-bonded refers to bond_type = '-'; average = DIVIDE(SUM(bond_type = '-'), COUNT(atom_id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "199": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: In the molecule containing sodium atoms, how many are non-carcinogenic? non-carcinogenic refers to label = '-'; sodium atoms refers to element = 'na'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "200": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Find the triple-bonded molecules which are carcinogenic. triple-bonded molecules refers to bond_type = '#'; carcinogenic refers to label = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "201": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the percentage of carbon in double-bond molecules? carbon refers to element = 'c'; double-bond molecules refers to bond_type = ' = '; percentage = DIVIDE(SUM(element = 'c'), COUNT(atom_id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "202": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many triple type bonds are there? triple type bonds refers to bond_type = '#'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "203": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: In how many atoms is there no bromine? atoms with no bromine refers to element ! = 'br'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "204": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Of the first 100 molecules in number order, how many are carcinogenic? first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "205": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Identify by their ID the molecules in which there is silicon. silicon refers to element = 'si';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "206": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What elements are in the TR004_8_9 bond atoms? TR004_8_9 bond atoms refers to bond_id = 'TR004_8_9'; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "207": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What elements are in a double type bond? double type bond refers to bond_type = ' = '; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "208": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which type of label is the most numerous in atoms with hydrogen? with hydrogen refers to element = 'h'; label most numerous in atoms refers to MAX(COUNT(label)); label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "209": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Tellurium is in what type of bond? type of bond refers to bond_type; Tellurium refers to element = 'te'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "210": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What atoms are connected in single type bonds? single type bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "211": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Indicate which atoms are connected in non-carcinogenic type molecules. label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "212": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which element is the least numerous in non-carcinogenic molecules? label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "213": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What type of bond is there between the atoms TR004_8 and TR004_20? type of bond refers to bond_type; between the atoms TR004_8 and TR004_20 refers to atom_id between atom_id = 'TR004_8' and atom_id = 'TR004_20';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "214": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What type of label is not on molecules with atoms with tin? tin refers to element ! = 'sn'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "215": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many atoms with iodine and sulfur type elements are there in single bond molecules? with iodine element refer to element = 'i'; with sulfur element refers to element = 's'; single type bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "216": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Identify all connected atoms with a triple bond. triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "217": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Identify all the atoms that are connected to the atoms of the TR181 molecule. TR181 molecule refers to molecule_id = 'TR181'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "218": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What percentage of carcinogenic-type molecules does not contain fluorine? label = '+' mean molecules are carcinogenic; contain fluorine refers to element = 'f'; percentage = DIVIDE(SUM(element = 'f'), COUNT(molecule_id)) as percent where label = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "219": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the percentage of carcinogenic molecules in triple type bonds? label = '+' mean molecules are carcinogenic; triple bond refers to bond_type = '#'; percentage = DIVIDE(SUM(bond_type = '#'), COUNT(bond_id)) as percent where label = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "220": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list top three elements of the toxicology of the molecule TR000 in alphabetical order. TR000 is the molecule id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "221": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6? TR001 is the molecule id; TR001_2_6 is the bond id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "222": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the difference between the number of molecules that are carcinogenic and those that are not? label = '+' means molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; difference = SUBTRACT(SUM(label = '+'), SUM(label = '-'))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "223": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the atom IDs of the bond TR_000_2_5? TR_000_2_5 is the bond id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "224": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the bond IDs that have the same atom ID 2 of TR000_2? TR000_2 is the atom id; atom ID 2 refers to atom_id2\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "225": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list top five molecules that have double bonds in alphabetical order. double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "226": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the percentage of double bonds in the molecule TR008? double bond refers to bond_type = ' = '; TR008 is the molecule id; percentage = DIVIDE(SUM(bond_type = ' = '), COUNT(bond_id)) as percent where molecule_id = 'TR008'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "227": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the percentage of molecules that are carcinogenic? label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) as percent\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "228": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage. hydrogen refers to element = 'h'; TR206 is the molecule id; percentage = DIVIDE(SUM(element = 'h'), COUNT(atom_id)) as percent where molecule_id = 'TR206'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "229": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the type of bond that molecule TR000 has when involved in any bonds? type of bond refers to bond_type; TR000 is the molecule id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "230": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the elements of the toxicology and label of molecule TR060? TR060 is the molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "231": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic? TR018 is the molecule id; majority of the bond found refers to MAX(COUNT(bond_type)); label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "232": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order. label = '-' means molecules are not carcinogenic; single type bond refers to bond_type = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "233": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Please list top two bonds that happened with the molecule TR006 in alphabetical order. TR006 is the molecule id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "234": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many bonds which involved atom 12 does molecule TR009 have? TR009 is the molecule id; molecule_id = 'TR009' means the bond_id LIKE 'TR009_%'; involved atom 12 refers to atom_id = 'TR009_12' or atom_id2 = 'TR009_12'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "235": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many molecules are carcinogenic and have the bromine element? label = '+' mean molecules are carcinogenic; have bromine element refers to element = 'br'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "236": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the bond type and the atoms of the bond ID of TR001_6_9? double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#'; atoms refer to atom_id or atom_id2\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "237": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not. TR001_10 is the atom id; label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "238": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many molecules have a triple bond type? triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "239": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many connections does the atom 19 have? connections refers to bond_id; atom 19 refers to atom_id like 'TR%_19';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "240": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List all the elements of the toxicology of the molecule \"TR004\". TR004 is the molecule id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "241": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many of the molecules are not carcinogenic? label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "242": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among all the atoms from 21 to 25, list all the molecules that are carcinogenic. atoms from 21 to 25 refers to SUBSTRING(atom_id, 7, 2) between 21 and 25; label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "243": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the bonds that have phosphorus and nitrogen as their atom elements? have phosphorus as atom elements refers to element = 'p'; have nitrogen as atom elements refers to element = 'n'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "244": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Is the molecule with the most double bonds carcinogenic? double bond refers to bond_type = ' = '; label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "245": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the average number of bonds the atoms with the element iodine have? atoms with the element iodine refers to element = 'i'; average = DIVIDE(COUND(bond_id), COUNT(atom_id)) where element = 'i'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "246": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List the bond type and the bond ID of the atom 45. bond ID of atom 45 refers to SUBSTR(atom_id, 7, 2) + 0 = 45; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "247": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List all the elements of atoms that can not bond with any other atoms. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; atoms cannot bond with other atoms means atom_id NOT in connected table;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "248": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the atoms of the triple bond with the molecule \"TR447\"? TR447 is the molecule id; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "249": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the elements of the atoms of TR144_8_19? TR144_8_19 is the bond id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "250": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Of all the carcinogenic molecules, which one has the most double bonds? label = '+' mean molecules are carcinogenic; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "251": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the least common element of all carcinogenic molecules? label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "252": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the atoms that can bond with the atom that has the element lead? atom that has the element lead refers to atom_id where element = 'pb'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "253": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List the elements of all the triple bonds. triple bond refers to bond_type = '#'; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "254": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What percentage of bonds have the most common combination of atoms' elements? DIVIDE(COUNT(bond_id), COUNT(atom_id where MAX(COUNT(atom_id)) ))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "255": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What proportion of single bonds are carcinogenic? single bond refers to bond_type = '-'; label = '+' mean molecules are carcinogenic; proportion = DIVIDE(SUM(label = '+'), COUNT(bond_id)) where bond_type = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "256": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Calculate the total atoms consisting of the element carbon and hydrogen. consisting of element carbon and hydrogen refers to element in('c', 'h')\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "257": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List down atom id2 for atoms with element sulfur. element sulfur refers to element = 's'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "258": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the bond type for atoms with element Tin? element Tin refers to element = 'sn'; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "259": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many elements are there for single bond molecules? single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "260": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine. triple bond refers to bond_type = '#'; phosphorus refers to element = 'p'; bromine refers to element = 'br'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "261": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Write down bond id for molecules that are carcinogenic. label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "262": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the single bond molecule id, which molecules are not carcinogenic? label = '-' means molecules are non-carcinogenic; single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "263": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the composition of element chlorine in percentage among the single bond molecules? element chlorine refers to element = 'cl'; single bond refers to bond_type = '-'; percentage = DIVIDE(SUM(element = 'cl'), COUNT(atom_id)) as percent where bond_type = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "264": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the labels for TR000, TR001 and TR002? TR000, TR001 and TR002 are molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "265": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List down the molecule id for non carcinogenic molecules. label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "266": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Calculate the total carcinogenic molecules for molecule id from TR000 to TR030. label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "267": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List down the bond type for molecules from molecule id TR000 to TR050. double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "268": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the elements for bond id TR001_10_11? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "269": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many bond id have element iodine? iodine refers to element = 'i'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "270": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic? calcium refers to element = 'ca'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; MAX(label)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "271": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Does bond id TR001_1_8 have both element of chlorine and carbon? chlorine refers to element = 'cl'; carbon refers to element = 'c'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "272": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List down two molecule id of triple bond non carcinogenic molecules with element carbon. carbon refers to element = 'c'; triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "273": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the percentage of element chlorine in carcinogenic molecules? chlorine refers to element = 'cl'; label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(element = 'pb'); COUNT(molecule_id)) as percentage where label = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "274": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List the toxicology elements associated with molecule TR001. TR001 is the molecule id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "275": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Give me the molecule ID of the double bond type. double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "276": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Write down the atom IDs of the first and second atoms of triple bond type molecules. first atom refers to atom_id; second atom refers to atom_id2; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "277": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What are the toxicology elements associated with bond ID TR005_16_26? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "278": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many of the single bond type molecules are non-carcinogenic? label = '-' means molecules are non-carcinogenic; single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "279": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the label for bond ID TR001_10_11? label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "280": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not. triple bond refers to bond_type = '#'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "281": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Tally the toxicology element of the 4th atom of each molecule that was carcinogenic. label = '+' means molecules are carcinogenic; 4th atom of each molecule refers to substr(atom_id, 7, 1) = 4; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "282": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label. hydrogen refers to element = 'h'; ratio = DIVIDE(SUM(element = 'h'), count(element)) where molecule_id = 'TR006' ; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "283": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Identify whether the chemical compound that contains Calcium is carcinogenic. calcium refers to element = 'ca'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "284": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Determine the bond type that is formed in the chemical compound containing element Tellurium. Tellurium refers to element = 'te'; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "285": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Name chemical elements that form a bond TR001_10_11. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; TR001_10_11 is the bond id; molecule id refers to SUBSTR(bond_id, 1, 5); atom 1 refers to SUBSTR(bond_id, 7, 2); atom 2 refers to SUBSTR(bond_id, 10, 2)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "286": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among all chemical compounds identified in the database, what percent of compounds form a triple-bond. triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "287": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond. TR047 is the molecule id; double bond refers to bond_type = ' = '; percentage = DIVIDE(SUM(bond_type = ' = '), COUNT(all bond_id)) as percent where molecule_id = 'TR047'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "288": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Identify whether the molecule that contains atom TR001_1 is carcinogenic. label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "289": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Is molecule TR151 carcinogenic? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "290": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which toxic element can be found in the molecule TR151? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "291": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many chemical compounds in the database are identified as carcinogenic. label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "292": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon. carbon refers to element = 'c'; between TR010 to TR050 refers to substr(molecule_id, 3, 3)>10 AND substr(molecule_id, 3, 3) < 50\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "293": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many atoms belong to the molecule labeled with carcinogenic compounds? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "294": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which bond ids are double-bond with carcinogenic compound? label = '+' mean molecules are carcinogenic; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "295": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound? label = '+' mean molecules are carcinogenic; hydrogen refers to element = h'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "296": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Indicate the molecule id is belonging to the TR00_1_2 bond that has the first atom named TR00_1.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "297": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the atoms that contain element carbon, which one does not contain compound carcinogenic? label = '-' means molecules are non-carcinogenic; carbon refers to element = 'c'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "298": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen. hydrogen refers to element = 'h'; label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+' and element = 'h'), COUNT(molecule_id)) * 100.0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "299": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Is molecule TR124 carcinogenic? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "300": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What atoms comprise TR186? TR186 is a molecule id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "301": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the bond type of TR007_4_19? double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "302": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Name the elements that comprise the atoms of bond TR001_2_4. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "303": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many double bonds does TR006 have and is it carcinogenic? label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "304": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List all carcinogenic molecules and their elements. label = '+' mean molecules are carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "305": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Name all bonds with single bond types and what atoms are connected to the molecules. single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "306": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which molecules have triple bonds and list all the elements they contain. triple bond refers to bond_type = '#'; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "307": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Name the atoms' elements that form bond TR000_2_3. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "308": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many bonds are created by bonding atoms with chlorine element? chlorine refers to element = 'cl'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "309": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List out the atom id that belongs to the TR346 molecule and how many bond type can be created by this molecule?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "310": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound? double bond refers to bond_type = ' = '; label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "311": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many molecules without sulphur element is not having double bond? double bond refers to bond_type = ' = '; bond_type ! = ' = '; sulphur refers to element = 's'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "312": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the carcinogenic label for bond TR001_2_4? label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "313": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many atoms belong to molecule id TR005?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "314": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many single bonds are there in the list? single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "315": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the molecules which contain \"cl\" element, which of them are carcinogenic? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "316": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the molecules which contain \"c\" element, which of them are not carcinogenic? label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "317": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Calculate the percentage of carcinogenic molecules which contain the Chlorine element. label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+' and element = 'cl'), COUNT(molecule_id)) as percentage\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "318": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the molecule id of bond id TR001_1_7?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "319": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many elements are contained in bond_id TR001_3_4? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "320": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2? type of bond refers to bond_type; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "321": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "322": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the element of toxicology for the atom with the ID of TR000_1? atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "323": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Is molecule TR000 is carcinogenic or not? label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "324": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Find the percentage of atoms with single bond. single bond refers to bond_type = '-'; percentage = DIVIDE(SUM(bond_type = '-'), COUNT(bond_id)) as percentage\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "325": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many carcinogenic molecules that consisted of Nitrogen? nitrogen refers to element = 'n'; label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "326": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which molecule consisted of Sulphur atom with double bond? sulphur refers to element - 's'; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "327": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which non-carcinogenic molecules consisted more than 5 atoms? label = '-' means molecules are non-carcinogenic; molecules consisted more than 5 atoms refers to COUNT(molecule_id) > 5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "328": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List all the elements with double bond, consisted in molecule TR024. double bond refers to bond_type = '='; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "329": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Which carcinogenic molecule have the highest number of atoms consisted in it? label = '+' mean molecules are carcinogenic; molecule that have the highest number of atoms consisted in in refers to MAX(COUNT(atom.molecule_id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "330": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms. hydrogen refers to element = 'h'; label = '+' mean molecules are carcinogenic; triple bond refers to bond_type = '#'; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) * 100.0 where element = 'h' AND bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "331": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: How many of the molecules are carcinogenic? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "332": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: Among the molecules between TR004 to TR010, how many of them has single bonds? single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "333": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: In the molecule TR008, how many carbons are present? carbon refers to element = 'c'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "334": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic? label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "335": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the total number of molecules with double bonded oxygen? oxygen refers to element = 'o'; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "336": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: in molecules with triple bonds, how many of them are not carcinogenic? triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "337": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List the element and bond type included in the molecule with molecule ID of TR016. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "338": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: What is the atom ID of double bonded carbon in TR012 molecule? carbon refers to element = 'c'; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "339": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE bond (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES molecule(column_0),\n);\nCREATE TABLE connected (\ncolumn_0 text,\ncolumn_1 text,\ncolumn_2 text,\nFOREIGN KEY (column_0) REFERENCES atom(column_0),\nFOREIGN KEY (column_1) REFERENCES atom(column_0),\nFOREIGN KEY (column_2) REFERENCES bond(column_0),\n);\nCREATE TABLE molecule (\ncolumn_0 text,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\n---------------------\nQUESTION: List the atom ID of the carcinogenic molecule that contains oxygen? label = '+' mean molecules are carcinogenic; oxygen refers to element = 'o'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "340": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which are the cards that have incredibly powerful foils. poweful foils refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "341": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the borderless cards available without powerful foils? borderless' refers to borderColor; poweful foils refers to cardKingdomFoilId paired with cardKingdomId AND cardKingdomId is not null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "342": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List the card names with value that cost more converted mana for the face. more converted mana for the face refers to Max(faceConvertedManaCost);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "343": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Name all cards with 2015 frame style ranking below 100 on EDHRec. below 100 on EDHRec refers to EDHRec <100; with 2015 frame style refers to frameVersion = 2015;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "344": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List all the mythic rarity print cards banned in gladiator format. mythic rarity printing refers to rarity = 'mythic'; card banned refers to status = 'Banned'; in gladiator format refers to format = 'gladiator';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "345": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: For artifact type of cards that do not have multiple faces on the same card, state its legalities for vintage play format. Artifact type of cards refers to types = 'Artifact'; card does not have multiple faces on the same card refers to side is NULL'; vintage play format refers to format = 'vintage';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "346": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List all the card id and artist with unknown power which are legal for commander play format. unknown power refers to power = '*' or POWER IS NULL; commander play format refers to format = 'commander'; legal for commander play format refers to format = 'commander' where status = 'Legal'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "347": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values. cards have missing or degraded properties and value refers to hasContentWarning = 1; 'Stephen Daniele' is artist;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "348": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Describe the information about rulings for card named 'Sublime Epiphany' with number 74s. Sublime Epiphany' is name of cards; number 74s refers to number = '74s'; information refers to text;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "349": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Name the card and artist with the most ruling information. Also state if the card is a promotional printing. with the most ruling information refers to Max(count(rulings.uuid)); the card is the promotional printing refers to isPromo = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "350": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: State the alternative languages available for card named Annul numbered 29. annul refers to name = 'annul'; numbered 29 refers to number = '29';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "351": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Name all the cards which have alternative language in Japanese. Japanese' is the language;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "352": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Calculate the percentage of the cards availabe in Chinese Simplified. Chinese Simplified' is the language; percentage = Divide(Sum(id where language = 'Chinese Simplified'), Count(id)) *100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "353": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List all the sets available in Italian translation. State the total number of cards per set. Italian translation refers to language = 'Italian'; total number of card per set refers to totalSetSize;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "354": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many types of cards does the artist Aaron Boyd illustrated about card art? Aaron Boyd' is artist;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "355": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the keyword found on card 'Angel of Mercy'? Angel of Mercy' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "356": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards have infinite power? infinite power refers to power = '*';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "357": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What type of promotion is of card 'Duress'? card Duress refers to name = 'Duress'; type of promotion refers to promoTypes;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "358": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the border color of card \"Ancestor's Chosen\"? Ancestor's Chosen' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "359": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the type of the card \"Ancestor's Chosen\" as originally printed? Ancestor's Chosen' is the name of card; type of the card as originally printed refers to originaltype;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "360": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in? Angel of Mercy' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "361": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards of legalities whose status is restricted have text boxes? restricted refers to status = 'restricted'; have text boxes refers to is Textless = 0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "362": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the description about the ruling of card \"Condemn\"? Ancestor's Chosen' is the name of card; description about the ruling refers to text;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "363": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards of legalities whose status is restricted are found in a starter deck? restricted refers to status = 'restricted'; found in the starter deck refers to isStarter = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "364": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the status of card \"Cloudchaser Eagle\"? Cloudchaser Eagle is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "365": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the type of card \"Benalish Knight\"? Benalish Knight' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "366": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the rule of playing card \"Benalish Knight\"? Benalish Knight' is the name of card; rule of playing card refers to format;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "367": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please provide the names of the artists who illustrated the card art in Phyrexian. Phyrexian' is the language; name of artists refers to artist;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "368": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the percentage of borderless cards? borderless card refers to borderColor = 'borderless'; percentage = Divide(Count (id) where borderColor = 'borderless', Count(id)) *100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "369": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards that illusrtated in German have been reprinted? German' is the language; reprinted refers to isReprint = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "370": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many borderless cards are illustrated in Russian? borderless card refers to borderColor = 'borderless'; 'Russian' is the language;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "371": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the percentage of cards whose language is French among the Story Spotlight cards? Story Spotlight card refers to isStorySpotlight = 1; French is the language; Percentage = Divide(Count(id) where language = 'French' and isStorySpotlight = 1, Count(id) where isStorySpotlight = 1)*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "372": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards are there with toughness of 99?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "373": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Name the cards that were illustrated by Aaron Boyd. Aaron Boyd' is artist;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "374": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many black border cards are only available on mtgo? black border card refers to borderColor = black; available on mtgo refers to availability = mtgo;\n\nadd quotes for string = 'black' and = 'mtgo'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "375": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List down all the card IDs with converted mana cost of 0. converted mana cost of 0 refers to covertedManaCost = 0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "376": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the card layout of cards with keyword of flying?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "377": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"? subtype other than Angel refers to subtypes is not 'Angel';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "378": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs. Incredibly powerful refers to both cardKingdomFoilId and cardKingdomId IS NOT Null;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "379": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the cards belong to duel deck a? List the ID. duel deck a refers to duelDeck = a;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "380": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List the edhrecRank for cards with frame version 2015.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "381": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List down the name of artists for cards in Chinese Simplified. Chinese Simplified' is the language;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "382": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the cards that only available in paper and Japanese language? available in paper refers to availability = 'paper'; 'Japanese is the language;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "383": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many of the banned cards are white border? banned card refers to status = 'Banned'; white border refers to borderColor = 'white';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "384": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List down the uuid for legacy cards and the foreign language of these cards. legacy card refers to format = 'legacy'; foreign language refers to language in foreign_data\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "385": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Write down the ruling of Beacon of Immortality. Beacon of Immortality' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "386": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards are having future frame version and what are the legality status of these cards? future frame version refers to frameVersion = 'future'; legility status refers to status = 'legal';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "387": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the cards for set OGW? State the colour for these cards. set OGW refers to setCode = 'OGW';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "388": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the cards in set 10E with converted mana of 5 have translation and what are the languages? set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "389": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List down the name of cards with original types of Creature - Elf and the date of rulings for these cards. Creature - Elf is the originalType;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "390": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the colors of cards from ID 1-20? What are the format of these cards? ID 1-20 refers to id BETWEEN 1 and 20;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "391": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the Artifact cards, which are black color and comes with foreign languague translation? Artifact card refers to originalType = 'Artifact'; black color refers to colors = 'B'; foreign language refers to language in foreign_data\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "392": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Pick 3 cards with rarity of uncommon, list down name these cards according to ascending order of it's ruling date. uncommon refers to rarity = 'uncommon';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "393": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: On how many cards designed by John Avon is its foil non-powerful? John Avon refer to artist; foil poweful foils refers to cardKingdomId and cardKingdomFoildId is NOT NULL\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "394": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many white bordered cards are powerful? white bordered cards refer to borderColor = 'white'; powerful cards refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null (replace)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "395": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1? UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "396": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards with a 1993 frame version and available on paper have a sensitive content warning? sensitive content warning refer to hasContentWarning = 1; available on paper refer to availability = 'paper' 1993 refer to frameVersion\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "397": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo? available in paper refers to availability = 'paper'; available in mtgo refers to availability = 'mtgo; frameVersion = 2003;borderColor = 'black'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "398": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How much unconverted mana do all the cards created by Rob Alexander cost in total? unconverted mana refer to manaCost; Rob Alexander refer to artist\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "399": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Lists all types of cards available in arena. all types refer to subtypes and supertypes\n\navailble in arena refers to availability = 'arena'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "400": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Lists the set code of all cards translated into Spanish. Spanish refer to language; set code refers to setCode\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "401": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What percentage of legendary frame effect cards have a maximum starting maximun hand\nsize of +3? maximun hand size of +3 refer to hand = +3; legendary frame effect cards refer to frameEffects = 'legendary'; percentage refer to DIVIDE(COUNT(hand = '+3'), COUNT(id)) from cards where frameEffects = 'legendary'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "402": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the percentage of Story Spotlight cards that also have a text box? List them by their ID. Story Spotlight cards that do not have a text box refers to isStorylight = 1 and isTextless = 1; Percentage refer to DIVIDE(SUM(count(id) where isStorylight = 1), SUM(count(id))) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "403": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Calculate the percentage of cards in Spanish. List them by name. Spanish refer to language; Percentage refer to DIVIDE(SUM(ID where language = 'Spanish'), COUNT(id))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "404": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Indicates the name of all the languages into which the set whose number of cards is 309 is translated. set refer to setCode; number of cards refers to baseSetSize; baseSetsize = 309\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "405": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many Brazilian Portuguese translated sets are inside the Commander block? Commander block refer to block = 'Commander'; sets refer to setCode; Portuguese refer to language = 'Portuguese (Brasil)'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "406": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Lists by ID all Creature-type cards with legal status. legal status refer to status = 'legal'; Goblin-type cards refer to types = 'Creature';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "407": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Lists all types of cards in German. German refer to language; all types refer to the union of subtypes and supertypes where subtypes is not null AND supertypes is not null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "408": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many null power cards contain info about the triggered ability null power cards refers to power is NULL; unknown power cards refers to power is null or power = '*'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "409": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces. do not have multiple faces refers to side IS NULL\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "410": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID. available in paper refers to availability = 'paper'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "411": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "412": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson? in French refers to language = 'French'; black border color refers to borderColor = 'black'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "413": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards with print rarity have ruling text printed on 10/01/2009? with print rarity refers to rarity = 'rare'; on 10/01/2009 refers to date = '2009-01-10'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "414": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What language is the set of 180 cards that belongs to the Ravnica block translated into? set of 180 cards refers to baseSetSize = 180\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "415": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What percentage of cards with format commander and legal status do not have a content warning? do not have a content warning refers to hasContentWarning = 0; \npercentage refers to DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100 where \nformat = 'commander' AND Status = 'legal';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "416": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What percentage of cards without power are in French? in French refers to language = 'French'; cards without power refers to power IS NULL OR power = '*'; \npercentage = DIVIDE(COUNT(language = 'French' and power is NULL or power = '*'), COUNT( power is NULL or power = '*'))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "417": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What percentage of Japanese translated sets are expansion sets? Japanese translated refers to language = 'Japanese'; expansion sets refers to type = 'expansion'; percentage = DIVIDE(COUNT(language = 'Japanese'),COUNT(language))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "418": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What kind of printing is on the card that Daren Bader created? kind of printing refers to availability; Daren Bader created refers to artist = 'Daren Bader'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "419": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many color cards with no borders have been ranked higher than 12000 on EDHRec? color cards with no borders refers to borderColor = 'borderless'; ranked higher than 12000 on EDHRec refers to edhrecRank > 12000\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "420": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards are oversized, reprinted, and printed for promotions? are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "421": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list top three unknown power cards that have promotional types for arena league in alphabetical order. unknown power cards refers to power is null or power = '*'; promotional types for arena league refers to promoTypes = 'arenaleague'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "422": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the language of the card with the multiverse number 149934? multiverse number 149934 refers to multiverseid = 149934;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "423": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please provide the ids of top three powerful pairs of Kingdom Foil and Kingdom Cards sorted by Kingdom Foil id in alphabetical order. poweful refers to cardKingdomFoilId is not null AND cardKingdomId is not null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "424": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What proportion of cards do not have a text box with a normal layout? do not have a text box refers to isTextless = 1; proportion refers to DIVIDE(COUNT(Textless = 1 and layout = 'normal'),COUNT(Textless))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "425": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard? don't have multiple faces on a single card side is null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "426": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order. don't appear in Magic: The Gathering Online refers to mtgoCode is NULL or mtgoCode = ''\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "427": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What languages are available in the set known as Archenemy on the magic card market and having the code ARC? known as Archenemy refers to mcmName = 'Archenemy'; having the code ARC refers to setCode = 'ARC'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "428": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the name of set number 5 and its translation? set number 5 refers to id = 5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "429": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the language and expansion type of set number 206? set number 206 refers to id = 206\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "430": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list top two sets of cards with their IDs that have Italian-language cards and are located in the Shadowmoor block in alphabetical order.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "431": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response. available outside of the United States refers to isForeignOnly = 1; has foil cards refers to isFoilOnly = 1; with Japanese writing on them refers to language = 'Japanese'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "432": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which Russian set of cards contains the most cards overall? Russian refers to language = 'Russian'; contains the most cards overall refers to MAX(baseSetSize)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "433": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games? are only available for online games refers to isOnlineOnly = 1; percentage = DIVIDE(COUNT(isOnlineOnly = 1),COUNT(isOnlineOnly))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "434": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many sets are available just in Japanese and not in Magic: The Gathering Online? Japanese refers to language = 'Japanese'; not in Magic: The Gathering Online refers to mtgoCode is null or mtgoCode = ''\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "435": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many card border with black color ? List out the card id. border with black color refers to borderColor = 'black'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "436": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards have frame effect as extendedart? List out the id of those cards. \nframe effect as extendedart refers to frameEffects = 'extendedart'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "437": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among black card borders, which card has full artwork? white card borders refers to borderColor = 'white'; has full artwork refers to isFullArt = 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "438": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Point out the language of set id \"174\"?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "439": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List out the set name of the set code \"ALL\".\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "440": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which foreign language used by \"A Pedra Fellwar\"? \"A Pedra Fellwar\" refers to name = 'A Pedra Fellwar'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "441": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: State the set code of the set with release date of 07/13/2007?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "442": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Mention the base set size and set code of the set that was in block named \"Masques\" and \"Mirage\".\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "443": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Give the code of sets have expansion type of 'expansion'? code of sets refers to setCode\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "444": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Name the foreign name of the card that has boros watermark? List out the type of this card.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "445": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "446": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is percentage of the cards with a converted Mana Cost of 10 in set of Abyssal Horror? set of Abyssal Horror refers to name = 'Abyssal Horror'; percentage refers to DIVIDE(COUNT(convertedManaCost = 16),COUNT(convertedManaCost))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "447": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Give the code of sets have expansion commander type? code of sets refers to setCode\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "448": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Name the foreign name of the card that has abzan watermark? List out the type of this card.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "449": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the language of the card that has azorius watermark? List out the type of this card.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "450": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful? designed by Aaron Miller refers to artist = 'Aaron Miller'; are icredibily powerful refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "451": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards available in paper have a positive starting maximum hand size? available in paper refers to availability like '%paper%'; have a positive starting maximum hand size refers to hand = '+%'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "452": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list the names of the cards that have a text box. have a text box refers to isTextless = 0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "453": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What's the unconverted mana cost of the card \"Ancestor's Chosen\"? card \"Ancestor's Chosen\" refers to name = 'Ancestor`s Chosen'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "454": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the cards with a white border color, how many of them have unknown power? unknown power refers to power = '*' or power is null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "455": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names. are a promotional painting refers to isPromo = 1; have multiple faces on the same card refers to side is not Null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "456": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What's the list of all types for the card \"Molimo, Maro-Sorcerer\"? card \"Molimo, Maro-Sorcerer\" refers to name = 'Molimo, Maro-Sorcerer'; list of all types refers to subtypes,supertypes\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "457": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list the websites where I can purchase the cards that have the promotional type of \"bundle\". promotional type of \"bundle\" refers to promoTypes = 'bundle'; websites refers to purchaseUrls\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "458": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many artists have designed a card with a black border color and is available in both \"arena\" and \"mtgo\" printing type? available in both \"arena\" and \"mtgo\" refers to availability like '%arena,mtgo%'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "459": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"? \"Serra Angel\" refers to name = 'Serra Angel'; \"Shrine Keeper\" refers to name = 'Shrine Keeper'; \ncard costs more converted mana when the value of convertedManaCost is greater\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "460": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"? promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "461": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style. name of cards refers to name; 2003 card frame style refers to frameVersion = '2003'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "462": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in? Italian is a language which refers to language = 'Italian'; with \"Ancestor's Chosen\" in the card set refers to name = 'Ancestor's Chosen'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "463": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many translations are there for the set of cards with \"Angel of Mercy\" in it? set of cards with \"Angel of Mercy\" in it refers to name = 'Angel of Mercy'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "464": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list the names of the cards in the set \"Hauptset Zehnte Edition\". card set \"Hauptset Zehnte Edition\" refers to translation = 'Hauptset Zehnte Edition'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "465": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it? set of cards with \"Ancestor's Chosen\" in it refers to name = 'Ancestor's Chosen'; Korean version refers to language = 'Korean'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "466": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the cards in the set \"Hauptset Zehnte Edition\", how many of them are designed by Adam Rex? card set \"Hauptset Zehnte Edition\" refers to translation = 'Hauptset Zehnte Edition'; designed by Adam refers to artist = 'Adam Rex'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "467": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards are there in the base set of \"Hauptset Zehnte Edition\"? \"Hauptset Zehnte Edition\" refers to translation = 'Hauptset Zehnte Edition'; number of cards refers to baseSetSize\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "468": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"? Eighth Edition is the name of card set which refers to name = 'Eighth Edition'; Simplified Chinese is the language; translation of the name refers to translation\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "469": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online? card set \"Angel of Mercy\" refers to name = 'Angel of Mercy'; appear on Magic: The Gathering Online refers to mtgoCode is NOT NULL and vice versa\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "470": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: When was the set of cards with \"Ancestor's Chosen\" released? card set \"Ancestor's Chosen\" refers to name = 'Ancestor''s Chosen'; when released refers to releaseDate\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "471": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the expansion type of the set \"Hauptset Zehnte Edition\"? card set \"Hauptset Zehnte Edition\" refers to translation = ' Hauptset Zehnte Edition'; expansion type refers to type\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "472": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the sets in the block \"Ice Age\", how many of them have an Italian translation? sets in the block \"Ice Age\" refers to block = 'Ice Age'; Italian translation refers to language = 'Italian'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "473": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Is the set of cards with Adarkar Valkyrie only available outside the United States? card set Adarkar Valkyrie refers to name = 'Adarkar Valkyrie'; isForeignOnly = 1 means only available outside the United States;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "474": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the sets of cards that have an Italian translation, how many of them have a base set number of under 10? Italian translation refers to language = 'Italian'; have a translation means translation is not null; base set number of under 10 refers to baseSetSize < 10\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "475": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards in the set Coldsnap have a black border color? card set Coldsnap refers to name = 'Coldsnap'; black border color refers to borderColor = 'black'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "476": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list the name of the cards in the set Coldsnap with the highest converted mana cost. card set Coldsnap refers to name = 'Coldsnap'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "477": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy? card set Coldsnap refers to name = 'Coldsnap'; Jeremy Jarvis, Aaron Miller or Chippy are the name of artists which refers to artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy');\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "478": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is card number 4 in the set Coldsnap? card set Coldsnap refers to name = 'Coldsnap'; card number 4 refers to number = 4\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "479": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power? card set Coldsnap refers to name = 'Coldsnap'; converted mana cost higher than 5 refers to convertedManaCost > 5; unknown power refers to power = '*' or T1.power is null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "480": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the Italian flavor text of the card \"Ancestor's Chosen\"? Italian refers to language = 'Italian'; flavor text refers to flavorText; \"Ancestor''s Chosen\" refers to name = 'Ancestor''s Chosen'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "481": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list all the foreign languages in which the card \"Ancestor's Chosen\" has a flavor text. \"Ancestor''s Chosen\" refers to name = 'Ancestor''s Chosen'; has a flavor text refers to flavorText is not null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "482": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What's the German type of the card \"Ancestor's Chosen\"? German refers to language = 'German'; \"Ancestor's Chosen\" refers to name = 'Ancestor''s Chosen'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "483": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list the Italian text ruling of all the cards in the set Coldsnap. card set Coldsnap refers to name = 'Coldsnap'; Italian refers to language = 'Italian'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "484": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Please list the Italian names of the cards in the set Coldsnap with the highest converted mana cost. card set Coldsnap refers to name = 'Coldsnap'; Italian refers to language = 'Italian'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "485": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: When was the ruling for the card 'Reminisce' created? Reminisce refers to name = 'Reminisce'; when created is the date\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "486": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap? converted mana cost of 7 refers to convertedManaCost = 7; card set Coldsnap refers to name = 'Coldsnap'; percentage = DIVIDE(SUM(convertedManaCost = 7), SUM(convertedManaCost))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "487": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the percentage of incredibly powerful cards in the set Coldsnap? card set Coldsnap refers to name = 'Coldsnap'; foil is incredibly powerful refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null; the percentage of incredibly powerful cards in the set refers to DIVIDE(SUM(incredibly powerful), SUM(name = 'Coldsnap'))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "488": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What's the code for the set which was released on 2017/7/14? released on 2017/7/14 refers to releaseDate = '2017-07-14'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "489": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List the keyrune code for the set whose code is 'PKHC'. keyrune code refers to keyruneCode\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "490": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: For the set which had 'SS2' as the code, what is its magic card market id? magic card market id refers to mcmId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "491": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What's the magic card market name for the set which was released on 2017/6/9? magic card market name refers to mcmName\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "492": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: For the set \"From the Vault: Lore\", what is its expansion type? set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "493": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: For the set \"Commander 2014 Oversized\" , give its parent code. the set \"Commander 2014 Oversized\" refers to name = 'Commander 2014 Oversized';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "494": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values. all cards illustrated by Jim Pavelec refers to artist = 'Jim Pavelec'; the text of the ruling refers to text; cards have missing or degraded properties and values if hasContentWarning = 1 else it doesn't have;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "495": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What was the release date for the set which card \"Evacuation\" in it? \"Evacuation\" refers to name = 'Evacuation'; release date refers to releaseDate\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "496": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the number of cards are there in the set of \"Rinascita di Alara\"? number of cards refers to baseSetSize; set of \"Rinascita di Alara\" refers to translation = 'Rinascita di Alara'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "497": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List the expansion type of the set \"Huiti\u00e8me \u00e9dition\". the set \"Huiti\u00e8me \u00e9dition\" refers to translation = 'Huiti\u00e8me \u00e9dition'; expansion type refers to type\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "498": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What's the French name of the set of cards with \"Tendo Ice Bridge\" is in? French refers to language = 'French'; \"Tendo Ice Bridge\" is a translated name of a card; translated name refers to translation\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "499": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many translations of the name of the set \"Salvat 2011\"? translations of the name refers to translation; translation is not NULL; set \"Salvat 2011\" refers to name = 'Salvat 2011'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "500": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Tell the Japanese name of the set which card \"Fellwar Stone\" is in it. Japanese name refers to language = 'Japanese'; card \"Fellwar Stone\" refers to name = 'Fellwar Stone'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "501": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost. set 'Journey into Nyx Hero's Path' refers to name = 'Journey into Nyx Hero''s Path'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "502": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the release date for the set \"Ola de fr\u00edo\"? release date is the date of card set being released; set \"Ola de fr\u00edo\" refers to translation = 'Ola de fr\u00edo'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "503": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What was the expansion type for the set which card \"Samite Pilgrim\" in it? expansion type refers to type; card \"Samite Pilgrim\" refers to name = 'Samite Pilgrim'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "504": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'. the set 'World Championship Decks 2004' refers to name = 'World Championship Decks 2004'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "505": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Show the Simplified Chinese translation of the name of the set \"Mirrodin\"? Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "506": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil? Japanese translation refers to language = 'Japanese'; in non-foil refers to isNonFoilOnly = 1; percentage of Japanese non foil in Japanese cards refers to DIVIDE(SUM(isNonFoilOnly = 1), SUM(language = 'Japanese'))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "507": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online? Brazil Portuguese translation refers to language = 'Portuguese (Brazil)'; only available online refers to isOnlineOnly = 1; percentage of online only Brazil Portuguese in all Brazil Portuguese cards refers to DIVIDE(SUM(isOnlineOnly = 1), SUM(language = 'Portuguese (Brazil)))*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "508": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot? created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "509": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the unique id of the set that has the highest number of cards? the highest number of cards refers to MAX(baseSetSize); unique id refers to id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "510": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana? doesn't have multiple faces refers to side IS NULL; illustrator refers to artist\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "511": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the most common visual frame effects among the incredibly powerful foils? when both cardKingdomFoilId and cardKingdomId are not null, this foil is incredibly powerful; most common visual frame effects refers to MAX(frameEffects)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "512": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards with unknown power that can't be found in foil is in duel deck A? unknown power refers to power IS NULL or power = '*'; can't be found in foil refers to hasFoil = 0; duel deck A refers to duelDeck = 'a'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "513": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set. expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "514": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: In duels, what are the top 10 cards with the highest uncoverted mana cost? duels refer to format = 'duel'; the highest uncoverted mana cost refers to MAX(manaCost)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "515": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: When was the oldest mythic card released and what are its legal play formats? the oldest card refers to MIN(originalReleaseDate); mythic card refers to rarity = 'mythic'; legal play refers to status = 'legal'; play format refers to format\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "516": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many cards did Volkan Ba\u00c7\u00b5a illustrated whose foreign language is in French? Volkan Ba\u00c7\u00b5a refers to artist = 'Volkan Baga'; foreign language is in French refers to language = 'French'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "517": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: How many rare enchantment Abundance cards are there whose play format status are all legal? rare refers to rarity = 'rare'; enchantment card refers to types = 'Enchantment'; Abundance cards refers to name = 'Abundance'; format status are all legal refers to status = 'Legal'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "518": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which of the play formats has the highest number of banned status? Indicate the play format and the name of the card. play format refers to format uuid; banned status refers to status = 'banned'; the highest number of banned status refers to MAX(status = 'banned')\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "519": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the language of the \"Battlebond\" set? \"Battlebond\" set refers to name = 'Battlebond'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "520": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Who is the illustrator that illustrated the least amount of cards? List the format of play of the cards that he/she illustrated. format of the cards refers to format; illustrator refers to artist; the least amount of cards refers to MIN(artist)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "521": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast? version of frame style is 1997 refers to frameVersion = '1997'; illustrated by D. Alexander Gregory refers to artist = 'D. Alexander Gregory'; sensitive content refers to hasContentWarning = 1; legacy play format refers to format = 'legacy'; status of the card refers to status\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "522": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Which cards are ranked 1st on EDHRec? List all of the cards name and its banned play format. ranked 1st on EDHRec refers to edhrecRank = 1; banned refers to status = 'banned'; play format refers to format; cards name refers to name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "523": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card. AVG(id); releaseDate BETWEEN 1/1/2012 AND 12/31/2015; the common language refers to MAX(COUNT(language))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "524": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List the artists who illustrated cards with black borders which are available only in arena. black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "525": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Find the uuid of cards in which the old school format is restricted or banned. old school format refers to format = 'oldschool'; restricted or banned refers to status = 'banned' or 'restricted'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "526": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Among the card designed by Matthew D. Wilson, how many are available only in the paper? card designed by Matthew D. Wilson refers to artist = 'Matthew D. Wilson'; available only in the paper refers to availability = 'paper'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "527": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates. rulings refers to text; card named and designed by Kev Walker refers to artist = 'Kev Walker'; descending order of dates refers to MAX(date);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "528": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal. the set Hour of Devastation refers to set.name = 'Hour of Devastation'; names of all the cards in the set refers to cards.name; legal cards refers to status = 'legal'; the formats refers to format\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "529": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: Find and list the names of sets which doesn't have Japanese translation but have Korean translation. names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "530": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\ncolumn_9 text,\ncolumn_10 real,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 real,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 text,\ncolumn_18 text,\ncolumn_19 text,\ncolumn_20 integer,\ncolumn_21 integer,\ncolumn_22 integer,\ncolumn_23 integer,\ncolumn_24 integer,\ncolumn_25 integer,\ncolumn_26 integer,\ncolumn_27 integer,\ncolumn_28 integer,\ncolumn_29 integer,\ncolumn_30 integer,\ncolumn_31 integer,\ncolumn_32 integer,\ncolumn_33 integer,\ncolumn_34 integer,\ncolumn_35 text,\ncolumn_36 text,\ncolumn_37 text,\ncolumn_38 text,\ncolumn_39 text,\ncolumn_40 text,\ncolumn_41 text,\ncolumn_42 text,\ncolumn_43 text,\ncolumn_44 text,\ncolumn_45 text,\ncolumn_46 text,\ncolumn_47 text,\ncolumn_48 text,\ncolumn_49 text,\ncolumn_50 text,\ncolumn_51 text,\ncolumn_52 text,\ncolumn_53 text,\ncolumn_54 text,\ncolumn_55 text,\ncolumn_56 text,\ncolumn_57 text,\ncolumn_58 text,\ncolumn_59 text,\ncolumn_60 text,\ncolumn_61 text,\ncolumn_62 text,\ncolumn_63 text,\ncolumn_64 text,\ncolumn_65 text,\ncolumn_66 text,\ncolumn_67 text,\ncolumn_68 text,\ncolumn_69 text,\ncolumn_70 text,\ncolumn_71 text,\ncolumn_72 text,\ncolumn_73 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE foreign_data (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES cards(column_71),\n);\nCREATE TABLE legalities (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\nCREATE TABLE sets (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\ncolumn_14 text,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 date,\ncolumn_18 integer,\ncolumn_19 integer,\ncolumn_20 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE set_translations (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES sets(column_4),\n);\nCREATE TABLE rulings (\ncolumn_0 integer,\ncolumn_1 date,\ncolumn_2 text,\ncolumn_3 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES cards(column_71),\n);\n---------------------\nQUESTION: List all the frame styles and cards Allen Williams worked on and find any banned cards if there are any. frame styles refers to frameVersion; cards Allen Williams worked on refers to artist = 'Allen Williams'; banned cards refers to status = 'banned'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "531": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which user has a higher reputation, Harlan or Jarrod Dixon? \"Harlan\" and \"Jarrod Dixon\" are both DisplayName; highest reputation refers to Max(Reputation)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "532": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Please list the display names of all the users whose accounts were created in the year 2014. account created in the year 2014 refers to year(CreationDate) = 2014\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "533": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users last accessed the website after 2014/9/1? last accessed after 2014/9/1 refers to LastAccessDate > '2014-09-01 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "534": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the display name of the user who has the most number of views? user who has the most number of view refers to Max(Views)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "535": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes? more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "536": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users with more than 10 views created their account after the year 2013? more than 10 views refers to Views > 10; created after the year 2013 refers to year (CreationDate) > 2013\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "537": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many posts does the user csgillespie own? \"csgillespie\" is the DisplayName of user\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "538": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Please list the titles of the posts owned by the user csgillespie? \"csgillespie\" is the DisplayName of user\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "539": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Who is the owner of the post \"Eliciting priors from experts\"? \"Eliciting priors from experts\" is the Title of post; owner refers to DisplayName\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "540": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the title of the post that is owned by csgillespie and has the highest popularity? \"csgillespie\" is the DisplayName of user; highest popularity refers to Max(ViewCount)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "541": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the display name of the user who is the owner of the most valuable post? most valuable post refers to Max(FavoriteCount)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "542": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the total number of comments of all the posts owned by csgillespie? \"csgillespie\" is the DisplayName of user; total number of comments refers to Sum(CommentCount)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "543": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: For the post that got the most number of answers owned by csgillespie, how many answers did it get? \"csgillespie\" is the DisplayName of user; the most number of answer refers to Max(AnswerCount)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "544": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"? \"Examples for teaching: Correlation does not mean causation\" is the Title of post; user who last edited refers to LastEditorUserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "545": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the posts owned by csgillespie, how many of them are root posts? \"csgillespie\" is the DisplayName of user; root post refers to ParentId IS Null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "546": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Please list the display names of all the users who owns a post that is well-finished. the post that is well-finished refers to ClosedDate IS NOT Null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "547": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the posts owned by an elder user, how many of them have a score of over 19? elder users refers to Age > 65; Score of over 19 refers to Score > = 20\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "548": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the location of the owner of the post \"Eliciting priors from experts\"? Owner refers to OwnerUserId; 'Eliciting priors from experts' is the Title of post\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "549": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: From which post is the tag \"bayesian\" excerpted from? Please give the body of the post. \"bayesian\" is the TagName; excerpt from refers to ExcerptPostId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "550": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: From which post is the most popular tag excerpted from? Please give the body of the post. most popular tag refers to Max(Count); excerpt from refer to ExcerptPostId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "551": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many badges has the user csgillespie obtained? \"csgillespie\" is the DisplayName of user\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "552": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Please list the names of the badges obtained by csgillespie. \"csgillespie\" is the DisplayName of user\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "553": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the badges obtained by csgillespie, how many of them were obtained in the year 2011? \"csgillespie\" is the DisplayName of user; obtained in 2011 refers to YEAR (Date) = 2011\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "554": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the display name of the user who has obtained the most number of badges? who obtained the most number of badges refers to UserID with Max(Count(Id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "555": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the average score of the posts owned by the user csgillespie? \"csgillespie\" is the DisplayName of user; average score refers to AVG(Score)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "556": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the average number of badges obtained by a user with over 200 views? user with over 200 views refers to Views > 200; average number of badges = Divide (Count(Id), Count(DisplayName))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "557": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the posts with a score of over 20, what is the percentage of them being owned by an elder user? score of over 20 refers to Score > 20; elder user refers to Age > 65; percentage = Divide (Count(Id where Age>65), Count(Id)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "558": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many votes did the user No.58 take on 2010/7/19? user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "559": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Indicate the creation date of the maximum number of votes. the creation date of the maximum number of votes refers to CreationDate where Max(Count(Id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "560": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Give the number of \"Revival\" badges. number refers to Id; 'Revival' is the Name of badge\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "561": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the title for the post which got the highest score comment? highest score comment refers to Max(comments.Score)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "562": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: For the post which got 1910 view counts, how many comments does it get?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "563": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get? user no. 3025 refers to UserId = '3025'; comment at 20:29:39 on 2014/4/23 refers to CreationDate = '2014/4/23 20:29:39.0'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "564": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Give the only one comment text of the post with parent id 107829. one comment refers to CommentCount = '1'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "565": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: User No.23853 gave a comment to a post at 9:08:18 on 2013/7/12, was that post well-finished? user no. 23853 refers to UserId = '23853'; at 9:08:18 on 2013/7/12 refers to CreationDate = '2013-07-12 09:08:18.0'; not well-finished refers to ClosedDate IS NULL and vice versa\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "566": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: For the owner user of post No. 65041, what is his/her reputation points? post no. 65041 refers to Id = '65041'; reputation point refers to Reputation\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "567": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own? \"Tiago Pasqualini\" is the DisplayName;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "568": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Provide the display name of the user who made the vote No.6347. vote no. 381800 refers to Id = '6347'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "569": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Give the number of votes for the post about data visualization. About data visualization is the Title that contains 'data visualization';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "570": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: For the user whose display name is \"DatEpicCoderGuyWhoPrograms\", what is his/her badge's name? \"DatEpicCoderGuyWhoPrograms\" is the DisplayName;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "571": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: For the user No.24, how many times is the number of his/her posts compared to his/her votes? user no. 24 refers to UserId = OwnerUserId = '24'; times of his/her post than votes = Divide (Count(post.Id), Count(votes.Id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "572": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get? \"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "573": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Write the contents of comments with a score of 17. score of 17 refers to Score = 17; contents of comments refers to Text\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "574": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which user has the website URL listed at 'http://stackoverflow.com' \"http://stackoverflow.com\" is the WebsiteUrl; user refers to DisplayName\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "575": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the badge name that user 'SilentGhost' obtained? \"SilentGhost\" is the DisplayName of user;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "576": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Name the user that commented 'thank you user93!' \"thank you user93\" is the Text of comment; user refers to DisplayName\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "577": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Write all comments made by user 'A Lion.' \"A Lion\" is the DisplayName of user; comment refers to Text\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "578": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user? \"Understanding what Dassault iSight is doing?\" is the Title of post; user refers to DisplayName;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "579": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Write all comments made on the post titled 'How does gentle boosting differ from AdaBoost?' \"How does gentle boosting differ from AdaBoost?\" is the Title of post; comments refers to Text\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "580": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Name 10 users with the badge name 'Necromancer.' \"Necromancer\" is the Name of badge; users refers to DisplayName\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "581": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?' 'Open source tools for visualizing multi-dimensional data' is the Title of Post\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "582": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List the title of posts which were edited by Vebjorn Ljosa. \"Vebjorn Ljosa\" is the DisplayName; last edited refers to LastEditorUserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "583": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the total score of the posts edited by Yevgeny and include the user's website URL. \"Yevgeny\" is the DisplayName; edited refers to LastEditorUserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "584": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Write all the comments left by users who edited the post titled 'Why square the difference instead of taking the absolute value in standard deviation?' \"Why square the difference instead of taking the absolute value in standard deviation?\" is the Title of post;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "585": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How much is the total bounty amount of the post titled about 'data' About data means the title contains 'data'; total bounty Amount refers to Sum(BountyAmount)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "586": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which user added a bounty amount of 50 to the post title mentioning variance? \"bounty amount of 50 refers to BountyAmount = 50; user refers to DisplayName\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "587": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Calculate the average view count of posts tagged as 'humor' and write the title and the comments of the posts alongside their scores if applicable. \"humor\" is the Tags; comment of the post refers to Text; average view count = AVG(ViewCount)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "588": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Give the total number of comments posted by user ID 13.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "589": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which user ID has the highest reputation? highest reputation refers to Max(Reputation)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "590": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which user ID has the lowest view? lowest views refers to Min(Views)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "591": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users are awarded with supporter badge during year 2011? \"Supporter\" is the Name of badge; in year 2011 refers to year(Date) = 2011\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "592": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users are awarded with more than 5 badges? more than 5 badges refers to Count (Name) > 5; user refers to UserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "593": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users from New York have a teacher and supporter badge? \"Supporter\" and \"Teachers\" are both Name of badge; 'New York' is the Location; user refers to UserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "594": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which user created post ID 1 and what is the reputation of this user?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "595": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which user have only one post history per post and having at least 1000 views? having at least 1000 view refers to Views > = 1000; user refers to UserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "596": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which users have posted the most comments. List out the user's badge? user with the most comments refers to UserId where Max(Count(Id)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "597": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users from India have the teacher badges? \"India\" is the Location; \"Teacher\" is the Name of badge\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "598": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the percentage difference of student badges given during 2010 and 2011? \"Students\" is the Name of badge;\u00a0 during 2010 refers to Year(Date) = 2010; 2011 refers to Year(Date) = 2011; percentage difference = Subtract (Divide(Count(Name where Year(Date) = 2010), Count (Name)) *100, Divide(Count(Name where Year(Date) = 2011), Count(Name)) * 100)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "599": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "600": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List out all post that are related to post ID 61217 and what is the popularity of this post? post related refers to RelatedPostId; popularity refers to ViewCount\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "601": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the score and the link type ID for post ID 395?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "602": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List out all post ID with score more than 60 and list out all the user ID that created these post. score more than 60 refers to Score > 60\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "603": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the sum of favourite count gained by user ID 686 in 2011? in 2011 refers to year (CreatinDate) = 2011\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "604": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the average of the up votes and the average user age for users creating more than 10 posts? creating more than 10 post refers to Count (UserId) > 10; up votes average = Divide (Sum(UpVotes), Count (UserId)); average age = Divide (Sum(Age), Count(UserId))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "605": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users obtained the \"Announcer\" badge? \"Announcer\" is the Name of badge; user refers to UserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "606": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List out the name of badges that users obtained on 7/19/2010 7:39:08 PM. on 7/19/2010 7:39:08 PM refers to Date = '2010-07-19 19:39:08'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "607": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many positive comments are there on the list? Positive comment refers to score > 60\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "608": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM. detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "609": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many posts have a score of 10 on the list? score of 10 refers to Score = 10; post refers to Id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "610": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What are the names of badges that users who have the highest reputation obtained? highest reputation refers to Max(Reputation); user refers to UserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "611": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Mention the reputation of users who had obtained the badge on 7/19/2010 7:39:08 PM. on 7/19/2010 7:39:08 PM refers to Date = '2010-07-19 19:39:08.0'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "612": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the name of badge that the user whose display name is \"Pierre\" obtained?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "613": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List out the dates that users who are located in Rochester, NY obtained their badges? \"Rochester, NY\" is the Location of user; user refers to UserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "614": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the users who obtained the \"Teacher\" badge, calculate their percentage of users \"Teacher\" is the Name of badge;  percentage = Divide (Count(UserId where it's \"Teacher\"), Count(UserId)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "615": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers. \"Organizer\" is the Name of badge; teenager refers to Age BETWEEN 13 AND 18; percentage = Divide (Count(UserId where Age BETWEEN 13 AND 18), Count(UserId)) *100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "616": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM created on 7/19/2010 7:19:56 PM refers to CreationDate = '2010-07-19 19:19:56.0'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "617": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM? detailed content of the comment refers to Text; created on 7/19/2010 7:37:33 PM CreationDate = 2010-07-19 19:37:33.0'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "618": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List out the age of users who located in Vienna, Austria obtained the badge? \"Vienna, Austria\" is the Location\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "619": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many adults who obtained the badge Supporter? Supporter is the Name of badge; adult refers to Age BETWEEN 19 AND 65\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "620": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: State the number of views of users who obtained the badge on 7/19/2010 7:39:08 PM. on 7/19/2010 7:39:08 PM refers to Date = '2010-07-19 19:39:08.0'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "621": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What are the name of badges that users who have the lowest reputation obtained? lowest reputation refers to Min(Reputation); user refers to UserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "622": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: State the name of badge that the user whose display name is \"Sharpie\" obtained. \"Sharpie\" is the DisplayName of user; user refers to UserId\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "623": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many elders obtained the \"Supporter\" badge? \"Supporter\" is the Name of badge;\u00a0 elders refers to Age > 65\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "624": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the name of user with the ID of 30? name of user refers to DisplayName;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "625": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users were from New York? New York refers to Location;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "626": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many votes were made in 2010? YEAR(CreationDate) = 2010;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "627": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users were adult? adult refers to user where Age BETWEEN 19 and 65;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "628": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which users have the highest number of views? users have the highest number of views refer to DisplayName where MAX(Views);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "629": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Calculate the ratio of votes in 2010 and 2011. DIVIDE(COUNT(Id where YEAR(CreationDate) = 2010), COUNT(Id where YEAR(CreationDate) = 2011)) FROM votes;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "630": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the name of tags used by John Stauffer's? DisplayName = 'John Stauffer';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "631": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many posts were created by Daniel Vassallo? DisplayName = 'Daniel Vassallo';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "632": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many votes were made by Harlan? DisplayName = 'Harlan';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "633": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which post by slashnick has the most answers count? State the post ID. most answers count refers to MAX(AnswerCount); DisplayName = 'slashnick';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "634": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity? Higher view count means the post has higher popularity; MAX(SUM(ViewCount)) where DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "635": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many posts by Matt Parker have more than 4 votes? more than 4 votes refer to PostId > 4; DisplayName = 'Matt Parker';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "636": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many negative comments did Neil McGuigan get in his posts? Negative comment refers to score < 60; DisplayName = 'Neil McGuigan';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "637": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: State all the tags used by Mark Meckes in his posts that doesn't have comments. DisplayName = 'Mark Meckes';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "638": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List all the name of users that obtained the Organizer Badges. name of users refers to DisplayName; the Organizer Badges refer to badges where Name = 'Organizer';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "639": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Based on posts posted by Community, calculate the percentage of posts that use the R language. DIVIDE(COUNT(PostId WHERE TagName = R language)), (COUNT(PostId WHERE DisplayName = 'Community')) as percentage; R language refers to tagname = 'r'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "640": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Calculate the difference in view count from post posted by mornington and view count from posts posted by Amos. SUBTRACT(SUM(ViewCount where DisplayName = 'Mornington'), SUM(ViewCount where DisplayName = 'Amos'));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "641": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users received commentator badges in 2014? commentator is the name of the badge; year(Date) = 2014;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "642": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many posts were created on 21st July, 2010? created on 21st July, 2010 refers to CreationDate BETWEEN '2010-07-21 00:00:00' and '2012-07-21 23:59:59';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "643": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What are the display names and ages of user who got the highest in views? the highest in views refers to MAX(Views);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "644": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\". Title = 'Detecting a given face in a database of facial images';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "645": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many negative comments were given by user ID 13? negative comments refer to Score < 60;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "646": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Describe the post title which got positive comments and display names of the users who posted those comments. positive comments refer to Score > 60;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "647": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Provide the badge names received in 2011 for the user whose location is in the North Pole. received in 2011 refers to year(Date) = 2011;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "648": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Provide the users' display names and available website URLs of the post with favorite count of more than 150. favorite count of more than 150 refers to FavoriteCount > 150;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "649": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Describe the post history counts and last edit date of the post title \"What is the best introductory Bayesian statistics textbook?\"\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "650": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Describe the last accessed date and location of the users who received the outliers badge. Outliers is the name of the badge;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "651": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Provide the related post title of \"How to tell if something happened in a data set which monitors a value over time\".\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "652": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List the post IDs and badge names of the user Samuel in 2013. Samuel refers to UserDisplayName; YEAR(CreationDate) = 2013 relates to PostId; YEAR(Date) = 2013 relates to the badge;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "653": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the owner's display name of the most popular post? Higher view count means the post has higher popularity; the most popular post refers to MAX(ViewCount);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "654": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Mention the display name and location of the user who owned the excerpt post with hypothesis-testing tag. user who owned the excerpt post with hypothesis-testing tag refers to OwnerUserId WHERE TagName = 'hypothesis-testing';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "655": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Write down the related posts titles and link type IDs of the post \"What are principal component scores?\". Title = 'What are principal component scores?';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "656": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Describe the display name of the parent ID for child post with the highest score. If the parent id is not null, the post is the child post; the highest score refers to MAX(Score);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "657": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount. vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "658": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What are the titles of the top 5 posts with the highest popularity? Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "659": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many tags have post count between 5,000 to 7,000? post count between 5,000 to 7,000 refers to Count BETWEEN 5000 and 7000;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "660": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the owner user id of the most valuable post? the most valuable post refers to MAX(FavoriteCount);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "661": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How old is the most influential user? How old describes age; the most influential refers to user where MAX(Reputation);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "662": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many posts with votes that were created in 2011 have a bounty of 50? created in 2012 refers YEAR(CreationDate) = 2011; BountyAmount = 50;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "663": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the id of the youngest user? the youngest user refers to MIN(Age);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "664": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the score of the post with the most popular tag? Higher view count means the post has higher popularity; the most popular tag refers to MAX(Count);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "665": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the average monthly number of links created in 2010 for posts that have no more than 2 answers? DIVIDE(COUNT(Id where YEAR(CreationDate) = 2010 and AnswerCount < = 2), 12)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "666": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the posts that were voted by user 1465, what is the id of the most valuable post? user 1465 refers to UserId = 1465; the most valuable post refers to MAX(FavoriteCount);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "667": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the title of the post with the oldest post link? the oldest post link refers to MIN(CreaionDate);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "668": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the display name of the user who acquired the highest amount of badges? highest amount of badges refers to MAX(COUNT(Name));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "669": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: When did \"chl\" cast its first vote in a post? DisplayName = 'chl'; cast its first vote refers to MIN(CreationDate);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "670": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the date when the youngest user made his or her first post? the youngest user refers to MIN(Age); first post refers to MIN(CreaionDate);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "671": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the display name of the user who acquired the first Autobiographer badge? Autobiographer is the name of the badge; acquired the first refers to MIN(Date);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "672": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more? favorite amount of 4 or more refers to FavoriteCount > = 4; Location = 'United Kingdom';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "673": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the average number of posts voted by the oldest users? average number of posts voted refers to AVG(PostId) FROM votes; the oldest users refer to MAX(Age);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "674": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Who has the highest reputation? Please give the display name. the highest reputation refers to MAX(Reputation);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "675": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users whose reputations are higher than 2000 and the number of views is higher than 1000? reputations are higher than 2000 refer to Reputation > 2000; number of views is higher than 1000 refers to Views > 1000;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "676": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Please list all display names of users who are adults. adults refer to users where Age BETWEEN 19 and 65;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "677": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many posts did Jay Stevens have in 2010? DisplayName = 'Jay Stevens'; in 2010 refers to YEAR(CreationDate) = 2010;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "678": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which post by Harvey Motulsky has the most views? Please give the id and title of this post. DisplayName = 'Harvey Motulsky'; the most views refer to MAX(ViewCount);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "679": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which post has the highest score? Please give its id and title's name. the highest score refers to MAX(Score); owner's name refers to DisplayName;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "680": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the average score of Stephen Turner's posts? DisplayName = 'Stephen Turner'; average score refers to AVG(Score);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "681": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Please list the users' display names whose posts had over 20000 views in 2011. had over 20000 views in 2011 refers to ViewCount > 20000 where YEAR(CreationDate) = 2011;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "682": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Which is the most valuable post in 2010? Please give its id and the owner's display name. the most valuable post in 2015 refers to MAX(FavoriteCount) where year(CreationDate) = 2010;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "683": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the percentage of posts whose owners had a reputation of over 1000 in 2011? DIVIDE(COUNT(Id where CreationDate = 2011 and Reputation > 1000), COUNT(Id) ) * 100 as percentage;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "684": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the percentage of teenage users. DIVIDE(COUNT(Id where Age BETWEEN 13 and 18), COUNT(Id)) as percentage;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "685": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time. views refer to ViewCount; Name the user refers to DisplayName; Text = 'Computer Game Datasets';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "686": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the total number of posts with views above average. views above average refer to ViewCount > AVG(ViewCount);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "687": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many comments were added to the post with the highest score? the highest score refers to MAX(Score);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "688": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the number of posts that have been viewed over 35000 times but have received no comments from other users. have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "689": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the display name and location of the user, who was the last to edit the post with ID 183. last to edit refers to MAX(LastEditDate);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "690": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the latest badge awarded to the user with the display name Emmett. the latest badge refers to Name FROM badges where MAX(Date);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "691": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the number of adult users who have cast over 5000 upvotes. adult users refer to Age BETWEEN 19 and 65; over 5000 upvotes refer to UpVotes > 5000;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "692": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created. SUBTRACT(Date from stats_badges, CreationDate) where DisplayName = 'Zolomon';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "693": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the number of posts and comments left by the user, who has the latest created user account. the latest created user account refers to MAX(CreationDate);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "694": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Provide the text of the latest comment to the post with the title 'Analysing wind data with R' and the display name of the user who left it. the latest comment refers to MAX(CreationDate);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "695": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many users were awarded with 'Citizen Patrol' badge? Citizen Patrol' is the name of the badge;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "696": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Count the number of posts with a tag specified as 'careers'. tag specified as 'careers' refers to TagName = 'careers';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "697": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "698": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "699": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: When did the user known as 'IrishStat' create his or her account? DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "700": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Identify the number of posts that offer a bounty amount over 30. bounty amount over 30 refers to BountyAmount > = 30;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "701": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among all the posts posted by the most influential user, identify the percentage with a score above 50. The user with higher reputation has more influence; DIVIDE(COUNT(stats_posts.Id where Score > = 50 and MAX(Reputation))), COUNT(stats_posts.Id where MAX(Reputation)) as percentage;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "702": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: How many posts have a score less than 20? score less than 20 refers to Score < 20;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "703": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the tags with tag ID below 15, how many of them have 20 count of posts and below? ID below 15 refers to Id < 15; have 20 count of posts and below refers to Count < = 20;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "704": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the excerpt post ID and wiki post ID of the tag named sample? tag named sample refers to TagName = 'sample';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "705": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Give the user's reputation and up vote number of the user that commented \"fine, you win :)\". Text = 'fine, you win :)';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "706": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Give the texts commented on the post about linear regression. Title = 'How can I adapt ANOVA for binary data?';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "707": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the posts with views ranging from 100 to 150, what is the comment with the highest score? views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "708": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List the creation date and age of the user that commented with webiste. commented with webiste refers to the value contains 'http://'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "709": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: In comments with 0 score, how many of the posts have view count lower than 5? view count lower than 5 refers to ViewCount < 5;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "710": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: In posts with 1 comment, how many of the comments have 0 score? in posts with 1 comment refers to CommentCount = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "711": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among products comments with 0 score, what is the total number of users ages 40 years old?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "712": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"? Title = 'Group differences on a five point Likert item';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "713": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: What is the up vote number of the user that commented \"R is also lazy evaluated.\"? commented \"R is also lazy evaluated.\" refers to Text of the comment;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "714": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: List the comments commented by the user with a username of Harvey Motulsky. comments refer to Text; username of Harvey Motulsky refers to DisplayName = 'Harvey Motulsky';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "715": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: In comments with score between 1 to 5, list down the display names of the users with 0 down votes. DownVotes = 0; Score BETWEEN 1 and 5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "716": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE badges (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 text,\ncolumn_3 datetime,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES users(column_0),\n);\nCREATE TABLE comments (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postHistory (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_5) REFERENCES users(column_0),\n);\nCREATE TABLE postLinks (\ncolumn_0 integer,\ncolumn_1 datetime,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_2) REFERENCES posts(column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE posts (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 datetime,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 integer,\ncolumn_8 datetime,\ncolumn_9 text,\ncolumn_10 text,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 datetime,\ncolumn_16 datetime,\ncolumn_17 integer,\ncolumn_18 datetime,\ncolumn_19 text,\ncolumn_20 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_7) REFERENCES users(column_0),\nFOREIGN KEY (column_14) REFERENCES users(column_0),\nFOREIGN KEY (column_17) REFERENCES posts(column_0),\n);\nCREATE TABLE tags (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES posts(column_0),\n);\nCREATE TABLE users (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 datetime,\ncolumn_3 text,\ncolumn_4 datetime,\ncolumn_5 text,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\ncolumn_12 integer,\ncolumn_13 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE votes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 date,\ncolumn_4 integer,\ncolumn_5 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES posts(column_0),\nFOREIGN KEY (column_4) REFERENCES users(column_0),\n);\n---------------------\nQUESTION: Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes? DIVIDE(COUNT(UserId where UpVotes = 0 and Score BETWEEN 5 and 10)), (COUNT(UserId where Score BETWEEN 5 and 10)) as percentage;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcodebase_community", "717": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Please list all the superpowers of 3-D Man. 3-D Man refers to superhero_name = '3-D Man'; superpowers refers to power_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "718": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes have the super power of \"Super Strength\"? super power of \"Super Strength\" refers to power_name = 'Super Strength'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "719": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm? super power of \"Super Strength\" refers to power_name = 'Super Strength'; a height of over 200cm refers to height_cm > 200\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "720": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Please list the full names of all the superheroes with over 15 super powers. 15 super powers refers to COUNT(full_name) > 15\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "721": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes have blue eyes? blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "722": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the colour of Apocalypse's skin? Apocalypse refers to superhero_name = 'Apocalypse'; colour of skin refers to colour where skin_colour_id = colour.id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "723": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"? blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id; super power of \"Agility\" refers to power_name = 'Agility'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "724": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Please list the superhero names of all the superheroes that have blue eyes and blond hair. blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id; blond hair refers to colour = 'Blond' and hair_colour_id = colour.id; super power of \"Agility\" refers to power_name = 'Agility'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "725": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes are published by Marvel Comics? published by Marvel Comics refers to publisher_name = 'Marvel Comics'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "726": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Please give the full name of the tallest hero published by Marvel Comics. the tallest hero refers to MAX(height_cm); published by Marvel Comics refers to publisher_name = 'Marvel Comics'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "727": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Who is the publisher of Sauron? the publisher refers to publisher_name; Sauron refers to superhero_name = 'Sauron'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "728": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among the superheroes from Marvel Comics, how many of them have blue eyes? the superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "729": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the average height of the superheroes from Marvel Comics? superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; average height of the superheroes refers to AVG(height_cm)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "730": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among the superheroes from Marvel Comics, what is the percentage of those who have the super power of \"Super Strength\"? the superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; super power of \"Super Strength\" refers to power_name = 'Super Strength'; Calculation = MULTIPLY(DIVIDE(SUM(power_name = 'Super Strength'), COUNT(id)), 100)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "731": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes did DC Comics publish? superheroes that DC Comics published refers to publisher_name = 'DC Comics'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "732": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Which publisher published the slowest superhero? the slowest superhero refers to attribute_name = 'Speed' where MIN(attribute_value); publisher refers to publisher_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "733": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many gold-eyed superheroes did Marvel Comics publish? gold-eyed refers to colour = 'Gold' where eye_colour_id = colour.id; superheroes that Marvel Comics published refers to publisher_name = 'Marvel Comics'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "734": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the publisher's name of Blue Beetle II? Blue Beetle II refers to superhero_name = 'Blue Beetle II'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "735": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes with blonde hair are there? superheroes with blonde hair refers to colour = 'Blond' where hair_colour_id = colour.id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "736": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Who is the dumbest superhero? the dumbest superhero refers to MIN(attribute_value) where attribute_name = 'Intelligence'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "737": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is Copycat's race? Copycat is the superhero_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "738": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes have durability of less than 50? durability of less than 50 refers to attribute_name = 'Durability' AND attribute_value < 50\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "739": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What are the names of the superheroes with the power of death touch? name of superheroes refers to refers to superhero_name; the power of death touch refers to power_name = 'Death Touch'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "740": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many female superheroes have a strength value of 100? female refers to gender = 'Female'; strength value of 100 refers to attribute_name = 'Strength' AND attribute_value = 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "741": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the name of the superhero that has the most powers? name of the superhero refers to superhero_name; superhero that has the most powers refers to MAX(COUNT(superhero_name))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "742": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many vampire superheroes are there? vampire superheroes refers to race = 'Vampire'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "743": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics. published by Marvel Comics refers to publisher_name = 'Marvel Comics'; superheroes who act in their own self-interest or make decisions based on their own moral code refers to alignment = 'Bad'; calculation = MULTIPLY(DIVIDE(SUM(alignment = 'Bad); count(id)), 100)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "744": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published. DC refers to publisher_name = 'DC Comics'; Marvel Comics refers to publisher_name = 'Marvel Comics'; calculation = SUBTRACT(SUM(publisher_name = 'Marvel Comics'), SUM(publisher_name = 'DC Comics'))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "745": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Give the publisher ID of Star Trek. Star Trek is the publisher_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "746": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Calculate the average attribute value of all superheroes. average attribute value of all superheroes refers to AVG(attribute_value)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "747": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the total number of superheroes without full name? superheroes without full name refers to full_name IS NULL\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "748": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the eye colour of superhero with superhero ID 75? eye colour refers to colour where eye_colour_id = colour.id;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "749": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the superpowers of the superhero called Deathlok. superpowers refers to power_name; Deathlok refers to superhero_name = 'Deathlok'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "750": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the average weight of all female superheroes? female refers to gender_id = 2; average weight refers to AVG(weight_kg)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "751": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List down at least five superpowers of male superheroes. male refers to gender = 'Male'; superpowers refers to power_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "752": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Give the name of the alien superheroes. alien superheroes refers to race = 'Alien'; name of superhero refers to superhero_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "753": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among the superheroes with height from 170 to 190, list the names of the superheroes with no eye color. height from 170 to 190 refers to height_cm BETWEEN 170 AND 190; no eye color refers to eye_colour_id = 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "754": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the superpower of hero ID 56? superpower refers to hero_power\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "755": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List down at least five full name of Demi-God superheroes. Demi-God superheroes refers to race = 'Demi-God'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "756": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many bad superheroes are there? bad superheroes refers to alignment_id = Bad\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "757": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Identify the race of the superhero who weighed 169 kg. weighed 169 kg refers to weight_kg = 169\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "758": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the hair colour of the human superhero who is 185 cm tall. 185 cm tall refers to height_cm = 185; human superhero refers to race = 'human'; hair colour refers to colour where hair_colour_id = colour.id;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "759": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the eye clolour of the heaviest superhero? the heaviest superhero refers to MAX(weight_kg); eye colour refers to colour where eye_colour_id = colour.id;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "760": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics? height between 150 to 180 refers to height_cm BETWEEN 150 AND 180; heroes published by Marvel Comics refers to publisher_id = 13; calculation = MULTIPLY(DIVIDE(SUM(publisher.id = 13)), COUNT(publisher.id), 100)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "761": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes. Calculation = weight_kg > MULTIPLY(AVG(weight_kg), 0.79)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "762": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Which power do superheroes have the most of? power that superheroes have the most refers to MAX(COUNT(power_name))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "763": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Indicate the attribute value of superhero Abomination. Abomination refers to superhero_name = 'Abomination';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "764": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What are the superpowers of heroes with ID 1? superpowers refers to power_name; heroes with ID 1 refers to hero_id = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "765": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many heroes have stealth power? stealth power refers to power_name = 'stealth';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "766": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the hero's full name with the highest attribute in strength? highest attribute in strength refers to MAX(attribute_value) WHERE attribute_name = 'strength';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "767": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the average of superheroes with no skin colour? average = DIVIDE(COUNT(superhero.id), SUM(skin_colour_id = 1)); no skin colour refers to skin_colour_id WHERE colour.id = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "768": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes were published by Dark Horse Comics? published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "769": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Which superhero has the most durability published by Dark Horse Comics? which superhero refers to superhero_name; most durability refers to MAX(attribute_value) WHERE attribute_name = 'durability'; published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "770": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the eyes colour of Abraham Sapien? eye colour refers to colour.colour where eye_colour_id = colour.id; Abraham Sapien is the full name of superhero;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "771": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the name of superheroes with flight power. name of superheroes refers to superhero_name; flight power refers to power_name = 'Flight';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "772": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics. eyes refers to eye_colour_id; hair refers to hair_colour_id; skin colour refers to skin_colour_id; female superheroes refers to gender = 'Female'; published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "773": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero. which superhero refers to superhero_name; the same eyes, hair and skin colour refers to hair_colour_id = skin_colour_id AND hair_colour_id = eye_colour_id; publisher refers to publisher_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "774": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Which group does superhero A-Bomb belong to? group refers to race; A-Bomb refers to superhero_name = 'A-Bomb';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "775": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the percentage of blue female superheroes among all female superheroes? percentage = MULTIPLY(DIVIDE(SUM(colour = 'Blue' WHERE gender = 'Female'), COUNT(gender = 'Female')), 100); blue refers to the color; female refers to gender = 'Female';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "776": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the hero name and race of Charles Chandler. hero name refers to superhero_name; Charles Chandler is the full name of superhero;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "777": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the gender of Agent 13 hero? Agent 13 hero refers to superhero_name = 'Agent 13';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "778": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide superheroes' names who have the adaptation power. adaptation power refers to power_name = 'Adaptation';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "779": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many powers does Amazo hero have? Amazo hero refers to superhero_name = 'Amazo';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "780": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the powers of Hunter Zolomon. Hunter Zolomon is the full name of superhero; list the powers refers to power_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "781": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the heights of the heroes whose eye colours are amber. heights of the heroes refers to height_cm; eye colours are amber refers to colour.colour = 'Amber' WHERE eye_colour_id = colour.id;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "782": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the heroes' names whose eyes and hair colours are both black. heroes' names refers to superhero_name; eyes and hair colours are both black refers to eye_colour_id AND hair_colour_id WHERE colour.colour = 'Black';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "783": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the eye colours of the heroes whose skin colours are gold. skin colours are gold refers to colour.colour = 'Gold' WHERE skin_colour_id = colour.id;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "784": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the full names of vampire heroes. vampire heroes refers to race = 'Vampire';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "785": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Describe the names of neutral alignment superheroes. names of superheroes refers to superhero_name; neutral alignment refers to alignment = 'Neutral';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "786": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many heroes have the highest attribute value in strength? highest attribute value in strength refers to MAX(attribute_value) WHERE attribute_name = 'Strength';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "787": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What are the race and alignment of Cameron Hicks? Cameron Hicks refers to superhero_name = 'Cameron Hicks';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "788": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many percent of female heroes were published by Marvel Comics? percent = MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')), 100); female heroes refers to gender = 'Female'; Marvel Comics refers to publisher_name = 'Marvel Comics';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "789": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Find the average weight of the heroes who are aliens. average = AVG(weight_kg); aliens refers to race = 'Alien';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "790": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight. difference = SUBTRACT(SUM(weight_kg WHERE full_name = 'Emil Blonsky'), SUM(weight_kg WHERE full_name = 'Charles Chandler')); Emil Blonsky is the full name of superhero; Charles Chandler is the full name of superhero;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "791": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Calculate the average height for each superhero. average = DIVIDE(SUM(height_cm), COUNT(all heros));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "792": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is Abomination's superpower? Abomination refers to superhero_name = 'Abomination'; superpower refers to power_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "793": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among the superheroes with the race of god/eternal, how many of them are male race \"god/eternal\" refers to race_id = 21; male refers to gender.id = 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "794": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Which hero was the fastest? which hero refers to superhero_name; fastest refers to MAX(attribute_value) WHERE attribute_name = 'Speed';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "795": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes have a neutral alignment? neutral alignment refers to alignment_id = 3;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "796": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: State all of 3-D Man's attributes along with their values. 3-D Man is the superhero_name. attributes refers to attribute_name; values refers to attribute_value;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "797": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Which superheroes have blue eyes with brown hair? which superheroes refers to superhero_name; blue eyes refers to eye_colour_id = 7; brown hair refers to hair_colour_id = 9;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "798": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the publisher for Hawkman, Karate Kid and Speedy? publisher refers to publisher_name; Hawkman refers to superhero_name = 'Hawkman'; Karate Kid refers to superhero_name = 'Karate Kid'; Speedy refers to superhero_name = 'Speedy';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "799": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many superheroes didn't have any publisher? didn't have any publisher refers to publisher.id = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "800": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Calculate the percentage of superheroes with blue eyes. percentage = MULTIPLY(DIVIDE(SUM(superhero_name WHERE eye_colour_id = 7), COUNT(superhero_name)), 100.0); blue eyes refers to eye_colour_id = 7;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "801": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Find the ratio between male superheroes and female superheroes. ratio = DIVIDE(SUM(gender_id = 1) / SUM(gender_id = 2)); male superheroes refers to gender_id = 1; female superheroes refers to gender_id = 2;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "802": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Who is the tallest superhero? who refers to superhero_name; tallest superhero refers to MAX(height_cm);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "803": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the power ID of cryokinesis? power ID refers to superpower.id; cryokinesis refers to power_name = 'cryokinesis';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "804": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the name of superhero with superhero ID 294. name of superhero refers to superhero_name; superhero ID 294 refers to superhero.id = 294;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "805": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the full names of superheroes with missing weight. missing weight refers to weight_kg = 0 OR weight_kg = NULL;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "806": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the eye colour of the superhero who has Karen Beecher-Duncan as their full name. eye colour refers to colour.colour where eye_colour_id = colour.id; Karen Beecher-Duncan is the full name of superhero;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "807": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the superpowers of the superhero has Helen Parr as their full name? superpowers refers to power_name; Helen Parr is the full name of superhero;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "808": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Find the race of the superhero who weighs 108kg and is 188cm tall. weighs 108kg refers to weight_kg = 108; 188cm tall refers to height_cm = 188;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "809": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the publisher name of the superhero ID 38? superhero ID 38 refers to superhero.id = 38;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "810": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the race of the superhero with maximum attribute value? maximum attribute value refers to MAX(attribute_value);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "811": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Give the alignment and superpowers of the superhero named Atom IV. superpowers refers to power_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "812": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List down at least five full names of superheroes with blue eyes. blue eyes refers to colour.colour = 'Blue' WHERE eye_colour_id = colour.id;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "813": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Calculate the average attribute value of all neutral superheroes. average = AVG(attribute_value); neutral superheroes refers to alignment_id = 3;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "814": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the skin colour of the superheroes with 100 attribute value. skin colour refers to colour.colour where skin_colour_id = colour.id; 100 attribute value refers to attribute_value = 100;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "815": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Count the good female superheroes. good refers to alignment.id = 1; female refers to gender.id = 2;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "816": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the names of superheroes with attribute value between 75 to 80. names of superheroes refers to superhero_name; attribute value between 75 to 80 refers to attribute_value BETWEEN 75 AND 80;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "817": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Give the race of the blue-haired male superhero. blue-haired refers to colour.colour = 'blue' WHERE hair_colour_id = colour.id; male refers to gender = 'male';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "818": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among the bad superheroes, what is the percentage of female superheroes? bad superheroes refers to alignment.id = 2; percentage = MULTIPLY(DIVIDE(SUM(gender.id = 2 WHERE alignment.id = 2), COUNT(alignment.id = 2)), 100.0); female refers to gender.id = 2;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "819": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color. missing weight data refers to weight_kg = 0 OR T1.weight_kg = NULL; difference = SUBTRACT(SUM(colour.id = 7), SUM(colour.id = 1)); blue eyes refers to eye_colour_id WHERE colour.id = 7; no eye color refers to eye_colour_id WHERE colour.id = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "820": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How strong is the Hulk? how strong refers to attribute_value WHERE attribute_name = 'Strength'; the Hulk refers to superhero_name = 'Hulk';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "821": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List down Ajax's superpowers. Ajax refers to superhero_name = 'Ajax'; superpowers refers to power_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "822": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many green-skinned villains are there in the superhero universe? green-skinned refers to colour.colour = 'Green' WHERE skin_colour_id = colour.id; villains refers to alignment = 'Bad';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "823": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: How many female superheroes are in Marvel Comics? female refers to gender = 'Female'; Marvel Comics refers to publisher_name = 'Marvel Comics';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "824": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Identify superheroes who can control wind and list their names in alphabetical order. superheroes refers to superhero_name; can control wind refers to power_name = 'Wind Control';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "825": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Identify the gender of the superhero who has the ability of Phoenix Force. ability of Phoenix Force refers to power_name = 'Phoenix Force';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "826": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Identify the heaviest superhero in DC Comics. heaviest refers to MAX(weight_kg); DC Comics refers to publisher_name = 'DC Comics'; superhero refers to superhero_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "827": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the average height of a non-human superhero in Dark Horse Comics? average = AVG(height_cm); non-human superhero refers to race <> 'Human'; Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "828": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Count the fastest superheroes. fastest refers to attribute_value = 100 WHERE attribute_name = 'Speed';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "829": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes. DC refers to publisher_name = 'DC Comics'; Marvel Comics refers to publisher_name = 'Marvel Comics'; if SUM(publisher_name = 'DC Comics') > SUM(publisher_name = 'Marvel Comics'), it means DC Comics published more superheroes than Marvel Comics; if SUM(publisher_name = 'Marvel Comics') > SUM(publisher_name = 'Marvel Comics'), it means Marvel Comics published more heroes than DC Comics; difference = SUBTRACT(SUM(publisher_name = 'DC Comics'), SUM(publisher_name = 'Marvel Comics'));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "830": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Identify the weakest attribute of the Black Panther. weakest attribute refers to attribute_name WHERE MIN(attribute_value); Black Panther refers to superhero_name = 'Black Panther';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "831": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is Abomination's eye colour? Abomination refers to superhero_name = 'Abomination'; eye colour refers to colour.colour where eye_colour_id = colour.id;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "832": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Name the tallest superhero. tallest superhero refers to MAX(height_cm);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "833": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Name the superhero, otherwise known as Charles Chandler. name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "834": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among all superheroes created by George Lucas, identify the percentage of female superheroes. created by George Lucas refers to publisher_name = 'George Lucas'; percentage = MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'George Lucas'), COUNT(publisher_name = 'George Lucas')), 100.0); female refers to gender = 'Female';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "835": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes. Marvel Comics refers to publisher_name = 'Marvel Comics'; percentage = MULTIPLY(DIVIDE(SUM(alignment = 'Good' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')), 100.0); good superheroes refers to alignment = 'Good';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "836": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: What is the total number of superheroes that have John as their first name? have John as their first name refers to full_name LIKE 'John%';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "837": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Give the hero ID of superhero with the lowest attribute value. lowest attribute value refers to MIN(attribute_value);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "838": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the full name of the superhero named Alien.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "839": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: In superheroes with weight less than 100, list the full name of the superheroes with brown eyes. weight less than 100 refers to weight_kg < 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "840": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the attribute value of the superhero named Aquababy.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "841": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Provide the weight and race of the superhero with superhero ID 40. weight refers to weight_kg; superhero ID 40 refers to superhero.id = 40;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "842": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Calculate the average height of all neutral superheroes.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "843": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the hero ID of superheroes have intellegence as their power. hero ID refers to superhero.id; have intelligence as their power refers to power_name = 'Intelligence';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "844": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: Give the eye colour of Blackwulf. eye colour refers to colour.colour where eye_colour_id = colour.id; Blackwulf refers to superhero_name = 'Blackwulf';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "845": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE alignment (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE attribute (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE colour (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE gender (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE publisher (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE race (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE superhero (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 integer,\ncolumn_8 integer,\ncolumn_9 integer,\ncolumn_10 integer,\ncolumn_11 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_3) REFERENCES gender(column_0),\nFOREIGN KEY (column_4) REFERENCES colour(column_0),\nFOREIGN KEY (column_5) REFERENCES colour(column_0),\nFOREIGN KEY (column_6) REFERENCES colour(column_0),\nFOREIGN KEY (column_7) REFERENCES race(column_0),\nFOREIGN KEY (column_8) REFERENCES publisher(column_0),\nFOREIGN KEY (column_9) REFERENCES alignment(column_0),\n);\nCREATE TABLE hero_attribute (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES attribute(column_0),\n);\nCREATE TABLE superpower (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE hero_power (\ncolumn_0 integer,\ncolumn_1 integer,\nFOREIGN KEY (column_0) REFERENCES superhero(column_0),\nFOREIGN KEY (column_1) REFERENCES superpower(column_0),\n);\n---------------------\nQUESTION: List the power of superheroes with height greater than 80% of the average height of all superheroes. power of superheroes refers to power_name; height greater than 80% of the average height of all superheroes = height_cm > MULTIPLY(AVG(height_cm), 0.8);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tsuperhero", "846": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Please list the reference names of the drivers who are eliminated in the first period in race number 18. driver reference name refers to driverRef; first qualifying period refers to q1; drivers who are eliminated in the first qualifying period refers to 5 drivers with MAX(q1); race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "847": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: What is the surname of the driver with the best lap time in race number 19 in the second period? race number refers to raceId; second qualifying period refers to q2; best lap time refers to MIN(q2);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "848": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Please list the year during which the race is held on circuits in Shanghai. Shanghai is a name of location;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "849": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Where can the introduction of the races held on Circuit de Barcelona-Catalunya be found? introduction of races refers to url; Circuit de Barcelona-Catalunya is a name of circuit;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "850": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Please give the name of the race held on the circuits in Germany. Germany is a name of country;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "851": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Please list the positions of the circuits built by the constructor Renault. Renault is a name of constructor;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "852": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: How many races in the year 2010 are held on grand prixs outside Asia and Europe?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "853": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Please give the names of the races held on the circuits in Spain. Spain is a name of country;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "854": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: What is the location coordinates of the circuits for Australian grand prix? coordinates refers to (lat, lng);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "855": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Where can I find the information about the races held on Sepang International Circuit? information about races refers to url;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "856": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Please list the time of the races held on Sepang International Circuit.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "857": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Give the coordinate position for Abu Dhabi Grand Prix. coordinates refers to (lat, lng); position and location shares the same meaning.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "858": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Which country is the constructor which got 1 point in the race No. 24 from? race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "859": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: What's Bruno Senna's Q1 result in the qualifying race No. 354? race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "860": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality? race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "861": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: What is his number of the driver who finished 0:01:54 in the Q3 of qualifying race No.903? race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "862": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the Bahrain Grand Prix in 2007, how many drivers not finished the game? drivers who finished the race refers to time has records;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "863": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Show me the season page of year when the race No. 901 took place. race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "864": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the race happened on 2015/11/29, how many drivers finished the game? game and race are synonyms; drivers who finished the race should have record in time;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "865": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For all the drivers who finished the game in race No. 592, who is the oldest? drivers who finished the race refers to time is not empty; oldest driver refers to oldest dob;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "866": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website. player and driver are synonyms; race number refers to raceId; introduction website of the drivers refers to url;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "867": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the driver who set the fastest lap speed in race No.933, where does he come from? fastest lap speed refers to MAX(fastestLapSpeed);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "868": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Where is Malaysian Grand Prix held? Give the location coordinates. coordinates refers to (lat, lng);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "869": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the constructor which got the highest point in the race No. 9 , what is its introduction website? race number refers to raceId; introduction website of the constructor refers to url;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "870": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: What's Lucas di Grassi's Q1 result in the race No. 345? race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "871": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from? race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "872": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code? race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "873": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: What is the actual finish time for Bruce McLaren in the race No.743? race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "874": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Who finished second in the San Marino Grand Prix in 2006? finished second refers to position = 2;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "875": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Show me the season page of year when the race No. 901 took place. race number refers to raceId;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "876": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the race happened in 2015/11/29, how many drivers finished the game?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "877": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For all the drivers who finished the game in race No. 872, who is the youngest? race number refers to raceId; drivers who finished the race refers to time has value; the youngest is a driver where MAX(dob);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "878": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Who was the driver that got the best lap time in the race No. 348? Give his full name. race number refers to raceId; the best lap time refers to MIN(time)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "879": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the driver who set the fastest lap speed, what is his nationality? the fastest lap speed refers to (MAX) fastestLapSpeed\n\nSQL mentions raceId = 348, that is not in the question\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "880": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed? race number refers to raceId; DIVIDE(SUBTRACT(fastestLapSpeed(raceId = 853), (fastestLapSpeed (raceId = 854)), (fastestLapSpeed(raceId = 853)) as percentage\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "881": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: For the drivers who took part in the race in 1983/7/16, what's their race completion rate? DIVIDE(COUNT(driverid where time has value and date = '1983-07-16'), (COUNT(driverid where date = '1983-07-16')) as percentage\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "882": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Which year was the first Singapore Grand Prix? the first race refers to race happened in min(year);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "883": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: How many races were there in 2005? Name all the races in descending order.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "884": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Name the first race recorded. What are the other races that happened within the same month and year of that race. the first race refers to year = year(min(date)) and month = month(min(date));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "885": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: State the name and date of the last round of race in year 1999. the last round refers to max(round);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "886": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Which year has the most number of races? the most number of races refers to max(round);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "887": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Name the races in year 2017 that are not hosted in year 2000. not hosted means not in;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "888": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: In which country was the first European Grand Prix hosted? Name the circuit and location. the first refers to min(year);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "889": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: When was the last f1 season whereby Brands Hatch hosted the British Grand Prix? the last refers to max(year);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "890": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: How many seasons has Silverstone Circuit hosted the United Kindom grand prix? British Grand Prix is the name of race; British refers to the United Kindom\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "891": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Name all drivers in the 2010 Singapore Grand Prix order by their position stands.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "892": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: State the driver with the most points scored. Find his full name with that points. the most points scored refers to max(points); full name contains forename and surname.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "893": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "894": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: What is the best lap time recorded? List the driver and race with such recorded lap time. the best lap time refers to min(time)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "895": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: What is the average lap time for Sebastian Vettel in the 2009 Chinese Grand Prix? AVG(time);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "896": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010. DIVIDE(COUNT(raceId) where surname = 'Hamilton', year >= 2010 and position>1), (COUNT(raceId) where surname = 'Hamilton', year >= 2010) as percentage;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "897": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Name the driver with the most winning. Mention his nationality and what is his average point scores. the most winning refers to MAX(COUNT(wins)); avg(points);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "898": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: How old is the youngest Japanese driver? What is his name? youngest Japanese driver refers to max(dob); Japanese refers to nationality = 'Japanese'; age = 2022-year(dob)+1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "899": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: List circuits which host 4 f1 races from year 1990 to 2000. from year 1990 to 2000 refers to year(date) between 1990 and 2000;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "900": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "901": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Name the races along with its circuit name and location for f1 races hosted in September 2005. in September 2005 refers to month(date) = 9 and year = 2005\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1", "902": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE circuits (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 real,\ncolumn_6 real,\ncolumn_7 integer,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE constructors (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 text,\ncolumn_3 text,\ncolumn_4 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE drivers (\ncolumn_0 integer,\ncolumn_1 text,\ncolumn_2 integer,\ncolumn_3 text,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 date,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE seasons (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE races (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 date,\ncolumn_6 text,\ncolumn_7 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES seasons(column_0),\nFOREIGN KEY (column_3) REFERENCES circuits(column_0),\n);\nCREATE TABLE constructorResults (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE constructorStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES constructors(column_0),\n);\nCREATE TABLE driverStandings (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 real,\ncolumn_4 integer,\ncolumn_5 text,\ncolumn_6 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\n);\nCREATE TABLE lapTimes (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE pitStops (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 text,\ncolumn_5 text,\ncolumn_6 integer,\nFOREIGN KEY (column_0) REFERENCES races(column_0),\nFOREIGN KEY (column_1) REFERENCES drivers(column_0),\n);\nCREATE TABLE qualifying (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 text,\ncolumn_7 text,\ncolumn_8 text,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\n);\nCREATE TABLE status (\ncolumn_0 integer,\ncolumn_1 text,\nPRIMARY KEY (column_0),\n);\nCREATE TABLE results (\ncolumn_0 integer,\ncolumn_1 integer,\ncolumn_2 integer,\ncolumn_3 integer,\ncolumn_4 integer,\ncolumn_5 integer,\ncolumn_6 integer,\ncolumn_7 text,\ncolumn_8 integer,\ncolumn_9 real,\ncolumn_10 integer,\ncolumn_11 text,\ncolumn_12 integer,\ncolumn_13 integer,\ncolumn_14 integer,\ncolumn_15 text,\ncolumn_16 text,\ncolumn_17 integer,\nPRIMARY KEY (column_0),\nFOREIGN KEY (column_1) REFERENCES races(column_0),\nFOREIGN KEY (column_2) REFERENCES drivers(column_0),\nFOREIGN KEY (column_3) REFERENCES constructors(column_0),\nFOREIGN KEY (column_17) REFERENCES status(column_0),\n);\n---------------------\nQUESTION: Which race was Alex Yoong in when he was in track number less than 10? track number less than 10 refers to position < 10\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tformula_1"}