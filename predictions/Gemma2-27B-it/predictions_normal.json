{"0": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the highest eligible free rate for K-12 students in the schools in Alameda County? Eligible free rate for K-12 = `Free Meal Count (K-12)` / `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "1": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Please list the lowest three eligible free rates for students aged 5-17 in continuation schools. Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "2": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Please list the zip code of all the charter schools in Fresno County Office of Education. Charter schools refers to `Charter School (Y/N)` = 1 in the table fprm\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "3": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "4": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1. Charter schools refers to `Charter School (Y/N)` = 1 in the frpm\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "5": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: How many schools with an average score in Math under 400 in the SAT test are exclusively virtual? Exclusively virtual refers to Virtual = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "6": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program. Magnet schools or offer a magnet program means that Magnet = 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "7": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "8": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "9": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "10": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "11": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Please list the codes of the schools with a total enrollment of over 500. Total enrollment can be represented by `Enrollment (K-12)` + `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "12": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17? Excellence rate = NumGE1500 / NumTstTakr; Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "13": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Please list the phone numbers of the schools with the top 3 SAT excellence rate. Excellence rate = NumGE1500 / NumTstTakr\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "14": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "15": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Which active district has the highest average score in Reading?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "16": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: How many schools in merged Alameda have number of test takers less than 100?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "17": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the charter number of the school that the average score in Writing is 499?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "18": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: How many schools in Contra Costa (directly funded) have number of test takers not more than 250?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "19": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the phone number of the school that has the highest average score in Math?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "20": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: How many schools in Amador which the Low Grade is 9 and the High Grade is 12?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "21": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "22": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Which school in Contra Costa has the highest number of test takers?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "23": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools. Diffrence in enrollement = `Enrollment (K-12)` - `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "24": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "25": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools? Average of average math = sum(average math scores) / count(schools).\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "26": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17? Full communication address should include Zip, Street, City, State\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "27": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any. Communication number refers to phone number.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "28": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average. Difference between K-12 enrollment and 15-17 enrollment can be computed by `Enrollment (K-12)` - `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "29": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: When did the first-through-twelfth-grade school with the largest enrollment open? K-12 means First-through-twelfth-grade\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "30": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Which cities have the top 5 lowest enrollment number for students in grades 1 through 12? K-12 refers to students in grades 1 through 12.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "31": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12? K-12 refers to students in grades 1 through 12; Eligible free rate for K-12 = `Free Meal Count (K-12)` / `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "32": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66? grades 1-12 means K-12; Eligible free or reduced price meal rate for K-12 = `FRPM Count (K-12)` / `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "33": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "34": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson? Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "35": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12? Charted school means `Charter School (Y/N)` = 1 in the table frpm; Students enrolled in grades 1 through 12 refers to `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "36": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name. full name means first name, last name; There are at most 3 administrators for each school; SAT Scores are greater or equal to 1500 refers to NumGE1500\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "37": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State. Execellence Rate = NumGE1500 / NumTstTakr; complete address has Street, City, State, Zip code\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "38": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "39": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980? between 1/1/1980 and 12/31/1980 means the year = 1980\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "40": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the telephone number for the school with the lowest average score in reading in Fresno Unified? Fresno Unified is a name of district;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "41": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Which exclusively virtual schools have the top 5 highest average reading scores? Exclusively virtual refers to Virtual = 'F'.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "42": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the type of education offered in the school who scored the highest average in Math?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "43": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the average math score of the school with the lowest average score for all subjects, and in which county is it located? Average score for all subjects can be computed by AvgScrMath + AvgScrRead + AvgScrWrite\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "44": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "45": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores. Usually, administrators manage the school stuff.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "46": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Which state special schools have the highest number of enrollees from grades 1 through 12? State Special Schools refers to DOC = 31; Grades 1 through 12 means K-12\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "47": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980? Elementary School District refers to DOC = 52; Monthly average number of schools that opened in 2018 = count(schools that opened in 1980) / 12\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "48": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools? Elementary School District refers to DOC = 52; Unified School District refers to DOC = 54.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "49": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date. Closure date and closed date are synonyms; 'Closed' was mentioned in schools.StatusType.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "50": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the postal street address for the school with the 6th highest Math average? Indicate the school's name. Postal street and mailing street are synonyms.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "51": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "52": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport? Total SAT scores can be computed by AvgScrRead + AvgScrMath + AvgScrWrite\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "53": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: How many test takers are there at the school/s whose mailing city address is in Fresno?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "54": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "55": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt? Ratio = count(schools in Colusa) / count(schools in Humboldt)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "56": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Of all the schools with a mailing state address in California, how many are active in San Joaquin?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "57": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the phone number and extension number for the school that had the 333rd highest average writing score?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "58": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "59": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "60": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What are the websites for all the partially virtual chartered schools located in San Joaquin? Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "61": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: How many chartered schools located in the city of Hickman are owned by the Elementary School District? Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "62": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%? non-chartered schools refer to schools whose Charter = 0; K-12 means grades 1 through 12; percent of eligible free rate for K-12 = `Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "63": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs Chartered schools refer to Charter = 1 in the table schools; Full name refers to first name, last name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "64": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "65": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding? Ratio in percentage = (count(locally funded schools in Santa Clara) / count(all funding type schools in Santa Clara) * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "66": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus? Directly funded schools refers to FundingType = 'Directly Funded'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "67": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the total amount of Community College District closure in 1989 in the city of San Francisco?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "68": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)? Youth Authority Facilities (CEA) refers to SOC = 11; 1980s = years between 1980 and 1989\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "69": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools. State Special Schools means that SOC = 31.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "70": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: How many active and closed District Community Day Schools are there in the county of Alpine?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "71": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the district code for the School that does not offer a magnet program in the city of Fresno? When magent is equal to 0 in the database, it means ths school doesn't offer a magnet program.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "72": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year? State Special School means EdOpsCode = 'SSS'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "73": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "74": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360? District Special Education Consortia School refers to EdOpsCode = 'SPECON'.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "75": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "76": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced? High school can be represented as EILCode = 'HS'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "77": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)? Percent (%) Eligible FRPM (Ages 5-17) can be acquired by `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "78": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the most common type of grade span served in the city of Adelanto?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "79": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount. 'Does not offer physical building' means Virtual = F in the database.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "80": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "81": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name. State of California refers to state = 'CA'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "82": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the grade span offered in the school with the highest longitude?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "83": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city. Kindergarten to 8th grade refers to K-8; 'Offers a magnet program' means Magnet = 1.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "84": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What are the two most common first names among the school administrators? Indicate the district to which they administer.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "85": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school. Percent (%) Eligible Free (K-12) = `Free Meal Count (K-12)` / `Enrollment (K-12)` * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "86": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "87": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools? Intermediate/Middle Schools refers to SOC = 62; Unified School refers to DOC = 54; years between 2009 and 2010 can refer to 'between 1/1/2009 to 12/31/2010'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "88": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE frpm (\nCDSCode text,\nAcademic Year text,\nCounty Code text,\nDistrict Code integer,\nSchool Code text,\nCounty Name text,\nDistrict Name text,\nSchool Name text,\nDistrict Type text,\nSchool Type text,\nEducational Option Type text,\nNSLP Provision Status text,\nCharter School (Y/N) integer,\nCharter School Number text,\nCharter Funding Type text,\nIRC integer,\nLow Grade text,\nHigh Grade text,\nEnrollment (K-12) real,\nFree Meal Count (K-12) real,\nPercent (%) Eligible Free (K-12) real,\nFRPM Count (K-12) real,\nPercent (%) Eligible FRPM (K-12) real,\nEnrollment (Ages 5-17) real,\nFree Meal Count (Ages 5-17) real,\nPercent (%) Eligible Free (Ages 5-17) real,\nFRPM Count (Ages 5-17) real,\nPercent (%) Eligible FRPM (Ages 5-17) real,\n2013-14 CALPADS Fall 1 Certification Status integer,\nPRIMARY KEY (CDSCode),\nFOREIGN KEY (CDSCode) REFERENCES schools(CDSCode),\n);\nCREATE TABLE satscores (\ncds text,\nrtype text,\nsname text,\ndname text,\ncname text,\nenroll12 integer,\nNumTstTakr integer,\nAvgScrRead integer,\nAvgScrMath integer,\nAvgScrWrite integer,\nNumGE1500 integer,\nPRIMARY KEY (cds),\nFOREIGN KEY (cds) REFERENCES schools(CDSCode),\n);\nCREATE TABLE schools (\nCDSCode text,\nNCESDist text,\nNCESSchool text,\nStatusType text,\nCounty text,\nDistrict text,\nSchool text,\nStreet text,\nStreetAbr text,\nCity text,\nZip text,\nState text,\nMailStreet text,\nMailStrAbr text,\nMailCity text,\nMailZip text,\nMailState text,\nPhone text,\nExt text,\nWebsite text,\nOpenDate date,\nClosedDate date,\nCharter integer,\nCharterNum text,\nFundingType text,\nDOC text,\nDOCType text,\nSOC text,\nSOCType text,\nEdOpsCode text,\nEdOpsName text,\nEILCode text,\nEILName text,\nGSoffered text,\nGSserved text,\nVirtual text,\nMagnet integer,\nLatitude real,\nLongitude real,\nAdmFName1 text,\nAdmLName1 text,\nAdmEmail1 text,\nAdmFName2 text,\nAdmLName2 text,\nAdmEmail2 text,\nAdmFName3 text,\nAdmLName3 text,\nAdmEmail3 text,\nLastUpdate date,\nPRIMARY KEY (CDSCode),\n);\n---------------------\nQUESTION: What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcalifornia_schools", "89": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many accounts who choose issuance after transaction are staying in East Bohemia region? A3 contains the data of region; 'POPLATEK PO OBRATU' represents for 'issuance after transaction'.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "90": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many accounts who have region in Prague are eligible for loans? A3 contains the data of region\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "91": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: The average unemployment ratio of 1995 and 1996, which one has higher percentage? A12 refers to unemploymant rate 1995; A13 refers to unemploymant rate 1996\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "92": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List out the no. of districts that have female average salary is more than 6000 but less than 10000? A11 refers to average salary; Female mapps to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "93": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many male customers who are living in North Bohemia have average salary greater than 8000? Male means that gender = 'M'; A3 refers to region; A11 pertains to average salary.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "94": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary? Female means gender = 'F'; A11 refers to average salary; Gap = highest average salary - lowest average salary; If the person A's birthdate > B's birthdate, it means that person B is order than person A.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "95": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List out the account numbers of clients who are youngest and have highest average salary? If the person A's birthdate < B's birthdate, it means that person B is younger than person A; A11 refers to average salary\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "96": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many customers who choose statement of weekly issuance are Owner? 'POPLATEK TYDNE' stands for weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "97": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List out the clients who choose statement of issuance after transaction are Disponent? 'POPLATEK PO OBRATU' stands for issuance after transaction\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "98": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement. 'POPLATEK TYDNE' stands for weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "99": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993. Loan validity more than 12 months refers to duration > 12\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "100": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov? Customers refer to clients; Female refers to gender = 'F'; Names of districts appear in column A2\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "101": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List out the accounts who have the earliest trading date in 1995 ?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "102": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "103": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Which client issued his/her card in 1994/3/3, give his/her client id.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "104": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: The transaction of 840 USD happened in 1998/10/14, when was this account opened?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "105": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "106": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "107": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the gender of the oldest client who opened his/her account in the highest average salary branch? Earlier birthdate refers to older age; A11 refers to average salary\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "108": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "109": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many clients opened their accounts in Jesenik branch were women? A2 has region names; Woman and female share the same meaning; female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "110": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "111": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many accounts were opened in Litomerice in 1996? A2 refers to district name; Litomerice is one of district names.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "112": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For the female client who was born in 1976/1/29, which district did she opened her account? Female refers to gender = 'F'; A2 refers to district names\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "113": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "114": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For the first client who opened his/her account in Prague, what is his/her account ID? A3 stands for region names\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "115": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients? Percentage of the male clients = DIVIDE(COUNT(male clients), COUNT(clients)) * 100%; Male refers to gender = 'M', A3 is the region name. A4 contains the information about inhabitants.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "116": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27? Increase rate of his/her account balance = [(balance of date A - balance of date B) / balance of Date B] * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "117": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the percentage of loan amount that has been fully paid with no issue. Loan paid with no issue means contract finished, no problems; status = 'A' means contract finished, no problems; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "118": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue. Status = 'C' stands for running contract, ok so far; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "119": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region. Records about district names could be found in A2; A3 contains the information about regions. 'POPLATEK PO OBRATU' stands for issuance after transaction\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "120": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance. Accounts holder refers to the person who own this account.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "121": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List account ID and account opening date for accounts from 'Prachatice'. A2 refers to the names of districts.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "122": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: State the district and region for loan ID '4990'. A2, A3 contains the information about district and region respectively.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "123": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Provide the account ID, district and region for loan amount greater than USD300,000. A2 contains district names and A3 contains region names.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "124": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List the loan ID, district and average salary for loan with duration of 60 months. A3 refers to regions; A11 refers to average salary\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "125": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996. Unemployment increment rate in percentage = [(unemployment rate 2016 - unemployment rate 2015) / unemployment rate 2015] * 100%; unemployment rate 2015 appears in the A12; unemployment rate 2016 appears in the A13; Loan contracts which are still running where client are in debt can be presented as status = 'D'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "126": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993. A2 contains the information about district.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "127": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List the account IDs with monthly issuance of statements. 'POPLATEK MESICNE' stands for monthly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "128": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders. A2 refers to districts; Female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "129": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996? Non-credit card withdraws refers to type = 'VYDAJ'; January 1996 can be found by date LIKE '1996-01%' in the database; A2 means district names\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "130": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many of the account holders in South Bohemia still do not own credit cards? A3 contains the region names; South Bohemia is one of region names.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "131": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Which district has highest active loan? A3 refers to district names; Active loan refers to running contracts; Status = 'C' stands for running contract, OK so far; Status = 'D' stands for running contract, client in debt\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "132": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the average loan amount by male borrowers? Male refers to gender = 'M'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "133": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: In 1996, which districts have the highest unemployment rate? List their branch location and district name. A2 refers to district names; A13 refers to unemploymant rate in 1996\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "134": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: In the branch where the largest number of crimes were committed in 1996, how many accounts were opened? A16 stands for no. of committed crimes 1996\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "135": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance? Negative balance means balance < 0; Operation = 'VYBER KARTOU' stands for credit card withdraw. Frequency = 'POPLATEK MESICNE' stands for monthly issurance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "136": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved? Frequency = 'POPLATEK MESICNE' stands for monthly issurance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "137": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many accounts have running contracts in Branch location 1? Status = 'C' stands for running contract, OK so far; Status = 'D' stands for running contract, client in debt\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "138": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there? Male refers to gender = 'M'; A15 stands for no. of commited crimes 1995\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "139": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many high-level credit cards have \"disponent\" type of disposition? High-level credit cards refers to the cards with the gold type.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "140": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many accounts are there in the district of \"Pisek\"? A2 refers to district name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "141": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Which districts have transactions greater than USS$10,000 in 1997?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "142": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Which accounts placed orders for household payment in Pisek? k_symbol = 'SIPO' refers to household payment\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "143": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What are the accounts that have both gold and junior credit cards?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "144": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How much is the average amount in credit card made by account holders in a month, in year 2021? Operation = 'VYBER KARTOU' refers to credit card withdrawn\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "145": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Who are the account holder identification numbers whose spent per month on the credit card is less than the average, in 1998? Operation = 'VYBER KARTOU' refers to credit card withdrawal\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "146": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Who are the female account holders who own credit cards and also have loans? Female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "147": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many female clients' accounts are in the region of South Bohemia? Female refers to gender = 'F'; A3 contains the region 'south Bohemia'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "148": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Please list the accounts whose district is Tabor that are eligible for loans. District refers to column A2; when the account type = 'OWNER', it's eligible for loans\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "149": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000. A11 represents the average salary; Salary and income share the similar meanings; when the account type = 'OWNER', it's eligible for loans\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "150": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many accounts in North Bohemia has made a transaction with the partner's bank being AB? A3 contains the region names; North Bohemia is a region.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "151": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Please list the name of the districts with accounts that made withdrawal transactions. A2 refers to district name; type = 'VYDAJ' stands for withdrawal transactions\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "152": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997? A3 refers to region names; A15 stands for the average number of crimes commited in 1995.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "153": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many 'classic' cards are eligible for loan? when the account type = 'OWNER', it's eligible for loan\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "154": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many male clients in 'Hl.m. Praha' district? District data appears in the A2; Male means that gender = 'M'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "155": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many percent of 'Gold' cards were issued prior to 1998? Percent of Gold = [ count(type = 'gold' and issued date < 1998) / count(all cards)] * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "156": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Who is the owner of the account with the largest loan amount?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "157": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the number of committed crimes in 1995 in the district of the account with the id 532? A15 contains information about number of committed crimes in 1995\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "158": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the district Id of the account that placed the order with the id 33333?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "159": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List all the withdrawals in cash transactions that the client with the id 3356 makes. operation = 'VYBER' refers to withdrawal in cash\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "160": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Among the weekly issuance accounts, how many have a loan of under 200000? frequency = 'POPLATEK TYDNE' stands for weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "161": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What type of credit card does the client with the id 13539 own?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "162": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the region of the client with the id 3541 from? A3 refers to region\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "163": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Which district has the most accounts with loan contracts finished with no problems? status = 'A' refers to loan contracts finished with no problems\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "164": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Who placed the order with the id 32423?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "165": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Please list all the transactions made by accounts from district 5.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "166": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many of the accounts are from Jesenik district?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "167": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List all the clients' IDs whose junior credit cards were issued after 1996. After 1996 means date > = '1997-01-01\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "168": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women? Female refers to gender = 'F'; Woman and female are closed; Average salary can be found in A11\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "169": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997? Growth rate = (sum of amount_1997 - sum of amount_1996) / (sum of amount_1996) * 100%; Male refers to gender = 'M'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "170": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many credit card withdrawals were recorded after 1995? Operation = 'VYBER KARTOU' means credit card withdrawals\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "171": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What was the difference in the number of crimes committed in East and North Bohemia in 1996? Difference in no. of committed crimes between 2 regions = Total no. of committed crimes in 1996 in North Bohemia - Total no. of committed crimes in 1996 in East Bohemia. A3 refers to region. Data about no. of committed crimes 1996 appears in A16\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "172": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many owner and disponent dispositions are there from account number 1 to account number 10?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "173": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total? k_symbol refers to the purpose of payments\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "174": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What year was account owner number 130 born?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "175": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many accounts have an owner disposition and request for a statement to be generated upon a transaction? Frequency = 'POPLATEK PO OBRATU' stands for issuance after transaction\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "176": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the amount of debt that client number 992 has, and how is this client doing with payments?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "177": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "178": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Which kind of credit card does client number 9 possess?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "179": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How much, in total, did client number 617 pay for all of the transactions in 1998?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "180": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "181": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Please provide the IDs of the 3 female clients with the largest loans. Female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "182": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000? Man and male refers to gender = 'M'; 'SIPO' stands for household payment\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "183": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many accounts in Beroun were opened after 1996?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "184": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many female customers have a junior credit card? Female refers to gender = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "185": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What proportion of customers who have accounts at the Prague branch are female? Female refers to gender = 'F'; Percentage of female clients in Prague branch = count[female clients with accounts in Prague branch / count(clients with accounts in Prague branch)] * 100%; A3 may contain information about Prague\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "186": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What percentage of male clients request for weekly statements to be issued? Percentage of male clients = [count(male clients who requested weekly statements / count(clients who requested weekly statements)] * 100%; Male means gender = 'M'; 'POPLATEK TYDNE' stands for weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "187": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many clients who choose statement of weekly issuance are User? Frequency = 'POPLATEK TYDNE' refers to weekly issuance\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "188": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "189": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Name the account numbers of female clients who are oldest and have lowest average salary? Female refers to 'F' in the gender; A11 contains information about average salary\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "190": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many clients who were born in 1920 stay in east Bohemia? East Bohemia appears in the column A3, which refers to the region.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "191": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement. Frequency = 'POPLATEK TYDNE' referes to weekly statement\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "192": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: What is the average amount of loan which are still on running contract with statement issuance after each transaction? status = 'C' stands for running contract, OK so far; status = 'D' stands for running contract, client in debt. 'POPLATEK PO OBRATU' stands for issuance after transaction\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "193": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: List all ID and district for clients that can only have the right to issue permanent orders or apply for loans. Only the owner accounts have the right to issue permanent orders or apply for loans\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "194": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE account (\naccount_id integer,\ndistrict_id integer,\nfrequency text,\ndate date,\nPRIMARY KEY (account_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE card (\ncard_id integer,\ndisp_id integer,\ntype text,\nissued date,\nPRIMARY KEY (card_id),\nFOREIGN KEY (disp_id) REFERENCES disp(disp_id),\n);\nCREATE TABLE client (\nclient_id integer,\ngender text,\nbirth_date date,\ndistrict_id integer,\nPRIMARY KEY (client_id),\nFOREIGN KEY (district_id) REFERENCES district(district_id),\n);\nCREATE TABLE disp (\ndisp_id integer,\nclient_id integer,\naccount_id integer,\ntype text,\nPRIMARY KEY (disp_id),\nFOREIGN KEY (client_id) REFERENCES client(client_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE district (\ndistrict_id integer,\nA2 text,\nA3 text,\nA4 text,\nA5 text,\nA6 text,\nA7 text,\nA8 integer,\nA9 integer,\nA10 real,\nA11 integer,\nA12 real,\nA13 real,\nA14 integer,\nA15 integer,\nA16 integer,\nPRIMARY KEY (district_id),\n);\nCREATE TABLE loan (\nloan_id integer,\naccount_id integer,\ndate date,\namount integer,\nduration integer,\npayments real,\nstatus text,\nPRIMARY KEY (loan_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE order (\norder_id integer,\naccount_id integer,\nbank_to text,\naccount_to integer,\namount real,\nk_symbol text,\nPRIMARY KEY (order_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\nCREATE TABLE trans (\ntrans_id integer,\naccount_id integer,\ndate date,\ntype text,\noperation text,\namount integer,\nbalance integer,\nk_symbol text,\nbank text,\naccount integer,\nPRIMARY KEY (trans_id),\nFOREIGN KEY (account_id) REFERENCES account(account_id),\n);\n---------------------\nQUESTION: Provide the IDs and age of the client with high level credit card, which is eligible for loans. When type is gold, the credit card is high-level\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tfinancial", "195": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the most common bond type? most common bond type refers MAX(COUNT(bond_type))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "196": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: In the non-carcinogenic molecules, how many contain chlorine atoms? non-carcinogenic molecules refers to label = '-'; chlorine atoms refers to element = 'cl'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "197": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Calculate the average number of oxygen atoms in single-bonded molecules. single-bonded molecules refers to bond_type = '-' ; average number of oxygen atom = AVG(element = 'o')\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "198": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: On average how many carcinogenic molecules are single bonded? carcinogenic molecules refers to label = '+'; single-bonded refers to bond_type = '-'; average = DIVIDE(SUM(bond_type = '-'), COUNT(atom_id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "199": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: In the molecule containing sodium atoms, how many are non-carcinogenic? non-carcinogenic refers to label = '-'; sodium atoms refers to element = 'na'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "200": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Find the triple-bonded molecules which are carcinogenic. triple-bonded molecules refers to bond_type = '#'; carcinogenic refers to label = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "201": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the percentage of carbon in double-bond molecules? carbon refers to element = 'c'; double-bond molecules refers to bond_type = ' = '; percentage = DIVIDE(SUM(element = 'c'), COUNT(atom_id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "202": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many triple type bonds are there? triple type bonds refers to bond_type = '#'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "203": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: In how many atoms is there no bromine? atoms with no bromine refers to element ! = 'br'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "204": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Of the first 100 molecules in number order, how many are carcinogenic? first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "205": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Identify by their ID the molecules in which there is silicon. silicon refers to element = 'si';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "206": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What elements are in the TR004_8_9 bond atoms? TR004_8_9 bond atoms refers to bond_id = 'TR004_8_9'; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "207": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What elements are in a double type bond? double type bond refers to bond_type = ' = '; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "208": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which type of label is the most numerous in atoms with hydrogen? with hydrogen refers to element = 'h'; label most numerous in atoms refers to MAX(COUNT(label)); label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "209": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Tellurium is in what type of bond? type of bond refers to bond_type; Tellurium refers to element = 'te'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "210": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What atoms are connected in single type bonds? single type bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "211": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Indicate which atoms are connected in non-carcinogenic type molecules. label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "212": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which element is the least numerous in non-carcinogenic molecules? label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "213": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What type of bond is there between the atoms TR004_8 and TR004_20? type of bond refers to bond_type; between the atoms TR004_8 and TR004_20 refers to atom_id between atom_id = 'TR004_8' and atom_id = 'TR004_20';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "214": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What type of label is not on molecules with atoms with tin? tin refers to element ! = 'sn'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "215": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many atoms with iodine and sulfur type elements are there in single bond molecules? with iodine element refer to element = 'i'; with sulfur element refers to element = 's'; single type bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "216": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Identify all connected atoms with a triple bond. triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "217": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Identify all the atoms that are connected to the atoms of the TR181 molecule. TR181 molecule refers to molecule_id = 'TR181'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "218": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What percentage of carcinogenic-type molecules does not contain fluorine? label = '+' mean molecules are carcinogenic; contain fluorine refers to element = 'f'; percentage = DIVIDE(SUM(element = 'f'), COUNT(molecule_id)) as percent where label = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "219": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the percentage of carcinogenic molecules in triple type bonds? label = '+' mean molecules are carcinogenic; triple bond refers to bond_type = '#'; percentage = DIVIDE(SUM(bond_type = '#'), COUNT(bond_id)) as percent where label = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "220": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Please list top three elements of the toxicology of the molecule TR000 in alphabetical order. TR000 is the molecule id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "221": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6? TR001 is the molecule id; TR001_2_6 is the bond id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "222": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the difference between the number of molecules that are carcinogenic and those that are not? label = '+' means molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; difference = SUBTRACT(SUM(label = '+'), SUM(label = '-'))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "223": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the atom IDs of the bond TR_000_2_5? TR_000_2_5 is the bond id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "224": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the bond IDs that have the same atom ID 2 of TR000_2? TR000_2 is the atom id; atom ID 2 refers to atom_id2\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "225": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Please list top five molecules that have double bonds in alphabetical order. double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "226": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the percentage of double bonds in the molecule TR008? double bond refers to bond_type = ' = '; TR008 is the molecule id; percentage = DIVIDE(SUM(bond_type = ' = '), COUNT(bond_id)) as percent where molecule_id = 'TR008'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "227": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the percentage of molecules that are carcinogenic? label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) as percent\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "228": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage. hydrogen refers to element = 'h'; TR206 is the molecule id; percentage = DIVIDE(SUM(element = 'h'), COUNT(atom_id)) as percent where molecule_id = 'TR206'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "229": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the type of bond that molecule TR000 has when involved in any bonds? type of bond refers to bond_type; TR000 is the molecule id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "230": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the elements of the toxicology and label of molecule TR060? TR060 is the molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "231": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic? TR018 is the molecule id; majority of the bond found refers to MAX(COUNT(bond_type)); label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "232": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order. label = '-' means molecules are not carcinogenic; single type bond refers to bond_type = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "233": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Please list top two bonds that happened with the molecule TR006 in alphabetical order. TR006 is the molecule id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "234": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many bonds which involved atom 12 does molecule TR009 have? TR009 is the molecule id; molecule_id = 'TR009' means the bond_id LIKE 'TR009_%'; involved atom 12 refers to atom_id = 'TR009_12' or atom_id2 = 'TR009_12'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "235": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many molecules are carcinogenic and have the bromine element? label = '+' mean molecules are carcinogenic; have bromine element refers to element = 'br'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "236": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the bond type and the atoms of the bond ID of TR001_6_9? double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#'; atoms refer to atom_id or atom_id2\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "237": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not. TR001_10 is the atom id; label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "238": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many molecules have a triple bond type? triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "239": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many connections does the atom 19 have? connections refers to bond_id; atom 19 refers to atom_id like 'TR%_19';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "240": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List all the elements of the toxicology of the molecule \"TR004\". TR004 is the molecule id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "241": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many of the molecules are not carcinogenic? label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "242": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among all the atoms from 21 to 25, list all the molecules that are carcinogenic. atoms from 21 to 25 refers to SUBSTRING(atom_id, 7, 2) between 21 and 25; label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "243": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the bonds that have phosphorus and nitrogen as their atom elements? have phosphorus as atom elements refers to element = 'p'; have nitrogen as atom elements refers to element = 'n'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "244": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Is the molecule with the most double bonds carcinogenic? double bond refers to bond_type = ' = '; label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "245": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the average number of bonds the atoms with the element iodine have? atoms with the element iodine refers to element = 'i'; average = DIVIDE(COUND(bond_id), COUNT(atom_id)) where element = 'i'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "246": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List the bond type and the bond ID of the atom 45. bond ID of atom 45 refers to SUBSTR(atom_id, 7, 2) + 0 = 45; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "247": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List all the elements of atoms that can not bond with any other atoms. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; atoms cannot bond with other atoms means atom_id NOT in connected table;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "248": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the atoms of the triple bond with the molecule \"TR447\"? TR447 is the molecule id; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "249": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the elements of the atoms of TR144_8_19? TR144_8_19 is the bond id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "250": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Of all the carcinogenic molecules, which one has the most double bonds? label = '+' mean molecules are carcinogenic; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "251": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the least common element of all carcinogenic molecules? label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "252": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the atoms that can bond with the atom that has the element lead? atom that has the element lead refers to atom_id where element = 'pb'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "253": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List the elements of all the triple bonds. triple bond refers to bond_type = '#'; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "254": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What percentage of bonds have the most common combination of atoms' elements? DIVIDE(COUNT(bond_id), COUNT(atom_id where MAX(COUNT(atom_id)) ))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "255": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What proportion of single bonds are carcinogenic? single bond refers to bond_type = '-'; label = '+' mean molecules are carcinogenic; proportion = DIVIDE(SUM(label = '+'), COUNT(bond_id)) where bond_type = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "256": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Calculate the total atoms consisting of the element carbon and hydrogen. consisting of element carbon and hydrogen refers to element in('c', 'h')\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "257": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List down atom id2 for atoms with element sulfur. element sulfur refers to element = 's'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "258": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the bond type for atoms with element Tin? element Tin refers to element = 'sn'; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "259": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many elements are there for single bond molecules? single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "260": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine. triple bond refers to bond_type = '#'; phosphorus refers to element = 'p'; bromine refers to element = 'br'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "261": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Write down bond id for molecules that are carcinogenic. label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "262": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among the single bond molecule id, which molecules are not carcinogenic? label = '-' means molecules are non-carcinogenic; single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "263": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the composition of element chlorine in percentage among the single bond molecules? element chlorine refers to element = 'cl'; single bond refers to bond_type = '-'; percentage = DIVIDE(SUM(element = 'cl'), COUNT(atom_id)) as percent where bond_type = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "264": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the labels for TR000, TR001 and TR002? TR000, TR001 and TR002 are molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "265": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List down the molecule id for non carcinogenic molecules. label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "266": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Calculate the total carcinogenic molecules for molecule id from TR000 to TR030. label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "267": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List down the bond type for molecules from molecule id TR000 to TR050. double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "268": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the elements for bond id TR001_10_11? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "269": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many bond id have element iodine? iodine refers to element = 'i'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "270": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic? calcium refers to element = 'ca'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; MAX(label)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "271": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Does bond id TR001_1_8 have both element of chlorine and carbon? chlorine refers to element = 'cl'; carbon refers to element = 'c'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "272": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List down two molecule id of triple bond non carcinogenic molecules with element carbon. carbon refers to element = 'c'; triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "273": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the percentage of element chlorine in carcinogenic molecules? chlorine refers to element = 'cl'; label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(element = 'pb'); COUNT(molecule_id)) as percentage where label = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "274": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List the toxicology elements associated with molecule TR001. TR001 is the molecule id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "275": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Give me the molecule ID of the double bond type. double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "276": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Write down the atom IDs of the first and second atoms of triple bond type molecules. first atom refers to atom_id; second atom refers to atom_id2; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "277": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What are the toxicology elements associated with bond ID TR005_16_26? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "278": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many of the single bond type molecules are non-carcinogenic? label = '-' means molecules are non-carcinogenic; single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "279": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the label for bond ID TR001_10_11? label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "280": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not. triple bond refers to bond_type = '#'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "281": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Tally the toxicology element of the 4th atom of each molecule that was carcinogenic. label = '+' means molecules are carcinogenic; 4th atom of each molecule refers to substr(atom_id, 7, 1) = 4; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "282": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label. hydrogen refers to element = 'h'; ratio = DIVIDE(SUM(element = 'h'), count(element)) where molecule_id = 'TR006' ; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "283": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Identify whether the chemical compound that contains Calcium is carcinogenic. calcium refers to element = 'ca'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "284": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Determine the bond type that is formed in the chemical compound containing element Tellurium. Tellurium refers to element = 'te'; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "285": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Name chemical elements that form a bond TR001_10_11. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; TR001_10_11 is the bond id; molecule id refers to SUBSTR(bond_id, 1, 5); atom 1 refers to SUBSTR(bond_id, 7, 2); atom 2 refers to SUBSTR(bond_id, 10, 2)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "286": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among all chemical compounds identified in the database, what percent of compounds form a triple-bond. triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "287": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond. TR047 is the molecule id; double bond refers to bond_type = ' = '; percentage = DIVIDE(SUM(bond_type = ' = '), COUNT(all bond_id)) as percent where molecule_id = 'TR047'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "288": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Identify whether the molecule that contains atom TR001_1 is carcinogenic. label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "289": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Is molecule TR151 carcinogenic? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "290": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which toxic element can be found in the molecule TR151? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "291": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many chemical compounds in the database are identified as carcinogenic. label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "292": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon. carbon refers to element = 'c'; between TR010 to TR050 refers to substr(molecule_id, 3, 3)>10 AND substr(molecule_id, 3, 3) < 50\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "293": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many atoms belong to the molecule labeled with carcinogenic compounds? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "294": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which bond ids are double-bond with carcinogenic compound? label = '+' mean molecules are carcinogenic; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "295": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound? label = '+' mean molecules are carcinogenic; hydrogen refers to element = h'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "296": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Indicate the molecule id is belonging to the TR00_1_2 bond that has the first atom named TR00_1.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "297": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among the atoms that contain element carbon, which one does not contain compound carcinogenic? label = '-' means molecules are non-carcinogenic; carbon refers to element = 'c'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "298": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen. hydrogen refers to element = 'h'; label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+' and element = 'h'), COUNT(molecule_id)) * 100.0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "299": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Is molecule TR124 carcinogenic? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "300": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What atoms comprise TR186? TR186 is a molecule id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "301": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the bond type of TR007_4_19? double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "302": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Name the elements that comprise the atoms of bond TR001_2_4. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "303": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many double bonds does TR006 have and is it carcinogenic? label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "304": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List all carcinogenic molecules and their elements. label = '+' mean molecules are carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "305": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Name all bonds with single bond types and what atoms are connected to the molecules. single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "306": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which molecules have triple bonds and list all the elements they contain. triple bond refers to bond_type = '#'; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "307": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Name the atoms' elements that form bond TR000_2_3. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "308": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many bonds are created by bonding atoms with chlorine element? chlorine refers to element = 'cl'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "309": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List out the atom id that belongs to the TR346 molecule and how many bond type can be created by this molecule?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "310": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound? double bond refers to bond_type = ' = '; label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "311": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many molecules without sulphur element is not having double bond? double bond refers to bond_type = ' = '; bond_type ! = ' = '; sulphur refers to element = 's'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "312": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the carcinogenic label for bond TR001_2_4? label = '+' mean molecules are carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "313": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many atoms belong to molecule id TR005?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "314": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many single bonds are there in the list? single bond refers to bond_type = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "315": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among the molecules which contain \"cl\" element, which of them are carcinogenic? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "316": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among the molecules which contain \"c\" element, which of them are not carcinogenic? label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "317": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Calculate the percentage of carcinogenic molecules which contain the Chlorine element. label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+' and element = 'cl'), COUNT(molecule_id)) as percentage\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "318": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the molecule id of bond id TR001_1_7?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "319": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many elements are contained in bond_id TR001_3_4? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "320": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2? type of bond refers to bond_type; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "321": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "322": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the element of toxicology for the atom with the ID of TR000_1? atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "323": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Is molecule TR000 is carcinogenic or not? label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "324": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Find the percentage of atoms with single bond. single bond refers to bond_type = '-'; percentage = DIVIDE(SUM(bond_type = '-'), COUNT(bond_id)) as percentage\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "325": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many carcinogenic molecules that consisted of Nitrogen? nitrogen refers to element = 'n'; label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "326": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which molecule consisted of Sulphur atom with double bond? sulphur refers to element - 's'; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "327": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which non-carcinogenic molecules consisted more than 5 atoms? label = '-' means molecules are non-carcinogenic; molecules consisted more than 5 atoms refers to COUNT(molecule_id) > 5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "328": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List all the elements with double bond, consisted in molecule TR024. double bond refers to bond_type = '='; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "329": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Which carcinogenic molecule have the highest number of atoms consisted in it? label = '+' mean molecules are carcinogenic; molecule that have the highest number of atoms consisted in in refers to MAX(COUNT(atom.molecule_id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "330": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms. hydrogen refers to element = 'h'; label = '+' mean molecules are carcinogenic; triple bond refers to bond_type = '#'; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) * 100.0 where element = 'h' AND bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "331": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: How many of the molecules are carcinogenic? label = '+' mean molecules are carcinogenic;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "332": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: Among the molecules between TR004 to TR010, how many of them has single bonds? single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "333": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: In the molecule TR008, how many carbons are present? carbon refers to element = 'c'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "334": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic? label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "335": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the total number of molecules with double bonded oxygen? oxygen refers to element = 'o'; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "336": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: in molecules with triple bonds, how many of them are not carcinogenic? triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "337": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List the element and bond type included in the molecule with molecule ID of TR016. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "338": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: What is the atom ID of double bonded carbon in TR012 molecule? carbon refers to element = 'c'; double bond refers to bond_type = ' = ';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "339": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE atom (\natom_id text,\nmolecule_id text,\nelement text,\nPRIMARY KEY (atom_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE bond (\nbond_id text,\nmolecule_id text,\nbond_type text,\nPRIMARY KEY (bond_id),\nFOREIGN KEY (molecule_id) REFERENCES molecule(molecule_id),\n);\nCREATE TABLE connected (\natom_id text,\natom_id2 text,\nbond_id text,\nFOREIGN KEY (atom_id) REFERENCES atom(atom_id),\nFOREIGN KEY (atom_id2) REFERENCES atom(atom_id),\nFOREIGN KEY (bond_id) REFERENCES bond(bond_id),\n);\nCREATE TABLE molecule (\nmolecule_id text,\nlabel text,\nPRIMARY KEY (molecule_id),\n);\n---------------------\nQUESTION: List the atom ID of the carcinogenic molecule that contains oxygen? label = '+' mean molecules are carcinogenic; oxygen refers to element = 'o'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\ttoxicology", "340": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: Which are the cards that have incredibly powerful foils. poweful foils refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "341": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What are the borderless cards available without powerful foils? borderless' refers to borderColor; poweful foils refers to cardKingdomFoilId paired with cardKingdomId AND cardKingdomId is not null\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "342": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: List the card names with value that cost more converted mana for the face. more converted mana for the face refers to Max(faceConvertedManaCost);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "343": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: Name all cards with 2015 frame style ranking below 100 on EDHRec. below 100 on EDHRec refers to EDHRec <100; with 2015 frame style refers to frameVersion = 2015;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "344": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: List all the mythic rarity print cards banned in gladiator format. mythic rarity printing refers to rarity = 'mythic'; card banned refers to status = 'Banned'; in gladiator format refers to format = 'gladiator';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "345": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: For artifact type of cards that do not have multiple faces on the same card, state its legalities for vintage play format. Artifact type of cards refers to types = 'Artifact'; card does not have multiple faces on the same card refers to side is NULL'; vintage play format refers to format = 'vintage';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "346": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: List all the card id and artist with unknown power which are legal for commander play format. unknown power refers to power = '*' or POWER IS NULL; commander play format refers to format = 'commander'; legal for commander play format refers to format = 'commander' where status = 'Legal'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "347": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values. cards have missing or degraded properties and value refers to hasContentWarning = 1; 'Stephen Daniele' is artist;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "348": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: Describe the information about rulings for card named 'Sublime Epiphany' with number 74s. Sublime Epiphany' is name of cards; number 74s refers to number = '74s'; information refers to text;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "349": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: Name the card and artist with the most ruling information. Also state if the card is a promotional printing. with the most ruling information refers to Max(count(rulings.uuid)); the card is the promotional printing refers to isPromo = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "350": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: State the alternative languages available for card named Annul numbered 29. annul refers to name = 'annul'; numbered 29 refers to number = '29';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "351": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: Name all the cards which have alternative language in Japanese. Japanese' is the language;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "352": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: Calculate the percentage of the cards availabe in Chinese Simplified. Chinese Simplified' is the language; percentage = Divide(Sum(id where language = 'Chinese Simplified'), Count(id)) *100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "353": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: List all the sets available in Italian translation. State the total number of cards per set. Italian translation refers to language = 'Italian'; total number of card per set refers to totalSetSize;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "354": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: How many types of cards does the artist Aaron Boyd illustrated about card art? Aaron Boyd' is artist;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "355": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What is the keyword found on card 'Angel of Mercy'? Angel of Mercy' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "356": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: How many cards have infinite power? infinite power refers to power = '*';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "357": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What type of promotion is of card 'Duress'? card Duress refers to name = 'Duress'; type of promotion refers to promoTypes;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "358": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What is the border color of card \"Ancestor's Chosen\"? Ancestor's Chosen' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "359": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What is the type of the card \"Ancestor's Chosen\" as originally printed? Ancestor's Chosen' is the name of card; type of the card as originally printed refers to originaltype;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "360": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in? Angel of Mercy' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "361": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: How many cards of legalities whose status is restricted have text boxes? restricted refers to status = 'restricted'; have text boxes refers to is Textless = 0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "362": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What is the description about the ruling of card \"Condemn\"? Ancestor's Chosen' is the name of card; description about the ruling refers to text;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "363": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: How many cards of legalities whose status is restricted are found in a starter deck? restricted refers to status = 'restricted'; found in the starter deck refers to isStarter = 1;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "364": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What is the status of card \"Cloudchaser Eagle\"? Cloudchaser Eagle is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "365": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What is the type of card \"Benalish Knight\"? Benalish Knight' is the name of card;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "366": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What is the rule of playing card \"Benalish Knight\"? Benalish Knight' is the name of card; rule of playing card refers to format;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "367": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: Please provide the names of the artists who illustrated the card art in Phyrexian. Phyrexian' is the language; name of artists refers to artist;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games", "368": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE cards (\nid integer,\nartist text,\nasciiName text,\navailability text,\nborderColor text,\ncardKingdomFoilId text,\ncardKingdomId text,\ncolorIdentity text,\ncolorIndicator text,\ncolors text,\nconvertedManaCost real,\nduelDeck text,\nedhrecRank integer,\nfaceConvertedManaCost real,\nfaceName text,\nflavorName text,\nflavorText text,\nframeEffects text,\nframeVersion text,\nhand text,\nhasAlternativeDeckLimit integer,\nhasContentWarning integer,\nhasFoil integer,\nhasNonFoil integer,\nisAlternative integer,\nisFullArt integer,\nisOnlineOnly integer,\nisOversized integer,\nisPromo integer,\nisReprint integer,\nisReserved integer,\nisStarter integer,\nisStorySpotlight integer,\nisTextless integer,\nisTimeshifted integer,\nkeywords text,\nlayout text,\nleadershipSkills text,\nlife text,\nloyalty text,\nmanaCost text,\nmcmId text,\nmcmMetaId text,\nmtgArenaId text,\nmtgjsonV4Id text,\nmtgoFoilId text,\nmtgoId text,\nmultiverseId text,\nname text,\nnumber text,\noriginalReleaseDate text,\noriginalText text,\noriginalType text,\notherFaceIds text,\npower text,\nprintings text,\npromoTypes text,\npurchaseUrls text,\nrarity text,\nscryfallId text,\nscryfallIllustrationId text,\nscryfallOracleId text,\nsetCode text,\nside text,\nsubtypes text,\nsupertypes text,\ntcgplayerProductId text,\ntext text,\ntoughness text,\ntype text,\ntypes text,\nuuid text,\nvariations text,\nwatermark text,\nPRIMARY KEY (id),\n);\nCREATE TABLE foreign_data (\nid integer,\nflavorText text,\nlanguage text,\nmultiverseid integer,\nname text,\ntext text,\ntype text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE legalities (\nid integer,\nformat text,\nstatus text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\nCREATE TABLE sets (\nid integer,\nbaseSetSize integer,\nblock text,\nbooster text,\ncode text,\nisFoilOnly integer,\nisForeignOnly integer,\nisNonFoilOnly integer,\nisOnlineOnly integer,\nisPartialPreview integer,\nkeyruneCode text,\nmcmId integer,\nmcmIdExtras integer,\nmcmName text,\nmtgoCode text,\nname text,\nparentCode text,\nreleaseDate date,\ntcgplayerGroupId integer,\ntotalSetSize integer,\ntype text,\nPRIMARY KEY (id),\n);\nCREATE TABLE set_translations (\nid integer,\nlanguage text,\nsetCode text,\ntranslation text,\nPRIMARY KEY (id),\nFOREIGN KEY (setCode) REFERENCES sets(code),\n);\nCREATE TABLE rulings (\nid integer,\ndate date,\ntext text,\nuuid text,\nPRIMARY KEY (id),\nFOREIGN KEY (uuid) REFERENCES cards(uuid),\n);\n---------------------\nQUESTION: What is the percentage of borderless cards? borderless card refers to borderColor = 'borderless'; percentage = Divide(Count (id) where borderColor = 'borderless', Count(id)) *100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\n\t----- bird -----\tcard_games"}