{"1024": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which league had the most goals in the 2016 season? league that had the most goals refers to MAX(SUM(home_team_goal, away_team_goal)); 2016 season refers to season = '2015/2016';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT l.name AS league_name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals\nFROM table_6 m\nJOIN table_4 t ON m.home_team_api_id = t.team_api_id OR m.away_team_api_id = t.team_api_id\nJOIN table_5 tm ON t.team_fifa_api_id\n\t----- bird -----\teuropean_football_2", "1025": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which home team had lost the fewest matches in the 2016 season? home team lost the matches refers to SUBTRACT(home_team_goal, away_team_goal) < 0; 2016 season refers to season = '2015/2016';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT home_team_api_id, COUNT(*) AS lost_matches\nFROM table_6\nWHERE season = '2015/2016' AND SUBTRACT(home_team_goal, away_team_goal) < 0\nGROUP BY home_team_api_id\nORDER BY lost_matches ASC\nLIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1026": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Indicate the full names of the top 10 players with the highest number of penalties. full name refers to player_name; players with highest number of penalties refers to MAX(penalties);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name AS full_name, t0.penalties AS penalties\nFROM table_0 AS t0\nJOIN table_1 AS t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nGROUP BY t1.player_name\nORDER BY penalties DESC\nLIMIT 10;\nend_sql\n\t----- bird -----\teuropean_football_2", "1027": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: In Scotland Premier League, which away team won the most during the 2010 season? Scotland Premier League refers to League.name = 'Scotland Premier League'; away team refers to away_team_api_id; away team that won the most refers to MAX(SUBTRACT(away_team_goal, home_team_goal) > 0); 2010 season refers to season = '2009/2010';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT(table_4.team_long_name) AS away_team_name, COUNT(*) AS wins\nFROM table_6\nJOIN table_4 ON table_6.away_team_api_id = table_4.team_api_id\nJOIN table_2 ON table_4.country_id = table_2.country_id\nJOIN table_3 ON table_2.country_id = table_3.\n\t----- bird -----\teuropean_football_2", "1028": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed? speed in which attacks are put together refers to buildUpPlaySpeed;highest build up play speed refers to MAX(buildUpPlaySpeed)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t4.team_long_name, t5.buildUpPlaySpeed, t6.date, t6.home_team_goal, t6.away_team_goal\nFROM table_4 t4\nJOIN table_5 t5 ON t4.team_fifa_api_id = t5.team_fifa_api_id\nJOIN table_6 t6 ON t4.team_api_id = t6\n\t----- bird -----\teuropean_football_2", "1029": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which League had the most matches end as draw in the 2016 season? most matches end as draw refers to MAX(SUM(home_team_goal = away_team_goal)); 2016 season refers to season = '2015/2016';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t3.name AS league_name, COUNT(*) AS draw_count\nFROM table_6 t6\nJOIN table_4 t4 ON t6.home_team_api_id = t4.team_api_id OR t6.away_team_api_id = t4.team_api_id\nJOIN table_5 t5 ON t4.team_fifa_api_id = t5.team_fifa\n\t----- bird -----\teuropean_football_2", "1030": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015. players age at present = SUBTRACT((DATETIME(), birthday)); sprint_speed > = 97; between 2013 to 2015 refers to date > = '2013-01-01 00:00:00' AND date < = '2015-12-31 00:00:00';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS player_count\nFROM table_0 AS t0\nJOIN table_1 AS t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE SUBTRACT((DATETIME(), t1.birthday)) >= 20 AND SUBTRACT((DATETIME(), t1.birthday)) <= 22\nAND t0.sprint_speed >= 97\nAND t0.date >=\n\t----- bird -----\teuropean_football_2", "1031": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Give the name of the league with the highest matches of all time and how many matches were played in the said league. name of the league refers to League.name; league with highest matches of all time refers to MAX(COUNT(league_id));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT League.name, COUNT(League.league_id) AS matches_played\nFROM League\nJOIN Match ON League.league_id = Match.league_id\nGROUP BY League.name\nORDER BY matches_played DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1032": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the average height of players born between 1990 and 1995? average height = DIVIDE(SUM(height), COUNT(id)); players born between 1990 and 1995 refers to birthday > = '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(height) AS average_height\nFROM table_1\nWHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\nend_sql\n\t----- bird -----\teuropean_football_2", "1033": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List the players' api id who had the highest above average overall ratings in 2010. highest above average overall ratings refers to MAX(overall_rating); in 2010 refers to substr(date,1,4) = '2010';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT player_fifa_api_id\nFROM table_0\nWHERE substr(date,1,4) = '2010' AND overall_rating = (SELECT MAX(overall_rating) FROM table_0 WHERE substr(date,1,4) = '2010')\nend_sql\n\t----- bird -----\teuropean_football_2", "1034": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed. teams with more than 50 but less than 60 build-up play speed refers to buildUpPlaySpeed BETWEEN 51 AND 59;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT team_fifa_api_id\nFROM table_5\nWHERE buildUpPlaySpeed BETWEEN 51 AND 59;\nend_sql\n\t----- bird -----\teuropean_football_2", "1035": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List the long name of teams with above-average build-up play passing in 2012. long name of teams refers to team_long_name; build-up play passing refers to buildUpPlayPassing; above-average build-up play passing = DIVIDE(SUM(buildUpPlayPassing), COUNT(team_long_name) WHERE buildUpPlayPassing IS NOT NULL) < buildUpPlayPassing; in 2012 refers to strftime('%Y', date) = '2012';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t4.team_long_name\nFROM table_6 t6\nJOIN table_4 t4 ON t6.home_team_api_id = t4.team_api_id\nWHERE strftime('%Y', t6.date) = '2012'\nAND t6.buildUpPlayPassing > (\n    SELECT AVG(t6.buildUpPlayPassing)\n    FROM table_6 t6\n\t----- bird -----\teuropean_football_2", "1036": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992. players who prefer left foot refers to preferred_foot = 'left'; percentage of players who prefer left foot = DIVIDE(MULTIPLY((SUM(preferred_foot = 'left'), 1.0)), COUNT(player_fifa_api_id)); born between 1987 and 1992 refers to birthday BETWEEN '1987-01-01 00:00:00'AND '1992-12-31 00:00:00';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(MULTIPLY((SUM(preferred_foot = 'left'), 1.0)), COUNT(player_fifa_api_id)) AS percentage_left_foot_players_born_1987_to_1992\nFROM table_0\nWHERE birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31\n\t----- bird -----\teuropean_football_2", "1037": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List the top 5 leagues in ascending order of the number of goals made in all seasons combined. number of goals made in all seasons combine = SUM(home_team_goal, away_team_goal);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT l.name AS league_name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals\nFROM table_2 AS c\nJOIN table_3 AS ct ON c.country_id = ct.id\nJOIN table_6 AS m ON ct.id = m.league_id\nJOIN table_4 AS t ON m.home_team_api_id = t.team_api\n\t----- bird -----\teuropean_football_2", "1038": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Find the average number of long-shot done by Ahmed Samir Farag. average number of long shot = DIVIDE(SUM(long_shots), COUNT(player_fifa_api_id));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(long_shots) AS average_long_shots\nFROM table_0\nWHERE EXISTS (\n    SELECT 1\n    FROM table_1\n    WHERE player_name = 'Ahmed Samir Farag' AND table_1.player_fifa_api_id = table_0.player_fifa_api_id\n);\nend_sql\n\t----- bird -----\teuropean_football_2", "1039": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy. height > 180; average heading accuracy = DIVIDE(SUM(heading_accuracy), COUNT(player_fifa_api_id));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name, AVG(t0.heading_accuracy) AS avg_heading_accuracy\nFROM table_0 AS t0\nJOIN table_1 AS t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t1.height > 180\nGROUP BY t1.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10\n\t----- bird -----\teuropean_football_2", "1040": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing. normal build-up play dribbling class refers to buildUpPlayDribblingClass = 'Normal'; in 2014 refers to date > = '2014-01-01 00:00:00' AND date < = '2014-01-31 00:00:00'; names of the teams refers to team_long_name; less than average chance creation passing = DIVIDE(SUM(chanceCreationPassing), COUNT(id)) > chanceCreationPassing;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t4.team_long_name\nFROM table_4 t4\nJOIN table_5 t5 ON t4.team_fifa_api_id = t5.team_fifa_api_id\nWHERE t5.buildUpPlayDribblingClass = 'Normal'\nAND t5.date >= '2014-01-01 00:00:00'\nAND t5.date <=\n\t----- bird -----\teuropean_football_2", "1041": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season. name of league refers to League.name; average goals by the home team is higher than the away team = AVG(home_team_goal) > AVG(away_team_goal);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT League.name\nFROM League\nJOIN Match ON League.id = Match.league_id\nWHERE Match.season = '2009/2010'\nGROUP BY League.name\nHAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal);\nend_sql\n\t----- bird -----\teuropean_football_2", "1042": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the short name of the football team Queens Park Rangers? short name of the football team refers to team_short_name; Queens Park Rangers refers to team_long_name = 'Queens Park Rangers';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT team_short_name\nFROM table_4\nWHERE team_long_name = 'Queens Park Rangers';\nend_sql\n\t----- bird -----\teuropean_football_2", "1043": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List the football players with a birthyear of 1970 and a birthmonth of October. players with a birthyear of 1970 and a birthmonth of October refers to substr(birthday,1,4) AS year, substr(birthday,6,2) AS month WHERE year = '1970' AND month = '10';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, birthday FROM table_1 WHERE substr(birthday,1,4) = '1970' AND substr(birthday,6,2) = '10';\nend_sql\n\t----- bird -----\teuropean_football_2", "1044": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the attacking work rate of the football playerr Franco Zennaro?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.attacking_work_rate\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nWHERE table_1.player_name = 'Franco Zennaro';\nend_sql\n\t----- bird -----\teuropean_football_2", "1045": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch? ADO Den Haag refers to team_long_name = 'ADO Den Haag'; freedom of movement in the 1st two thirds of the pitch refers to buildUpPlayPositioningClass;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(buildUpPlayPositioningClass) AS ADO_Den_Haag_Freedom_of_Movement_in_the_1st_two_thirds_of_the_pitch\nFROM table_5\nWHERE team_long_name = 'ADO Den Haag' AND date BETWEEN '2022-01-01' AND '2022-03-31';\nend_sql\n\t----- bird -----\teuropean_football_2", "1046": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the football player Francois Affolter header's finishing rate on 18/09/2014? header's finishing rate refers to heading_accuracy; on 18/09/2014 refers to date = '2014-09-18 00:00:00';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name, t0.heading_accuracy\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nJOIN table_6 t6 ON t0.player_fifa_api_id = t6.home_player_1 OR t0.player_fifa_api_id = t6.home_player\n\t----- bird -----\teuropean_football_2", "1047": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the overall rating of the football player Gabriel Tamas in year 2011? in year 2011 refers to strftime('%Y', date) = '2011';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t0.overall_rating\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t1.player_name = 'Gabriel Tamas' AND strftime('%Y', t0.date) = '2011';\nend_sql\n\t----- bird -----\teuropean_football_2", "1048": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many matches in the 2015/2016 season were held in Scotland Premier League\n? Scotland Premier League refers to League.name = 'Scotland Premier League';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS matches_in_scottish_premier_league\nFROM table_6\nWHERE season = '2015/2016' AND league_id = (SELECT id FROM table_2 WHERE name = 'Scotland Premier League');\nend_sql\n\t----- bird -----\teuropean_football_2", "1049": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the preferred foot when attacking of the youngest football player? preferred foot when attacking refers to preferred_foot; youngest football player refers to latest birthday;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name, t0.preferred_foot\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t1.birthday = (SELECT MAX(birthday) FROM table_1);\nend_sql\n\t----- bird -----\teuropean_football_2", "1050": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List all the football player with the highest potential score. potential score refers to potential; highest potential score refers to MAX(potential);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, potential\nFROM table_1\nORDER BY potential DESC;\nend_sql\n\t----- bird -----\teuropean_football_2", "1051": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Among all the players whose weight is under 130, how many of them preferred foot in attacking is left? weight < 130; preferred foot in attacking refers to preferred_foot; preferred_foot = 'left';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE weight < 130 AND preferred_foot = 'left';\nend_sql\n\t----- bird -----\teuropean_football_2", "1052": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List the football teams that has a chance creation passing class of Risky. Inidcate its short name only. chance creation passing class refers to chanceCreationPassingClass; chanceCreationPassingClass = 'Risky'; short name refers to team_short_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT team_short_name\nFROM table_4 t4\nJOIN table_5 t5 ON t4.team_fifa_api_id = t5.team_fifa_api_id\nWHERE t5.chanceCreationPassingClass = 'Risky';\nend_sql\n\t----- bird -----\teuropean_football_2", "1053": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the defensive work rate of the football player David Wilson\n?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.defensive_work_rate\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nWHERE table_1.player_name = 'David Wilson';\nend_sql\n\t----- bird -----\teuropean_football_2", "1054": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: When is the birthday of the football player who has the highest overall rating? football player who has the highest overall rating refers to MAX(overall_rating);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT birthday FROM table_1 WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM table_0 WHERE overall_rating = (SELECT MAX(overall_rating) FROM table_0));\nend_sql\n\t----- bird -----\teuropean_football_2", "1055": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the name of the football league in the country of Netherlands? name of the football league refers to League.name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT League.name\nFROM League\nJOIN Country ON League.country_id = Country.id\nWHERE Country.name = 'Netherlands';\nend_sql\n\t----- bird -----\teuropean_football_2", "1056": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Calculate the average home team goal in the 2010/2011 season in the country of Poland. average home team goal = AVG(home_team_goal) WHERE name = 'Poland' and season = '2010/2011';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(home_team_goal) AS average_home_team_goal\nFROM table_6\nJOIN table_4 ON table_6.home_team_api_id = table_4.team_api_id\nJOIN table_2 ON table_4.team_country_id = table_2.country_id\nJOIN table_3 ON table_2.country_id = table_3.id\nWHERE table_\n\t----- bird -----\teuropean_football_2", "1057": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Who has the highest average finishing rate between the highest and shortest football player? finishing rate refers to finishing; highest average finishing rate = MAX(AVG(finishing)); highest football player refers to MAX(height); shortest football player refers to MIN(height);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.player_name, AVG(t0.finishing) AS avg_finishing_rate\nFROM table_0 AS t0\nJOIN table_1 AS t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t1.height = (SELECT MAX(height) FROM table_1) OR t1.height = (SELECT MIN(height) FROM table_1)\n\t----- bird -----\teuropean_football_2", "1058": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please list player names which are higher than 180. height>180;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name\nFROM table_1\nWHERE height > 180;\nend_sql\n\t----- bird -----\teuropean_football_2", "1059": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many players were born after 1990? born after 1990 refers to strftime('%Y', birthday) = '1990';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS players_born_after_1990\nFROM table_1\nWHERE strftime('%Y', birthday) = '1990';\nend_sql\n\t----- bird -----\teuropean_football_2", "1060": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many players whose first names are Adam and weigh more than 170? team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 AS t1\nJOIN table_0 AS t0 ON t1.player_api_id = t0.player_api_id\nJOIN table_4 AS t4 ON t0.team_fifa_api_id = t4.team_fifa_api_id\nJOIN table_5 AS t5 ON t4.team_fifa_api_id = t5.team_fifa_api\n\t----- bird -----\teuropean_football_2", "1061": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which players had an overall rating of over 80 from 2008 to 2010? Please list player names. overall_rating > 80; from 2008 to 2010 refers to strftime('%Y', date) BETWEEN '2008' AND '2010';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.player_name\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t0.overall_rating > 80 AND strftime('%Y', t0.date) BETWEEN '2008' AND '2010';\nend_sql\n\t----- bird -----\teuropean_football_2", "1062": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is Aaron Doran's potential score? potential score refers to potential;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT potential FROM table_0 WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM table_1 WHERE player_name = 'Aaron Doran');\nend_sql\n\t----- bird -----\teuropean_football_2", "1063": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List out of players whose preferred foot is left. preferred_foot = 'left';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT * FROM table_1 WHERE preferred_foot = 'left';\nend_sql\n\t----- bird -----\teuropean_football_2", "1064": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please list all team names which the speed class is fast. team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t.team_long_name\nFROM table_4 t\nJOIN table_5 ts ON t.team_fifa_api_id = ts.team_fifa_api_id\nWHERE ts.buildUpPlaySpeedClass = 'Fast';\nend_sql\n\t----- bird -----\teuropean_football_2", "1065": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the passing class of CLB team? passing class refers to buildUpPlayPassingClass; CLB refers to team_short_name = 'CLB';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT buildUpPlayPassingClass\nFROM table_4\nJOIN table_5 ON table_4.team_fifa_api_id = table_5.team_fifa_api_id\nWHERE table_4.team_short_name = 'CLB';\nend_sql\n\t----- bird -----\teuropean_football_2", "1066": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which teams have build up play passing more than 70? Please list their short names. build up play passing refers to buildUpPlayPassing; buildUpPlayPassing > 70; short names refers to team_short_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t4.team_short_name\nFROM table_4 t4\nJOIN table_5 t5 ON t4.team_fifa_api_id = t5.team_fifa_api_id\nWHERE t5.buildUpPlayPassing > 70;\nend_sql\n\t----- bird -----\teuropean_football_2", "1067": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: From 2010 to 2015, what was the average overall rating of players who are higher than 170? from 2010 to 2015 refers to strftime('%Y', date) BETWEEN '2010' AND '2015'; height > 170;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(overall_rating) AS average_rating\nFROM table_0\nWHERE strftime('%Y', date) BETWEEN '2010' AND '2015'\nAND height > 170;\nend_sql\n\t----- bird -----\teuropean_football_2", "1068": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which football player has the shortest height? shortest height refers to MIN(height);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name FROM table_1 ORDER BY height LIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1069": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which country is the league Italy Serie A from? Italy Serie A from refers to League.name = 'Italy Serie A';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT country.name\nFROM table_2 AS league\nJOIN table_3 AS country ON league.country_id = country.id\nWHERE league.name = 'Italy Serie A';\nend_sql\n\t----- bird -----\teuropean_football_2", "1070": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team. build up play speed refers to buildUpPlaySpeed; buildUpPlaySpeed = 31; build up play dribbling refers to buildUpPlayDribbling; buildUpPlayDribbling = 53; build up play passing refers to buildUpPlayPassing; buildUpPlayPassing = 32; short name of the team refers to team_short_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT team_short_name\nFROM table_5\nWHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\nend_sql\n\t----- bird -----\teuropean_football_2", "1071": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the average overall rating of the football player Aaron Doran? average overall rating = AVG(overall_rating);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM table_0\nWHERE EXISTS (\n    SELECT 1\n    FROM table_1\n    WHERE table_1.player_name = 'Aaron Doran' AND table_1.player_api_id = table_0.player_api_id\n);\nend_sql\n\t----- bird -----\teuropean_football_2", "1072": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008? Germany 1. Bundesliga refers to League.name = 'Germany 1. Bundesliga'; from August to October 2008 refers to strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS matches_count\nFROM table_6\nWHERE EXISTS (\n    SELECT 1\n    FROM table_2\n    JOIN table_3 ON table_2.country_id = table_3.id\n    WHERE table_2.name = 'Germany 1. Bundesliga' AND table_3.name = 'Germany'\n)\nAND strftime('%Y-%m', date) BETWEEN '2008-08\n\t----- bird -----\teuropean_football_2", "1073": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List all the short name of the football team that had a home team goal of 10? short name of the football team refers to team_short_name; home team goal refers to home_team_goal; home_team_goal = 10;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT team_short_name\nFROM table_4\nJOIN table_6 ON table_4.team_api_id = table_6.home_team_api_id\nWHERE home_team_goal = 10;\nend_sql\n\t----- bird -----\teuropean_football_2", "1074": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List all the football player with the highest balance score and potential score of 61. balance score refers to balance; highest balance score refers to MAX(balance); potential score refers to potential; potential = 61;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, balance, potential\nFROM table_1 t1\nJOIN table_0 t0 ON t1.player_api_id = t0.player_api_id\nWHERE potential = 61 AND balance = (SELECT MAX(balance) FROM table_0 WHERE potential = 61)\nORDER BY player_name;\nend_sql\n\t----- bird -----\teuropean_football_2", "1075": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n? difference of the average ball control = SUBTRACT(AVG(ball_control WHERE player_name = 'Abdou Diallo'),\u00a0AVG(ball_control WHERE player_name = 'Aaron Appindangoye'));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(ball_control) AS AbdouDialloAvgBallControl, AVG(ball_control) AS AaronAppindangoyeAvgBallControl, AVG(ball_control) AS Difference\nFROM table_0\nWHERE player_name IN ('Abdou Diallo', 'Aaron Appindangoye')\nGROUP BY player_name;\nend_sql\n\t----- bird -----\teuropean_football_2", "1076": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What's the long name for the team GEN? long name for the team refers to team_long_name; team_short_name = 'GEN';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT team_long_name FROM table_4 WHERE team_short_name = 'GEN';\nend_sql\n\t----- bird -----\teuropean_football_2", "1077": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which player is older, Aaron Lennon or Abdelaziz Barrada? older player refers to older birthday;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, birthday FROM table_1 WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC;\nend_sql\n\t----- bird -----\teuropean_football_2", "1078": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which player is the tallest? tallest player refers to MAX(height);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, height\nFROM table_1\nWHERE height = (SELECT MAX(height) FROM table_1);\nend_sql\n\t----- bird -----\teuropean_football_2", "1079": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked? preferred foot when attacking refers to preferred foot; preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\nend_sql\n\t----- bird -----\teuropean_football_2", "1080": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which country is the Belgium Jupiler League from? Belgium Jupiler League refers to League.name = 'Belgium Jupiler League';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t3.name AS country_name\nFROM table_2 t2\nJOIN table_3 t3 ON t2.country_id = t3.id\nJOIN table_4 t4 ON t2.league_id = t4.team_fifa_api_id\nWHERE t4.team_long_name = 'Belgium Jupiler League';\nend_sql\n\t----- bird -----\teuropean_football_2", "1081": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please list the leagues from Germany. Germany refers to Country.name = 'Germany';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t5.name AS league_name\nFROM table_2 t2\nJOIN table_3 t3 ON t2.country_id = t3.id\nJOIN table_5 t5 ON t5.team_fifa_api_id = t2.league_id\nWHERE t3.name = 'Germany';\nend_sql\n\t----- bird -----\teuropean_football_2", "1082": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which player has the strongest overall strength? overall strength refers to overall_rating; strongest overall strength refers to MAX(overall_rating);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, MAX(overall_rating) AS strongest_overall_strength\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nGROUP BY player_name\nORDER BY strongest_overall_strength DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1083": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked? players born before the year 1986 refers to strftime('%Y', birthday)<'1986'; players who would remain in his position and defense while the team attacked refers to defensive_work_rate = 'high';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0 AS t0\nJOIN table_1 AS t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE strftime('%Y', t1.birthday) < '1986' AND t0.defensive_work_rate = 'high';\nend_sql\n\t----- bird -----\teuropean_football_2", "1084": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which of these players performs the best in crossing actions, Alexis, Ariel Borysiuk or Arouna Kone? player who perform best in crossing actions refers to MAX(crossing);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, MAX(crossing) AS max_crossing\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nWHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\nGROUP BY player_name\nORDER BY max_crossing DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1085": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What's the heading accuracy of Ariel Borysiuk?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.heading_accuracy\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nWHERE table_1.player_name = 'Ariel Borysiuk';\nend_sql\n\t----- bird -----\teuropean_football_2", "1086": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Among the players whose height is over 180, how many of them have a volley score of over 70? height > 180; volley score refers to volleys; volleys > 70;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t1.height > 180 AND t0.volleys > 70;\nend_sql\n\t----- bird -----\teuropean_football_2", "1087": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please list the names of the players whose volley score and dribbling score are over 70. volley score refers to volleys; volleys > 70; dribbling score refers to dribbling; dribbling > 70;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t0.volleys > 70 AND t0.dribbling > 70;\nend_sql\n\t----- bird -----\teuropean_football_2", "1088": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many matches in the 2008/2009 season were held in Belgium? Belgium refers to Country.name = 'Belgium';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS matches_in_belgium\nFROM table_6\nWHERE season = '2008/2009' AND country_id = (SELECT id FROM table_3 WHERE name = 'Belgium');\nend_sql\n\t----- bird -----\teuropean_football_2", "1089": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the long passing score of the oldest player? long passing score refers to long_passing; oldest player refers to oldest birthday;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name, t0.long_passing\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t1.birthday = (SELECT MIN(birthday) FROM table_1);\nend_sql\n\t----- bird -----\teuropean_football_2", "1090": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many matches were held in the Belgium Jupiler League in April, 2009? Belgium Jupiler League refers to League.name = 'Belgium Jupiler League';\u00a0in April, 2009 refers to strftime('%Y', date) = '2009' AND strftime('%m', date) = '04';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS matches_count\nFROM table_6\nWHERE EXISTS (\n    SELECT 1\n    FROM table_2\n    JOIN table_3 ON table_2.country_id = table_3.id\n    WHERE table_2.name = 'Belgium Jupiler League' AND table_3.name = 'Belgium'\n)\nAND EXISTS (\n    SELECT 1\n    FROM table_5\n    WHERE strftime\n\t----- bird -----\teuropean_football_2", "1091": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which league had the most matches in the 2008/2009 season? league that had the most matches in the 2008/2009 season refers to MAX(league_id WHERE season = '2008/2009');\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT league_id, COUNT(*) AS matches_played\nFROM table_6\nWHERE season = '2008/2009'\nGROUP BY league_id\nORDER BY matches_played DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1092": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the average overall rating of the players born before the year 1986? average overall rating = DIVIDE(SUM(overall_rating), COUNT(id)); born before the year 1986 refers to strftime('%Y', birthday) < '1986';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM table_1 AS t1\nJOIN table_0 AS t0 ON t1.player_api_id = t0.player_api_id\nWHERE strftime('%Y', t1.birthday) < '1986';\nend_sql\n\t----- bird -----\teuropean_football_2", "1093": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel? how much higher in percentage = MULTIPLY(DIVIDE(SUBTRACT(overall_rating WHERE player_name = 'Ariel Borysiuk', overall_rating WHERE player_name = 'Paulin Puel'), overall_rating WHERE player_name = 'Paulin Puel'), 100);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MULTIPLY(DIVIDE(SUBTRACT(t0.overall_rating, t1.overall_rating), t1.overall_rating), 100) AS percentage_difference\nFROM table_1 t1\nJOIN table_0 t0 ON t1.player_api_id = t0.player_api_id\nWHERE t1.player_name = 'Paulin Puel' AND t0.player_name =\n\t----- bird -----\teuropean_football_2", "1094": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How much is the average build up play speed of the Heart of Midlothian team? Heart of Midlothian refers to team_long_name = 'Heart of Midlothian'; average build up play speed refers to\u00a0 AVG(buildUpPlaySpeed)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed\nFROM table_5\nJOIN table_4 ON table_5.team_fifa_api_id = table_4.team_fifa_api_id\nWHERE table_4.team_long_name = 'Heart of Midlothian';\nend_sql\n\t----- bird -----\teuropean_football_2", "1095": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Calculate the average overall rating of Pietro Marino. Pietro Marino refers to player_name = 'Pietro Marino'; average overall rating AVG(T1.overall_rating)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(T1.overall_rating) AS avg_overall_rating\nFROM table_0 AS T0\nJOIN table_1 AS T1 ON T0.player_fifa_api_id = T1.player_fifa_api_id\nWHERE T1.player_name = 'Pietro Marino';\nend_sql\n\t----- bird -----\teuropean_football_2", "1096": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is Aaron Lennox's total crossing score? Aaron Lennox's refers to T2.player_name = 'Aaron Lennox'; total crossing score refers to SUM(crossing)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(crossing) AS total_crossing_score\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nWHERE table_1.player_name = 'Aaron Lennox';\nend_sql\n\t----- bird -----\teuropean_football_2", "1097": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is Ajax's highest chance creation passing score and what is it classified as? Ajax's refers to team_long_name = 'Ajax'; chance creation passing score refers to MAX(chanceCreationPassing); classified as chanceCreationPassingClass\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(chanceCreationPassing), chanceCreationPassingClass\nFROM table_6\nJOIN table_4 ON table_6.home_team_api_id = table_4.team_api_id OR table_6.away_team_api_id = table_4.team_api_id\nWHERE table_4.team_long_name = 'Ajax';\nend_sql\n\t----- bird -----\teuropean_football_2", "1098": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which foot is preferred by Abdou Diallo? Abdou Diallo refers to player_name = 'Abdou Diallo'; foot is preferred refers to preferred_foot\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT preferred_foot FROM table_1 WHERE player_name = 'Abdou Diallo';\nend_sql\n\t----- bird -----\teuropean_football_2", "1099": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the highest overall rating received by Dorlan Pabon? Dorlan Pabon refers to T2.player_name = 'Dorlan Pabon'; highest overall rating refers to MAX(overall_rating)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(overall_rating) AS highest_overall_rating\nFROM table_0\nWHERE EXISTS (\n    SELECT 1\n    FROM table_1\n    WHERE table_1.player_name = 'Dorlan Pabon' AND table_1.player_api_id = table_0.player_api_id\n);\nend_sql\n\t----- bird -----\teuropean_football_2", "1100": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the average number of goals made by Parma as the away team while playing in Italy? Parma refers to team_long_name = 'Parma'; average number of goals refers to AVG(away_team_goal)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(away_team_goal) AS avg_goals\nFROM table_6\nJOIN table_4 ON table_6.away_team_api_id = table_4.team_api_id\nJOIN table_2 ON table_4.team_country_id = table_2.country_id\nJOIN table_3 ON table_2.country_name = table_3.country_name\nWHERE table_4.\n\t----- bird -----\teuropean_football_2", "1101": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player. 77 points overall rating refers to overall_rating = 77; on 2016/6/23; oldest refers to MIN(birthday)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t0.overall_rating = 77 AND t0.date = '2016-06-23'\nORDER BY t1.birthday ASC\nLIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1102": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What was the overall rating for Aaron Mooy on 2016/2/4? Aaron Mooy refers to player_name = 'Aaron Mooy'; on 2016/2/4 refers to date = '2016-02-04 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t0.overall_rating\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t1.player_name = 'Aaron Mooy' AND t0.date = '2016-02-04 00:00:00';\nend_sql\n\t----- bird -----\teuropean_football_2", "1103": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What was the potiential for Francesco Parravicini on 2010/8/30? Francesco Parravicini refers to player_name = 'Francesco Parravicini'; on 2010/8/30 refers to date = '2010-08-30 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT potential FROM table_0 WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';\nend_sql\n\t----- bird -----\teuropean_football_2", "1104": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How was Francesco Migliore's attacking work rate on 2015/5/1? Francesco Migliore's\u00a0 refers to player_name = 'Francesco Migliore'; on 2015/5/1 refers to date = '2015-05-01 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.attacking_work_rate\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nWHERE table_1.player_name = 'Francesco Migliore' AND table_0.date = '2015-05-01 00:00:00';\nend_sql\n\t----- bird -----\teuropean_football_2", "1105": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Tell the defensive work rate for Kevin Berigaud on 2013/2/22. Kevin Berigaud refers to player_name = 'Kevin Berigaud'; on 2013/2/22 refers to date = '2013-02-22 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.defensive_work_rate\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nWHERE table_1.player_name = 'Kevin Berigaud' AND table_0.date = '2013-02-22 00:00:00';\nend_sql\n\t----- bird -----\teuropean_football_2", "1106": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: When was the first time did Kevin Constant have his highest crossing score? Give the date. Kevin Constant refers to player_name = 'Kevin Constant'; highest crossing score refers to MAX(crossing)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MIN(t6.date) AS first_date_highest_crossing\nFROM table_1 t1\nJOIN table_6 t6 ON t1.player_api_id = t6.home_player_X1\nWHERE t1.player_name = 'Kevin Constant'\nAND t6.crossing = (SELECT MAX(crossing) FROM table_6 WHERE home_player_X1 = t1.player_api_id\n\t----- bird -----\teuropean_football_2", "1107": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What was the build up play speed class for \"Willem II\" on 2011/2/22? \"Willem II\" refers to team_long_name = 'Willem II'; on 2011/2/22 refers to date = '2012-02-22 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t5.buildUpPlaySpeedClass\nFROM table_4 t4\nJOIN table_5 t5 ON t4.team_fifa_api_id = t5.team_fifa_api_id\nJOIN table_6 t6 ON t4.team_api_id = t6.home_team_api_id OR t4.team_api_id = t6.away_team_api_id\nWHERE t\n\t----- bird -----\teuropean_football_2", "1108": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How was the build up play dribbling class for \"LEI\" on 2015/9/10? \"LEI\" refers to team_short_name = 'LEI'; on 2015/9/10 refers to\u00a0 date = '2015-09-10 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_5.buildUpPlayDribblingClass\nFROM table_4\nJOIN table_5 ON table_4.team_fifa_api_id = table_5.team_fifa_api_id\nJOIN table_6 ON table_6.home_team_api_id = table_4.team_api_id OR table_6.away_team_api_id = table_4.team_api_id\n\n\t----- bird -----\teuropean_football_2", "1109": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22. \"FC Lorient\" refers to team_long_name = 'FC Lorient'; on 2010/2/22\u00a0 refers to date = '2010-02-22\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_5.buildUpPlayPassingClass\nFROM table_4\nJOIN table_5 ON table_4.team_fifa_api_id = table_5.team_fifa_api_id\nJOIN table_6 ON table_6.home_team_api_id = table_4.team_api_id OR table_6.away_team_api_id = table_4.team_api_id\nWHERE\n\t----- bird -----\teuropean_football_2", "1110": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20. \"PEC Zwolle\" refers to team_long_name = 'PEC Zwolle'; on 2013/9/20 refers to date = '2013-09-20 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_5.chanceCreationPassingClass\nFROM table_4\nJOIN table_5 ON table_4.team_fifa_api_id = table_5.team_fifa_api_id\nJOIN table_6 ON table_6.home_team_api_id = table_4.team_api_id OR table_6.away_team_api_id = table_4.team_api_id\nWHERE table\n\t----- bird -----\teuropean_football_2", "1111": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What was the chance creation crossing class for \"Hull City\" on 2010/2/22? \"Hull City\" refers to team_long_name = 'Hull City'; on 2010/2/22 refers to date = '2010-02-22 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT chance_creation_crossing_class\nFROM table_6\nJOIN table_4 ON table_6.home_team_api_id = table_4.team_api_id OR table_6.away_team_api_id = table_4.team_api_id\nWHERE table_4.team_long_name = 'Hull City' AND table_6.date = '2010-02-2\n\t----- bird -----\teuropean_football_2", "1112": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10? \"Hannover 96\" refers to team_long_name = 'Hannover 96'; on 2015/9/10 refers to date = '2015-09-10 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t5.defence_aggression_class\nFROM table_4 t4\nJOIN table_5 t5 ON t4.team_fifa_api_id = t5.team_fifa_api_id\nJOIN table_6 t6 ON t4.team_api_id = t6.home_team_api_id OR t4.team_api_id = t6.away_team_api_id\nWHERE\n\t----- bird -----\teuropean_football_2", "1113": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21? average overall rating refers to avg(overall_rating); Marko Arnautovic refers to player_name = 'Marko Arnautovic'; from 2007/2/22 to 2016/4/21 refers to date BETWEEN '2007-02-22 00:00:00' and '2016-04-21 00:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(overall_rating) AS avg_overall_rating\nFROM table_0\nWHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00';\nend_sql\n\t----- bird -----\teuropean_football_2", "1114": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12? Landon Donovan's refers to player_name = 'Landon Donovan'; Jordan Bowery refers to player_name = 'Jordan Bowery';\u00a0 percentage refers to DIVIDE(SUBTRACT(player_name = 'Landon Donovan' overall_rating; player_name = 'Jordan Bowery' overall_rating), player_name = 'Landon Donovan' overall_rating)*100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    (\n        SELECT\n            overall_rating\n        FROM\n            table_0\n        WHERE\n            player_name = 'Landon Donovan'\n            AND date = '2013-07-12'\n    )\n    - (\n        SELECT\n            overall_rating\n        FROM\n            table_0\n        WHERE\n            player_name = 'Jordan Bowery'\n            AND date = '2\n\t----- bird -----\teuropean_football_2", "1115": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List down 5 tallest players' name. tallest refers to MAX(height)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name\nFROM table_1\nORDER BY height DESC\nLIMIT 5;\nend_sql\n\t----- bird -----\teuropean_football_2", "1116": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What are the player api id of 10 heaviest players? heaviest refers to MAX(weight)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_api_id, MAX(weight) AS heaviest_weight\nFROM table_1\nGROUP BY player_api_id\nORDER BY heaviest_weight DESC\nLIMIT 10;\nend_sql\n\t----- bird -----\teuropean_football_2", "1117": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List down the name of players who are 35 years old and above. 35 years old and above refers to datetime(CURRENT_TIMESTAMP,'localtime') - datetime(birthday) > 34\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.player_name\nFROM table_1 t1\nJOIN table_0 t0 ON t1.player_api_id = t0.player_api_id\nWHERE datetime(CURRENT_TIMESTAMP,'localtime') - datetime(t1.birthday) > 34;\nend_sql\n\t----- bird -----\teuropean_football_2", "1118": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many home team goal have been scored by Aaron Lennon? Aaron Lennon refers to player_name = 'Aaron Lennon'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS home_team_goals\nFROM table_6\nJOIN table_1 ON table_6.home_player_1 = table_1.player_api_id OR table_6.home_player_2 = table_1.player_api_id OR table_6.home_player_3 = table_1.player_api_id OR table_6.home_player_4 = table_1.player\n\t----- bird -----\teuropean_football_2", "1119": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Sum up the away team goal scored by both Daan Smith and Filipe Ferreira. Daan Smith refers to player_name = 'Daan Smith'; Filipe Ferreira refers to player_name = 'Filipe Ferreira'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(away_team_goal) AS total_away_goals\nFROM table_6\nJOIN table_1 ON table_6.away_player_1 = table_1.player_api_id OR table_6.away_player_2 = table_1.player_api_id OR table_6.away_player_3 = table_1.player_api_id OR table_6.away_player_4\n\t----- bird -----\teuropean_football_2", "1120": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Calculate the total home team goal scored by players whose age are 30 years old and below. age are 30 years old and below refers to SUBTRACT(datetime(CURRENT_TIMESTAMP,'localtime'), datetime(birthday) < 31)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(home_team_goal) AS total_home_team_goal\nFROM table_6\nJOIN table_1 ON table_6.home_player_1 = table_1.player_api_id\nWHERE SUBSTR(CURRENT_TIMESTAMP, 1, 4) - SUBSTR(birthday, 1, 4) < 31;\nend_sql\n\t----- bird -----\teuropean_football_2", "1121": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: State 10 names of the strongest players. strongest players refers to MAX(overall_rating)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, MAX(overall_rating) AS strongest_player\nFROM table_1\nJOIN table_0 ON table_1.player_api_id = table_0.player_fifa_api_id\nGROUP BY player_name\nORDER BY strongest_player DESC\nLIMIT 10;\nend_sql\n\t----- bird -----\teuropean_football_2", "1122": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the name of players with the highest potential? highest potential refers to MAX(potential)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name\nFROM table_1\nWHERE player_fifa_api_id IN (\n    SELECT player_fifa_api_id\n    FROM table_0\n    WHERE potential = (SELECT MAX(potential) FROM table_0)\n);\nend_sql\n\t----- bird -----\teuropean_football_2", "1123": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Who are the players that tend to be attacking when their mates were doing attack moves? List down their name. tend to be attacking when their mates were doing attack moves refers to attacking_work_rate = 'high';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.player_name\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t0.attacking_work_rate = 'high'\nAND EXISTS (\n    SELECT 1\n    FROM table_6 t6\n    WHERE t6.home_player_X1 = t0.player_fifa\n\t----- bird -----\teuropean_football_2", "1124": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Among the players with finishing rate of 1, pick the eldest player and state the player's name. eldest player refers to MAX(SUBTRACT(datetime(CURRENT_TIMESTAMP,'localtime'),datetime(birthday))); finishing rate of 1 refers to finishing = 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name\nFROM table_1\nWHERE player_fifa_api_id IN (\n    SELECT player_fifa_api_id\n    FROM table_0\n    WHERE finishing = 1\n)\nORDER BY (datetime(CURRENT_TIMESTAMP,'localtime') - datetime(birthday)) DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1125": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: State the name of players who came from Belgium. name of players refers to player_name; Belgium is name of country\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name\nFROM table_1 t1\nJOIN table_2 t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id\nJOIN table_3 t3 ON t2.country_id = t3.id\nWHERE t3.name = 'Belgium';\nend_sql\n\t----- bird -----\teuropean_football_2", "1126": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Locate players with vision scores of 90 and above, state the country of these players. vision scores of 90 and above refers to vision > 89\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.player_name, t2.name AS country_name\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nJOIN table_2 t2 ON t1.country_id = t2.country_id\nWHERE t0.vision > 89;\nend_sql\n\t----- bird -----\teuropean_football_2", "1127": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which country's players have the heaviest average weights? heaviest average weights refers to MAX(AVG(weight))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t3.name AS country_name, AVG(t1.weight) AS average_weight\nFROM table_1 t1\nJOIN table_2 t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id\nJOIN table_3 t3 ON t2.country_id = t3.id\nGROUP BY t3.name\nORDER BY average_weight DESC\nLIMIT 1;\n\t----- bird -----\teuropean_football_2", "1128": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: List down the long name for slow speed class team. slow speed class refers to buildUpPlaySpeedClass = 'Slow'; long name refers to team_long_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t4.team_long_name\nFROM table_5 t5\nJOIN table_4 t4 ON t5.team_fifa_api_id = t4.team_fifa_api_id\nWHERE t5.buildUpPlaySpeedClass = 'Slow';\nend_sql\n\t----- bird -----\teuropean_football_2", "1129": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What are the short name of team who played safe while creating chance of passing? played safe while creating chance of passing refers to chanceCreationPassingClass = 'Safe'; short name of team refers to team_short_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t4.team_short_name\nFROM table_4 t4\nJOIN table_5 t5 ON t4.team_fifa_api_id = t5.team_fifa_api_id\nWHERE t5.chanceCreationPassingClass = 'Safe';\nend_sql\n\t----- bird -----\teuropean_football_2", "1130": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the average heights of Italy players? average heights refers to Avg(height); Italy is name of country\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(height) AS average_height\nFROM table_1 AS t1\nJOIN table_2 AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id\nJOIN table_3 AS t3 ON t2.country_id = t3.id\nWHERE t3.name = 'Italy';\nend_sql\n\t----- bird -----\teuropean_football_2", "1131": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please provide the names of top three football players who are over 180 cm tall in alphabetical order. over 180 cm tall refers to height > 180; name of football player refers to player_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name\nFROM table_1\nWHERE height > 180\nORDER BY player_name ASC\nLIMIT 3;\nend_sql\n\t----- bird -----\teuropean_football_2", "1132": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many football players born after the 1990s have the first name \"Aaron\"? first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1\nWHERE player_name LIKE 'Aaron%' AND birthday > '1990';\nend_sql\n\t----- bird -----\teuropean_football_2", "1133": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the difference between players 6 and 23's jumping scores? difference between players 6 and 23's jumping scores refers to SUBTRACT(jumping AND id = 6,jumping AND id = 23)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUBTRACT(jumping AND id = 6,jumping AND id = 23) AS difference_in_jumping_scores\nFROM table_0\nWHERE id IN (6, 23);\nend_sql\n\t----- bird -----\teuropean_football_2", "1134": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please provide top three football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking. lowest potential players refers to MIN(potential); prefer to use the right foot refers to preferred_foot = 'right'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_fifa_api_id\nFROM table_0\nWHERE potential = (SELECT MIN(potential) FROM table_0) AND preferred_foot = 'right'\nORDER BY player_fifa_api_id ASC\nLIMIT 3;\nend_sql\n\t----- bird -----\teuropean_football_2", "1135": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: How many players had the highest potential score for crossing that preferred to use their left foots while attacking? highest potential score for crossing refers to MAX(crossing); preferred to use their left foots refers to preferred_foot = 'left'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM table_0);\nend_sql\n\t----- bird -----\teuropean_football_2", "1136": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What percentage of players have a strength and stamina score of more than 80? strength and stamina score of more than 80 refers to stamina > 80 and strength > 80\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS total_players\nFROM table_0\nWHERE stamina > 80 AND strength > 80;\nSELECT COUNT(*) AS players_with_strength_and_stamina_above_80\nFROM table_0\nWHERE stamina > 80 AND strength > 80;\nSELECT (players_with_strength_and_stamina_above_80 / total_players) * 100 AS percentage\n\t----- bird -----\teuropean_football_2", "1137": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: In what country did the Poland Ekstraklasa take place?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t3.name AS country_name\nFROM table_2 t2\nJOIN table_3 t3 ON t2.country_id = t3.id\nJOIN table_6 t6 ON t2.id = t6.league_id\nWHERE t6.country_id = (SELECT id FROM table_3 WHERE name = 'Poland')\nAND t6.league_id = (SELECT id FROM table_2 WHERE name =\n\t----- bird -----\teuropean_football_2", "1138": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team? September 24, 2008 refers to date like '2008-09-24%'; final score for home team refers to home_team_goal; final score for away team refers to away_team_goal\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT home_team_goal, away_team_goal\nFROM table_6\nWHERE date = '2008-09-24%';\nend_sql\n\t----- bird -----\teuropean_football_2", "1139": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What are Alexis Blin's sprint speed, agility, and acceleration scores? Alexis Blin's refers to player_name = 'Alexis Blin'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t0.sprint_speed, t0.agility, t0.acceleration\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t1.player_name = 'Alexis Blin';\nend_sql\n\t----- bird -----\teuropean_football_2", "1140": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Does the KSV Cercle Brugge team have a slow, balanced or fast speed class? KSV Cercle Brugge refers to team_long_name = 'KSV Cercle Brugge'; speed class refers to buildUpPlaySpeedClass\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT buildUpPlaySpeedClass\nFROM table_5\nWHERE EXISTS (\n    SELECT 1\n    FROM table_4\n    WHERE team_long_name = 'KSV Cercle Brugge' AND table_4.team_fifa_api_id = table_5.team_fifa_api_id\n);\nend_sql\n\t----- bird -----\teuropean_football_2", "1141": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: In the 2015\u20132016 season, how many games were played in the Italian Serie A league? In the 2015\u20132016 season refers to season = '2015/2016'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS total_games\nFROM table_6\nWHERE season = '2015/2016' AND league_id = (SELECT id FROM table_2 WHERE name = 'Italian Serie A');\nend_sql\n\t----- bird -----\teuropean_football_2", "1142": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What was the highest score of the home team in the Netherlands Eredivisie league? highest score of the home team refers to MAX(home_team_goal)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(home_team_goal) AS highest_score\nFROM table_6\nWHERE EXISTS (\n    SELECT 1\n    FROM table_4 AS t4\n    JOIN table_5 AS t5 ON t4.team_fifa_api_id = t5.team_fifa_api_id\n    JOIN table_2 AS t2 ON t4.country_id = t2.country_id\n    JOIN table_\n\t----- bird -----\teuropean_football_2", "1143": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please state the finishing rate and curve score of the player who has the heaviest weight. heaviest weight refers to MAX(weight)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.player_name, t0.weight, t0.curve, t0.finishing\nFROM table_0 t0\nJOIN table_1 t1 ON t0.player_fifa_api_id = t1.player_fifa_api_id\nWHERE t0.weight = (SELECT MAX(weight) FROM table_0);\nend_sql\n\t----- bird -----\teuropean_football_2", "1144": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Which league had the most games in the 2015\u20132016 season? in the 2015\u20132016 season season = '2015/2016'; league with most games refers to team_long_name where MAX(COUNT(id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t4.team_long_name, COUNT(t6.id) AS game_count\nFROM table_6 t6\nJOIN table_4 t4 ON t6.home_team_api_id = t4.team_api_id OR t6.away_team_api_id = t4.team_api_id\nWHERE t6.season = '2015/2016'\nGROUP\n\t----- bird -----\teuropean_football_2", "1145": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please provide the full name of the away team that scored the most goals. full name refers to team_long_name; away team refers to away_team_api_id; scored the most goals refers to MAX(away_team_goal)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t4.team_long_name AS away_team_name, MAX(t6.away_team_goal) AS max_away_goals\nFROM table_4 t4\nJOIN table_6 t6 ON t4.team_api_id = t6.away_team_api_id\nGROUP BY t4.team_long_name\nORDER BY max_away_goals DESC\nLIMIT 1;\nend_\n\t----- bird -----\teuropean_football_2", "1146": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: Please name one player whose overall strength is the greatest. overall strength is the greatest refers to MAX(overall_rating)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT player_name, MAX(overall_rating) AS max_overall_rating\nFROM table_0\nJOIN table_1 ON table_0.player_fifa_api_id = table_1.player_fifa_api_id\nGROUP BY player_name\nORDER BY max_overall_rating DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\teuropean_football_2", "1147": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nid integer,\nplayer_fifa_api_id integer,\nplayer_api_id integer,\ndate text,\noverall_rating integer,\npotential integer,\npreferred_foot text,\nattacking_work_rate text,\ndefensive_work_rate text,\ncrossing integer,\nfinishing integer,\nheading_accuracy integer,\nshort_passing integer,\nvolleys integer,\ndribbling integer,\ncurve integer,\nfree_kick_accuracy integer,\nlong_passing integer,\nball_control integer,\nacceleration integer,\nsprint_speed integer,\nagility integer,\nreactions integer,\nbalance integer,\nshot_power integer,\njumping integer,\nstamina integer,\nstrength integer,\nlong_shots integer,\naggression integer,\ninterceptions integer,\npositioning integer,\nvision integer,\npenalties integer,\nmarking integer,\nstanding_tackle integer,\nsliding_tackle integer,\ngk_diving integer,\ngk_handling integer,\ngk_kicking integer,\ngk_positioning integer,\ngk_reflexes integer,\nPRIMARY KEY (id),\nFOREIGN KEY (player_fifa_api_id) REFERENCES table_1(player_fifa_api_id),\nFOREIGN KEY (player_api_id) REFERENCES table_1(player_api_id),\n);\nCREATE TABLE table_1 (\nid integer,\nplayer_api_id integer,\nplayer_name text,\nplayer_fifa_api_id integer,\nbirthday text,\nheight integer,\nweight integer,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_2 (\nid integer,\ncountry_id integer,\nname text,\nPRIMARY KEY (id),\nFOREIGN KEY (country_id) REFERENCES table_3(id),\n);\nCREATE TABLE table_3 (\nid integer,\nname text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_4 (\nid integer,\nteam_api_id integer,\nteam_fifa_api_id integer,\nteam_long_name text,\nteam_short_name text,\nPRIMARY KEY (id),\n);\nCREATE TABLE table_5 (\nid integer,\nteam_fifa_api_id integer,\nteam_api_id integer,\ndate text,\nbuildUpPlaySpeed integer,\nbuildUpPlaySpeedClass text,\nbuildUpPlayDribbling integer,\nbuildUpPlayDribblingClass text,\nbuildUpPlayPassing integer,\nbuildUpPlayPassingClass text,\nbuildUpPlayPositioningClass text,\nchanceCreationPassing integer,\nchanceCreationPassingClass text,\nchanceCreationCrossing integer,\nchanceCreationCrossingClass text,\nchanceCreationShooting integer,\nchanceCreationShootingClass text,\nchanceCreationPositioningClass text,\ndefencePressure integer,\ndefencePressureClass text,\ndefenceAggression integer,\ndefenceAggressionClass text,\ndefenceTeamWidth integer,\ndefenceTeamWidthClass text,\ndefenceDefenderLineClass text,\nPRIMARY KEY (id),\nFOREIGN KEY (team_fifa_api_id) REFERENCES table_4(team_fifa_api_id),\nFOREIGN KEY (team_api_id) REFERENCES table_4(team_api_id),\n);\nCREATE TABLE table_6 (\nid integer,\ncountry_id integer,\nleague_id integer,\nseason text,\nstage integer,\ndate text,\nmatch_api_id integer,\nhome_team_api_id integer,\naway_team_api_id integer,\nhome_team_goal integer,\naway_team_goal integer,\nhome_player_X1 integer,\nhome_player_X2 integer,\nhome_player_X3 integer,\nhome_player_X4 integer,\nhome_player_X5 integer,\nhome_player_X6 integer,\nhome_player_X7 integer,\nhome_player_X8 integer,\nhome_player_X9 integer,\nhome_player_X10 integer,\nhome_player_X11 integer,\naway_player_X1 integer,\naway_player_X2 integer,\naway_player_X3 integer,\naway_player_X4 integer,\naway_player_X5 integer,\naway_player_X6 integer,\naway_player_X7 integer,\naway_player_X8 integer,\naway_player_X9 integer,\naway_player_X10 integer,\naway_player_X11 integer,\nhome_player_Y1 integer,\nhome_player_Y2 integer,\nhome_player_Y3 integer,\nhome_player_Y4 integer,\nhome_player_Y5 integer,\nhome_player_Y6 integer,\nhome_player_Y7 integer,\nhome_player_Y8 integer,\nhome_player_Y9 integer,\nhome_player_Y10 integer,\nhome_player_Y11 integer,\naway_player_Y1 integer,\naway_player_Y2 integer,\naway_player_Y3 integer,\naway_player_Y4 integer,\naway_player_Y5 integer,\naway_player_Y6 integer,\naway_player_Y7 integer,\naway_player_Y8 integer,\naway_player_Y9 integer,\naway_player_Y10 integer,\naway_player_Y11 integer,\nhome_player_1 integer,\nhome_player_2 integer,\nhome_player_3 integer,\nhome_player_4 integer,\nhome_player_5 integer,\nhome_player_6 integer,\nhome_player_7 integer,\nhome_player_8 integer,\nhome_player_9 integer,\nhome_player_10 integer,\nhome_player_11 integer,\naway_player_1 integer,\naway_player_2 integer,\naway_player_3 integer,\naway_player_4 integer,\naway_player_5 integer,\naway_player_6 integer,\naway_player_7 integer,\naway_player_8 integer,\naway_player_9 integer,\naway_player_10 integer,\naway_player_11 integer,\ngoal text,\nshoton text,\nshotoff text,\nfoulcommit text,\ncard text,\ncross text,\ncorner text,\npossession text,\nB365H real,\nB365D real,\nB365A real,\nBWH real,\nBWD real,\nBWA real,\nIWH real,\nIWD real,\nIWA real,\nLBH real,\nLBD real,\nLBA real,\nPSH real,\nPSD real,\nPSA real,\nWHH real,\nWHD real,\nWHA real,\nSJH real,\nSJD real,\nSJA real,\nVCH real,\nVCD real,\nVCA real,\nGBH real,\nGBD real,\nGBA real,\nBSH real,\nBSD real,\nBSA real,\nPRIMARY KEY (id),\nFOREIGN KEY (home_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (away_team_api_id) REFERENCES table_4(team_api_id),\nFOREIGN KEY (home_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (home_player_11) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_1) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_2) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_3) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_4) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_5) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_6) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_7) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_8) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_9) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_10) REFERENCES table_1(player_api_id),\nFOREIGN KEY (away_player_11) REFERENCES table_1(player_api_id),\n);\n---------------------\nQUESTION: What is the percentage of players that are under 180 cm who have an overall strength of more than 70? percentage refers to DIVIDE(COUNT(height < 180 AND overall_rating > 70),COUNT(id)) * 100%\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS total_players FROM table_0 WHERE height < 180 AND overall_rating > 70;\nSELECT COUNT(*) AS total_players FROM table_0;\nend_sql\n\t----- bird -----\teuropean_football_2", "1148": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Are there more in-patient or outpatient who were male? What is the deviation in percentage? male refers to SEX = 'M'; in-patient refers to Admission = '+'; outpatient refers to Admission = '-'; SUBTRACT(COUNT(ID) where SEX = 'M' and Admission = '+', COUNT(ID) where SEX\u00a0 = 'M' and Admission = '-')\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n(COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 END)) / COUNT(CASE WHEN SEX = 'M' THEN 1 END) AS Deviation\nFROM\ntable_1\nJOIN\ntable_0 ON table_1.ID = table_0.ID\nJOIN\ntable_2 ON table_1.ID = table\n\t----- bird -----\tthrombosis_prediction", "1149": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the percentage of female patient were born after 1930? female refers to Sex = 'F'; patient who were born after 1930 refers to year(Birthday) > '1930'; calculation = DIVIDE(COUNT(ID) where year(Birthday) > '1930' and SEX = 'F'), (COUNT(ID) where SEX = 'F')\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n(COUNT(table_1.ID) FILTER (WHERE YEAR(table_1.Birthday) > 1930 AND table_1.SEX = 'F')) /\n(COUNT(table_1.ID) FILTER (WHERE table_1.SEX = 'F')) AS percentage\nFROM\ntable_1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1150": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For patient born between Year 1930 to 1940, how many percent of them were inpatient? patient born between Year 1930 to 1940 refers to year(Birthday) BETWEEN '1930-01-01' AND '1940-12-31'; inpatient refers to Admission = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    COUNT(*) AS total_patients,\n    SUM(CASE WHEN t1.Admission = '+' THEN 1 ELSE 0 END) AS inpatient_patients,\n    (SUM(CASE WHEN t1.Admission = '+' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS inpatient_percentage\nFROM\n    table_1 t1\nJOIN\n    table_0 t0 ON t1.ID = t0\n\t----- bird -----\tthrombosis_prediction", "1151": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient? 'SLE' refers to diagnosis; inpatient refers to Admission = '+'; outpatient refers to Admission = '-'; DIVIDE(COUNT(ID) where Diagnosis = 'SLE' and Admission = '+', COUNT(ID) where Diagnosis = 'SLE' and Admission = '-')\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(COUNT(ID) FILTER(WHERE Admission = '+'), COUNT(ID) FILTER(WHERE Admission = '-')) AS OutpatientToInpatientRatio\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nWHERE table_1.Diagnosis = 'SLE';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1152": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient. '30609' is an ID; disease means diagnosis\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.Diagnosis, table_2.Date\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.ID = '30609';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1153": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had. When was the examination taken refers to `Examination Date`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.SEX, table_1.Birthday, table_0.Examination Date, table_0.Symptoms\nFROM table_0\nINNER JOIN table_1 ON table_0.ID = table_1.ID\nWHERE table_1.ID = '163109';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1154": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List the patient ID, sex and birthday of patient with LDH beyond normal range. LDH beyond normal range refers to LDH > '500'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.SEX, table_1.Birthday\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.LDH > '500';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1155": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: State the ID and age of patient with positive degree of coagulation. age refers to SUBTRACT(year(current_timestamp), year(Birthday)); positive degree of coagulation refers to RVVT = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(t1.Birthday)) AS Age\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nWHERE t0.RVVT = '+'\nGROUP BY t1.ID, Age;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1156": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For patients with severe degree of thrombosis, list their ID, sex and dieseas the patient is diagnosed with. severe degree of thrombosis refers to thrombosis = 2; disease refers to diagnosis\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.SEX, table_1.Diagnosis\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nWHERE table_0.Thrombosis = 2;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1157": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List all patients who were born in 1937 whose total cholesterol was beyond the normal range. who were born in 1937 refers to year(birthday) = '1937'; total cholesterol was beyond the normal range refers to `T-CHO` > = '250'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.SEX, table_1.Birthday, table_2.T-CHO\nFROM table_1\nINNER JOIN table_2 ON table_1.ID = table_2.ID\nWHERE YEAR(table_1.Birthday) = '1937' AND table_2.T-CHO >= '250';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1158": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For patient with albumin level lower than 3.5, list their ID, sex and diagnosis. albumin level lower than 3.5 refers to ALB < 3.5;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, t2.ALB, t2.Diagnosis\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.ALB < 3.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1159": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the percentage of female patient had total protein not within the normal range? female refers to sex = 'F'; total protein not within the normal range refers to TP < '6.0' or TP > '8.5'; calculation = DIVIDE((ID where sex = 'F' and TP < '6.0' or TP > '8.5'), COUNT(ID)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE((COUNT(DISTINCT t1.ID) FILTER (WHERE t1.SEX = 'F' AND (t2.TP < '6.0' OR t2.TP > '8.5'))), COUNT(DISTINCT t1.ID)) * 100 AS percentage\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1160": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration? in-patient refers to Admission = '+'; age 50 and above refers to SUBTRACT(year(current_timestamp), year(Birthday)) >= '50'; average anti-cardiolipin antibody (IgG) concentration refers to AVG(aCL IgG)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(aCL IgG) AS average_anti_cardiolipin_antibody_igg_concentration\nFROM table_0\nJOIN table_1 ON table_0.ID = table_1.ID\nWHERE table_1.Admission = '+' AND SUBTRACT(year(current_timestamp), year(table_1.Birthday)) >= '50';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1161": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic? female refers to sex = 'F'; came at the hospital in 1997 refers to year(Description) = '1997'; followed at the outpatient clinic refers to Admission = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nWHERE t1.SEX = 'F' AND YEAR(t1.Description) = '1997' AND t1.Admission = '-';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1162": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What was the age of the youngest patient when they initially arrived at the hospital? age refers to SUBTRACT(YEAR(Birthday), YEAR(`First Date`))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MIN(SUBTRACT(YEAR(Birthday), YEAR(`First Date`))) AS Age\nFROM table_1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1163": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many of the patients with the most serious thrombosis cases examined in 1997 are women? the most serious thrombosis refers to Thrombosis = '1' (the most severe one); women refers to sex = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nWHERE t0.Examination Date LIKE '1997%' AND t0.Thrombosis = '1' AND t1.SEX = 'F';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1164": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the age gap between the youngest and oldest patient with a normal triglyceride recorded? age gap refers to SUBTRACT(MAX(year(Birthday)) - MIN(year(Birthday))); normal triglyceride refers to tg > = 200\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUBTRACT(MAX(year(t1.Birthday)) - MIN(year(t1.Birthday))) AS age_gap\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.tg >= 200;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1165": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis. the youngest patient refers to MIN(BIRTHDAY);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.Birthday, t1.Diagnosis, t2.Symptoms\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Birthday = (SELECT MIN(Birthday) FROM table_1);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1166": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month? the year that concluded on December 31, 1998 refers to Date BETWEEN '1998-01-01' AND '1998-12-31'; male refers to SEX = 'M'; calculation = DIVIDE(COUNT(ID), 12)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(COUNT(table_1.ID)) AS average_male_patients_tested_per_month\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.SEX = 'M' AND table_2.Date BETWEEN '1998-01-01' AND '1\n\t----- bird -----\tthrombosis_prediction", "1167": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital? The oldest patient refers to MAX(Birthday); 'SJS' refers to diagnosis; (SUBTRACT(year(`First Date`)), year(Birthday)); age of the patients when they initially arrived at the hospital refers to year(Birthday)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t2.Date AS MedicalLaboratoryDate,\n       TIMESTAMPDIFF(YEAR, t1.Birthday, t1.FirstDate) AS AgeAtHospitalAdmission\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Diagnosis = 'SJS'\n  AND t1.Birthday = (SELECT MAX(Birthday) FROM table_1 WHERE Diagnosis = 'SJS\n\t----- bird -----\tthrombosis_prediction", "1168": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the ratio of male to female patients among all those with abnormal uric acid counts? male refers to SEX = 'M'; female refers to SEX = 'F'; abnormal uric acid refers to UA < = '8.0' where SEX = 'M', UA < = '6.5' where SEX = 'F'; calculation = DIVIDE(SUM(UA <= '8.0' and SEX = 'M'), SUM(UA <= '6.5 and SEX = 'F'))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(SUM(CASE WHEN SEX = 'M' AND UA <= '8.0' THEN 1 ELSE 0 END), SUM(CASE WHEN SEX = 'F' AND UA <= '6.5' THEN 1 ELSE 0 END)) AS male_to_female_ratio\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE UA <= '8.0' AND SEX\n\t----- bird -----\tthrombosis_prediction", "1169": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients hadn't undergone a medical examination until at least a year following their initial hospital visit? hadn't undergone a medical examination until at least a year refers to SUBTRACT(year(`Examination Date`), year(`First Date`)) > = 1\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS num_patients\nFROM table_0 t0\nJOIN table_1 t1 ON t0.ID = t1.ID\nWHERE SUBTRACT(YEAR(t0.Examination_Date), YEAR(t1.First_Date)) >= 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1170": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many underage patients were examined during the course of the three-year period from 1990 to 1993? underage patients refers to year(Birthday) < 18; three-year period from 1990 to 1993 refers to `Examination Date` between '1990-01-01' and '1993-12-31'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS underage_patients\nFROM table_0\nJOIN table_1 ON table_0.ID = table_1.ID\nWHERE table_1.Birthday < '1990-01-01' AND table_0.Examination Date BETWEEN '1990-01-01' AND '1993-12-31';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1171": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many male patients have elevated total bilirubin count? male refers to SEX = 'M'; elevated means above the normal range; total bilirubin above the normal range refers to `T-BIL` > '2.0'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'M' AND t2.T-BIL > '2.0';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1172": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995? the most common illness refers to MAX(COUNT(Diagnosis)); lab work between 1/1/1985 and 12/31/1995 refers to `Examination Date` between '1985-01-01' and '1995-12-31 '\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT Diagnosis, COUNT(Diagnosis) AS count\nFROM table_0\nWHERE Examination Date BETWEEN '1985-01-01' AND '1995-12-31'\nGROUP BY Diagnosis\nORDER BY count DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1173": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the average age of patients examined in the laboratory for the October of the year 1991? average age for first half of 1999 refers to AVG(SUBTRACT('1999', year(Birthday))); October of 1991 refers to Date BETWEEN '1991-10-01' AND '1991-10-30'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(SUBTRACT('1999', year(Birthday))) AS AverageAge\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nWHERE table_0.Examination Date BETWEEN '1991-10-01' AND '1991-10-30';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1174": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How old was the patient who had the highest hemoglobin count at the time of the examination, and what is the doctor's diagnosis? How old the patient refers to SUBTRACT(year(`Examination Date`), year(Birthday)); the highest hemoglobin count refers to MAX(HGB)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUBTRACT(year(`Examination Date`), year(Birthday)) AS Age, MAX(HGB) AS Highest_Hemoglobin_Count, Diagnosis\nFROM table_0\nJOIN table_1 ON table_0.ID = table_1.ID\nJOIN table_2 ON table_0.ID = table_2.ID\nGROUP BY Age, Diagnosis\nORDER BY Highest_Hemoglobin_Count DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1175": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What was the anti-nucleus antibody concentration level for the patient id 3605340 on 1996/12/2? anti-nucleus antibody refers to ANA; 1996/12/2 refers to `Examination Date` = '1996-12-02'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT ANA FROM table_0 WHERE ID = 3605340 AND Examination_Date = '1996-12-02';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1176": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level? total cholesterol normal level refers to N < 250\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t2.T-CHO FROM table_1 t1 JOIN table_2 t2 ON t1.ID = t2.ID WHERE t1.ID = 2927464 AND t2.Date = '1995-9-4' AND t2.T-CHO < 250;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1177": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What was the gender of the first AORTITIS diagnosed patient? gender means SEX; 'AORTITIS' refers to Diagnosis;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.SEX\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nWHERE table_0.Diagnosis = 'AORTITIS'\nORDER BY table_1.First_Date ASC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1178": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient who was diagnosed with SLE on 1994/2/19, what was his/her anti-Cardiolipin antibody concentration status on 1993/11/12? 'SLE' refers to Diagnosis; 1994/2/19 refers to Description = '1994-02-19'; anti-Cardiolipin refers to aCL IgM; 1993/11/12 refers to Description = '1993/11/12'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT aCL IgM FROM table_0 WHERE Examination Date = '1993-11-12' AND ID IN (SELECT ID FROM table_1 WHERE Diagnosis = 'SLE' AND Description = '1994-02-19');\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1179": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12? man refers to SEX = 'M'; women refers to SEX = 'F'; ALT glutamic pylvic transaminase status got 9 GPT = '9'; 1992/6/12 refers to Date = '1992-06-12'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.SEX\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.Date = '1992-06-12' AND table_2.GPT = '9';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1180": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time? how old at that time refers to SUBTRACT('1992', year(Birthday)); uric acid level as 8.4 refers to UA = '8.4'; 1991/10/21 refers to Date = '1991-10-21'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUBTRACT('1992', year(Birthday)) AS AgeAtTestDate\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.Date = '1991-10-21' AND table_2.UA = '8.4';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1181": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient who first came to the hospital on 1991/6/13 who was diagnosed with SJS, what is the total number of his/her Laboratory tests in 1995? 1991/6/13 refers to `First Date` = '1991-06-13'; 'SJS' refers to Diagnosis; total number of his/her Laboratory tests refers to COUNT(ID); 1995 refers to Date\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(table_2.ID) AS total_lab_tests\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.First_Date = '1991-06-13' AND table_0.Diagnosis = 'SJS' AND YEAR(table_2.Date\n\t----- bird -----\tthrombosis_prediction", "1182": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time? 'SLE' AND original diagnose refers to diagnosis; 1997/1/27 refer to `Examination Date` = '1997-01-27'; first came to the hospital refers to patient.`First Date`\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.First Date\nFROM table_0 t0\nJOIN table_1 t1 ON t0.ID = t1.ID\nWHERE t0.Examination Date = '1997-01-27' AND t0.Diagnosis = 'SLE' AND t1.First Date = (SELECT MIN(t1.First Date) FROM table_1 t1 WHERE t1.ID = t0.ID);\nend\n\t----- bird -----\tthrombosis_prediction", "1183": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient whose birthday was 1959/3/1, what symptoms did he/she have during the examination on 1993/9/27?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT Symptoms FROM table_0 WHERE Examination Date = '1993-09-27' AND ID IN (SELECT ID FROM table_1 WHERE Birthday = '1959-03-01');\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1184": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981? born on 1959/2/18 refers to Birthday = '1959-02-18'; calculation = SUBTRACT(SUM(Birthday = '1959-02-18' and Date like '1981-11-%' THEN `T-CHO`), SUM(Birthday = '1959-02-18' and Date like '1981-12-%' THEN `T-CHO`))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUBTRACT(SUM(t1.Birthday = '1959-02-18' AND t2.Date LIKE '1981-11-%' THEN t2.`T-CHO`), SUM(t1.Birthday = '1959-02-18' AND t2.Date LIKE '1981-12-%' THEN t2.`T-CHO`)) AS DECREASE\n\t----- bird -----\tthrombosis_prediction", "1185": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Lists all patients by ID who were diagnosed with Behcet's and had their exams between 01/01/197 and 12/31/1997. 'Behcet' refers to diagnosis; exam between 01/01/1997 and 12/31/1997 refers to YEAR(Description) > = '1997-1-1' AND YEAR(Description) < '1998-1-1'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.SEX, table_1.Birthday, table_1.Description, table_1.First Date, table_1.Admission, table_1.Diagnosis, table_2.Date, table_2.GOT, table_2.GPT, table_2.LDH, table_2.ALP, table_2.TP, table_2.ALB, table_2.UA, table_\n\t----- bird -----\tthrombosis_prediction", "1186": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID. examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_0.Examination BETWEEN '1987-07-06' AND '1996-01-31'\nAND table_2.GPT > 30\nAND table_2.\n\t----- bird -----\tthrombosis_prediction", "1187": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many female patients born in 1964 were admitted to the hospital? List them by ID. female refers to SEX = 'F'; born in 1964 refers to YEAR(Birthday) = 1964; admitted to the hospital refers to Admission = '+'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nWHERE table_1.SEX = 'F' AND YEAR(table_1.Birthday) = 1964 AND table_1.Admission = '+';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1188": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average? thrombosis level 2 refers to Thrombosis = 2; ANA pattern of only S refers to ANA = 'S'; average anti-Cardiolip in antibody (IgM) refers to AVG(`aCL IgM`); calculation = MULTIPLY(AVG + AVG, 0.2)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE Thrombosis = 2 AND ANA = 'S' AND aCL IgM > (AVG(aCL IgM) * 1.2);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1189": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range? proteinuria level within the normal range refers to `U-PRO` > 0 AND `U-PRO` < 30; uric acid level below the normal range refers to UA < = 6.5; calculation = MULTIPLY(DIVIDE(UA < = 6.5, `U-PRO` > 0 AND `U-PRO` < 30)\uff0c100)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MULTIPLY(DIVIDE(COUNT(CASE WHEN UA <= 6.5 THEN 1 END), COUNT(CASE WHEN U_PRO > 0 AND U_PRO < 30 THEN 1 END)), 100) AS percentage\nFROM table_2\nWHERE EXISTS (SELECT 1 FROM table_1 WHERE table_1.ID = table_2.ID AND table_1.SEX = 'Male');\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1190": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET? male refers to SEX = 'M'; first presented to the hospital in 1981 refers to YEAR(`FIRST DATE`) = '1981'; BEHCET refers to diagnosis; calculation = DIVIDE(SUM(DIAGNOSIS = 'BEHCET') where YEAR(`FIRST DATE`) = '1981', MULTIPLY(COUNT(YEAR(`FIRST DATE`) = '1981')), 100)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(SUM(DIAGNOSIS = 'BEHCET') OVER (PARTITION BY YEAR(`FIRST DATE`) = '1981'), COUNT(*) OVER (PARTITION BY YEAR(`FIRST DATE`) = '1981')), 100) AS percentage\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nWHERE table_1.SEX = 'M' AND YEAR(`FIRST DATE`) =\n\t----- bird -----\tthrombosis_prediction", "1191": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range. followed up at the outpatient clinic refers to Admission = '-'; laboratory test in April 1981 refers to Date like '1991-10%'; blood bilirubin level within the normal range refers to T-BIL < 2.0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.SEX, table_1.Birthday, table_1.Description, table_1.First Date, table_1.Admission, table_1.Diagnosis, table_2.Date, table_2.T-BIL\nFROM table_1\nINNER JOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.Admission = '-' AND table_2.Date\n\t----- bird -----\tthrombosis_prediction", "1192": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989? Excluding all P only ANA Pattern refers to `ANA Pattern`! = 'p'; women refers to SEX = 'F'; born between 1980 and 1989 refers to BIRTHDAY\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1\nWHERE SEX = 'F' AND Birthday BETWEEN '1980-01-01' AND '1989-12-31'\nAND ID NOT IN (\n    SELECT ID\n    FROM table_0\n    WHERE ANA Pattern = 'p'\n);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1193": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123? PSS' refers to diagnosis; blood level of C-reactive protein de 2+refers to CRP > 2; createnine 1 refers to CRE = 1; LDH 123 refers to LDH = 123\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.SEX\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_0.Diagnosis = 'PSS' AND table_2.CRP = '2+' AND table_2.CRE = '1' AND table_2.LDH = '123';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1194": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE? average blood albumin level refers to AVG(ALB); female refers to SEX = 'F'; PLT greater than 400 refers to PLT > 400; 'SLE' refers to diagnosis\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(ALB) AS avg_albumin_level\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'F' AND t2.PLT > 400 AND t0.Diagnosis = 'SLE';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1195": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the most common sign of patients with SLE disease? the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT Symptoms, COUNT(*) AS SymptomCount\nFROM table_0\nWHERE Diagnosis = 'SLE'\nGROUP BY Symptoms\nORDER BY SymptomCount DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1196": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: When was the medical information on patient number 48473 first documented, and what disease did she have? medical information first documented refers to Description; disease refers to diagnosis; patient number refers to id\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.First_Date, table_1.Diagnosis\nFROM table_1\nWHERE table_1.ID = 48473;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1197": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many female patients were given an APS diagnosis? female refers to SEX = 'F'; 'APS' refers to diagnosis\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nWHERE t1.SEX = 'F' AND t0.Diagnosis = 'APS';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1198": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients who underwent testing in 1997 had protein levels outside the normal range? underwent testing in 1997 refers to YEAR(DATE) = '1997'; protein levels within the normal range refers to tp > 6 and tp < 8.5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_2\nWHERE YEAR(Date) = '1997' AND (tp < 6 OR tp > 8.5);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1199": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What proportion of patients who had signs of thrombocytopenia had SLE diagnosed? thrombocytopenia' refers to symptoms; 'SLE' refers to diagnosis; calculation = \u00a0 DIVIDE(SUM(DIAGNOSIS LIKE '%ITP%'), SUM(DIAGNOSIS LIKE '%SLE%')) MULTIPLY 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n(SUM(CASE WHEN t0.Symptoms LIKE '%Thrombocytopenia%' THEN 1 ELSE 0 END) / SUM(CASE WHEN t1.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END)) * 100 AS proportion\nFROM\ntable_0 t0\nJOIN\ntable_1 t1 ON t0.ID = t1.ID;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1200": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What percentage of patients who were born in 1980 and were diagnosed with RA are women? born in 1980 refers to YEAR(BIRTHDAY) = '1980'; 'RA' refers to diagnosis; women refers to SEX = 'F'; calculation = DIVIDE((SEX = 'F'), COUNT(SEX)) where YEAR(BIRTHDAY) = '1980' AND diagnosis = 'RA' MULTIPLY 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (COUNT(CASE WHEN SEX = 'F' THEN 1 END) / COUNT(*)) * 100 AS percentage\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE YEAR(table_1.Birthday) = '1980' AND table_0.Diagnosis = 'RA';\nend\n\t----- bird -----\tthrombosis_prediction", "1201": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with BEHCET disease did not stay in the hospital for treatment? male refers to SEX = 'M'; underwent testing between 1995 and 1997 refers to `Examination Date` between '1995' and '1997'; BEHCET refers to diagnosis; did not stay in the hospital refers to Admission = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'M'\nAND t0.Examination Date BETWEEN '1995-01-01' AND '1997-12-31'\nAND t1.Diagnosis = '\n\t----- bird -----\tthrombosis_prediction", "1202": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients who were female got white blood cells that were below 3.5? female refers to SEX = 'F'; white blood cells that were below 3.5 refers to WBC < 3.5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'F' AND t2.WBC < 3.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1203": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began? DATEDIFF(`Examination Date`, `First Date`)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DATEDIFF(`Examination Date`, `First Date`) AS DaysToEvaluation\nFROM table_0\nWHERE ID = 821298;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1204": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Was the patient with the number 57266's uric acid within a normal range? uric acid within a normal range refers to UA > 8.0 and SEX = 'M'; UA > 6.5 and SEX = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT UA FROM table_2 WHERE ID = 57266 AND SEX = 'M' AND UA > 8.0 OR ID = 57266 AND SEX = 'F' AND UA > 6.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1205": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: When is the laboratory examination of patient '48473' where his/her AST glutamic oxaloacetic transaminase (GOT) index is above the normal range. AST glutamic oxaloacetic transaminase (GOT) index is above the normal range refers to GOT > = 60; when refers to DATE\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT Examination Date FROM table_0 WHERE ID = '48473' AND aCL IgG >= 60;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1206": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List all patients with their sex and date of birthday, whose AST glutamic oxaloacetic transaminase (GOT) index is within normal range for loboratory examination in 1994. AST glutamic oxaloacetic transaminase (GOT) index is within normal range refers to GOT < 60; examination in 1994 refers to year(Date) = 1994\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.SEX, t1.Birthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE year(t2.Date) = 1994 AND t2.GOT < 60;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1207": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range. male refers to SEX = 'M'; ALT glutamic pylvic transaminase (GPT) exceed the normal range refers to GPT > = 60\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.SEX = 'M' AND table_2.GPT >= 60;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1208": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please provide the diagnosis of patients with ALT glutamic pylvic transaminase beyond the normal range by ascending order of their date of birth. ALT glutamic pylvic transaminase beyond the normal range refers to GPT > 60; ascending order of their date of birth refers to MAX(Birthday)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.Birthday, t2.GPT, t1.Diagnosis\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.GPT > 60\nORDER BY t1.Birthday ASC;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1209": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range. average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(LDH) AS Average_LDH_Index\nFROM table_2\nWHERE LDH < 500;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1210": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range. age refers to SUBTRACT(year(current_timestamp), year(Birthday)); lactate dehydrogenase (LDH) between 100-300 index above the normal range refers to LDH between 600 and 800;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, SUBTRACT(year(current_timestamp), year(t1.Birthday)) AS Age\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.LDH BETWEEN 600 AND 800;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1211": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For patients with alkaliphophatase (ALP) within normal range, were they treated as inpatient or outpatient? alkaliphophatase (ALP) within normal range refers to ALP < 300; inpatient refers to admission = '+'; outpatient refers to admission = '-'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.Admission, COUNT(*) AS count\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.ALP < 300\nGROUP BY table_1.Admission;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1212": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Name the ID of the patient who is born on the April 1st, 1982. Is his/her alkaliphophatase (ALP) within normal range? alkaliphophatase (ALP) within normal range refers to ALP < 300\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID\nFROM table_1\nWHERE table_1.Birthday = '1982-04-01' AND table_2.ALP < 300;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1213": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List ID, sex and date of birth of patient whose total protein (TP) below the lower range of the normal index. total protein (TP) below the lower range of the normal index refers to TP < 6.0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, t1.Birthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.TP < 6.0;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1214": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal. female refers to SEX = 'F'; total protein (TP) beyond the normal index refers to TP > 8.5;\ndeviation of TP index from normal refers to SUBTRACT(TP, 8.5)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    t1.ID,\n    t1.SEX,\n    t2.TP,\n    t2.TP - 8.5 AS TP_Deviation\nFROM\n    table_1 t1\nJOIN\n    table_2 t2 ON t1.ID = t2.ID\nWHERE\n    t1.SEX = 'F' AND t2.TP > 8.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1215": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Sort in descending order all patients by birthday for male patient with albumin not within range. male = SEX = 'M'; albumin not within range refers to ALB < = 3.5 or ALB > = 5.5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.SEX, table_1.Birthday, table_2.ALB\nFROM table_1\nINNER JOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.SEX = 'M' AND (table_2.ALB <= 3.5 OR table_2.ALB >= 5.5)\nORDER BY table_1.Birthday DESC;\nend_\n\t----- bird -----\tthrombosis_prediction", "1216": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For all patient born in 1982, state if their albumin is within normal range. Year(Birthday) = '1982'; albumin is within normal range refers to ALB between 3.5 and 5.5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.SEX, table_1.Birthday, table_2.ALB,\nCASE\nWHEN table_2.ALB BETWEEN 3.5 AND 5.5 THEN 'Albumin is within normal range'\nELSE 'Albumin is not within normal range'\nEND AS Albumin_Status\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE\n\t----- bird -----\tthrombosis_prediction", "1217": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the percentage of the female patient whose uric acid (UA) beyond the normal range? uric acid (UA) beyond the normal range refers to UA > 8.0 and SEX = 'M' or UA > 6.5 and SEX = 'F'; female refers to Sex = 'F'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n(SELECT COUNT(*) FROM table_1 WHERE SEX = 'F') AS total_female,\n(SELECT COUNT(*) FROM table_1 WHERE SEX = 'F' AND (SELECT UA FROM table_2 WHERE table_2.ID = table_1.ID) > 8.0 OR (SELECT UA FROM table_2 WHERE table_2.ID = table_1.ID) > 6.5) AS female_with_ua\n\t----- bird -----\tthrombosis_prediction", "1218": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For all patients with normal uric acid (UA), what is the average UA index based on their latest laboratory examination result? uric acid (UA) with normal range refers to UA < 8.0 and SEX = 'M' or UA < 6.5 and SEX = 'F'; average UA index refers to AVG(UA)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(table_2.UA) AS average_ua_index\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE (table_1.SEX = 'M' AND table_2.UA < 8.0) OR (table_1.SEX = 'F' AND table_2.UA < 6.5)\nGROUP BY table_1.ID\nHAVING\n\t----- bird -----\tthrombosis_prediction", "1219": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing? urea nitrogen (UN) just within the borderline of passing refers to UN = 29\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, t1.Birthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.UN = 29;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1220": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Provide the ID, sex, birthday of all patients diagnosed with 'RA' that are within the UN normal index. within the UN normal index refers to UN < 30; Diagnosis = 'RA'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, t1.Birthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Diagnosis = 'RA' AND t2.UN < 30;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1221": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many male patients are are with creatinine index out of the normal range? creatinine (CRE) out of the normal range refers to CRE > = 1.5; Male refers to Sex = 'M'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS male_creatinine_out_of_normal_range\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.SEX = 'M' AND table_2.CRE >= 1.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1222": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Are there more male patients with creatinine not within the normal range than female? True or False? creatinine (CRE) not within the normal range refers to CRE > = 1.5; male refers to Sex = 'M'; female refers to Sex = 'F'; calculation = (SUM(SEX = 'M') > SUM(SEX = 'F')) where CRE > = 1.5\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (SUM(SEX = 'M') > SUM(SEX = 'F')) AS more_male_cre_not_normal\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.CRE >= 1.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1223": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index. the highest total bilirubin refers to MAX(T-BIL)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, t1.Birthday, MAX(t2.T-BIL) AS Highest_T_BIL\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nGROUP BY t1.ID, t1.SEX, t1.Birthday\nORDER BY Highest_T_BIL DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1224": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List and group all patients by sex for total bilirubin (T-BIL) level not within the normal range. total bilirubin (T-BIL) not within normal range refers to T-BIL > = 2.0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.SEX, COUNT(*) AS 'Number of Patients'\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.T-BIL >= 2.0\nGROUP BY table_1.SEX;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1225": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index. oldest patient refers to MIN(birthday); highest total cholesterol refers to MAX(T-CHO);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, MAX(table_2.T-CHO) AS T_CHO_INDEX\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.Birthday = (SELECT MIN(Birthday) FROM table_1)\nGROUP BY table_1.ID\nORDER BY T_CHO_INDEX DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1226": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the average age of the male patient with high cholesterol? average age = DIVIDE(SUM(SUBTRACT(YEAR(NOW()), YEAR(birthday))), COUNT(ID)); male patient refers to gender = 'M'; high cholesterol refers to `T-CHO` > = 250;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(SUM(YEAR(NOW()) - YEAR(table_1.Birthday)), COUNT(DISTINCT table_1.ID)) AS AverageAge\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.SEX = 'M' AND table_2.T_CHO >= 250\n\t----- bird -----\tthrombosis_prediction", "1227": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range? triglyceride (TG) index greater than 100 of the normal range refers to TG > 300;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.Diagnosis, table_2.TG\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.TG > 300;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1228": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years? triglyceride (TG) level beyond the normal range refers to TG > = 200; more than 50 years of age = SUBTRACT(year(current_timestamp), year(Birthday)) > 50;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS count\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.TG >= 200 AND SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(t1.Birthday)) > 50;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1229": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List all outpatient within normal range of creatinine phosphokinase. Give me the distinct ids. outpatient refers to Admission = '-'; normal range of creatinine phosphokinase refers to CPK < 250;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT table_1.ID\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.Admission = '-' AND table_2.CPK < 250;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1230": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range? born between 1936-1956 refers to year(Birthday) BETWEEN '1936' AND '1956'; male patients refers to sex = 'M'; creatinine phosphokinase beyond the normal range refers to CPK > = 250;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'M'\nAND YEAR(t1.Birthday) BETWEEN '1936' AND '1956'\nAND t2.CPK >= 250;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1231": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range. age = SUBTRACT(year(current_timestamp), year(Birthday)); blood glucose (GLU) not within normal range refers to GLU > = 180; total cholesterol(T-CHO) within normal range refers to `T-CHO` < 250;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, YEAR(CURRENT_TIMESTAMP) - YEAR(t1.Birthday) AS AGE\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.GLU >= 180 AND t2.T_CHO < 250;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1232": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List each patient's ID and blood glucose (GLU) index that were within normal range for patient's whose data was first recorded in 1991. blood glucose (GLU) index that were within normal range refers to GLU < 180; data that was first recorded in 1991 refers to year(Description) > = 1991;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_2.GLU\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE year(table_1.Description) >= 1991 AND table_2.GLU < 180;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1233": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List the patient ID, sex and birthday who has abnormal white blood cell count. Group them by sex and list the patient by age in ascending order. abnormal white blood cell count refers to WBC < = 3.5 or WBC > = 9.0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, t1.Birthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE (t2.WBC <= 3.5 OR t2.WBC >= 9.0)\nGROUP BY t1.SEX, t1.Birthday\nORDER BY t1.Birthday ASC;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1234": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age. patient's diagnosis refers to Diagnosis; lower red blood cell refers to RBC < 3.5; age = SUBTRACT(year(current_timestamp), year(Birthday));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, TIMESTAMPDIFF(YEAR, t1.Birthday, CURRENT_TIMESTAMP) AS Age, t2.Diagnosis\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.RBC < 3.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1235": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital. female patient refers to Sex = 'F'; age 50 and above = SUBTRACT(year(current_timestamp), year(Birthday)) > = 50; abnormal red blood cell count refers to RBC < = 3.5 or RBC > = 6.0; Admission = '+' means the patient was admitted to the hospital; Admission = '-' means the patient was not admitted to the hospital;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, t1.Birthday, t2.RBC, t1.Admission\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'F' AND SUBTRACT(year(current_timestamp), year(t1.Birthday)) >= 50 AND (t2.RBC <= 3.5 OR t2.\n\t----- bird -----\tthrombosis_prediction", "1236": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex. outpatients refers to Admission = '-'; low hemoglobin level refers to HBG < 10;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Admission = '-' AND t2.HBG < 10;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1237": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex. diagnosed with SLE refers to Diagnosis = 'SLE'; oldest refers to MIN(Birthday); normal hemoglobin level refers to 10 < HGB < 17;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Diagnosis = 'SLE' AND t2.HGB BETWEEN 10 AND 17 AND t1.Birthday = (SELECT MIN(Birthday) FROM table_1 WHERE Diagnosis = '\n\t----- bird -----\tthrombosis_prediction", "1238": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range. age = SUBTRACT(year(current_timestamp), year(Birthday)); patient with two or more laboratory examinations refers to COUNT(ID) > 2; hematoclit level exceeded the normal range refers to HCT > = 52;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, (YEAR(CURRENT_TIMESTAMP()) - YEAR(t1.Birthday)) AS Age\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.HCT >= 52\nGROUP BY t1.ID, Age\nHAVING COUNT(t2.ID) >= 2;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1239": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: From laboratory examinations in 1991, what is the average hematoclit level that is lower than the normal range. laboratory examinations in 1991 refers to Date like '1991%'; average hematoclit level = AVG(HCT); hematoclit level that is lower than the normal range refers to HCT < 29;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(HCT) AS AverageHematoclitLevel\nFROM table_2\nWHERE Date LIKE '1991%' AND HCT < 29;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1240": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range? abnormal platelet level refers to PLT < 100; platelet level lower than normal range refers to PLT < 100; how much = SUBTRACT(SUM(PLT < 100), SUM(PLT > 400)); platelet level higher than normal range refers to PLT > 400;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS lower_than_normal_range\nFROM table_2\nWHERE PLT < 100;\n\nSELECT COUNT(*) AS higher_than_normal_range\nFROM table_2\nWHERE PLT > 400;\n\nSELECT (SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END))\n\t----- bird -----\tthrombosis_prediction", "1241": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level. laboratory examinations take in 1984 refers to Date like '1984%'; below 50 years old = SUBTRACT(year(current_timestamp), year(Birthday)) < 50; normal platelet level refers to PLT between 100 and 400;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID, table_1.SEX, table_1.Birthday, table_2.Date, table_2.PLT\nFROM table_1\nINNER JOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.Date LIKE '1984%' AND SUBTRACT(year(current_timestamp), year(table_1.Birthday)) < 50 AND table_2.\n\t----- bird -----\tthrombosis_prediction", "1242": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)? older than 55 years old = SUBTRACT(year(current_timestamp), year(Birthday)) > 55; percentage = MULTIPLY(DIVIDE(SUM(PT > = 14 AND SEX = 'F'), SUM(PT > = 14)), 1.0); female refers to Sex = 'F'; abnormal prothrombin time (PT) refers to PT > = 14;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n(SUM(PT >= 14 AND SEX = 'F') / SUM(PT >= 14)) * 100 AS percentage\nFROM\ntable_1\nJOIN\ntable_0 ON table_1.ID = table_0.ID\nJOIN\ntable_2 ON table_1.ID = table_2.ID\nWHERE\nSUBTRACT(year(current_timestamp), year(Birthday)) > 55;\n\t----- bird -----\tthrombosis_prediction", "1243": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal. first came to the hospital after year 1992 refers to year(`First Date`) > 1992; prothrombin time (PT) level that are normal refers to PT < 14;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID, t1.SEX, t1.Birthday, t1.First_Date, t2.PT\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.First_Date > '1992-12-31' AND t2.PT < 14;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1244": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time? examinations done after 1997/1/1 refers to `Examination Date` > '1997-01-01'; normal activated partial prothrom bin time refesr to APTT < 45;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS inactivated_partial_prothrombin_time_count\nFROM table_0\nWHERE Examination Date > '1997-01-01' AND APTT > 45;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1245": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients with an abnormal activated partial prothrom bin time, how many of them have a mild thrombosis? abnormal activated partial prothrom bin time refers to APTT > 45; mild thrombosis refers to Thrombosis = 3; Only count ones without repetitive.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT t1.ID)\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.APTT > 45 AND t2.Thrombosis = 3;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1246": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level? male patients refers to Sex = 'M'; normal level of white blood cells refers to WBC between 3.5 and 9.0; abnormal fibrinogen level refers to FG < = 150 or FG > = 450; Don't compute repetitive ones.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT t1.ID)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'M'\nAND t2.WBC BETWEEN 3.5 AND 9.0\nAND (t2.FG <= 150 OR t2.FG >=\n\t----- bird -----\tthrombosis_prediction", "1247": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients born after 1980/1/1 have an abnormal fibrinogen level? born after 1980/1/1 refers to Birthday > '1980-01-01'; normal fibrinogen level refers to FG between 150 and 450; Should return the number of distinct patients.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT t1.ID)\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Birthday > '1980-01-01' AND t2.FG NOT BETWEEN 150 AND 450;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1248": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the disease names of the patients that have a proteinuria level higher than normal. disease names refers to Diagnosis; proteinuria level higher than normal refers to `U-PRO` > = 30;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.Diagnosis\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.U_PRO >= 30;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1249": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID. normal proteinuria level refers to 0 < `U-PRO` < 30; diagnosed with SLE refers to Diagnosis = 'SLE';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.U-PRO > 0 AND table_2.U-PRO < 30 AND table_1.Diagnosis = 'SLE';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1250": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients with an Ig G lower than normal has the symptom of abortion? Ig G lower than normal refers to IGG < 900; symptom of abortion refers to Symptoms = 'abortion';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE aCLIgG < 900 AND Symptoms = 'abortion';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1251": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients with a normal Ig G level, how many of them have symptoms? normal Ig G level refers to IGG BETWEEN 900 AND 2000; have symptoms refers to Symptoms IS NOT NULL;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE IGG BETWEEN 900 AND 2000\nAND Symptoms IS NOT NULL;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1252": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient who has the highest Ig A within the normal range, what is his or her diagnosis? highest Ig A within the normal range refers to MAX(IGA BETWEEN 80 AND 500);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.Diagnosis\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.IGA BETWEEN 80 AND 500\nAND t2.IGA = (SELECT MAX(IGA) FROM table_2 WHERE IGA BETWEEN 80 AND 500);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1253": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients with a normal Ig A level came to the hospital after 1990/1/1? normal Ig A level refers to IGA BETWEEN 80 AND 500; came to the hospital after 1990/1/1 refers to YEAR(`First Date`) > = 1990;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS 'Number of Patients'\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.IGA BETWEEN 80 AND 500\nAND YEAR(t1.First_Date) >= 1990;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1254": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with? abnormal Ig M level refers to IGM NOT BETWEEN 40 AND 400; most common disease refers to MAX(COUNT(Diagnosis));\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.Diagnosis, COUNT(t1.Diagnosis) AS count\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.IGM NOT BETWEEN 40 AND 400\nGROUP BY t1.Diagnosis\nORDER BY count DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1255": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients with a normal C-reactive protein don't have their data recorded? normal C-reactive protein refers to CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0; don't have data recorded refers to Description IS NULL;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE (t2.CRP LIKE '+' OR t2.CRP LIKE '-' OR t2.CRP < 1.0) AND t2.Description IS NULL;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1256": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients whose C-reactive protein level is abnormal, how many of them aren't 18 yet? C-reactive protein level is abnormal refers to CRP NOT IN('+-', '-') AND CRP > = 1.0; aren't 18 refers = CRP > = 1.0 AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 18; Should compute the number of distinct ones.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT table_1.ID)\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.CRP NOT IN('+-', '-') AND table_2.CRP >= 1.0 AND table_2.CRP >= 1.0 AND SUBTRACT((YEAR(CURDATE()), YEAR\n\t----- bird -----\tthrombosis_prediction", "1257": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation? normal Rhuematoid Factor refers TO RA IN('-', '+-'); positive measure of degree of coagulation refers to KCT = '+'; Should compute the number of distinct ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT t1.ID)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.RA IN ('-', '+-') AND t2.KCT = '+';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1258": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the diseases of the patients born after 1995-1-1 and have a normal Rhuematoid Factor. diseases refers to Diagnosis; born after 1995/1/1 refers to YEAR(Birthday) > = 1995; normal Rhuematoid Factor refers to RA IN('-', '+-');\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.Diagnosis\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE YEAR(t1.Birthday) >= 1995 AND t2.RA IN('-', '+-')\nGROUP BY t1.Diagnosis;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1259": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the ID of the patient whose RF is normal and who is older than 60. RF is normal refers to RF < 20; older than 60 = SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) > 60;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.RF < 20 AND SUBTRACT((YEAR(CURDATE()), YEAR(table_1.Birthday))) > 60;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1260": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients with a normal RF don't have thrombosis? normal RF refers to RF < 20; don't have thrombosis refers to Thrombosis = '0';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.RF < 20 AND t0.Thrombosis = '0';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1261": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients with a normal level of complement 3 have a P pattern observed in the sheet of ANA examination? normal level of complement 3 refers to C3 > 35; have a P pattern observed in the sheet of ANA examination refers to ANA Pattern = 'P'; Should compute the number of distinct ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT t1.ID)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.C3 > 35 AND t0.ANA Pattern = 'P';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1262": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients whose level of Hematoclit isn't normal, which patient has the highest anti-Cardiolipin antibody concentration? Please list his or her ID. Hematoclit is normal refers to 29 < N < 52; highest anti-Cardiolipin antibody concentration refers to MAX(`aCL IgA`);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT `ID`\nFROM `table_0`\nWHERE `aCL IgA` = (SELECT MAX(`aCL IgA`) FROM `table_0`)\nAND `HCT` NOT BETWEEN 29 AND 52;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1263": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients have blood clots in veins, how many of them have a normal level of complement 4? APS will result in Blood Clots in veins; normal level of complement 4 refers to C4 > 10; Should compute the number of different ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT table_1.ID)\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nWHERE table_0.Thrombosis = 1 AND table_2.C4 > 10;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1264": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital? normal level of anti-ribonuclear protein refers to RNP = '-', '+-'; And'-' means 'negative'; '+-' refers to '0'; admitted to the hospital refers to Admission = '+'; Should compute the number of distinct ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT table_1.ID)\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.RNP IN ('-', '+-') AND table_1.Admission = '+';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1265": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth. youngest patient refers to MAX(Birthday); abnormal anti-ribonuclear protein level refers to RNP NOT IN('-', '+-'); date of birth refers to Birthday;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.Birthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.RNP NOT IN ('-', '+-')\nORDER BY t1.Birthday ASC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1266": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients with normal anti-SM, how many of them have the most severe degree of thrombosis? normal anti-SM refers to SM IN('-', '+-'); SM = 'negative' means '-'; SM = '0' means '+-'; SM = '1' means '+'; most severe degree of thrombosis refers to Thrombosis = '1';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE SM IN('-', '+-') AND Thrombosis = '1'\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1267": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones. abnormal anti-SM refers to SM NOT IN('-', '+-'); youngest refers to MAX(Birthday);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.SM NOT IN('-', '+-')\nGROUP BY t1.ID\nORDER BY MAX(t1.Birthday) ASC\nLIMIT 3;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1268": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the IDs of the patients who had the examination done after 1997/1/1 and had a normal anti-scl70. examination done after 1997/1/1 refers to `Examination Date` > = 1997-01-01; normal anti-scl70 refers to SC170 IN('-', '+-');\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT table_1.ID\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_0.Examination Date >= '1997-01-01' AND table_2.SC170 IN('-', '+-')\nGROUP BY table_1.ID;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1269": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients who has a normal anti-scl70, how many of them are male and have the symptom of vertigo? normal anti-scl70 refers to SC170 IN('-', '+-'); male refers to Sex = 'M'; symptom of vertigo refers to symptoms = 'vertigo'; Should compute the number of distinct ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT table_1.ID)\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.SC170 IN('-', '+-') AND table_1.SEX = 'M' AND table_0.Symptoms = 'vertigo';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1270": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients with a normal anti-SSA came to the hospital before 1990? normal anti-SSA refers to SSA IN('-','+-'); came to the hospital before 1990 refers to YEAR(`First Date`) < 1990; Should compute the number of distinct ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT table_1.ID)\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.SSA IN('-','+-') AND YEAR(table_1.First_Date) < 1990;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1271": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID. first patient refers to ID with MIN(`First Date`); abnormal anti-SSA refers to SSA NOT IN('-', '+-');\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.ID\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.First_Date = (SELECT MIN(First_Date) FROM table_1)\nAND t2.SSA NOT IN ('-', '+-')\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1272": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients have a normal anti-SSB and are diagnosed with SLE in the examination? normal anti-SSB refers to SSB IN('-', '+-'); '-' is expressed as 'negative' and '+-' is expressed as '0' in the database ; diagnosed with SLE refers to Diagnosis = 'SLE'; Should compute the number of distinct ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT table_1.ID)\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_0.Examination Date = table_2.Date\nAND table_0.Examination Date = table_1.Description\nAND table_0.Examination Date = table_2.Date\nAND table\n\t----- bird -----\tthrombosis_prediction", "1273": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients whose anti-SSB are normal, how many of them have other symptoms observed in their examination? anti-SSB are normal refers to SSB IN('-', '+-'); have other symptoms refers to Symptoms IS NOT NULL; Should compute the number of distinct ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT table_0.ID)\nFROM table_0\nJOIN table_1 ON table_0.ID = table_1.ID\nJOIN table_2 ON table_0.ID = table_2.ID\nWHERE table_2.SSB IN('-', '+-') AND table_0.Symptoms IS NOT NULL;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1274": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male? normal level of anti-centromere refers to CENTROMEA IN('-', '+-'); normal level of anti-SSB refers to SSB IN('-', '+-'); male refers to Sex = 'M';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.CENTROMEA IN ('-', '+-') AND table_2.SSB IN ('-', '+-') AND table_1.SEX = 'M';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1275": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with. abnormal level of anti-DNA refers to DNA > = 8; diseases refers to Diagnosis;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.Diagnosis\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.DNA >= 8;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1276": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients have a normal anti-DNA level, yet their data are not recorded. normal anti-DNA level refers to DNA < 8; data are not recorded refers to Description IS NULL; Should compute the number of unique ones\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT t1.ID)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.DNA < 8 AND t1.Description IS NULL;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1277": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Of the patients with an abnormal level of anti-DNA-II, how many of them admitted to the hospital? normal level of anti-DNA-II refers to DNA-II < 8; admitted to the hospital refers to Admission = '+';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.DNA_II < 8 AND t1.Admission = '+';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1278": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the percentage of patient who has a abnormal level of glutamic oxaloacetic transaminase level, yet he or she is diagnosed with SLE? abnormal level of glutamic oxaloacetic transaminase refers to GOT > = 60; percentage = MULTIPLY(DIVIDE(COUNT(ID WHERE GOT > = 60 AND Diagnosis = 'SLE'), COUNT(ID WHERE GOT > = 60)), 1.0);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n(COUNT(DISTINCT t1.ID) * 1.0 / COUNT(DISTINCT t2.ID)) AS percentage\nFROM\ntable_1 t1\nJOIN\ntable_2 t2 ON t1.ID = t2.ID\nWHERE\nt2.GOT >= 60 AND t2.Diagnosis = 'SLE';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1279": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many male patients have their glutamic oxaloacetic transaminase in the normal range? male refers to Sex = 'M'; glutamic oxaloacetic transaminase in the normal range refers to GOT < 60;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'M' AND t2.GOT < 60;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1280": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born? abnormal level of glutamic oxaloacetic transaminase refers to GOT > = 60; youngest refers to MAX(Birthday);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MIN(t1.Birthday) AS YoungestBirthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.GOT >= 60;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1281": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the top three patients' birthdays with the highest glutamic pylvic transaminase in the normal range. highest glutamic pylvic transaminase in the normal range refers to MAX(GPT < 60);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.Birthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.GPT < 60\nORDER BY t2.GPT DESC\nLIMIT 3;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1282": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients with the normal glutamic pylvic transaminase level, how many of them are male? normal glutamic pylvic transaminase level refers to GOT < 60; male refers to Sex = 'M';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1\nWHERE SEX = 'M'\nAND ID IN (\n    SELECT ID\n    FROM table_2\n    WHERE GOT < 60\n);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1283": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient with the highest lactate dehydrogenase in the normal range, when was his or her data first recorded? highest lactate dehydrogenase in the normal range refers to MAX(LDH < 500); when the data first recorded refers to MIN(First Date);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MIN(t1.First_Date) AS First_Date\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.LDH < 500\nGROUP BY t1.ID\nORDER BY MAX(t2.LDH) DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1284": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase. latest patient refers to ID with MAX('First Date'); abnormal level of lactate dehydrogenase refers to LDH > = 500;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(table_2.Date) AS Latest_Date\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.ID = (SELECT MAX(ID) FROM table_1) AND table_2.LDH >= 500;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1285": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patient with an abnormal alkaliphophatase level, how many of them are admitted to the hospital? abnormal alkaliphophatase level refers to ALP > = 300; admitted to the hospital refers to Admission = '+';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS admitted_patients\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Admission = '+' AND t2.ALP >= 300;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1286": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients followed at the outpatient clinic, how many of them have a normal level of alkaliphophatase? followed at the outpatient clinic refers to Admission = '-'; normal level of alkaliphophatase refers to ALP < 300;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS count_normal_ALP\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Admission = '-' AND t2.ALP < 300;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1287": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the diagnosis of the patients whose total protein is lower than normal. total protein is lower than normal refers to TP < 6.0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.Diagnosis\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.TP < 6.0;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1288": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients who are diagnosed with SJS, how many of them have a normal level of total protein? diagnosed with SJS refers to Diagnosis = 'SJS'; normal level of total protein refers to TP > 6.0 and TP < 8.5;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS count_normal_tp_sjs\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Diagnosis = 'SJS' AND t2.TP > 6.0 AND t2.TP < 8.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1289": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the examination date of the patient whose albumin is the highest in the normal range? examination date refers to Date; albumin is the highest in the normal range refers to MAX(ALB > 3.5 and ALB < 5.5);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT Examination Date\nFROM table_0\nWHERE ALB = (SELECT MAX(ALB) FROM table_2 WHERE ALB > 3.5 AND ALB < 5.5);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1290": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many male patients have a normal level of both albumin and total protein? male refers to Sex = 'M'; normal level of both albumin and total protein refers to ALB > 3.5 and ALB < 5.5 AND TP between 6.0 and 8.5;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'M' AND t2.ALB > 3.5 AND t2.ALB < 5.5 AND t2.TP BETWEEN 6.0 AND 8.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1291": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range? anti Cardiolipin antibody concentration refers to `aCL IgG`, `aCL IgM`, `aCL IgA`; female patient refers to Sex = F'; highest uric acid level in the normal range refers to MAX(UA > 6.50);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT aCLIgG, aCL IgM, aCL IgA\nFROM table_0\nJOIN table_1 ON table_0.ID = table_1.ID\nJOIN table_2 ON table_0.ID = table_2.ID\nWHERE table_1.SEX = 'F' AND table_2.UA > 6.50\nORDER BY table_2.UA DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1292": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level? highest anti-nucleus antibody concentration level refers to MAX(ANA); normal creatinine level refers to CRE < 1.5;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(ANA) AS highest_ana_concentration\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.SEX = 'Male' AND t2.CRE < 1.5;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1293": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the patient's ID whose creatinine level is normal and whose anti Cardiolipin antibody concentration level is the highest. creatinine level is normal refers to CRE < 1.5; anti Cardiolipin antibody concentration level is the highest refers to MAX(aCL IgA);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_2.CRE < 1.5 AND table_0.aCL IgA = (SELECT MAX(aCL IgA) FROM table_0);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1294": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination? total bilirubin is over the normal range refers to `T-BIL` > = 2.0; peripheral pattern is observed in the sheet of ANA examination refers to that ANA Pattern contains 'P';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE T-BIL >= 2.0 AND ANA Pattern LIKE '%P%';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1295": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the anti-nucleus antibody concentration of the patient whose total bilirubin is the highest in the normal range? anti-nucleus antibody concentration refers to ANA; total bilirubin is the highest in the normal range refers to MAX(`T-BIL` < 2.0);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT ANA FROM table_2 WHERE T-BIL = (SELECT MAX(T-BIL) FROM table_2 WHERE T-BIL < 2.0);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1296": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation? total cholesterol is higher than normal refers to `T-CHO` > = 250; negative measure of degree of coagulation refers to KCT = '-' ;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0 t0\nJOIN table_1 t1 ON t0.ID = t1.ID\nJOIN table_2 t2 ON t0.ID = t2.ID\nWHERE t0.Examination Date = t2.Date AND t0.Examination Date = t1.Description AND t0.Examination Date = t2.Date AND t0.T-CHO >= 250 AND t2.K\n\t----- bird -----\tthrombosis_prediction", "1297": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients whose total cholesterol is within the normal range, how many of them have a P pattern observed in the sheet of ANA examination? total cholesterol is within the normal range refers to `T-CHO` < 250; P pattern observed in the sheet of ANA examination refers to ANA Pattern = 'P';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE T-CHO < 250 AND ANA Pattern = 'P';\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1298": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients with the normal level of triglyceride, how many of them have other symptoms observed? normal level of triglyceride refers to TG < 200; have other symptoms refers to Symptoms is not null;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE TG < 200 AND Symptoms IS NOT NULL;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1299": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: What is the disease name of the patient who has the highest level of triglyceride within the normal range? disease name referse to Diagnosis; highest level of triglyceride within the normal range refers to MAX(TG < 200);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t1.Diagnosis\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.TG < 200\nORDER BY t2.TG DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1300": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the IDs of the patients with no thrombosis and an abnormal level of creatinine phosphokinase. no thrombosis refers to Thrombosis = 0 ; abnormal level of creatinine phosphokinase refers to CPK < 250;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.ID\nFROM table_0\nWHERE table_0.Thrombosis = 0 AND table_0.CPK < 250;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1301": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation? normal range of creatinine phosphokinase refers to CPK < 250; positive measure of degree of coagulation refers to KCT = '+' or RVVT = '+' or LAC = '+' ;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE CPK < 250 AND (KCT = '+' OR RVVT = '+' OR LAC = '+')\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1302": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: When is the birthday of the oldest patient whose blood glucose is abnormal? oldest patient refers to MIN(Birthday); blood glucose is abnormal refers to GLU > 180;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MIN(t1.Birthday) AS OldestPatientBirthday\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.GLU > 180;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1303": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients with a normal blood glucose, how many of them don't have thrombosis? normal blood glucose refers to GLU < 180; don't have thrombosis refers to Thrombosis = 0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE GLU < 180 AND Thrombosis = 0;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1304": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients accepted to the hospital have a normal level of white blood cells? accepted to the hospital refers to Admission = '+'; normal level of white blood cells refers to WBC between 3.5 and 9.0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Admission = '+' AND t2.WBC BETWEEN 3.5 AND 9.0;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1305": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients diagnosed with SLE have a normal white blood cell level? diagnosed with SLE refers to Diagnosis = 'SLE'; normal white blood cell level refers to WBC between 3.5 and 9.0;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS num_patients\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t1.Diagnosis = 'SLE' AND t2.WBC BETWEEN 3.5 AND 9.0;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1306": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic. RBC < = 3.5 or RBC > = 6.0 means the patient has an abnormal level of red blood cell; 3.5 < RBC < 6.0 means the patient has a normal level of red blood cell; followed at the outpatient clinic refers to Admission = '-';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.ID\nFROM table_1\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.Admission = '-' AND (table_2.RBC <= 3.5 OR table_2.RBC >= 6.0);\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1307": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Among the patients who have a normal platelet level, how many of them have other symptoms observed? normal platelet level refers to PLT > 100 and PLT < 400; have other symptoms refers to Diagnosis is not null;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_1 t1\nJOIN table_0 t0 ON t1.ID = t0.ID\nJOIN table_2 t2 ON t1.ID = t2.ID\nWHERE t2.PLT > 100 AND t2.PLT < 400 AND t0.Diagnosis IS NOT NULL;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1308": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD. PLT > 100 and PLT < 400 means platelet level is within the normal range; PLT < 100 and PLT > 400 means platelet level is not within the normal range; diagnosed with MCTD refers to Diagnosis = 'MCTD';\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_2.PLT\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.Diagnosis = 'MCTD' AND table_2.PLT BETWEEN 100 AND 400;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1309": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: For the male patients that have a normal prothrombin time, what is their average prothrombin time? male refers to Sex = 'M'; normal prothrombin time refer to PT < 14; average prothrombin time = AVG(PT);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(PT) AS Average_Prothrombin_Time\nFROM table_1\nJOIN table_0 ON table_1.ID = table_0.ID\nJOIN table_2 ON table_1.ID = table_2.ID\nWHERE table_1.SEX = 'M' AND table_2.PT < 14;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1310": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nID integer,\nExamination Date date,\naCL IgG real,\naCL IgM real,\nANA integer,\nANA Pattern text,\naCL IgA integer,\nDiagnosis text,\nKCT text,\nRVVT text,\nLAC text,\nSymptoms text,\nThrombosis integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\nCREATE TABLE table_1 (\nID integer,\nSEX text,\nBirthday date,\nDescription date,\nFirst Date date,\nAdmission text,\nDiagnosis text,\nPRIMARY KEY (ID),\n);\nCREATE TABLE table_2 (\nID integer,\nDate date,\nGOT integer,\nGPT integer,\nLDH integer,\nALP integer,\nTP real,\nALB real,\nUA real,\nUN integer,\nCRE real,\nT-BIL real,\nT-CHO integer,\nTG integer,\nCPK integer,\nGLU integer,\nWBC real,\nRBC real,\nHGB real,\nHCT real,\nPLT integer,\nPT real,\nAPTT integer,\nFG real,\nPIC integer,\nTAT integer,\nTAT2 integer,\nU-PRO text,\nIGG integer,\nIGA integer,\nIGM integer,\nCRP text,\nRA text,\nRF text,\nC3 integer,\nC4 integer,\nRNP text,\nSM text,\nSC170 text,\nSSA text,\nSSB text,\nCENTROMEA text,\nDNA text,\nDNA-II integer,\nFOREIGN KEY (ID) REFERENCES table_1(ID),\n);\n---------------------\nQUESTION: How many patients with severe thrombosis have a normal prothrombin time? severe thrombosis refers to Thrombosis = 2 or 1; normal prothrombin time refers to PT < 14;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0 t0\nJOIN table_1 t1 ON t0.ID = t1.ID\nWHERE t0.Thrombosis IN (2, 1) AND t1.PT < 14;\nend_sql\n\t----- bird -----\tthrombosis_prediction", "1311": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What's Angela Sanders's major? major refers to major_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.major_name\nFROM table_7\nJOIN table_1 ON table_7.link_to_major = table_1.major_id\nWHERE table_7.first_name = 'Angela' AND table_7.last_name = 'Sanders';\nend_sql\n\t----- bird -----\tstudent_club", "1312": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many students in the Student_Club are from the College of Engineering?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS student_count\nFROM table_7\nWHERE EXISTS (\n    SELECT 1\n    FROM table_1\n    WHERE table_7.link_to_major = table_1.major_id AND table_1.college = 'College of Engineering'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1313": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Please list the full names of the students in the Student_Club that come from the Art and Design Department. full name refers to first_name, last_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT first_name || ' ' || last_name AS full_name\nFROM table_7\nWHERE EXISTS (\n    SELECT 1\n    FROM table_1\n    WHERE table_7.link_to_major = table_1.major_id AND table_1.department = 'Art and Design'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1314": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many students of the Student_Club have attended the event \"Women's Soccer\"? Women's Soccer is an event name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS student_count\nFROM table_7 AS students\nJOIN table_3 AS event_attendance ON students.member_id = event_attendance.link_to_member\nJOIN table_0 AS events ON event_attendance.link_to_event = events.event_id\nWHERE events.event_name = 'Women''s Soccer';\nend_sql\n\t----- bird -----\tstudent_club", "1315": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\". Women's Soccer is an event name; phone numbers refers to phone\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT phone FROM table_7 WHERE member_id IN (SELECT link_to_member FROM table_3 WHERE link_to_event IN (SELECT event_id FROM table_0 WHERE event_name = 'Women''s Soccer'));\nend_sql\n\t----- bird -----\tstudent_club", "1316": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among the students from the Student_Club who attended the event \"Women's Soccer\", how many of them want a T-shirt that's in medium size? Women's Soccer is an event name; T-shirt that is in medium size refers to t_shirt_size = 'Medium'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS num_students\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Student_Club')\nAND EXISTS (SELECT 1 FROM table_3 WHERE link_to_member = member_id AND link_to_event = (SELECT event_id FROM table_0 WHERE event_name = 'Women''s Soccer'))\nAND t_shirt_size =\n\t----- bird -----\tstudent_club", "1317": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the event that has the highest attendance of the students from the Student_Club? event with highest attendance refers to MAX(COUNT(link_to_event))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t0.event_name, COUNT(t7.member_id) AS attendance\nFROM table_0 t0\nJOIN table_3 t3 ON t0.event_id = t3.link_to_event\nJOIN table_7 t7 ON t3.link_to_member = t7.member_id\nWHERE t7.link_to_major = (SELECT major_id FROM table_1 WHERE major_\n\t----- bird -----\tstudent_club", "1318": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which college is the vice president of the Student_Club from? Vice President is a position of the Student Club\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT college FROM table_7 WHERE position = 'Vice President' AND link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Student_Club');\nend_sql\n\t----- bird -----\tstudent_club", "1319": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Please list the event names of all the events attended by Maya Mclean.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name\nFROM table_0\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM table_3\n    WHERE link_to_member IN (\n        SELECT member_id\n        FROM table_7\n        WHERE first_name = 'Maya' AND last_name = 'Mclean'\n    )\n);\nend_sql\n\t----- bird -----\tstudent_club", "1320": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many events of the Student_Club did Sacha Harrison attend in 2019? events attended in 2019 refers to YEAR(event_date) = 2019\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS events_attended\nFROM table_0\nJOIN table_3 ON table_0.event_id = table_3.link_to_event\nJOIN table_7 ON table_3.link_to_member = table_7.member_id\nWHERE table_0.event_name = 'Student_Club' AND table_7.first_name = 'Sacha' AND table_7.last_name =\n\t----- bird -----\tstudent_club", "1321": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among the events attended by more than 10 members of the Student_Club, how many of them are meetings? meetings events refers to type = 'Meeting'; attended by more than 10 members refers to COUNT(event_id) > 10\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM table_3\n    GROUP BY link_to_event\n    HAVING COUNT(*) > 10\n)\nAND type = 'Meeting';\nend_sql\n\t----- bird -----\tstudent_club", "1322": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Please list the names of all the events of the Student_Club that had an attendance of over 20 students. name of events refers to event_name; attendance of over 20 students COUNT(event_id) > 20\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name\nFROM table_0\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM table_3\n    GROUP BY link_to_event\n    HAVING COUNT(link_to_event) > 20\n);\nend_sql\n\t----- bird -----\tstudent_club", "1323": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the average attendance of meetings in 2020? meetings in 2020 refers to type = 'Meeting' where YEAR(event_date) = 2020; average = DIVIDE(COUNT(event_id), COUNT(DISTINCT event_name))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(attendance) AS average_attendance\nFROM (\n    SELECT COUNT(event_id) AS attendance, COUNT(DISTINCT event_name) AS distinct_events\n    FROM table_0\n    WHERE type = 'Meeting' AND YEAR(event_date) = 2020\n) AS attendance_data;\nend_sql\n\t----- bird -----\tstudent_club", "1324": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the most expensive item that was spent in support of club events? item in support of club events refers to expense_description; most expensive refers to MAX(cost)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_description, MAX(cost) AS most_expensive_item\nFROM table_5\nGROUP BY expense_description\nORDER BY most_expensive_item DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1325": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many members of the Student_Club have majored Environmental Engineering?\n 'Environmental Engineering' is the major name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS member_count\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Environmental Engineering');\nend_sql\n\t----- bird -----\tstudent_club", "1326": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the full name of all the members of the Student_Club who attended the \"Laugh Out Loud\" event. full name of members refers to first_name, last_name; 'Laugh Out Loud' is an event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_7.first_name || ' ' || table_7.last_name AS full_name\nFROM table_0\nJOIN table_3 ON table_0.event_id = table_3.link_to_event\nJOIN table_7 ON table_3.link_to_member = table_7.member_id\nWHERE table_0.event_name = 'Laugh Out Loud';\nend_sql\n\t----- bird -----\tstudent_club", "1327": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the last name of all the students who majored Law and Constitutional Studies. \n 'Law and Constitutional Studies' is the major name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT last_name\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Law and Constitutional Studies')\nend_sql\n\t----- bird -----\tstudent_club", "1328": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What county did Sherri Ramsey grew up?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT county FROM table_2 WHERE zip_code = (SELECT zip FROM table_7 WHERE first_name = 'Sherri' AND last_name = 'Ramsey');\nend_sql\n\t----- bird -----\tstudent_club", "1329": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What college offers the major that Tyler Hewitt took?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT college FROM table_1\nJOIN table_7 ON table_1.major_id = table_7.link_to_major\nWHERE table_7.first_name = 'Tyler' AND table_7.last_name = 'Hewitt';\nend_sql\n\t----- bird -----\tstudent_club", "1330": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the amount of the funds that the Vice President received? 'Vice President' is a position of Student Club; funds received refers to amount;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(amount) AS funds_received\nFROM table_6\nJOIN table_7 ON table_6.link_to_member = table_7.member_id\nWHERE table_7.position = 'Vice President';\nend_sql\n\t----- bird -----\tstudent_club", "1331": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How much did the Student_Club members spend on food in September Meeting? amount spent refers to spent; spend on food in September Meeting refers to category = 'Food' where event_name = 'September Meeting'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(spent) AS total_spent_on_food_in_september_meeting\nFROM table_4\nWHERE link_to_event IN (\n    SELECT event_id\n    FROM table_0\n    WHERE event_name = 'September Meeting'\n)\nAND category = 'Food';\nend_sql\n\t----- bird -----\tstudent_club", "1332": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What city and state did the President of the Student_Club grow up? 'President' is a position of Student Club;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT city, state\nFROM table_7\nWHERE position = 'President';\nend_sql\n\t----- bird -----\tstudent_club", "1333": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the full name of the Student_Club members that grew up in Illinois state. full name of member refers to first_name, last_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT CONCAT(first_name, ' ', last_name) AS full_name\nFROM table_7\nWHERE EXISTS (\n    SELECT 1\n    FROM table_2\n    WHERE table_7.zip = table_2.zip_code AND table_2.state = 'Illinois'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1334": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How much did the Student_Club members spend on advertisement in September Meeting? amount spent refers to spent; spend on food in September Meeting refers to category = 'Advertisement' where event_name = 'September Meeting'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(spent) AS total_spent_on_advertisement\nFROM table_4\nWHERE link_to_event IN (\n    SELECT event_id\n    FROM table_0\n    WHERE event_name = 'September Meeting'\n)\nAND category = 'Advertisement';\nend_sql\n\t----- bird -----\tstudent_club", "1335": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What department offers the major that Pierce and Guidi took?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT department\nFROM table_1\nWHERE major_id IN (\n    SELECT link_to_major\n    FROM table_7\n    WHERE member_id IN (\n        SELECT link_to_member\n        FROM table_3\n        WHERE link_to_event IN (\n            SELECT event_id\n            FROM table_0\n            WHERE event_name IN ('Pierce', 'Guidi')\n        )\n    )\n);\n\t----- bird -----\tstudent_club", "1336": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the total budgeted amount for all category in \"October Speaker\" event? total budgeted amount refers to SUM(amount) where event_name = 'October Speaker'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(amount) AS total_budgeted_amount\nFROM table_4\nWHERE link_to_event IN (\n    SELECT event_id\n    FROM table_0\n    WHERE event_name = 'October Speaker'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1337": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Was each expense in October Meeting on October 8, 2019 approved? event_name = 'October Meeting' where event_date = '2019-10-08'; approved = True means expenses was approved; approved = False means expenses was not approved\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_id, expense_description, expense_date, cost, approved\nFROM table_5\nWHERE link_to_event = (SELECT event_id FROM table_0 WHERE event_name = 'October Meeting' AND event_date = '2019-10-08')\nAND approved = True;\nend_sql\n\t----- bird -----\tstudent_club", "1338": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Calculate the total average cost that Elijah Allen spent in the events on September and October. events in September and October refers to month(expense_date) = 9 AND MONTH(expense_date) = 10\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(cost) / COUNT(DISTINCT expense_id) AS average_cost\nFROM table_5\nJOIN table_7 ON table_5.link_to_member = table_7.member_id\nWHERE table_7.first_name = 'Elijah' AND table_7.last_name = 'Allen' AND MONTH(table_5.expense_date) IN (9, 10);\nend_sql\n\t----- bird -----\tstudent_club", "1339": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020. SUBTRACT(spent where YEAR(event_date) = 2019, spent where YEAR(event_date) = 2020)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(CASE WHEN YEAR(event_date) = 2019 THEN spent ELSE 0 END) - SUM(CASE WHEN YEAR(event_date) = 2020 THEN spent ELSE 0 END) AS difference\nFROM table_4\nWHERE EXISTS (SELECT 1 FROM table_0 WHERE event_id = table_4.link_to_event AND event_name = 'Student_Club');\nend_sql\n\t----- bird -----\tstudent_club", "1340": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Give the location for \"Spring Budget Review\". 'Spring Budget Review' is an event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT location FROM table_0 WHERE event_name = 'Spring Budget Review';\nend_sql\n\t----- bird -----\tstudent_club", "1341": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What was the cost for the \"Posters\" on 2019/9/4? 'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_description, cost\nFROM table_5\nWHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\nend_sql\n\t----- bird -----\tstudent_club", "1342": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: With the biggest budget for the \"Food\", what was the remaining of it? remaining of budget refers to remaining, biggest budget for 'Food' refers to MAX(budget.amount) where category = 'Food'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT remaining FROM table_4 WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM table_4 WHERE category = 'Food');\nend_sql\n\t----- bird -----\tstudent_club", "1343": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What was the notes of the fundraising on 2019/9/14? fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT notes FROM table_6 WHERE source = 'Fundraising' AND date_received = '2019-09-14';\nend_sql\n\t----- bird -----\tstudent_club", "1344": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many majors are there in \"College of Humanities and Social Sciences\"?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT major_name) AS total_majors\nFROM table_1\nWHERE college = 'College of Humanities and Social Sciences';\nend_sql\n\t----- bird -----\tstudent_club", "1345": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Tell the phone number of \"Carlo Jacobs\".\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT phone FROM table_7 WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\nend_sql\n\t----- bird -----\tstudent_club", "1346": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Tell the hometown county for \"Adela O'Gallagher\". hometown county refers to county\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT county FROM table_2 WHERE zip_code = (SELECT zip FROM table_7 WHERE first_name = 'Adela' AND last_name = 'O''Gallagher');\nend_sql\n\t----- bird -----\tstudent_club", "1347": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: For all the budgets for \"November Meeting\", how many of them had exceeded the budget? 'November Meeting' is an event name; remaining < 0 means the cost had exceeded the budget\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_4\nWHERE link_to_event = (SELECT event_id FROM table_0 WHERE event_name = 'November Meeting')\nAND remaining < 0;\nend_sql\n\t----- bird -----\tstudent_club", "1348": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Provide the total number of the budget amount for \"September Speaker\" event. 'September Speaker' is an event name; total number of budget amount refers to SUM(amount)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(amount) AS total_budget_amount\nFROM table_4\nWHERE link_to_event = (SELECT event_id FROM table_0 WHERE event_name = 'September Speaker');\nend_sql\n\t----- bird -----\tstudent_club", "1349": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20? 'Post Cards, Posters' is an expense description; on 2019/8/20 refers to expense_date = '2019-8-20'; status of event refers to event_status\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_status FROM table_0\nJOIN table_3 ON table_0.event_id = table_3.link_to_event\nJOIN table_5 ON table_3.link_to_member = table_5.link_to_member\nWHERE expense_description = 'Post Cards, Posters' AND expense_date = '2019-8-20';\nend_sql\n\t----- bird -----\tstudent_club", "1350": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What was Brent Thomason's major? major refers to major_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.major_name\nFROM table_7\nJOIN table_1 ON table_7.link_to_major = table_1.major_id\nWHERE table_7.first_name = 'Brent' AND table_7.last_name = 'Thomason';\nend_sql\n\t----- bird -----\tstudent_club", "1351": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: For all the club members from \"Human Development and Family Studies\" major, how many of them wear large size t-shirt? 'Human Development and Family Studies' is a major name; wear large size t-shirt refers to t_shirt_size = 'Large'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS count_large_tshirts\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Human Development and Family Studies')\nAND t_shirt_size = 'Large';\nend_sql\n\t----- bird -----\tstudent_club", "1352": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What's Christof Nielson's zip code type?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT zip_code, type\nFROM table_2\nWHERE EXISTS (\n    SELECT 1\n    FROM table_7\n    WHERE member_id = 'christof_nielsen' AND zip = zip_code\n);\nend_sql\n\t----- bird -----\tstudent_club", "1353": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: State the major name for the Vice President of the club. 'Vice President' is a position of Student Club\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.first_name, m.last_name, m.position, m.link_to_major, ma.major_name\nFROM table_7 m\nJOIN table_1 ma ON m.link_to_major = ma.major_id\nWHERE m.position = 'Vice President';\nend_sql\n\t----- bird -----\tstudent_club", "1354": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Where is the hometown state for \"Sacha Harrison\"? hometown state refers to state;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT state FROM table_2 WHERE zip_code = (SELECT zip FROM table_7 WHERE first_name = 'Sacha' AND last_name = 'Harrison');\nend_sql\n\t----- bird -----\tstudent_club", "1355": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which department was the President of the club in? 'President' is a position of Student Club\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_1.department\nFROM table_7\nJOIN table_0 ON table_7.member_id = table_3.link_to_member\nJOIN table_3 ON table_3.link_to_event = table_0.event_id\nJOIN table_1 ON table_7.link_to_major = table_1.major_id\nWHERE table_7.position = 'President' AND table_0\n\t----- bird -----\tstudent_club", "1356": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: State the date Connor Hilton paid his/her dues. date the dues was paid refers to received_date where source = 'Dues'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT income_id, date_received FROM table_6 WHERE link_to_member = (SELECT member_id FROM table_7 WHERE first_name = 'Connor' AND last_name = 'Hilton') AND source = 'Dues';\nend_sql\n\t----- bird -----\tstudent_club", "1357": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Who was the first one paid his/her dues? Tell the full name. full name refers to first_name, last_name; first paid dues refers to MIN(received_date) where source = 'Dues'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT first_name || ' ' || last_name AS full_name\nFROM table_7\nWHERE member_id IN (\n    SELECT link_to_member\n    FROM table_6\n    WHERE source = 'Dues'\n    GROUP BY link_to_member\n    HAVING MIN(date_received)\n)\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1358": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"? DIVIDE(SUM(amount where category = 'Advertisement' and event_name = 'Yearly Kickoff'), SUM(amount event_name = 'October Meeting' and category = 'Advertisement'))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(SUM(amount), SUM(amount))\nFROM table_4\nWHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff'\nAND event_name != 'October Meeting';\nend_sql\n\t----- bird -----\tstudent_club", "1359": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What percentage was the budget for Parking to the total budget for the \"November Speaker\"? DIVDE(SUM( amount where category = 'Parking' and event_name = 'November Speaker'), COUNT(event_name = 'November Speaker)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (SUM(amount) / COUNT(event_name)) * 100 AS percentage_parking_budget\nFROM table_4\nWHERE category = 'Parking' AND event_name = 'November Speaker';\nend_sql\n\t----- bird -----\tstudent_club", "1360": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the total cost of the pizzas for all the events? total cost of the pizzas refers to SUM(cost) where expense_description = 'Pizza'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(cost) AS total_pizza_cost\nFROM table_5\nWHERE expense_description = 'Pizza';\nend_sql\n\t----- bird -----\tstudent_club", "1361": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many cities are there in Orange County, Virginia? Orange County is the county, Virginia is the state\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT city) AS city_count\nFROM table_2\nWHERE county = 'Orange County' AND state = 'Virginia';\nend_sql\n\t----- bird -----\tstudent_club", "1362": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List all of the College of Humanities and Social Sciences' departments.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT department FROM table_1 WHERE college = 'College of Humanities and Social Sciences';\nend_sql\n\t----- bird -----\tstudent_club", "1363": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Where is Amy Firth's hometown? hometown refers to city, county, state\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT city, county, state\nFROM table_2\nWHERE zip_code = (SELECT zip\n                FROM table_7\n                WHERE member_id = (SELECT member_id\n                                FROM table_3\n                                WHERE link_to_event = (SELECT event_id\n                                                    FROM table_0\n                                                    WHERE event_name = 'Amy Firth')))\nend_sql\n\t----- bird -----\tstudent_club", "1364": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What are the expenses of the budget with the lowest remaining? expense of budget refers to expense_description; lowest remaining refers to MIN(remaining)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_description, cost\nFROM table_5\nWHERE link_to_budget = (\n    SELECT budget_id\n    FROM table_4\n    WHERE remaining = (\n        SELECT MIN(remaining)\n        FROM table_4\n    )\n);\nend_sql\n\t----- bird -----\tstudent_club", "1365": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List all the members who attended the event \"October Meeting\". 'October Meeting' is an event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT m.first_name, m.last_name\nFROM table_0 e\nJOIN table_3 l ON e.event_id = l.link_to_event\nJOIN table_7 m ON l.link_to_member = m.member_id\nWHERE e.event_name = 'October Meeting';\nend_sql\n\t----- bird -----\tstudent_club", "1366": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which college do most of the members go to? college most members go refers to MAX(COUNT(major.college))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT college, COUNT(*) AS total_members\nFROM table_7 AS members\nJOIN table_1 AS major ON members.link_to_major = major.major_id\nGROUP BY college\nORDER BY total_members DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1367": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What does the person with the phone number \"809-555-3360\" major in? major in refers to major_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT major_name\nFROM table_7\nWHERE phone = '809-555-3360';\nend_sql\n\t----- bird -----\tstudent_club", "1368": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which event has the highest budget amount? event refers to event_name; highest budget amount refers to MAX(amount)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name, MAX(amount) AS highest_budget_amount\nFROM table_0\nJOIN table_4 ON table_0.event_id = table_4.link_to_event\nGROUP BY event_name\nORDER BY highest_budget_amount DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1369": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List all the expenses incurred by the vice president. expense refers to expense_description; 'Vice President' is a position of the Student Club\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_description FROM table_5 WHERE link_to_member IN (SELECT member_id FROM table_7 WHERE position = 'Vice President');\nend_sql\n\t----- bird -----\tstudent_club", "1370": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many members attended the \"Women's Soccer\" event? 'Women's Soccer' is the event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS total_members_attended\nFROM table_7\nJOIN table_3 ON table_7.member_id = table_3.link_to_member\nJOIN table_0 ON table_3.link_to_event = table_0.event_id\nWHERE table_0.event_name = 'Women''s Soccer';\nend_sql\n\t----- bird -----\tstudent_club", "1371": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: When did the member, Casey Mason, received the income? when the income was received refers to date_received\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT income_id, date_received FROM table_6 WHERE link_to_member = (SELECT member_id FROM table_7 WHERE first_name = 'Casey' AND last_name = 'Mason');\nend_sql\n\t----- bird -----\tstudent_club", "1372": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many of the members' hometowns are from Maryland state?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS maryLAND_HOMETOWN_COUNT\nFROM table_7\nWHERE EXISTS (\n    SELECT 1\n    FROM table_2\n    WHERE table_7.zip = table_2.zip_code AND table_2.state = 'Maryland'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1373": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many events did the member with the phone number \"954-555-6240\" attend?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS number_of_events\nFROM table_0 AS e\nJOIN table_3 AS m ON e.event_id = m.link_to_event\nJOIN table_7 AS me ON m.link_to_member = me.member_id\nWHERE me.phone = '954-555-6240';\nend_sql\n\t----- bird -----\tstudent_club", "1374": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List all the members of the \"School of Applied Sciences, Technology and Education\" department. list all members means to list all the full name; full name refers to first_name, last_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT first_name, last_name\nFROM table_7\nWHERE EXISTS (\n    SELECT 1\n    FROM table_1\n    WHERE table_1.major_id = table_7.link_to_major\n    AND table_1.department = 'School of Applied Sciences, Technology and Education'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1375": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among all the closed events, which event has the highest spend-to-budget ratio? closed events refers to event_name where status = 'Closed'; highest spend-to budget ratio refers to MAX(DIVIDE(spent, amount))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name, MAX(spent/amount) AS spend_to_budget_ratio\nFROM table_0\nJOIN table_4 ON table_0.event_id = table_4.link_to_event\nWHERE event_name IN (SELECT event_name FROM table_0 WHERE status = 'Closed')\nGROUP BY event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1376": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many student have the position of president? 'President' is a position of Student Club\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS student_count\nFROM table_7\nWHERE position = 'President';\nend_sql\n\t----- bird -----\tstudent_club", "1377": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the highest amount of budget spend for an event? highest amount of budget spend refers to MAX(spent)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(spent) AS highest_budget_spend\nFROM table_4;\nend_sql\n\t----- bird -----\tstudent_club", "1378": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many meeting events were held in 2020? meeting events refers to type = 'Meeting'; held in 2020 refers to YEAR(event_date) = 2020\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS num_meeting_events\nFROM table_0\nWHERE type = 'Meeting' AND YEAR(event_date) = 2020;\nend_sql\n\t----- bird -----\tstudent_club", "1379": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the total amount of money spent for food? total amount of money spent refers to SUM(spent); spent for food refers to category = 'Food'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(spent) AS total_spent_on_food\nFROM table_4\nWHERE category = 'Food';\nend_sql\n\t----- bird -----\tstudent_club", "1380": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the name of students that have attended more than 7 events. name of students means the full name; full name refers to first_name, last_name; attended more than 7 events refers to COUNT(link_to_event) > 7\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT CONCAT(first_name, ' ', last_name) AS full_name\nFROM table_7\nJOIN table_3 ON table_7.member_id = table_3.link_to_member\nGROUP BY full_name\nHAVING COUNT(table_3.link_to_event) > 7;\nend_sql\n\t----- bird -----\tstudent_club", "1381": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among the students majored in interior design, who have attended the Community Theater event? majored in music refers to major_name = 'Interior Design'; 'Community Theater' is the event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT m.first_name, m.last_name\nFROM table_7 m\nJOIN table_1 ma ON m.link_to_major = ma.major_id\nJOIN table_0 e ON m.member_id = e.event_id\nWHERE ma.major_name = 'Interior Design' AND e.event_name = 'Community Theater';\nend_sql\n\t----- bird -----\tstudent_club", "1382": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: State the name of students from Georgetown, South Carolina. name of students means the full name; full name refers to first_name, last_name; Georgetown is a city; South Carolina is a state\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT CONCAT(first_name, ' ', last_name) AS full_name\nFROM table_7\nJOIN table_2 ON table_7.zip = table_2.zip_code\nWHERE table_2.city = 'Georgetown' AND table_2.state = 'South Carolina';\nend_sql\n\t----- bird -----\tstudent_club", "1383": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many income generated by Grant Gilmour? income generated refers to income.amount\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(income.amount) AS total_income\nFROM table_7 AS member\nJOIN table_6 AS income ON member.member_id = income.link_to_member\nWHERE member.first_name = 'Grant' AND member.last_name = 'Gilmour';\nend_sql\n\t----- bird -----\tstudent_club", "1384": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which student was able to generate income more than $40? name of students means the full name; full name refers to first_name, last_name; generate income more than $50 refers to income.amount > 40\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT CONCAT(first_name, ' ', last_name) AS full_name, SUM(income_amount) AS total_income\nFROM table_7\nJOIN table_6 ON table_7.member_id = table_6.link_to_member\nGROUP BY full_name\nHAVING total_income > 40;\nend_sql\n\t----- bird -----\tstudent_club", "1385": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the total expense for the Yearly Kickoff? 'Baseball game' is an event name; total expense refers to SUM(cost)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(cost) AS total_expense\nFROM table_5\nWHERE EXISTS (\n    SELECT 1\n    FROM table_0\n    WHERE event_name = 'Baseball game' AND table_5.link_to_event = table_0.event_id\n);\nend_sql\n\t----- bird -----\tstudent_club", "1386": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which student has been entrusted to manage the budget for the Yearly Kickoff? 'Yearly Kickoff' is an event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT member_id, first_name, last_name\nFROM table_7\nWHERE member_id IN (\n    SELECT link_to_member\n    FROM table_4\n    WHERE link_to_event IN (\n        SELECT event_id\n        FROM table_0\n        WHERE event_name = 'Yearly Kickoff'\n    )\n);\nend_sql\n\t----- bird -----\tstudent_club", "1387": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which students manage to generate the highest income. State his/her full name along with the income source. name of students means the full name; full name refers to first_name, last_name; generate the highest income refers to MAX(income.amount);\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT CONCAT(first_name, ' ', last_name) AS full_name, source, MAX(income.amount) AS highest_income\nFROM table_7\nJOIN table_6 ON table_7.member_id = table_6.link_to_member\nGROUP BY full_name, source\nORDER BY highest_income DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1388": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which event has the lowest cost? event refers to event_name where MIN(cost)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name FROM table_0\nJOIN table_3 ON table_0.event_id = table_3.link_to_event\nJOIN table_4 ON table_3.link_to_event = table_4.link_to_event\nWHERE cost = (SELECT MIN(cost) FROM table_4);\nend_sql\n\t----- bird -----\tstudent_club", "1389": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event? DIVIDE(SUM(cost where event_name = 'Yearly Kickoff'), SUM(cost)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (SUM(cost) FILTER (WHERE event_name = 'Yearly Kickoff') / SUM(cost)) * 100 AS percentage_of_cost_for_yearly_kickoff\nFROM table_5;\nend_sql\n\t----- bird -----\tstudent_club", "1390": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the ratio between students majored in finance and physics? DIVDE(SUM(major_name = 'Finance'), SUM(major_name = 'Physics'))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END), SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END)) AS ratio\nFROM table_7\nJOIN table_1 ON table_7.link_to_major = table_1.major_id;\nend_sql\n\t----- bird -----\tstudent_club", "1391": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Indicate the top source of funds received in September 2019 based on their amount. top source funds refers to MAX(source) where date_received BETWEEN '2019-09-01' and '2019-09-30'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(source) AS top_source_funds, SUM(amount) AS total_amount\nFROM table_6\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1392": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Provide the full name and email address of the Student_Club's Secretary. full name refers to first_name, last_name; 'Secretary' is a position of Student Club\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT first_name || ' ' || last_name AS full_name, email\nFROM table_7\nWHERE position = 'Secretary' AND link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Student_Club');\nend_sql\n\t----- bird -----\tstudent_club", "1393": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many members of the Student_Club have major in 'Physics Teaching'? 'Physics Teaching' is the major name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS member_count\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Physics Teaching');\nend_sql\n\t----- bird -----\tstudent_club", "1394": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many members did attend the event 'Community Theater' in 2019? event 'Community Theater' in 2019 refers to event_name = 'Community Theater' where YEAR(event_date) = 2019\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS total_members\nFROM table_7\nJOIN table_3 ON table_7.member_id = table_3.link_to_member\nJOIN table_0 ON table_3.link_to_event = table_0.event_id\nWHERE table_0.event_name = 'Community Theater' AND YEAR(table_0.event_date) = 2019;\nend_sql\n\t----- bird -----\tstudent_club", "1395": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Provide the number of events attended by Luisa Guidi. What is her major? major refers to major_name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS number_of_events, m.major_name\nFROM table_0 e\nJOIN table_7 m ON e.event_id = m.member_id\nWHERE m.first_name = 'Luisa' AND m.last_name = 'Guidi'\nGROUP BY m.major_name;\nend_sql\n\t----- bird -----\tstudent_club", "1396": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: On average, how much did the Student_Club spend on food for the typical event in the past? DIVIDE(SUM(spent), COUNT(spent)) where category = 'Food'; 'event in the past' means event_status = 'Closed'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(spent) AS average_food_spent\nFROM table_4\nWHERE category = 'Food' AND link_to_event IN (\n    SELECT event_id\n    FROM table_0\n    WHERE event_status = 'Closed'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1397": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Name the event with the highest amount spent on advertisement. event refers to event_name; highest amount spent on advertisement refers to MAX(spent) where category = 'Advertisement'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name\nFROM table_0\nJOIN table_4 ON table_0.event_id = table_4.link_to_event\nWHERE table_4.category = 'Advertisement'\nORDER BY table_4.spent DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1398": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Did Maya Mclean attend the 'Women's Soccer' event? 'Women's Soccer' is an event name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.first_name, m.last_name, e.event_name\nFROM table_7 m\nJOIN table_3 l ON m.member_id = l.link_to_member\nJOIN table_0 e ON l.link_to_event = e.event_id\nWHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women\n\t----- bird -----\tstudent_club", "1399": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among all events hold by the Student_Club in 2019, find the percentage share of events related to 'Community Service' DIVIDE(SUM(type = 'Community Service'), COUNT(event_id)) * 100 where event_date BETWEEN' 2019-01-01' and '2019-12-31'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_share\nFROM table_0\nWHERE event_name = 'Student_Club' AND event_date BETWEEN '2019-01-01' AND '2019-12-31';\nend_sql\n\t----- bird -----\tstudent_club", "1400": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Indicate the cost of posters for 'September Speaker' event. 'Posters' is the expense description; 'September Speaker' is an event name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(cost) AS poster_cost\nFROM table_5\nWHERE expense_description = 'Posters'\nAND link_to_event = (SELECT event_id FROM table_0 WHERE event_name = 'September Speaker');\nend_sql\n\t----- bird -----\tstudent_club", "1401": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the most popular size of t-shirt ordered by the club members? most popular size of t-shirt ordered refers to MAX(COUNT(t_shirt_size))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t_shirt_size, COUNT(t_shirt_size) AS count\nFROM table_7\nGROUP BY t_shirt_size\nORDER BY count DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1402": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Indicate the name of the closed event whose cost has exceeded the budget the most. closed events refers to event_name where status = 'Closed'; exceed the budget the most refers to MIN(remaining) where remaining < 0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name\nFROM table_0\nWHERE event_name IN (\n    SELECT event_name\n    FROM table_0\n    WHERE status = 'Closed'\n)\nAND event_id IN (\n    SELECT link_to_event\n    FROM table_4\n    WHERE remaining < 0\n    GROUP BY link_to_event\n    HAVING MIN(remaining) = (\n        SELECT MIN(remaining)\n        FROM\n\t----- bird -----\tstudent_club", "1403": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Identify the type of expenses and their total value approved for 'October Meeting' event. total value refers to SUM(cost); 'October Meeting' is an event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_description, SUM(cost) AS total_value\nFROM table_5\nJOIN table_4 ON table_5.link_to_budget = table_4.budget_id\nJOIN table_0 ON table_4.link_to_event = table_0.event_id\nWHERE table_0.event_name = 'October Meeting' AND table_5.approved = 'Yes'\nGROUP BY expense_description;\n\t----- bird -----\tstudent_club", "1404": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount. 'April Speaker' is an event name; amount budgeted refers to budget; budget categories refers to category\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT b.category, b.amount\nFROM table_0 e\nJOIN table_4 b ON e.event_id = b.link_to_event\nWHERE e.event_name = 'April Speaker'\nORDER BY b.amount ASC;\nend_sql\n\t----- bird -----\tstudent_club", "1405": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among the budgets for Food, which one has the highest budgeted amount? MAX(amount) where category = 'Food'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(amount) AS max_budgeted_amount\nFROM table_4\nWHERE category = 'Food';\nend_sql\n\t----- bird -----\tstudent_club", "1406": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among the budgets for Advertising, list out top three which have the most budgeted amount? MAX(amount) where category = 'Advertisement'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT budget_id, amount\nFROM table_4\nWHERE category = 'Advertisement'\nORDER BY amount DESC\nLIMIT 3;\nend_sql\n\t----- bird -----\tstudent_club", "1407": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Calculate the total cost spent for Parking in the list. total cost spent for Parking refers to SUM(cost) where expense_description = 'Parking'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(cost) AS total_cost_parking\nFROM table_5\nWHERE expense_description = 'Parking';\nend_sql\n\t----- bird -----\tstudent_club", "1408": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Mention the total expense used on 8/20/2019. total expense refers SUM(cost) where expense_date = '2019-08-20'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(cost) AS total_expense\nFROM table_5\nWHERE expense_date = '2019-08-20';\nend_sql\n\t----- bird -----\tstudent_club", "1409": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred? full name refers to first_name, last name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM table_7 m\nJOIN table_3 l ON m.member_id = l.link_to_member\nJOIN table_5 e ON l.link_to_event = e.link_to_budget\nWHERE m.member_id = 'rec4BLdZHS2B\n\t----- bird -----\tstudent_club", "1410": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: State what kind of expenses that Sacha Harrison incurred? kind of expenses refers to expense_description\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_description FROM table_5 WHERE link_to_member = (SELECT member_id FROM table_7 WHERE first_name = 'Sacha' AND last_name = 'Harrison');\nend_sql\n\t----- bird -----\tstudent_club", "1411": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What kind of expenses incurred by members who have X-Large in size of tee shirt? kind of expenses refers to expense_description; t_shirt_size = 'X-Large'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_description\nFROM table_5\nWHERE EXISTS (\n    SELECT 1\n    FROM table_7\n    WHERE table_7.member_id = table_5.link_to_member AND table_7.t_shirt_size = 'X-Large'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1412": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Mention the zip code of member who incurred less than 50USD. incurred less than 50USD refers to cost < 50\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.zip\nFROM table_7 m\nJOIN table_5 e ON m.member_id = e.link_to_member\nWHERE e.cost < 50;\nend_sql\n\t----- bird -----\tstudent_club", "1413": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: State the name of major that Phillip Cullen has joined. name of major refers to major_name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT major_name\nFROM table_1\nJOIN table_7 ON table_1.major_id = table_7.link_to_major\nWHERE table_7.first_name = 'Phillip' AND table_7.last_name = 'Cullen';\nend_sql\n\t----- bird -----\tstudent_club", "1414": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List out the position of members who joined major of Business. 'Business' is the major name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT position\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Business')\nend_sql\n\t----- bird -----\tstudent_club", "1415": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many members of Business have the Medium size of tee shirt? members of Economics refers to major_name = 'Business'; t_shirt_size = 'Medium'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Business')\nAND t_shirt_size = 'Medium';\nend_sql\n\t----- bird -----\tstudent_club", "1416": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List out the type of events which have remaining budget more than 30 USD. remaining budget more than 30 USD refers to remaining > 30\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT event_name, remaining\nFROM table_0\nJOIN table_4 ON table_0.event_id = table_4.link_to_event\nWHERE remaining > 30;\nend_sql\n\t----- bird -----\tstudent_club", "1417": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Mention the category of events which were held at MU 215. held at MU 215 refers to location = 'MU 215'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT category FROM table_4 WHERE link_to_event IN (SELECT event_id FROM table_0 WHERE location = 'MU 215');\nend_sql\n\t----- bird -----\tstudent_club", "1418": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the category of event which was taken place in 2020-03-24T12:00:00? taken place in 2020-03-24T12:00:00 refers to event_date = '2020-03-24T12:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT category FROM table_4 WHERE link_to_event IN (SELECT event_id FROM table_0 WHERE event_date = '2020-03-24T12:00:00');\nend_sql\n\t----- bird -----\tstudent_club", "1419": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: State the name of major that Vice President has joined. name of major refers to major_name; 'Vice President' is position of Student Club\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT major_name\nFROM table_1\nJOIN table_7 ON table_1.major_id = table_7.link_to_major\nWHERE table_7.position = 'Vice President'\nend_sql\n\t----- bird -----\tstudent_club", "1420": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Calculate the percentage of members who are major Mathematics in the list? DIVIDE(SUM(position = 'Member' and major_name = 'Mathematics'), COUNT(member_id)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS total_members FROM table_7;\nSELECT COUNT(*) AS math_members FROM table_7 WHERE major_name = 'Mathematics';\nSELECT (math_members / total_members) * 100 AS math_percentage FROM (\n    SELECT COUNT(*) AS total_members FROM table_7\n) AS total_members, (\n    SELECT COUNT(*) AS math_members FROM table_7 WHERE major_name = 'Mathematics\n\t----- bird -----\tstudent_club", "1421": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: State the category of events were held at MU 215. 'MU 215' is the location of event\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT category FROM table_4 WHERE link_to_event IN (SELECT event_id FROM table_0 WHERE location = 'MU 215');\nend_sql\n\t----- bird -----\tstudent_club", "1422": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many income are received with an amount of 50? amount of 50 refers to amount = 50\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS income_count\nFROM table_6\nWHERE amount = 50;\nend_sql\n\t----- bird -----\tstudent_club", "1423": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among the members, how many of them have an extra large t-shirt size? among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS count_of_members_with_x_large_t_shirt_size\nFROM table_7\nWHERE position = 'Member' AND t_shirt_size = 'X-Large';\nend_sql\n\t----- bird -----\tstudent_club", "1424": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS number_of_majors\nFROM table_1\nWHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\nend_sql\n\t----- bird -----\tstudent_club", "1425": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the last name of members with a major in environmental engineering and include its department and college name. 'Environmental Engineering' is the major name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.last_name, m.first_name, m.email, m.phone, m.zip, m.link_to_major, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major, m.position, m.\n\t----- bird -----\tstudent_club", "1426": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent? budget category refers to category; events located at refers to location; type = 'Guest Speaker'; 0 budget spent refers to spent = 0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT table_4.category\nFROM table_0\nJOIN table_3 ON table_0.event_id = table_3.link_to_event\nJOIN table_4 ON table_4.link_to_event = table_3.link_to_event\nWHERE table_0.location = 'MU 215' AND table_0.type = 'Guest Speaker' AND table_4.spent = 0\n\t----- bird -----\tstudent_club", "1427": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the city and state of members enrolled under electrical and computer engineering department. 'Electrical and Computer Engineering Department' is the department; members enrolled refers to position = 'Member'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT city, state\nFROM table_7\nJOIN table_1 ON table_7.link_to_major = table_1.major_id\nWHERE table_1.major_name = 'Electrical and Computer Engineering Department' AND table_7.position = 'Member';\nend_sql\n\t----- bird -----\tstudent_club", "1428": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.? name of social event refers to event_name where type = 'Social'; 'Vice President' is position; located at refers to location\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name\nFROM table_0\nWHERE type = 'Social' AND location = '900 E. Washington St.' AND EXISTS (\n    SELECT 1\n    FROM table_7\n    WHERE position = 'Vice President' AND link_to_major = (\n        SELECT major_id\n        FROM table_1\n        WHERE college = (\n            SELECT college\n            FROM table_2\n            WHERE zip_code = (\n\t----- bird -----\tstudent_club", "1429": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the last name and position of the student that bought pizza on 09/10/2019? bought pizza on 09/10/2019 refers to expense_description = 'Pizza' where expense_date = '2019-09-10'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT last_name, position\nFROM table_7\nJOIN table_5 ON table_7.member_id = table_5.link_to_member\nWHERE expense_description = 'Pizza' AND expense_date = '2019-09-10';\nend_sql\n\t----- bird -----\tstudent_club", "1430": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the last name of the members of the club that attended the women's soccer event. members of the club refers to position = 'Member'; 'Women's Soccer' is event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT last_name\nFROM table_7\nWHERE member_id IN (\n    SELECT link_to_member\n    FROM table_3\n    WHERE link_to_event = (\n        SELECT event_id\n        FROM table_0\n        WHERE event_name = 'Women''s Soccer'\n    )\n) AND position = 'Member';\nend_sql\n\t----- bird -----\tstudent_club", "1431": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club? t_shirt_size = 'Medium' where position = 'Member'; percentage = DIVIDE(COUNT(amount = 50), COUNT(member_id)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(amount = 50) / COUNT(member_id) * 100 AS percentage\nFROM table_7\nJOIN table_6 ON table_7.member_id = table_6.link_to_member\nWHERE table_7.t_shirt_size = 'Medium' AND table_7.position = 'Member' AND table_6.amount = 50;\nend_sql\n\t----- bird -----\tstudent_club", "1432": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which countries have zip codes with post office boxes? zip codes that have post office boxes refers to type = 'PO Box'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT country\nFROM table_2\nWHERE type = 'PO Box';\nend_sql\n\t----- bird -----\tstudent_club", "1433": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What are the zip codes that have post office boxes in the country of the country of San Juan Municipio whose state is Puerto Rico? zip codes that have post office boxes refers to type = 'PO Box'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT zip_code\nFROM table_2\nWHERE state = 'Puerto Rico' AND type = 'PO Box';\nend_sql\n\t----- bird -----\tstudent_club", "1434": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020. name of events refers event_name; game event that was closed refers to type = 'Game' where status = 'Closed'; event_date BETWEEN '2019-03-15' and '2020-03-20'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name\nFROM table_0\nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\nend_sql\n\t----- bird -----\tstudent_club", "1435": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Please provide links to events for members who have paid more than 50 dollar. have paid more than 50 dollar refers to cost > 50\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t_0.event_id, t_0.event_name, t_0.event_date, t_0.type, t_0.notes, t_0.location, t_0.status\nFROM table_0 t_0\nJOIN table_3 t_3 ON t_0.event_id = t_3.link_to_event\nJOIN table_5 t_5 ON t_3.\n\t----- bird -----\tstudent_club", "1436": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event. approved from 1/10/2019 to 11/19/2019 refers to approved = 'true' and expense_date BETWEEN '2019-01-10' and '2019-11-19'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t7.member_id, t7.first_name, t7.last_name, t7.email, t7.position, t7.t_shirt_size, t7.phone, t7.zip, t7.link_to_major, t3.link_to_event\nFROM table_7 AS t7\nJOIN table_3 AS t3 ON t7.member_id = t3\n\t----- bird -----\tstudent_club", "1437": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Please indicate the college of the person whose first name is Katy with the link to the major \"rec1N0upiVLy5esTO\".\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT college FROM table_7\nJOIN table_1 ON table_7.link_to_major = table_1.major_id\nWHERE first_name = 'Katy' AND major_name = 'rec1N0upiVLy5esTO';\nend_sql\n\t----- bird -----\tstudent_club", "1438": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Please list the phone numbers of the members who majored in business at the College of Agriculture and Applied Sciences. 'College of Agriculture and Applied Sciences' is the college; majored in business refers to major_name = 'Business'; phone numbers refers to phone\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT phone FROM table_7\nJOIN table_1 ON table_7.link_to_major = table_1.major_id\nWHERE table_1.college = 'College of Agriculture and Applied Sciences' AND table_1.major_name = 'Business';\nend_sql\n\t----- bird -----\tstudent_club", "1439": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List emails of people who paid more than 20 dollars from 9/10/2019 to 11/19/2019. expense_date BETWEEN '2019-09-10' and '2019-11-19'; cost > 20\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT email FROM table_7 WHERE member_id IN (SELECT link_to_member FROM table_5 WHERE expense_date BETWEEN '2019-09-10' and '2019-11-19' AND cost > 20);\nend_sql\n\t----- bird -----\tstudent_club", "1440": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: How many members have education major in the College of Education & Human Services? 'education' is the major name; 'Member' is a position of club;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS member_count\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'education')\nAND position = 'Member'\nAND link_to_major = (SELECT major_id FROM table_1 WHERE college = 'College of Education & Human Services');\nend_sql\n\t----- bird -----\tstudent_club", "1441": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the percentage of the events that went over budget? went over budget refers to remaining < 0; percentage = DIVIDE(SUM(remaining < 0), COUNT(event_id)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(SUM(remaining < 0), COUNT(event_id)) * 100 AS percentage_over_budget\nFROM table_0\nJOIN table_4 ON table_0.event_id = table_4.link_to_event;\nend_sql\n\t----- bird -----\tstudent_club", "1442": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Give the event ID, location, and status of events conducted from November 2019 to March 2020. event_date BETWEEN '2019-11-01' and '2020-03-31'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_id, location, status\nFROM table_0\nWHERE event_date BETWEEN '2019-11-01' and '2020-03-31';\nend_sql\n\t----- bird -----\tstudent_club", "1443": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the expenses that spend more than fifty dollars on average. expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT expense_description, SUM(cost) AS total_spent, COUNT(expense_id) AS number_of_expenses, DIVIDE( SUM(cost), COUNT(expense_id) ) AS average_spent\nFROM table_5\nGROUP BY expense_description\nHAVING DIVIDE( SUM(cost), COUNT(expense_id) ) > 50;\nend_sql\n\t----- bird -----\tstudent_club", "1444": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Find the full name of members whose t-shirt size is extra large. full name refers to first_name, last_name; t_shirt_size = 'X-Large'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT first_name || ' ' || last_name AS full_name\nFROM table_7\nWHERE t_shirt_size = 'X-Large';\nend_sql\n\t----- bird -----\tstudent_club", "1445": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Calculate the percentage of zip codes that are PO boxes. DIVIDE(SUM(type = 'PO Box'), COUNT(zip_code)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DIVIDE(SUM(type = 'PO Box'), COUNT(zip_code)) * 100 AS percentage_po_boxes\nFROM table_2;\nend_sql\n\t----- bird -----\tstudent_club", "1446": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the name and location of events that underspend its budget. name of event refers to event_name; underspend its budget refers to remaining > 0\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t0.event_name, t0.location\nFROM table_0 t0\nJOIN table_4 t4 ON t0.event_id = t4.link_to_event\nWHERE t4.remaining > 0;\nend_sql\n\t----- bird -----\tstudent_club", "1447": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars. name of event refers to event_name; date of event refers to event_date; expenses for pizza refers to expense_description = 'Pizza' where cost > 50 and cost < 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name, event_date\nFROM table_0\nWHERE EXISTS (\n    SELECT 1\n    FROM table_3\n    JOIN table_5 ON table_3.link_to_member = table_5.link_to_member\n    WHERE table_3.link_to_event = table_0.event_id\n    AND table_5.expense_description = 'Pizza'\n    AND table_5.\n\t----- bird -----\tstudent_club", "1448": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the name and major of members who had to spend more than a hundred dollars on an expense? full name refers to first_name, last_name; major of members refers to major_name; spend more than a hundred dollars on an expense refers to cost > 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.first_name || ' ' || m.last_name AS full_name, m.link_to_major AS major\nFROM table_7 m\nJOIN table_3 e ON m.member_id = e.link_to_member\nJOIN table_4 b ON e.link_to_event = b.link_to_event\nWHERE b.spent > 100;\nend_sql\n\t----- bird -----\tstudent_club", "1449": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: In the events with more than forty incomes, list the city and country in which the event is happening. more than fifty incomes refers to income > 40\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT city, county\nFROM table_0\nJOIN table_7 ON table_0.event_id = table_3.link_to_event\nJOIN table_6 ON table_6.link_to_member = table_7.member_id\nWHERE EXISTS (\n    SELECT 1\n    FROM table_6\n    WHERE table_6.link_to_member = table_7.member_id\n    GROUP BY\n\t----- bird -----\tstudent_club", "1450": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Among the members who incurred expenses in more than one event, who paid the most amount? paid the most amount refers to for expense incurred in more than one event refers to MAX(cost where COUNT(event_id) > 1)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT member_id, SUM(cost) AS total_spent\nFROM table_5\nWHERE member_id IN (\n    SELECT member_id\n    FROM table_5\n    GROUP BY member_id\n    HAVING COUNT(DISTINCT link_to_event) > 1\n)\nGROUP BY member_id\nORDER BY total_spent DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1451": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the average amount paid by students in a position other than a member? position other than a member refers to position ! = 'Member'; average amount paid = DIVIDE( SUM(cost), COUNT(event_id))\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(cost) AS average_amount_paid\nFROM table_5\nWHERE EXISTS (\n    SELECT 1\n    FROM table_7\n    WHERE table_5.link_to_member = table_7.member_id AND table_7.position != 'Member'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1452": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the name of events with less than average parking cost. name of events refers to event_name; less than average parking cost refers to cost < DIVIDE(SUM(cost), COUNT(event_id)) where category = 'Parking'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name\nFROM table_0\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM table_4\n    WHERE category = 'Parking' AND cost < (\n        SELECT AVG(cost)\n        FROM table_4\n        WHERE category = 'Parking'\n    )\n);\nend_sql\n\t----- bird -----\tstudent_club", "1453": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the percentage of the cost for the game events? game events refers to type = 'Game'; percentage = DIVIDE( SUM(cost), COUNT(event_id)) * 100\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (SUM(cost) / COUNT(event_id)) * 100 AS percentage_of_cost_for_game_events\nFROM table_5\nJOIN table_0 ON table_5.link_to_budget = table_0.event_id\nWHERE table_0.type = 'Game';\nend_sql\n\t----- bird -----\tstudent_club", "1454": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which budget allowed the most money for water, chips, and cookies? budget allowed refers to expense_description; expense_description = 'Water, chips, cookies'; most money refers to MAX(cost)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event\nFROM table_4 b\nWHERE b.expense_description = 'Water, chips, cookies'\nORDER BY b.cost DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tstudent_club", "1455": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the full name of the top five members who spend the most money in the descending order of spending. full name refers to first_name, last_name; spend the most money refers to MAX(expense.cost)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.first_name || ' ' || m.last_name AS full_name,\n       MAX(e.cost) AS max_spending\nFROM table_7 m\nJOIN table_3 l ON m.member_id = l.link_to_member\nJOIN table_5 e ON l.link_to_event = e.link_to_budget\nGROUP BY m.member_id\nORDER BY max_spending DESC\n\t----- bird -----\tstudent_club", "1456": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Give the full name and contact number of members who had to spend more than average on each expense. full name refers to first_name, last_name; contact number refers to phone; had spent more than average on each expense refers to cost > AVG(cost)\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number\nFROM table_7 m\nJOIN table_5 e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM table_5)\nGROUP BY m.member_id, m.first_name, m.last_name, m.phone;\n\t----- bird -----\tstudent_club", "1457": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Calculate the difference in the percentage of members in Maine and Vermont. SUBTRACT( DIVIDE( SUM(state = 'Maine'), COUNT(position = 'Member')), DIVIDE( SUM(state = 'Vermont'), COUNT(position = 'Member')) )\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n(SUM(CASE WHEN state = 'Maine' THEN 1 ELSE 0 END) / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END)) -\n(SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE 0 END)) AS percentage_difference\nFROM table_2\nJOIN table_7 ON table_2.\n\t----- bird -----\tstudent_club", "1458": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What is the major of Garrett Gerke and which department does it belong to? major refers to major name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.link_to_major, m.first_name, m.last_name, m.email, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major, ma.major_name, ma.department\nFROM table_7 m\nJOIN table_1 ma ON m.link_to_major = ma.major_id\nWHERE m.first_name\n\t----- bird -----\tstudent_club", "1459": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it. full name refers to first_name, last name; spent money for refers expense description; expense_description = 'Water, Veggie tray, supplies'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM table_7 m\nJOIN table_3 t ON m.member_id = t.link_to_member\nJOIN table_5 e ON t.link_to_event = e.link_to_budget\nWHERE e.expense_description = 'Water, Veggie tray, supplies';\nend_sql\n\t----- bird -----\tstudent_club", "1460": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the last names of students under the Elementary Education major and include their phone numbers. 'Elementary Education' is the major name; phone numbers refers to phone\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT last_name, phone\nFROM table_7\nWHERE link_to_major = (SELECT major_id FROM table_1 WHERE major_name = 'Elementary Education')\nend_sql\n\t----- bird -----\tstudent_club", "1461": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category? amount budgeted refers to amount, 'January Speaker' is the event name;\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT category, amount\nFROM table_4\nWHERE link_to_event = (SELECT event_id FROM table_0 WHERE event_name = 'January Speaker');\nend_sql\n\t----- bird -----\tstudent_club", "1462": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: List the event names which were budgeted for the food. budgeted for food refers to category = 'Food'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT event_name\nFROM table_0\nWHERE EXISTS (\n    SELECT 1\n    FROM table_4\n    WHERE table_4.link_to_event = table_0.event_id AND table_4.category = 'Food'\n);\nend_sql\n\t----- bird -----\tstudent_club", "1463": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Write the full names of students who received funds on the date of 9/9/2019 and include the amount received. full name refers to first_name, last_name, amount of funds received refers to amount, received funds on date refers to date_received\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_7.first_name || ' ' || table_7.last_name AS full_name,\n       table_6.amount AS amount_received,\n       table_6.date_received AS date_received\nFROM table_6\nJOIN table_7 ON table_6.link_to_member = table_7.member_id\nWHERE table_6.date_received = '9/9/201\n\t----- bird -----\tstudent_club", "1464": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which budget category does the expense 'Posters' fall to? 'Posters' refers to expense description\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT b.category\nFROM table_5 e\nJOIN table_4 b ON e.link_to_budget = b.budget_id\nWHERE e.expense_description = 'Posters';\nend_sql\n\t----- bird -----\tstudent_club", "1465": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Write the full name of the club member with the position of 'Secretary' and list which college the club member belongs to. full name refers to first_name, last name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_7.first_name || ' ' || table_7.last_name AS full_name, table_1.college\nFROM table_7\nJOIN table_1 ON table_7.link_to_major = table_1.major_id\nWHERE table_7.position = 'Secretary';\nend_sql\n\t----- bird -----\tstudent_club", "1466": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Calculate the total amount spent on speaker gifts and list the name of the event they were spent on. total amount spent = SUM(spent) where category = 'Speaker Gifts'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t0.event_name, SUM(t4.spent) AS total_spent\nFROM table_0 t0\nJOIN table_4 t4 ON t0.event_id = t4.link_to_event\nWHERE t4.category = 'Speaker Gifts'\nGROUP BY t0.event_name;\nend_sql\n\t----- bird -----\tstudent_club", "1467": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Where is the hometown of Garrett Girke? hometown refers to city\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT city FROM table_7 WHERE first_name = 'Garrett' AND last_name = 'Girke';\nend_sql\n\t----- bird -----\tstudent_club", "1468": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nevent_id text,\nevent_name text,\nevent_date text,\ntype text,\nnotes text,\nlocation text,\nstatus text,\nPRIMARY KEY (event_id),\n);\nCREATE TABLE table_1 (\nmajor_id text,\nmajor_name text,\ndepartment text,\ncollege text,\nPRIMARY KEY (major_id),\n);\nCREATE TABLE table_2 (\nzip_code integer,\ntype text,\ncity text,\ncounty text,\nstate text,\nshort_state text,\nPRIMARY KEY (zip_code),\n);\nCREATE TABLE table_3 (\nlink_to_event text,\nlink_to_member text,\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_4 (\nbudget_id text,\ncategory text,\nspent real,\nremaining real,\namount integer,\nevent_status text,\nlink_to_event text,\nPRIMARY KEY (budget_id),\nFOREIGN KEY (link_to_event) REFERENCES table_0(event_id),\n);\nCREATE TABLE table_5 (\nexpense_id text,\nexpense_description text,\nexpense_date text,\ncost real,\napproved text,\nlink_to_member text,\nlink_to_budget text,\nPRIMARY KEY (expense_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\nFOREIGN KEY (link_to_budget) REFERENCES table_4(budget_id),\n);\nCREATE TABLE table_6 (\nincome_id text,\ndate_received text,\namount integer,\nsource text,\nnotes text,\nlink_to_member text,\nPRIMARY KEY (income_id),\nFOREIGN KEY (link_to_member) REFERENCES table_7(member_id),\n);\nCREATE TABLE table_7 (\nmember_id text,\nfirst_name text,\nlast_name text,\nemail text,\nposition text,\nt_shirt_size text,\nphone text,\nzip integer,\nlink_to_major text,\nPRIMARY KEY (member_id),\nFOREIGN KEY (zip) REFERENCES table_2(zip_code),\nFOREIGN KEY (link_to_major) REFERENCES table_1(major_id),\n);\n---------------------\nQUESTION: Which student has the hometown of Lincolnton, North Carolina with the zip code of 28092? List their full name and position. full name refers to first_name, last_name, hometown of Lincolnton, North Carolina refers to city = 'Lincolnton' AND state = 'North Carolina'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT first_name, last_name, position\nFROM table_7\nWHERE zip = 28092 AND city = 'Lincolnton' AND state = 'North Carolina';\nend_sql\n\t----- bird -----\tstudent_club", "1469": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How many gas stations in CZE has Premium gas?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS GasStations\nFROM table_1 AS t1\nJOIN table_3 AS t3 ON t1.GasStationID = t3.GasStationID\nWHERE t1.Country = 'CZE' AND t3.ProductID = (SELECT ProductID FROM table_2 WHERE Description = 'Premium');\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1470": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the ratio of costumers who pay in EUR against customers who pay in CZK? ratio of costumers who pay in EUR against customers who pay in CZK = count(Currency = 'EUR') / count(Currency = 'CZK').\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT count(Currency = 'EUR') / count(Currency = 'CZK') AS ratio\nFROM table_0\nWHERE CustomerID IN (SELECT CustomerID FROM table_3 WHERE Currency = 'EUR' OR Currency = 'CZK');\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1471": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: In 2012, who had the least consumption in LAM? Year 2012 can be presented as Between 201201 And 201212, which means between January and December in 2012\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT CustomerID, Segment, Consumption\nFROM table_0\nJOIN table_4 ON table_0.CustomerID = table_4.CustomerID\nWHERE table_4.Date BETWEEN '201201' AND '201212' AND table_0.Country = 'LAM'\nORDER BY Consumption ASC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1472": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What was the average monthly consumption of customers in SME for the year 2013? Average Monthly consumption = AVG(Consumption) / 12; Year 2013 can be presented as Between 201301 And 201312, which means between January and December in 2013\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM table_4\nWHERE CustomerID IN (\n    SELECT CustomerID\n    FROM table_0\n    WHERE Segment = 'SME'\n)\nAND Date BETWEEN '2013-01-01' AND '2013-12-31';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1473": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which customers, paying in CZK, consumed the most gas in 2011? Year 2011 can be presented as Between 201101 And 201112, which means between January and December in 2011\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT c.CustomerID, c.Segment, SUM(t.Amount) AS TotalGasConsumption\nFROM table_0 c\nJOIN table_3 t ON c.CustomerID = t.CustomerID\nWHERE c.Currency = 'CZK' AND t.Date BETWEEN '2011-01-01' AND '2011-12-31'\nGROUP BY c.CustomerID, c.Segment\nORDER BY TotalGasConsumption\n\t----- bird -----\tdebit_card_specializing", "1474": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How many customers in KAM had a consumption of less than 30,000 for the year 2012? Year 2012 can be presented as Between 201201 And 201212, which means between January and December in 2012\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS customer_count\nFROM table_4\nWHERE CustomerID IN (\n    SELECT CustomerID\n    FROM table_0\n    WHERE Segment = 'KAM'\n)\nAND Date BETWEEN '2012-01-01' AND '2012-12-31'\nAND Consumption < 30000;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1475": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012? Year 2012 can be presented as Between 201201 And 201212, which means between January and December in 2012; Difference in Consumption = CZK customers consumption in 2012 - EUR customers consumption in 2012\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    SUM(CASE WHEN t.Currency = 'CZK' THEN t.Amount ELSE 0 END) AS czk_consumption,\n    SUM(CASE WHEN t.Currency = 'EUR' THEN t.Amount ELSE 0 END) AS eur_consumption,\n    czk_consumption - eur_consumption AS consumption_difference\nFROM\n    table_3 t\nJOIN\n    table_0 c ON t.CustomerID = c.CustomerID\n\t----- bird -----\tdebit_card_specializing", "1476": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which year recorded the most gas use paid in EUR?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT YEAR(t3.Date) AS Year, SUM(t3.Amount * t3.Price) AS TotalAmount\nFROM table_3 t3\nJOIN table_0 t0 ON t3.CustomerID = t0.CustomerID\nWHERE t0.Currency = 'EUR'\nGROUP BY YEAR(t3.Date)\nORDER BY TotalAmount DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1477": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which segment had the least consumption?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT s.segment, MIN(c.consumption) AS least_consumption\nFROM table_0 s\nJOIN table_4 c ON s.customerid = c.customerid\nGROUP BY s.segment\nORDER BY least_consumption ASC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1478": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which year recorded the most consumption of gas paid in CZK? The first 4 strings of the values in the table yearmonth can represent year.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT YEAR(t3.Date) AS Year, SUM(t3.Amount) AS TotalConsumption\nFROM table_3 t3\nJOIN table_0 t0 ON t3.CustomerID = t0.CustomerID\nWHERE t0.Currency = 'CZK'\nGROUP BY YEAR(t3.Date)\nORDER BY TotalConsumption DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1479": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What was the gas consumption peak month for SME customers in 2013? 'in 2013' refers to the first 4 strings of yearmonth.date = '2013', The 5th and 6th string of the date can refer to month.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    strftime('%Y-%m', t3.Date) AS yearmonth,\n    SUM(t4.Consumption) AS total_consumption\nFROM\n    table_3 t3\nJOIN\n    table_4 t4 ON t3.CustomerID = t4.CustomerID\nJOIN\n    table_0 t0 ON t3.CustomerID = t0.CustomerID\nWHERE\n    t0.Segment = 'SME' AND\n    strftime('%\n\t----- bird -----\tdebit_card_specializing", "1480": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME? annual average consumption of customer with the lowest consumption in each segment = total consumption per year / the number of customer with lowest consumption in each segment; Difference in annual average = SME's annual average - LAM's annual average; Difference in annual average = LAM's annual average - KAM's annual average; Year 2013 can be presented as Between 201301 And 201312; First 4 strings of Date represents the year.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    CASE\n        WHEN t0.Segment = 'SME' THEN 'SME vs LAM'\n        WHEN t0.Segment = 'LAM' THEN 'LAM vs KAM'\n        ELSE 'KAM vs SME'\n    END AS SegmentComparison,\n    AVG(t4.Consumption) AS AverageConsumption,\n    AVG(t4.Consumption) - LAG(AVG(t4.Consumption)) OVER (ORDER BY SegmentComparison) AS DifferenceIn\n\t----- bird -----\tdebit_card_specializing", "1481": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which of the three segments\u2014SME, LAM and KAM\u2014has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013? Increase or Decrease = consumption for 2013 - consumption for 2012; Percentage of Increase = (Increase or Decrease / consumption for 2013) * 100%; Between 2012 And 2013 can be represented by Between 201201 And 201312; First 4 strings of Date represents the year.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    t0.Segment,\n    SUM(CASE WHEN t3.Date BETWEEN '201201' AND '201212' THEN t3.Amount ELSE 0 END) AS Consumption_2012,\n    SUM(CASE WHEN t3.Date BETWEEN '201301' AND '201312' THEN t3.Amount ELSE 0 END) AS Consumption_\n\t----- bird -----\tdebit_card_specializing", "1482": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How much did customer 6 consume in total between August and November 2013? Between August And November 2013 refers to Between 201308 And 201311; First 4 strings of Date represents the year.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(Consumption) AS TotalConsumption\nFROM table_4\nWHERE CustomerID = 6 AND Date BETWEEN '20130801' AND '20131130';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1483": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia? Computation of more discount = Total no. of discount gas stations in Czech Republic - Total no. of discount gas stations in Slovakia\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (\n    SELECT COUNT(*)\n    FROM table_1\n    WHERE Country = 'Czech Republic' AND Segment = 'discount'\n) - (\n    SELECT COUNT(*)\n    FROM table_1\n    WHERE Country = 'Slovakia' AND Segment = 'discount'\n) AS difference;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1484": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How much more was customer 7 consuming in April 2013 than customer 5? April 2013 refers to 201304 in the yearmonth.date\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t4.CustomerID, t4.Date, t4.Consumption\nFROM table_4 t4\nWHERE t4.CustomerID IN (5, 7) AND t4.Date LIKE '201304%';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1485": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more? Amount of more SMEs = Total of SMEs uses Czech Koruna - Total of SMEs uses Euro\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    SUM(CASE WHEN t3.Currency = 'CZK' THEN 1 ELSE 0 END) AS SMEs_CZK,\n    SUM(CASE WHEN t3.Currency = 'EUR' THEN 1 ELSE 0 END) AS SMEs_EUR,\n    SMEs_CZK - SMEs_EUR AS SMEs_more_CZK\nFROM\n    table_0 t0\nJOIN\n    table_3 t3 ON t\n\t----- bird -----\tdebit_card_specializing", "1486": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which LAM customer used the Euro as their currency and had the highest consumption in October 2013? October 2013 refers to 201310 in the yearmonth.date\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT c.CustomerID, c.Segment, c.Currency, t4.Consumption\nFROM table_0 c\nJOIN table_4 t4 ON c.CustomerID = t4.CustomerID\nWHERE c.Currency = 'Euro' AND t4.Date LIKE '201310%'\nORDER BY t4.Consumption DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1487": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Who among KAM's customers consumed the most? How much did it consume?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT c.Segment, SUM(a.Amount) AS TotalConsumption\nFROM table_3 a\nJOIN table_0 c ON a.CustomerID = c.CustomerID\nWHERE c.Segment = 'KAM'\nGROUP BY c.Segment\nORDER BY TotalConsumption DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1488": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How much did the KAM customers consume in total in May 2013? May 2013 refers to yearmonth.date = 201305\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(Consumption) AS TotalConsumption\nFROM table_4\nWHERE CustomerID IN (SELECT CustomerID FROM table_0 WHERE Segment = 'KAM')\nAND Date LIKE '201305%';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1489": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How many percent of LAM customer consumed more than 46.73? Percentage of LAM customer consumed more than 46.73 = (Total no. of LAM customers who consumed more than 46.73 / Total no. of LAM customers) * 100%.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS total_lam_customers\nFROM table_0\nWHERE Segment = 'LAM';\n\nSELECT COUNT(*) AS customers_consumed_more_than_46_73\nFROM table_4\nWHERE Consumption > 46.73;\n\nSELECT (customers_consumed_more_than_46_73 / total_lam_customers) * 100 AS percentage_consumed_more_than_46_\n\t----- bird -----\tdebit_card_specializing", "1490": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which country has more \"value for money\" gas stations? Please give a total number of \"value for money\" gas stations in each country.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT Country, COUNT(*) AS ValueForMoneyGasStations\nFROM table_3 t3\nJOIN table_1 t1 ON t3.GasStationID = t1.GasStationID\nWHERE t3.Amount / t3.Price > 1\nGROUP BY Country\nORDER BY ValueForMoneyGasStations DESC;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1491": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What percentage of KAM customers pay in euros? Percentage of KAM uses Euro = (Total of KAM uses Euro / Total of KAM) * 100%.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (COUNT(DISTINCT t.CustomerID) / (SELECT COUNT(DISTINCT c.CustomerID) FROM table_0 c WHERE c.Segment = 'KAM')) * 100 AS percentage_of_kam_customers_paying_in_euros\nFROM table_3 t\nJOIN table_0 c ON t.CustomerID = c.CustomerID\nWHERE c.Segment = 'KAM' AND c.Currency = 'EUR';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1492": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: In February 2012, what percentage of customers consumed more than 528.3? February 2012 refers to '201202' in yearmonth.date\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    (COUNT(DISTINCT CASE WHEN t.Amount > 528.3 THEN t.CustomerID END) / COUNT(DISTINCT t.CustomerID)) * 100 AS percentage\nFROM\n    table_3 t\nJOIN\n    table_4 c ON t.CustomerID = c.CustomerID\nWHERE\n    t.Date >= '2012-02-01' AND t.Date <= '201\n\t----- bird -----\tdebit_card_specializing", "1493": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What percentage of Slovakian gas stations are premium? Percentage of premium gas station = (Total of premium gas station in Slovakia / Total of gas station in Slovakia) * 100%.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (COUNT(DISTINCT t3.GasStationID) / COUNT(DISTINCT t1.GasStationID)) * 100 AS percentage_premium_gas_stations\nFROM table_1 t1\nJOIN table_3 t3 ON t1.GasStationID = t3.GasStationID\nWHERE t1.Country = 'Slovakia' AND t1.Segment = 'Premium';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1494": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which client ID consumed the most in September 2013? September 2013 refers to yearmonth.date = '201309'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT CustomerID, SUM(Consumption) AS TotalConsumption\nFROM table_4\nWHERE Date LIKE '201309%'\nGROUP BY CustomerID\nORDER BY TotalConsumption DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1495": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which client segment consumed the least in September 2013? September 2013 refers to yearmonth.date = '201309'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.Segment, SUM(table_4.Consumption) AS Consumption\nFROM table_0\nJOIN table_4 ON table_0.CustomerID = table_4.CustomerID\nWHERE table_4.Date LIKE '201309%'\nGROUP BY table_0.Segment\nORDER BY Consumption ASC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1496": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which SME customer consumed the least in June 2012? June 2012 refers to yearmonth.date = '201206'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT c.CustomerID, c.Segment, SUM(t.Amount) AS TotalConsumption\nFROM table_0 c\nJOIN table_3 t ON c.CustomerID = t.CustomerID\nWHERE t.Date >= '2012-06-01' AND t.Date <= '2012-06-30'\nGROUP BY c.CustomerID, c.Segment\nORDER BY TotalConsumption ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing", "1497": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the highest monthly consumption in the year 2012? The first 4 strings of yearmonth.date can represent the year.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM table_4\nWHERE SUBSTRING(Date, 1, 4) = '2012';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1498": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the biggest monthly consumption of the customers who use euro as their currency? Monthly consumption = SUM(consumption) / 12\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT CustomerID, SUM(Consumption) / 12 AS MonthlyConsumption\nFROM table_4\nJOIN table_0 ON table_4.CustomerID = table_0.CustomerID\nWHERE table_0.Currency = 'Euro'\nGROUP BY CustomerID\nORDER BY MonthlyConsumption DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1499": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Please list the product description of the products consumed in September, 2013. September 2013 refers to 201309; First 4 strings represent the year\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t2.Description\nFROM table_3 t3\nJOIN table_2 t2 ON t3.ProductID = t2.ProductID\nWHERE t3.Date LIKE '201309%'\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1500": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Please list the countries of the gas stations with transactions taken place in June, 2013. June 2013 refers to '201306'; First 4 strings represent the year\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT Country\nFROM table_1 t1\nJOIN table_3 t3 ON t1.GasStationID = t3.GasStationID\nWHERE t3.Date LIKE '201306%';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1501": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Please list the chains of the gas stations with transactions in euro.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t1.ChainID\nFROM table_1 t1\nJOIN table_3 t3 ON t1.GasStationID = t3.GasStationID\nJOIN table_0 t0 ON t3.CustomerID = t0.CustomerID\nWHERE t0.Currency = 'EUR';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1502": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Please list the product description of the products bought in transactions in euro.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t3.ProductID, t2.Description\nFROM table_3 t3\nJOIN table_2 t2 ON t3.ProductID = t2.ProductID\nWHERE t3.Currency = 'EUR';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1503": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the average total price of the transactions taken place in January, 2012? In January, 2012 means Date contains '2012-01'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(Amount * Price) AS AverageTotalPrice\nFROM table_3\nWHERE Date LIKE '2012-01%';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1504": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*)\nFROM table_0 AS t0\nJOIN table_3 AS t3 ON t0.CustomerID = t3.CustomerID\nWHERE t0.Currency = 'EUR' AND t3.Amount > 1000;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1505": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic. Gas station in the Czech Republic implies that Country = CZE\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t2.Description\nFROM table_3 t3\nJOIN table_1 t1 ON t3.GasStationID = t1.GasStationID\nJOIN table_2 t2 ON t3.ProductID = t2.ProductID\nWHERE t1.Country = 'CZE'\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1506": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT DISTINCT t.Time FROM table_3 t\nJOIN table_1 g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11\nORDER BY t.Time;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1507": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000? Gas station in the Czech Republic implies that Country = 'CZE'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS transactions_count\nFROM table_3\nWHERE GasStationID IN (SELECT GasStationID FROM table_1 WHERE Country = 'CZE')\nAND Price > 1000;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1508": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1? Gas station in the Czech Republic implies that Country = 'CZE'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS TransactionsAfter20120101\nFROM table_3\nWHERE GasStationID IN (SELECT GasStationID FROM table_1 WHERE Country = 'CZE')\nAND Date > '2012-01-01';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1509": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the average total price of the transactions taken place in gas stations in the Czech Republic? Gas station in the Czech Republic implies that Country = 'CZE'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(Amount * Price) AS AverageTotalPrice\nFROM table_3\nJOIN table_1 ON table_3.GasStationID = table_1.GasStationID\nWHERE table_1.Country = 'CZE';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1510": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: For the customers who paid in the euro, what is their average total price of the transactions?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT AVG(Amount * Price) AS AverageTotalPrice\nFROM table_3\nWHERE CustomerID IN (SELECT CustomerID FROM table_0 WHERE Currency = 'EUR');\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1511": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which customer paid the most in 2012/8/25? '2012/8/25' can be represented by '2012-08-25'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT CustomerID, SUM(Amount) AS TotalAmount\nFROM table_3\nWHERE Date = '2012-08-25'\nGROUP BY CustomerID\nORDER BY TotalAmount DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1512": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which country's gas station had the first paid cusomer in 2012/8/25? '2012/8/25' can be represented by '2012-08-25'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t3.GasStationID, t1.Country\nFROM table_3 t3\nJOIN table_1 t1 ON t3.GasStationID = t1.GasStationID\nWHERE t3.Date = '2012-08-25' AND t3.Amount > 0\nORDER BY t3.GasStationID ASC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1513": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What kind of currency did the customer paid at 16:25:00 in 2012/8/24? '2012/8/24' can be represented by '2012-08-24'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.Currency\nFROM table_3\nJOIN table_0 ON table_3.CustomerID = table_0.CustomerID\nWHERE table_3.Date = '2012-08-24' AND table_3.Time = '16:25:00';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1514": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What segment did the customer have at 2012/8/23 21:20:00? '2012/8/23 21:20:00' can refer to date = '2012-08-23' AND T1.time = '21:20:00' in the database\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT T0.Segment\nFROM table_0 AS T0\nJOIN table_3 AS T3 ON T0.CustomerID = T3.CustomerID\nWHERE T3.Date = '2012-08-23' AND T3.Time = '21:20:00'\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1515": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: How many transactions were paid in EUR in the morning of 2012/8/26? '2012/8/26' can be represented by '2012-08-26'; The morning refers to the time before '13:00:00'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS Transactions\nFROM table_3\nWHERE Currency = 'EUR' AND Time < '13:00:00' AND Date = '2012-08-26';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1516": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: For the earliest customer, what segment did he/she have?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT CustomerID, Segment\nFROM table_0\nWHERE CustomerID = (SELECT MIN(CustomerID) FROM table_0);\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1517": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: For the deal happened at 2012/8/24 12:42:00, which country was it? '2012/8/24 12:42:00' can refer to date = '2012-08-24' AND T1.time = '12:42:00' in the database\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT T3.Country\nFROM table_3 AS T3\nWHERE T3.Date = '2012-08-24' AND T3.Time = '12:42:00';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1518": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What was the product id of the transaction happened at 2012/8/23 21:20:00? '2012/8/23 21:20:00' can refer to date = '2012-08-23' AND T1.time = '21:20:00' in the database\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT T3.ProductID\nFROM table_3 AS T3\nWHERE T3.Date = '2012-08-23' AND T3.Time = '21:20:00';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1519": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly? '2012/8/24' can be represented by '2012-08-24'; expense and the consumption has the similar meaning.\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t3.CustomerID, t4.Date, t4.Consumption, t3.Amount, t3.Price\nFROM table_3 t3\nJOIN table_4 t4 ON t3.CustomerID = t4.CustomerID\nWHERE t3.CustomerID = (SELECT CustomerID FROM table_3 WHERE Date = '2012-08-24' AND Amount = 124.05)\nAND t4.\n\t----- bird -----\tdebit_card_specializing", "1520": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE? Gas station in the Czech Republic implies that Country = CZE; '2012/8/26' can be represented by '2012-08-26'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(*) AS TransactionsInCZE\nFROM table_3\nWHERE Date = '2012-08-26' AND Time BETWEEN '08:00:00' AND '09:00:00' AND GasStationID IN (\n    SELECT GasStationID\n    FROM table_1\n    WHERE Country = 'CZE'\n);\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1521": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: There's one customer spent 214582.17 in the June of 2013, which currency did he/she use? June of 2013 means Date contains '201306' in the yearmonth.date of the database\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.Currency\nFROM table_0\nJOIN table_3 ON table_0.CustomerID = table_3.CustomerID\nWHERE table_3.Date LIKE '201306%'\nAND table_3.Amount = 214582.17;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1522": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which country was the card owner of No.667467 in?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT Country\nFROM table_3\nJOIN table_0 ON table_3.CustomerID = table_0.CustomerID\nWHERE CardID = '667467';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1523": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What's the nationality of the customer who spent 548.4 in 2012/8/24? '2012/8/24' can be represented by '2012-08-24'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT table_0.Currency\nFROM table_0\nJOIN table_3 ON table_0.CustomerID = table_3.CustomerID\nWHERE table_3.Date = '2012-08-24' AND table_3.Amount = 548.4;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1524": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the percentage of the customers who used EUR in 2012/8/25? '2012/8/25' can be represented by '2012-08-25'\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT COUNT(DISTINCT c.CustomerID) AS total_customers,\n       COUNT(DISTINCT t.CustomerID) AS euro_customers,\n       (COUNT(DISTINCT t.CustomerID) / COUNT(DISTINCT c.CustomerID)) * 100 AS percentage\nFROM table_0 c\nLEFT JOIN table_3 t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-25'\n\t----- bird -----\tdebit_card_specializing", "1525": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013? '2012/8/24' can be represented by '2012-08-24'; Consumption decrease rate = (consumption_2012 - consumption_2013) / consumption_2012\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT (t4.consumption_2012 - t4.consumption_2013) / t4.consumption_2012 AS consumption_decrease_rate\nFROM table_4 AS t4\nJOIN table_0 AS t0 ON t4.CustomerID = t0.CustomerID\nWHERE t0.CustomerID = (\n    SELECT CustomerID\n    FROM table_3\n    WHERE Date = '2012-0\n\t----- bird -----\tdebit_card_specializing", "1526": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which gas station has the highest amount of revenue?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT GasStationID, SUM(Amount * Price) AS Revenue\nFROM table_3\nGROUP BY GasStationID\nORDER BY Revenue DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1527": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the percentage of \"premium\" against the overall segment in \"SVK\"?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT\n    (SUM(CASE WHEN t3.Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS premium_percentage\nFROM\n    table_3 t3\nJOIN\n    table_1 t1 ON t3.GasStationID = t1.GasStationID\nWHERE\n    t1.Country = 'SVK';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1528": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012? January 2012 refers '201201' in the table transactions_1k\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT SUM(Amount) AS TotalAmountSpent\nFROM table_3\nWHERE CustomerID = 38508;\n\nSELECT SUM(Amount) AS TotalAmountSpentInJanuary2012\nFROM table_3\nWHERE CustomerID = 38508 AND Date LIKE '201201%';\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1529": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which are the top five best selling products? Please state the full name of them. Description of products contains full name\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT t2.Description\nFROM table_3 t3\nJOIN table_2 t2 ON t3.ProductID = t2.ProductID\nGROUP BY t2.ProductID\nORDER BY SUM(t3.Amount) DESC\nLIMIT 5;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1530": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used? verage price per single item = price / amount\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT c.Segment, c.Currency, SUM(t.Amount * t.Price) AS TotalSpending, AVG(t.Price / t.Amount) AS AveragePricePerItem\nFROM table_0 c\nJOIN table_3 t ON c.CustomerID = t.CustomerID\nGROUP BY c.CustomerID, c.Segment, c.Currency\nORDER BY TotalSpending DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1531": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: Which country had the gas station that sold the most expensive product id No.2 for one unit?\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT Country\nFROM table_3 t3\nJOIN table_1 t1 ON t3.GasStationID = t1.GasStationID\nJOIN table_2 t2 ON t3.ProductID = t2.ProductID\nWHERE t2.ProductID = 2 AND t3.Amount = 1\nGROUP BY t1.Country\nORDER BY SUM(t3.Price) DESC\nLIMIT 1;\nend_sql\n\t----- bird -----\tdebit_card_specializing", "1532": "Based on the database schema below and the question, create a SQL query that will return the desired result:\nDATABASE SCHEMA\n---------------------\nCREATE TABLE table_0 (\nCustomerID integer,\nSegment text,\nCurrency text,\nPRIMARY KEY (CustomerID),\n);\nCREATE TABLE table_1 (\nGasStationID integer,\nChainID integer,\nCountry text,\nSegment text,\nPRIMARY KEY (GasStationID),\n);\nCREATE TABLE table_2 (\nProductID integer,\nDescription text,\nPRIMARY KEY (ProductID),\n);\nCREATE TABLE table_3 (\nTransactionID integer,\nDate date,\nTime text,\nCustomerID integer,\nCardID integer,\nGasStationID integer,\nProductID integer,\nAmount integer,\nPrice real,\nPRIMARY KEY (TransactionID),\n);\nCREATE TABLE table_4 (\nCustomerID integer,\nDate text,\nConsumption real,\nFOREIGN KEY (CustomerID) REFERENCES table_0(CustomerID),\n);\n---------------------\nQUESTION: For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012. August of 2012 means Date contains '201208' in the yearmonth.date of the database; Price per unit of product = Price / Amount\nGenerate just the question starting it with 'start_sql' and ending the sql with 'end_sql' nothing else is allowed on the response. Do not add any explanations or comments.\nstart_sql\nSELECT c.segment, c.currency, t.consumption\nFROM table_0 c\nJOIN table_3 t ON c.customerid = t.customerid\nJOIN table_4 cs ON c.customerid = cs.customerid\nWHERE t.productid = 5 AND t.price / t.amount > 29.00 AND cs.date LIKE '201208%'\nGROUP BY c.segment, c\n\t----- bird -----\tdebit_card_specializing"}