{
    "0": "\nSELECT MAX(Percent (%) Eligible Free (K-12)) FROM satscores WHERE County = 'Alameda County';\n\t----- bird -----\tcalifornia_schools",
    "1": "\nSELECT MIN(Percent (%) Eligible Free (Ages 5-17)) FROM satscores WHERE rtype = 'Continuation School' AND AgeGroup = '5-17';\n\t----- bird -----\tcalifornia_schools",
    "2": "\nSELECT Zip FROM schools WHERE Charter = 1 AND County = 'Fresno County Office of Education';\n\t----- bird -----\tcalifornia_schools",
    "3": "\nSELECT T1.MailStreet, T1.MailStrAbr, T1.MailCity, T1.MailZip FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.enroll12 = ( SELECT MAX(enroll12) FROM satscores )\n\t----- bird -----\tcalifornia_schools",
    "4": "\nSELECT AdmEmail3 FROM schools WHERE FundingType = 'Direct Charter Funded' AND OpenDate > '2000-01-01';\n\t----- bird -----\tcalifornia_schools",
    "5": "\nSELECT COUNT(schools.CDSCode) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath < 400 AND T2.Virtual = 'Y' AND T2.FundingType = 'Public'\n\t----- bird -----\tcalifornia_schools",
    "6": "\nSELECT s.schoolName FROM schools AS s INNER JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE ss.enroll12 > 500 AND s.Magnet = 'Yes' OR s.GSoffered = 'Magnet'; \n\t----- bird -----\tcalifornia_schools",
    "7": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr > 1500 ORDER BY T2.NumTstTakr DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "8": "\nSELECT sname FROM satscores WHERE NumTstTakr = ( SELECT MAX(NumTstTakr) FROM satscores ) AND cds IN (\n  SELECT CDSCode FROM frpm WHERE FRPMCount (K-12) = ( SELECT MAX( FRPMCount (K-12) FROM frpm ) )\n);\n\t----- bird -----\tcalifornia_schools",
    "9": "\nSELECT COUNT(CDSCode) FROM satscores WHERE AvgScrMath > 560 AND Charter = 1;\n\t----- bird -----\tcalifornia_schools",
    "10": "\nSELECT MAX(AvgScrRead) AS avg_read, sname FROM satscores WHERE rtype = 'Reading' GROUP BY sname ORDER BY AvgScrRead DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "11": "\nSELECT CDSCode FROM frpm WHERE Enrollment (K-12) > 500;\n\t----- bird -----\tcalifornia_schools",
    "12": "\nSELECT MAX(Percent (%) Eligible Free (Ages 5-17)) FROM satscores WHERE AvgScrRead * 0.3 > 0.3 AND AvgScrMath * 0.3 > 0.3;\n\t----- bird -----\tcalifornia_schools",
    "13": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead DESC LIMIT 3;\n\t----- bird -----\tcalifornia_schools",
    "14": "\nSELECT s.CDSCode, s.NCESSchool, COUNT(s.Enrollment (Ages 5-17)) AS Enrollment_Ages_5_17 FROM schools s GROUP BY s.CDSCode ORDER BY COUNT(s.Enrollment (Ages 5-17)) DESC LIMIT 5;\n\t----- bird -----\tcalifornia_schools",
    "15": "\nSELECT T1.District Code, AVG(T2.AvgScrRead) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.District Type = 'Active' GROUP BY T1.District Code ORDER BY AVG(T2.AvgScrRead) DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "16": "\nSELECT COUNT(CDSCode) FROM schools WHERE CDSCode IN ( SELECT cds FROM satscores WHERE enroll12 < 100 ) AND County = 'Alameda' \n\t----- bird -----\tcalifornia_schools",
    "17": "\nSELECT CharterNum FROM satscores WHERE AvgScrWrite = 499;\n\t----- bird -----\tcalifornia_schools",
    "18": "\nSELECT COUNT(CDSCode) FROM schools WHERE FundingType = 'Directly Funded' AND CDSCode IN ( SELECT cds FROM satscores WHERE rtype = 'Test Takers' AND enroll12 <= 250 ); \n\t----- bird -----\tcalifornia_schools",
    "19": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores )\n\t----- bird -----\tcalifornia_schools",
    "20": "\nSELECT COUNT(CDSCode) FROM schools WHERE LowGrade = \"9\" AND HighGrade = \"12\";\n\t----- bird -----\tcalifornia_schools",
    "21": "\nSELECT COUNT(CDSCode) \nFROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T1.County = 'Los Angeles' AND T2.FreeMealCount BETWEEN 500 AND 700;\n\t----- bird -----\tcalifornia_schools",
    "22": "\nSELECT s.school, s.enroll12 FROM schools AS s WHERE s.CDSCode = ( SELECT CDSCode FROM frpm WHERE County Code = 'Contra Costa' ORDER BY enroll12 DESC LIMIT 1 )\n\t----- bird -----\tcalifornia_schools",
    "23": "\nSELECT s.schoolName, s.street, s.streetAbr, s.city, s.zip, s.state, s.mailStreet, s.mailStrAbr, s.mailCity, s.mailZip \nFROM schools s \nJOIN satscores ss ON s.CDSCode = ss.cds \nWHERE (ss.enroll12 - ss.enrollment(5-17)) > 30;\n\t----- bird -----\tcalifornia_schools",
    "24": "\nSELECT s.school_name \nFROM schools s \nWHERE s Percent (%) Eligible Free (K-12) > 0.1 AND NumTstTakr >= 1500;\n\t----- bird -----\tcalifornia_schools",
    "25": "\nSELECT s.school, s.FundingType FROM schools AS s WHERE s.CDSCode IN ( SELECT cds FROM satscores WHERE rtype = 'Math' AND avgScrMath > 400 ) GROUP BY s.school; \n\t----- bird -----\tcalifornia_schools",
    "26": "\nSELECT T1.SchoolName, T1.Street, T1.StreetAbr, T1.City, T1.Zip, T1.State, T1.MailStreet, T1.MailStrAbr, T1.MailCity, T1.MailZip, T1.MailState, T1.Phone, T1.Ext, T1.Website \nFROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.enroll12 > 800 AND T1.County = 'Monterey' AND T1.District = 'High School'\n\t----- bird -----\tcalifornia_schools",
    "27": "\nSELECT s.schoolName, AVG(sscr.Write) AS avg_scr_write, s.communicationNumber \nFROM schools s \nWHERE s.OpenDate > '1991' AND s.ClosedDate < '2000' \nGROUP BY s.schoolName, s.communicationNumber \nORDER BY avg_scr_write DESC;\n\t----- bird -----\tcalifornia_schools",
    "28": "\nSELECT s.schoolName, s DOCType, AVG(s.enrollment12 - s.enrollment15) AS avg_diff FROM schools s LEFT JOIN satscores ss ON s.CDSCode = ss.cds GROUP BY s.schoolName, s.DOCType HAVING AVG(s.enrollment12 - s.enrollment15) > 0 \n\t----- bird -----\tcalifornia_schools",
    "29": "\nSELECT DISTINCT T1.CDSCode, T2.DistrictName FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.enrollment DESC LIMIT 1;\n\t----- bird -----\tcalifornia_schools",
    "30": "\nSELECT City, Enrollment (K-12) FROM schools WHERE Enrollment (K-12) = (\n  SELECT MIN(Enrollment (K-12)) \n  FROM schools \n  WHERE Enrollment (K-12) < (\n    SELECT MIN(Enrollment (K-12)) \n    FROM schools \n    WHERE Enrollment (K-12) IN (\n      SELECT Enrollment (Ages 5-17)\n      FROM satscores\n      UNION ALL\n      SELECT Enrollment (K-12)\n      FROM satscores\n    )\n  )\n);\n\t----- bird -----\tcalifornia_schools",
    "31": "\nSELECT s.CDSCode, s.EducationalOptionType, \n       MAX(s.enrollment12) AS max_enrollment,\n       SUM(s.freeMealCount(1)) / (MAX(s.enrollment12) + 1) * 100 AS eligible_free_rate\nFROM schools s\nWHERE s.District = '10th' AND s.District = '11th'\nGROUP BY s.CDSCode, s.EducationalOptionType\nORDER BY max_enrollment DESC\nLIMIT 2;\n\t----- bird -----\tcalifornia_schools",
    "32": "\nSELECT s.cds, s.enroll12, s.enrollment(1), s.enrollment(2), s.enrollment(3), s.enrollment(4), s.enrollment(5),\n       s.freeMealCount(1), s.freeMealCount(2), s.freeMealCount(3), s.freeMealCount(4), s.freeMealCount(5),\n       s.percentEligibleFree(1), s.percentEligibleFree(2), s.percentEligibleFree(3), s.percentEligibleFree(4), s.percentEligibleFree(5),\n       s.percentEligibleFRPM(1), s.percentEligibleFRPM(2), s.percentEligibleFRPM(3), s.percentEligibleFRPM(4), s.percentEligibleFRPM(5)\nFROM (\n  SELECT CDSCode, enroll12, enrollment(1), enrollment(2), enrollment(3), enrollment(4), enrollment(5),\n         freeMealCount(1), freeMealCount(2), freeMealCount(3), freeMealCount(4), freeMealCount(5),\n         percentEligibleFree(1), percentEligibleFree(2), percentEligibleFree(3), percentEligibleFree(4), percentEligibleFree(5),\n         percentEligibleFRPM(1), percentEligibleFRPM(2), percentEligibleFRPM(3), percentEligibleFRPM(4), percentEligibleFRPM(5)\n  FROM satscores\n) AS subquery\nWHERE CDSCode IN (66, 66, 66, 66, 66) AND freeMealCount(1) = (\n  SELECT MAX(freeMealCount(1))\n  FROM (\n    SELECT CDSCode, enroll12, enrollment(1), enrollment(2), enrollment(3), enrollment(4), enrollment(5),\n           freeMealCount(1), freeMealCount(2), freeMealCount(3), freeMealCount(4), freeMealCount(5),\n           percentEligibleFree(1), percentEligibleFree(2), percentEligibleFree(3), percentEligibleFree(4), percentEligibleFree(5),\n           percentEligibleFRPM(1), percentEligibleFRPM(2), percentEligibleFRPM(3), percentEligibleFRPM(4), percentEligibleFRPM(5)\n    FROM satscores\n  ) AS subquery1\n)\n\t----- bird -----\tcalifornia_schools",
    "33": "\nSELECT s.website, s.name \nFROM schools s \nWHERE s.freeMealCount BETWEEN 1900 AND 2000 \nAND s.enrollment12 = 0;\n\t----- bird -----\tcalifornia_schools",
    "34": "\nSELECT sfree FROM schools WHERE sname = 'Kacey Gibson' AND agegroup = '5-17';\n\t----- bird -----\tcalifornia_schools",
    "35": "\nSELECT AdmEmail2 FROM schools WHERE Charter = 'Y' GROUP BY AdmEmail2 ORDER BY COUNT(AdmEmail2) LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "36": "\nSELECT AdmFName1, AdmLName1 FROM schools WHERE NumTstTakr = ( SELECT MAX(NumTstTakr) FROM satscores ) AND AvgScrRead >= 1500; \n\t----- bird -----\tcalifornia_schools",
    "37": "\nSELECT T1.Street, T1.City, T1.Zip, T1.State \nFROM schools AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.AvgScrRead = ( SELECT MIN(AvgScrRead) FROM satscores );\n\t----- bird -----\tcalifornia_schools",
    "38": "\nSELECT Website FROM schools WHERE County = 'Los Angeles County' AND Enrollment (K-12) BETWEEN 2000 AND 3000;\n\t----- bird -----\tcalifornia_schools",
    "39": "\nSELECT AVG(NumTstTakr) FROM satscores WHERE cds = ( SELECT CDSCode FROM frpm WHERE County = 'Fresno' AND Enrollment (K-12) > 0 AND Date >= '1980-01-01' AND Date <= '1980-12-31' )\n\t----- bird -----\tcalifornia_schools",
    "40": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T2.AvgScrRead = ( SELECT MIN(AvgScrRead) FROM satscores )\n\t----- bird -----\tcalifornia_schools",
    "41": "\nSELECT s.schoolName, AVG(sscrRead) FROM schools AS s JOIN satscores AS sa ON s.CDSCode = sa.cds GROUP BY s.schoolName ORDER BY AVG(sscrRead) DESC LIMIT 5;\n\t----- bird -----\tcalifornia_schools",
    "42": "\nSELECT EdOpsCode FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores ) AND T1.SchoolName IN ( SELECT SchoolName FROM satscores GROUP BY SchoolName ORDER BY AVGScrMath DESC LIMIT 1 );\n\t----- bird -----\tcalifornia_schools",
    "43": "\nSELECT AVG(AvgScrMath) FROM satscores WHERE AvgScrRead = ( SELECT MIN(AvgScrRead) FROM satscores ) AND County = ( SELECT County FROM schools ORDER BY AvgScrMath ASC LIMIT 1 );\n\t----- bird -----\tcalifornia_schools",
    "44": "\nSELECT sname, AVG(AvgScrWrite) FROM satscores WHERE rtype = 'Writing' AND NumTstTakr IN ( SELECT enroll12 FROM schools WHERE charter = 1 ) GROUP BY sname ORDER BY AVG(AvgScrWrite) DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "45": "\nSELECT s.school, AVG(s AvgScrWrite) AS avg_writing FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.AdmFName1 = 'Ricci Ulrich' GROUP BY s.school; \n\t----- bird -----\tcalifornia_schools",
    "46": "\nSELECT State, COUNT(CDSCode) AS Enrollees FROM satscores GROUP BY State ORDER BY COUNT(CDSCode) DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "47": "\nSELECT AVG(COUNT(DISTINCT CDSCode)) AS avg_schools_opened FROM schools WHERE County = 'Alameda County' AND District = 'Elementary School District' AND OpenDate >= '1980-01-01';\n\t----- bird -----\tcalifornia_schools",
    "48": "\nSELECT CAST(SUM(CASE WHEN T2.DistrictType = 'Unified School District' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T3.DistrictType = 'Elementary School District' THEN 1 ELSE 0 END) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds INNER JOIN frpm AS T3 ON T1.CDSCode = T3.CDSCode\n\t----- bird -----\tcalifornia_schools",
    "49": "\nSELECT T1.County, T2.ClosureDate, T3.SchoolName \nFROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds \nINNER JOIN frpm AS T3 ON T1.CDSCode = T3.CDSCode WHERE T1.StatusType = 'Closed'\n\t----- bird -----\tcalifornia_schools",
    "50": "\nSELECT T1.Street, T1.StreetAbr, T2.SchoolName FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 6;\n\t----- bird -----\tcalifornia_schools",
    "51": "\nSELECT T1.SchoolName, T2.StreetAbr \nFROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.AvgScrRead = ( SELECT MIN(AvgScrRead) FROM satscores )\n\t----- bird -----\tcalifornia_schools",
    "52": "\nSELECT COUNT(schools.CDSCode) FROM schools AS t1 INNER JOIN satscores AS t2 ON t1.CDSCode = t2.cds WHERE t2.AvgScrRead >= 1500 AND t1.City = 'Lakeport'\n\t----- bird -----\tcalifornia_schools",
    "53": "\nSELECT COUNT(enroll12) FROM satscores WHERE cname = ( SELECT cname FROM schools WHERE mailCity = 'Fresno' );\n\t----- bird -----\tcalifornia_schools",
    "54": "\nSELECT s.CDSCode, s.MailZip \nFROM schools s \nWHERE s.StatusType = 'Public' AND s.Name LIKE '%Avetik Atoian%'\n\t----- bird -----\tcalifornia_schools",
    "55": "\nSELECT CAST(SUM(CASE WHEN T1.COUNTY = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.COUNTY = 'Humboldt' THEN 1 ELSE 0 END) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode\n\t----- bird -----\tcalifornia_schools",
    "56": "\nSELECT COUNT(CDSCode) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active';\n\t----- bird -----\tcalifornia_schools",
    "57": "\nSELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrWrite DESC LIMIT 333;\n\t----- bird -----\tcalifornia_schools",
    "58": "\nSELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Zip = '95203-3704' AND T2.FundingType = 'Public'; \n\t----- bird -----\tcalifornia_schools",
    "59": "\nSELECT Website FROM schools WHERE AdmFName1 = 'Mike Larson' AND AdmLName1 = 'Dante Alvarez';\n\t----- bird -----\tcalifornia_schools",
    "60": "\nSELECT Website FROM schools WHERE Charter = \"Y\" AND Virtual = \"Partial\" AND County = \"San Joaquin\";\n\t----- bird -----\tcalifornia_schools",
    "61": "\nSELECT COUNT(CDSCode) FROM schools WHERE District = 'Elementary School District' AND Charter = 'Y' AND City = 'Hickman';\n\t----- bird -----\tcalifornia_schools",
    "62": "\nSELECT COUNT(CDSCode) FROM satscores WHERE cds IN ( SELECT CDSCode FROM frpm WHERE County = 'Los Angeles' AND Percent (%) Eligible Free (K-12) < 0.18% ) AND CharterSchool (Y/N) = 'N';\n\t----- bird -----\tcalifornia_schools",
    "63": "\nSELECT AdmFName1, AdmLName1, AdmEmail1 FROM schools WHERE CharterNum = '00D2';\n\t----- bird -----\tcalifornia_schools",
    "64": "\nSELECT COUNT(CDSCode) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\n\t----- bird -----\tcalifornia_schools",
    "65": "\nSELECT CAST(SUM(CASE WHEN T2.FundingType = 'Locally Funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CDSCode) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Santa Clara County';\n\t----- bird -----\tcalifornia_schools",
    "66": "\nSELECT COUNT(CDSCode) FROM frpm WHERE FundingType = 'Directly Funded' AND County = 'Stanislaus' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31';\n\t----- bird -----\tcalifornia_schools",
    "67": "\nSELECT SUM(CASE WHEN T1.ClosureDate LIKE '%1989%' THEN 1 ELSE 0 END) AS Total_Closure FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.City = 'San Francisco'\n\t----- bird -----\tcalifornia_schools",
    "68": "\nSELECT T1.County, COUNT(T2.CDSCode) AS CEA_Schools\nFROM schools S\nJOIN satscores TS ON S.CDSCode = TS.cds\nWHERE S.County IN ( SELECT County FROM frpm WHERE Academic Year = '1980' AND District Code IN ( SELECT District Code FROM frpm WHERE Academic Year = '1980' ) )\nAND T2.CDSCode LIKE '%CEA%'\n\t----- bird -----\tcalifornia_schools",
    "69": "\nSELECT sds.CDSCode FROM schools AS sds INNER JOIN frpm AS fpm ON sds.CDSCode = fpm.CDSCode WHERE sds.StatusType = 'State Special Schools' AND fpm.Charter = 1;\n\t----- bird -----\tcalifornia_schools",
    "70": "\nSELECT COUNT(CDSCode) FROM schools WHERE District = 'District Community Day Schools' AND StatusType = 'Active' AND County = 'Alpine';\n\t----- bird -----\tcalifornia_schools",
    "71": "\nSELECT T1.DistrictCode FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.SchoolName LIKE '%Fresno%' AND T1.Magnet = 0; \n\t----- bird -----\tcalifornia_schools",
    "72": "\nSELECT SUM(schools.SchoolName) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'State Special School' AND T1.Street = 'Fremont' AND T2.enroll12 BETWEEN 5 AND 17 AND T2.dname = '2014-2015 CALPADS Fall 1 Certification Status'; \n\t----- bird -----\tcalifornia_schools",
    "73": "\nSELECT FreeMealCount (Ages 5-17) FROM schools WHERE School = 'Youth Authority School' AND MailStreet = 'PO Box 1040';\n\t----- bird -----\tcalifornia_schools",
    "74": "\nSELECT LowGrade FROM satscores WHERE rtype = 'District Special Education Consortia' AND cds = '613360'; \n\t----- bird -----\tcalifornia_schools",
    "75": "\nSELECT T1.Educational Option Type FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.District Code = 37 AND T1.AvgScrRead > 0.5; \n\t----- bird -----\tcalifornia_schools",
    "76": "\nSELECT T1.City, T2.County FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.SchoolName LIKE 'High School Level%' AND T2.AvgScrRead BETWEEN 9 AND 12 AND T1.County = 'Merced'\n\t----- bird -----\tcalifornia_schools",
    "77": "\nSELECT s.schoolName, s.Percent (%) Eligible FRPM (Ages 5-17) \nFROM schools s \nWHERE s.County = 'Los Angeles' AND s.District = 'Los Angeles County' \nAND s.DistrictType = 'Public' \nAND s.SchoolType = 'Elementary School' \nAND s.Educational Option Type = 'Kindergarten to 9th Grade';\n\t----- bird -----\tcalifornia_schools",
    "78": "\nSELECT rtype FROM satscores WHERE cname = 'Adelanto City' GROUP BY rtype ORDER BY COUNT(rtype) DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "79": "\nSELECT COUNT(CDSCode) FROM schools WHERE County = 'San Diego' AND District NOT IN ( SELECT District Code FROM schools WHERE County = 'Santa Barbara' ); \n\t----- bird -----\tcalifornia_schools",
    "80": "\nSELECT T1.SchoolType, T2.Latitude FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.Latitude DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "81": "SQL_START\nSELECT T1.City, T2.Latitude, T3.LowGrade FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds INNER JOIN frpm AS T3 ON T1.CDSCode = T3.CDSCode WHERE T1.State = 'California' ORDER BY T2.Latitude LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "82": "\nSELECT DISTINCT T1.Latitude, T2.GradeSpan FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Longitude = ( SELECT MAX(Longitude) FROM schools )\n\t----- bird -----\tcalifornia_schools",
    "83": "\nSELECT s.cname, COUNT(s.city) AS num_cities, COUNT(DISTINCT s.ccity) AS num_schools \nFROM schools s \nWHERE s.SOC = 'Magnet' AND s.District = 'Kindergarten to 8th grade span' \nGROUP BY s.cname; \n\n\t----- bird -----\tcalifornia_schools",
    "84": "\nSELECT AdmFName1, AdmLName1, AdmEmail1 FROM schools WHERE AdmFName2 = ( SELECT AdmFName2 FROM schools ORDER BY COUNT(AdmFName2) DESC LIMIT 2 ) AND AdmLName2 = ( SELECT AdmLName2 FROM schools ORDER BY COUNT(AdmLName2) DESC LIMIT 2 ); \n\t----- bird -----\tcalifornia_schools",
    "85": "\nSELECT T1.DistrictCode, T2.DistrictName \nFROM satscores AS T1 INNER JOIN schools AS T2 ON T1.CDS = T2.CDSCode WHERE T1.AvgScrRead * 100 / T1.NumTstTakr > 50 AND T1.CDs = 'Alusine'\n\t----- bird -----\tcalifornia_schools",
    "86": "\nSELECT AdmFName2, AdmLName2, AdmEmail2 FROM schools WHERE CharterNum = 40;\n\t----- bird -----\tcalifornia_schools",
    "87": "\nSELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND SchoolType IN ('Public Intermediate/Middle Schools', 'Unified Scol')\n\t----- bird -----\tcalifornia_schools",
    "88": "\nSELECT AdmEmail2 FROM satscores WHERE NumTstTakr = ( SELECT MAX(NumTstTakr) FROM satscores ) AND AvgScrRead >= 1500; \n\t----- bird -----\tcalifornia_schools",
    "89": "\nSELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'issuance after transaction' AND T2.A8 = 0;\n\t----- bird -----\tfinancial",
    "90": "\nSELECT COUNT(account_id) FROM account WHERE A7 = 'Prague';\n\t----- bird -----\tfinancial",
    "91": "\nSELECT A1.A2, B.A3 FROM district AS A1 INNER JOIN loan AS B ON A1.district_id = B.account_id WHERE A1.A4 = '1995' AND A1.A6 = '1996';\n\t----- bird -----\tfinancial",
    "92": "\nSELECT COUNT(district_id) FROM district WHERE A11 < 10000 AND A12 > 6000;\n\t----- bird -----\tfinancial",
    "93": "\nSELECT COUNT(client_id) FROM client WHERE district_id = 1 AND gender = 'M' AND birth_date > '1990-01-01' AND salary > 8000;\n\t----- bird -----\tfinancial",
    "94": "\nSELECT T1.account_id, T2.gender, T3.birth_date FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 1, 1\n\t----- bird -----\tfinancial",
    "95": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'M' ORDER BY T2.birth_date ASC LIMIT 1, 1;\n\t----- bird -----\tfinancial",
    "96": "\nSELECT COUNT(client_id) FROM client WHERE gender = 'Owner' AND type = 'statement of weekly issuance';\n\t----- bird -----\tfinancial",
    "97": "\nSELECT client_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id WHERE T1.type = 'Disponent' AND T2.district_id IN ( SELECT district_id FROM card WHERE type = 'Statement of Issuance' ) \n\t----- bird -----\tfinancial",
    "98": "\nSELECT T1.account_id, T2.amount, T3.frequency FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '1997-01%' AND T2.status = 'Approved' ORDER BY T2.amount LIMIT 1;\n\t----- bird -----\tfinancial",
    "99": "\nSELECT T1.account_id, T2.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'active' AND T1.duration > 12 AND T1.date >= '1993-01-01';\n\t----- bird -----\tfinancial",
    "100": "\nSELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND T1.birth_date < '1950-01-01' AND T1.district_id = 123;\n\t----- bird -----\tfinancial",
    "101": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.date) = '1995' AND T2.type = 'Trading';\n\t----- bird -----\tfinancial",
    "102": "\nSELECT T1.account_id, T2.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000;\n\t----- bird -----\tfinancial",
    "103": "\nSELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id WHERE T2.type = 'card' AND T1.birth_date LIKE '1994/%/3/'\n\t----- bird -----\tfinancial",
    "104": "\nINSERT INTO account (account_id, district_id, frequency, date) \nVALUES (1, 2, 'A', '1998-10-14');\n\t----- bird -----\tfinancial",
    "105": "SQL_START\nINSERT INTO account (account_id, district_id, frequency, date) \nVALUES (1, 1, 'A2', '1994-08-25');\n\t----- bird -----\tfinancial",
    "106": "\nSELECT MAX(amount) FROM trans WHERE account_id IN ( SELECT client_id FROM card WHERE issued = '1996-10-21' ) AND date >= '1996-01-01';\n\t----- bird -----\tfinancial",
    "107": "\nSELECT T1.gender FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.frequency = 'highest average salary' ORDER BY T2.salary DESC LIMIT 1 \n\t----- bird -----\tfinancial",
    "108": "\nSELECT T1.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id IN ( SELECT district_id FROM client ORDER BY SUM(amount) DESC LIMIT 1 ) AND T1.status = 'active'\n\t----- bird -----\tfinancial",
    "109": "\nSELECT COUNT(client_id) FROM client WHERE district_id = ( SELECT district_id FROM account WHERE frequency = 'women' AND district_id IN ( SELECT district_id FROM account WHERE type = 'jesenik') )\n\t----- bird -----\tfinancial",
    "110": "\nSELECT T1.disp_id FROM disp AS T1 INNER JOIN order AS T2 ON T1.client_id = T2.client_id WHERE T2.amount = 5100 AND T2.date LIKE '1998/%/2'\n\t----- bird -----\tfinancial",
    "111": "\nINSERT INTO account (account_id, district_id, frequency, date) \nVALUES (1, 2, 'M', '1996-01-01');\n\t----- bird -----\tfinancial",
    "112": "\nSELECT T1.district_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' AND T1.birth_date LIKE '%/%/29%'\n\t----- bird -----\tfinancial",
    "113": "\nSELECT birth_date FROM client WHERE client_id = 98832 AND date = '1996-01-03';\n\t----- bird -----\tfinancial",
    "114": "\nSELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.district_name = 'Prague' AND T1.district_id = ( SELECT district_id FROM account WHERE district_name = 'Prague' )\n\t----- bird -----\tfinancial",
    "115": "\nSELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A6 LIKE '%Bohemia%' AND T2.A7 LIKE '%south%';\n\t----- bird -----\tfinancial",
    "116": "\nSELECT T1.balance * 100 / (T2.balance - T1.balance) AS increase_rate FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1993-07-05' AND '1998-12-27';\n\t----- bird -----\tfinancial",
    "117": "\nSELECT CAST(COUNT(CASE WHEN status = 'paid' THEN loan_id ELSE NULL END) AS REAL) * 100 / COUNT(loan_id) FROM loan;\n\t----- bird -----\tfinancial",
    "118": "\nSELECT CAST(SUM(CASE WHEN T2.status = 'running' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount < 100000;\n\t----- bird -----\tfinancial",
    "119": "\nSELECT a.account_id, d.district_name, d.A2 \nFROM account a \nJOIN district d ON a.district_id = d.district_id \nWHERE a.district_id IN (1993) AND a.date > 'transaction'\n\t----- bird -----\tfinancial",
    "120": "\nSELECT T1.account_id, T2.frequency FROM account AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.client_id WHERE T1.district_id = 'east Bohemia' AND T2.type = 'statement' AND T2.issued BETWEEN '1995-01-01' AND '2000-12-31';\n\t----- bird -----\tfinancial",
    "121": "\nSELECT T1.account_id, T2.date FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'M' AND T1.district_id = 3;\n\t----- bird -----\tfinancial",
    "122": "\nSELECT A2, A3 FROM district WHERE A4 = 'Loan' AND A5 = 'ID' AND A6 = '4990';\n\t----- bird -----\tfinancial",
    "123": "\nSELECT T1.account_id, T2.district_id, T3.A4 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000;\n\t----- bird -----\tfinancial",
    "124": "\nSELECT loan_id, district_id, AVG(amount) AS average_salary FROM loan WHERE duration = 60 GROUP BY loan_id, district_id;\n\t----- bird -----\tfinancial",
    "125": "SQL_START\nINSERT INTO loan (loan_id, account_id, date, amount, duration, payments, status) \nSELECT l.loan_id, l.account_id, l.date, l.amount, l.duration, l.payments, l.status \nFROM loan l \nWHERE l.status = 'running' AND l.account_id IN (SELECT client_id FROM client WHERE birth_date BETWEEN '1995-01-01' AND '1996-12-31')\n\t----- bird -----\tfinancial",
    "126": "\nSELECT CAST(SUM(CASE WHEN T2.district_id = 1 AND T3.frequency = 'Decin' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE STRFTIME('%Y', T3.date) = '1993'\n\t----- bird -----\tfinancial",
    "127": "\nSELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'statement' AND T2.date LIKE '%/%/'; \n\t----- bird -----\tfinancial",
    "128": "\nSELECT A2, COUNT(DISTINCT A1.client_id) AS num_female FROM district A1 INNER JOIN account B ON A1.district_id = B.district_id INNER JOIN client C ON B.account_id = C.account_id WHERE C.gender = 'F' GROUP BY A2 ORDER BY COUNT(DISTINCT A1.client_id) DESC LIMIT 10;\n\t----- bird -----\tfinancial",
    "129": "\nSELECT T1.district_id, T2.district_name, SUM(T3.amount) AS total_amount\nFROM district T1\nJOIN loan T2 ON T1.district_id = T2.district_id\nJOIN trans T3 ON T2.account_id = T3.account_id\nWHERE T3.type = 'withdrawal'\nGROUP BY T1.district_id, T2.district_name\nORDER BY total_amount DESC\nLIMIT 10;\n\t----- bird -----\tfinancial",
    "130": "\nSELECT COUNT(DISTINCT client_id) FROM account WHERE district_id NOT IN ( SELECT account_id FROM card );\n\t----- bird -----\tfinancial",
    "131": "\nSELECT A.A2, A.A3, A.A4, A.A5, A.A6, A.A7, A.A8, COUNT(DISTINCT T1.district_id) AS active_loans FROM district A INNER JOIN loan T1 ON A.district_id = T1.district_id GROUP BY A.A2, A.A3, A.A4, A.A5, A.A6, A.A7, A.A8 ORDER BY COUNT(DISTINCT T1.district_id) DESC LIMIT 1 \n\t----- bird -----\tfinancial",
    "132": "\nSELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T2.gender = 'M'\n\t----- bird -----\tfinancial",
    "133": "\nSELECT T1.district_id, T2.A2, T2.A3, T2.A4, T2.A5, T2.A6, T2.A7, T2.A8, T2.A9, T2.A10, T2.A11, T2.A12, T2.A13, T2.A14, T2.A15, T2.A16\nFROM district AS T1 INNER JOIN A2 AS T2 ON T1.district_id = T2.district_id WHERE T1.year = 1996\n\t----- bird -----\tfinancial",
    "134": "\nSELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id WHERE T2.type = 'crime' AND T1.date LIKE '%1996%' GROUP BY T1.account_id ORDER BY COUNT(T1.account_id) DESC LIMIT 1 \n\t----- bird -----\tfinancial",
    "135": "\nSELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'withdrawal' AND T2.balance < 0;\n\t----- bird -----\tfinancial",
    "136": "\nSELECT COUNT(loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T1.status = 'approved' AND T1.date BETWEEN '1995-01-01' AND '1997-12-31';\n\t----- bird -----\tfinancial",
    "137": "\nSELECT COUNT(*) FROM account AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id WHERE T1.district_id = 1 AND T2.type = 'running contract'\n\t----- bird -----\tfinancial",
    "138": "\nSELECT COUNT(client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.client_id WHERE T2.type = 'crime' AND T1.gender = 'male' GROUP BY T1.district_id ORDER BY COUNT(T1.district_id) DESC LIMIT 1 \n\t----- bird -----\tfinancial",
    "139": "\nSELECT COUNT(t.disponent) FROM trans t INNER JOIN disp d ON t.disp_id = d.disp_id WHERE d.type = 'high-level credit card' AND t.operation = 'disponent';\n\t----- bird -----\tfinancial",
    "140": "\nSELECT COUNT(*) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A6 = 'Pisek'\n\t----- bird -----\tfinancial",
    "141": "\nSELECT A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16 \nFROM district \nWHERE A1 = '1997' AND A0 > 10000;\n\t----- bird -----\tfinancial",
    "142": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.k_symbol LIKE 'H%';\n\t----- bird -----\tfinancial",
    "143": "\nSELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN card AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'gold' AND T2.type = 'junior credit'; \n\t----- bird -----\tfinancial",
    "144": "\nSELECT AVG(T2.amount) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id IN ( SELECT district_id FROM district WHERE year = 2021 ) AND T2.type = 'credit card'\n\t----- bird -----\tfinancial",
    "145": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'credit' AND T2.date LIKE '%/%/98%' GROUP BY T1.account_id HAVING AVG(T2.amount) < ( SELECT AVG(amount) FROM account AS T3 INNER JOIN trans AS T4 ON T3.account_id = T4.account_id WHERE T4.type = 'credit' AND T4.date LIKE '%/%/98%' )\n\t----- bird -----\tfinancial",
    "146": "\nSELECT T1.gender, T2.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN card AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T2.account_id = T4.account_id WHERE T1.gender = 'F' AND T4.status = 'P';\n\t----- bird -----\tfinancial",
    "147": "\nSELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A6 = 'South Bohemia' AND T1.gender = 'F';\n\t----- bird -----\tfinancial",
    "148": "\nSELECT t1.account_id FROM account AS t1 INNER JOIN district AS t2 ON t1.district_id = t2.district_id WHERE t2.A6 = 'Tabor' AND t1.frequency IN ('monthly', 'quarterly')\n\t----- bird -----\tfinancial",
    "149": "\nSELECT type FROM card WHERE issued < '2022-01-01'\nUNION ALL\nSELECT A1, A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.frequency = 'A' AND T2.A8 BETWEEN 8000 AND 9000\n\t----- bird -----\tfinancial",
    "150": "\nSELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id = 3 AND T2.bank_to = 'AB'\n\t----- bird -----\tfinancial",
    "151": "\nSELECT T1.A2, T1.A3, T1.A4, T1.A5, T1.A6, T1.A7, T1.A8 FROM district AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.client_id WHERE T2.type = 'withdrawal'\n\t----- bird -----\tfinancial",
    "152": "\nSELECT AVG(CASE WHEN T2.frequency > 4000 THEN T1.amount ELSE 0 END) AS avg_crimes FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id IN ( SELECT district_id FROM district WHERE A7 = '1995' AND A8 BETWEEN 1997 AND 2003 )\n\t----- bird -----\tfinancial",
    "153": "\nSELECT COUNT(card_id) FROM card WHERE type = 'classic';\n\t----- bird -----\tfinancial",
    "154": "\nSELECT COUNT(client_id) FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A6 = 'Hl.m. Praha' ) AND gender = 'M';\n\t----- bird -----\tfinancial",
    "155": "\nSELECT CAST(SUM(CASE WHEN type = 'Gold' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM card WHERE issued < '1998';\n\t----- bird -----\tfinancial",
    "156": "\nSELECT T1.account_id, T2.name FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id ORDER BY T2.amount DESC LIMIT 1 \n\t----- bird -----\tfinancial",
    "157": "\nSELECT COUNT(*) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id = 532 AND T2.date LIKE '1995%' AND T2.status = 'committed';\n\t----- bird -----\tfinancial",
    "158": "\nSELECT T1.district_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333;\n\t----- bird -----\tfinancial",
    "159": "\nSELECT t1.type, t2.balance FROM trans AS t1 INNER JOIN order AS t2 ON t1.account_id = t2.account_id WHERE t2.client_id = 3356 AND t1.operation = 'WITHDRAWAL' AND t1.type = 'CASH';\n\t----- bird -----\tfinancial",
    "160": "\nSELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount < 200000 AND T1.status = 'active' AND T1.duration > 0;\n\t----- bird -----\tfinancial",
    "161": "\nSELECT type FROM card WHERE disp_id = ( SELECT client_id FROM client WHERE client_id = 13539 );\n\t----- bird -----\tfinancial",
    "162": "SQL_START\nINSERT INTO district (A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) \nVALUES ('A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)\n\t----- bird -----\tfinancial",
    "163": "\nSELECT A.district_id, COUNT(DISTINCT T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'Finished' AND T1.duration > 0 GROUP BY A.district_id ORDER BY COUNT(DISTINCT T1.account_id) DESC LIMIT 1 \n\t----- bird -----\tfinancial",
    "164": "\nINSERT INTO order (account_id, bank_to, account_to, amount, k_symbol) \nVALUES (32423, 1, 2, 1000.00, 'A7');\n\t----- bird -----\tfinancial",
    "165": "\nINSERT INTO trans (account_id, date, type, operation, amount, balance, k_symbol, bank, account) \nSELECT t.account_id, t.date, 'deposit', 'credit', 1000, 1000, 'D5', 'Bank of America', t.account_id FROM trans t JOIN card c ON t.account_id = c.disp_id WHERE c.type = 'credit' AND t.account_id IN ( SELECT account_id FROM disp WHERE client_id IN ( SELECT client_id FROM client WHERE district_id = 5 ) );\n\t----- bird -----\tfinancial",
    "166": "\nSELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A6 = 'Jesenik'\n\t----- bird -----\tfinancial",
    "167": "\nSELECT client_id FROM card WHERE issued > '1996';\n\t----- bird -----\tfinancial",
    "168": "\nSELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.frequency LIKE '%over%10000%'\n\t----- bird -----\tfinancial",
    "169": "\nSELECT SUM(CASE WHEN T1.gender = 'M' THEN T2.amount ELSE 0 END) AS growth_rate FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.district_id IN ( SELECT district_id FROM district WHERE A7 = '1996' AND A8 BETWEEN 1995 AND 1997 )\n\t----- bird -----\tfinancial",
    "170": "\nSELECT COUNT(*) FROM card WHERE issued > '1995';\n\t----- bird -----\tfinancial",
    "171": "\nSELECT A1.A2 - B1.B2 AS crime_diff FROM district A1 INNER JOIN district B1 ON A1.A8 = B1.A8 WHERE A1.district_id = 3 AND B1.district_id = 4;\n\t----- bird -----\tfinancial",
    "172": "\nSELECT COUNT(*) FROM account AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.client_id WHERE T1.account_id BETWEEN 1 AND 10;\n\t----- bird -----\tfinancial",
    "173": "\nSELECT frequency, COUNT(*) FROM account WHERE account_id = 3 GROUP BY frequency ORDER BY COUNT(*) DESC LIMIT 1 \n\t----- bird -----\tfinancial",
    "174": "SQL_START\nSELECT birth_date FROM client WHERE client_id = 130;\n\t----- bird -----\tfinancial",
    "175": "\nSELECT COUNT(*) FROM account AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.client_id WHERE T1.type = 'owner_disposition' AND T1.status = 'request_statement'; \n\t----- bird -----\tfinancial",
    "176": "\nSELECT T1.amount, T2.status FROM loan AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T2.client_id = 992 AND T1.status = 'DEBT';\n\t----- bird -----\tfinancial",
    "177": "SQL_START\nINSERT INTO account (account_id, district_id, frequency, date) \nVALUES (1, 2, 'A', '2023-01-01');\nINSERT INTO card (card_id, disp_id, type, issued) \nVALUES (1, 1, 'A', '2020-01-01');\nINSERT INTO client (client_id, gender, birth_date, district_id) \nVALUES (4, 'M', '1995-01-01', 2);\nINSERT INTO disp (disp_id, client_id, account_id, type) \nVALUES (1, 4, 1, 'A');\nINSERT INTO loan (loan_id, account_id, date, amount, duration, payments, status) \nVALUES (1, 1, '2023-01-01', 10000, 30, 0.05, 'PENDING');\nINSERT INTO order (order_id, account_id, bank_to, account_to, amount, k_symbol) \nVALUES (2, 1, 'A', 4, 500, 'A');\nINSERT INTO trans (trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account) \nVALUES (3, 1, '2020-01-02', 'A', 'B', 10000, 9000, 'A', 'A', 2);\nINSERT INTO loan (loan_id, account_id, date, amount, duration, payments, status) \nVALUES (2, 4, '2023-01-03', 5000, 15, 0.05, 'PENDING');\nSQL_END\n\t----- bird -----\tfinancial",
    "178": "\nSELECT type FROM card WHERE client_id = 9;\n\t----- bird -----\tfinancial",
    "179": "\nSELECT SUM(CASE WHEN T2.client_id = 617 THEN T1.amount ELSE 0 END) AS total FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.date) = '1998'\n\t----- bird -----\tfinancial",
    "180": "\nSELECT T1.client_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND T2.district_id = 12345;\n\t----- bird -----\tfinancial",
    "181": "\nSELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'F' ORDER BY T2.amount DESC LIMIT 3;\n\t----- bird -----\tfinancial",
    "182": "\nSELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T2.amount > 4000;\n\t----- bird -----\tfinancial",
    "183": "\nSELECT COUNT(account_id) FROM account WHERE date > '1996-01-01';\n\t----- bird -----\tfinancial",
    "184": "\nSELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.type = 'Junior Credit Card';\n\t----- bird -----\tfinancial",
    "185": "\nSELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.account_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = ( SELECT district_id FROM district WHERE A6 = 'Prague' )\n\t----- bird -----\tfinancial",
    "186": "\nSELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id WHERE T2.type = 'weekly statement'\n\t----- bird -----\tfinancial",
    "187": "\nSELECT COUNT(client_id) FROM client WHERE gender = 'User' AND type = 'statement of weekly issuance';\n\t----- bird -----\tfinancial",
    "188": "\nSELECT T1.account_id, T2.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND T1.status = 'active' AND T1.date < '1997-01-01';\n\t----- bird -----\tfinancial",
    "189": "\nSELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' ORDER BY T1.birth_date DESC LIMIT 1, 1;\n\t----- bird -----\tfinancial",
    "190": "\nSELECT COUNT(client_id) FROM client WHERE birth_date LIKE '1920%' AND district_id IN ( SELECT district_id FROM district WHERE A6 = 'East Bohemia' );\n\t----- bird -----\tfinancial",
    "191": "\nSELECT COUNT(loan_id) FROM loan WHERE duration = 24 AND payments > 0 AND type = 'prepayment' AND frequency = 'weekly';\n\t----- bird -----\tfinancial",
    "192": "\nSELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'running' AND T2.type = 'statement_issuance'\n\t----- bird -----\tfinancial",
    "193": "\nSELECT T1.client_id, T2.district_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T1.birth_date IS NOT NULL AND T1.gender = 'F'\n\t----- bird -----\tfinancial",
    "194": "\nSELECT T1.client_id, T2.age FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.disp_id WHERE T2.type = 'High Level Credit Card' AND T1.gender = 'Male';\n\t----- bird -----\tfinancial",
    "195": "\nSELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_id) DESC LIMIT 1 \n\t----- bird -----\ttoxicology",
    "196": "\nSELECT COUNT(molecule_id) FROM atom WHERE element = 'chlorine'; \n\n\t----- bird -----\ttoxicology",
    "197": "\nSELECT AVG(COUNT(bond_type = 'single') * 1.0) FROM bond WHERE bond_type = 'oxygen' \n\t----- bird -----\ttoxicology",
    "198": "\nSELECT COUNT(bond_id) FROM bond WHERE bond_type = \"single\" AND connected_atom1 IS NOT NULL;\n\t----- bird -----\ttoxicology",
    "199": "\nSELECT COUNT(molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T1.element = 'Na' AND T1.label != 'carcinogenic'; \n\t----- bird -----\ttoxicology",
    "200": " \n\t----- bird -----\ttoxicology",
    "201": "\nSELECT COUNT(bond_id) AS carbon_count, \n       (COUNT(CASE WHEN bond_type = 'double-bond' THEN 1 ELSE NULL END) * 100 / COUNT(bond_id)) AS carbon_percentage\nFROM connected; \n\t----- bird -----\ttoxicology",
    "202": "\nSELECT COUNT(bond_id) FROM bond WHERE bond_type = 'triple';\n\t----- bird -----\ttoxicology",
    "203": "\nSELECT COUNT(atom_id) FROM atom WHERE element = 'Bromine' AND atom_id NOT IN ( SELECT atom_id2 FROM connected ) \n\t----- bird -----\ttoxicology",
    "204": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label = 'carcinogenic' LIMIT 100;\n\t----- bird -----\ttoxicology",
    "205": "\nSELECT molecule_id FROM atom WHERE element = \"silicon\"\n\t----- bird -----\ttoxicology",
    "206": "\nSELECT element FROM connected WHERE bond_id = \"TR004_8_9\";\n\t----- bird -----\ttoxicology",
    "207": "\nSELECT element FROM atom WHERE bond_type = \"double\"; \n\t----- bird -----\ttoxicology",
    "208": "\nSELECT label FROM atom WHERE element = \"hydrogen\" GROUP BY label ORDER BY COUNT(label) DESC LIMIT 1 \n\t----- bird -----\ttoxicology",
    "209": "\nINSERT INTO bond (bond_id, molecule_id, bond_type) VALUES ('Te-S', 'atom', 'single');\n\n\t----- bird -----\ttoxicology",
    "210": "\nSELECT atom_id FROM connected WHERE bond_type = 'single';\n\t----- bird -----\ttoxicology",
    "211": "\nSELECT atom1.element, atom2.element \nFROM connected AS atom1 \nJOIN connected AS atom2 ON atom1.bond_id = atom2.bond_id \nWHERE atom1.molecule_id = 'non-carcinogenic' AND atom2.molecule_id = 'non-carcinogenic';\n\t----- bird -----\ttoxicology",
    "212": "\nSELECT element FROM atom WHERE molecule_id = ( SELECT MIN(molecule_id) FROM connected )\n\t----- bird -----\ttoxicology",
    "213": "\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nVALUES ('TR004_20', 'molecule', 'single');\n\t----- bird -----\ttoxicology",
    "214": "\nSELECT label FROM molecule WHERE atom_id NOT IN ( SELECT atom_id FROM connected WHERE bond_type = 'tin' ) \n\t----- bird -----\ttoxicology",
    "215": "\nSELECT COUNT(bond_id) FROM connected WHERE atom_id IN ( SELECT atom_id FROM bond WHERE bond_type = 'single' AND element = 'iodine' AND molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = 'sulfur' ) ); \n\t----- bird -----\ttoxicology",
    "216": "\nSELECT atom1.atom_id, atom2.atom_id FROM connected AS atom1 INNER JOIN connected AS atom2 ON atom1.bond_id = atom2.bond_id WHERE atom1.bond_type = 'triple' AND atom2.bond_type = 'single'; \n\t----- bird -----\ttoxicology",
    "217": "\nSELECT atom.element FROM connected AS t1 INNER JOIN atom AS t2 ON t1.atom_id = t2.atom_id2 WHERE t1.bond_id = 'TR181'\n\t----- bird -----\ttoxicology",
    "218": "\nSELECT COUNT(molecule_id) AS total FROM connected WHERE bond_type = 'carcinogenic-type' AND atom_id NOT IN ( SELECT atom_id2 FROM connected WHERE atom_id = 'fluorine') \n\t----- bird -----\ttoxicology",
    "219": "\nSELECT COUNT(bond_id) AS total, \n       SUM(CASE WHEN bond_type = 'triple' THEN 1 ELSE 0 END) AS triple,\n       (SUM(CASE WHEN bond_type = 'triple' THEN 1 ELSE 0 END) / COUNT(bond_id)) * 100 AS percentage FROM bond;\n\t----- bird -----\ttoxicology",
    "220": "\nSELECT element FROM atom WHERE element IN ( SELECT element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR000' ORDER BY molar_mass DESC LIMIT 3 ) AND molar_mass > ( SELECT MAX(molar_mass) FROM atom WHERE element IN ( SELECT element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR000' ORDER BY molar_mass DESC LIMIT 3 ) ); \n\t----- bird -----\ttoxicology",
    "221": "\nSELECT atom.element FROM connected AS t1 INNER JOIN bond AS t2 ON t1.bond_id = t2.bond_id WHERE t1.bond_id = 'TR001_2_6' AND t1.atom_id = atom atom; \n\t----- bird -----\ttoxicology",
    "222": "\nSELECT COUNT(molecule_id) AS carcinogenic_molecules FROM connected WHERE bond_type = 'carcinogenic';\n\t----- bird -----\ttoxicology",
    "223": "\nSELECT atom_id FROM connected WHERE bond_id = \"TR_000_2_5\";\n\t----- bird -----\ttoxicology",
    "224": "\nSELECT bond_id FROM connected WHERE atom_id = \"TR000_2\";\n\t----- bird -----\ttoxicology",
    "225": "SQL_START\nINSERT INTO molecule (molecule_id, label) SELECT 'C2H2O', 'Acetone'; \nINSERT INTO molecule (molecule_id, label) SELECT 'C3H6O', 'Ethanol'; \nINSERT INTO molecule (molecule_id, label) SELECT 'C4H8O2', 'Acetic Acid'; \nINSERT INTO molecule (molecule_id, label) SELECT 'C5H10O', 'Butan-1-one'; \nINSERT INTO molecule (molecule_id, label) SELECT 'C6H12O6', 'Glycerol'; \nSQL_END\n\t----- bird -----\ttoxicology",
    "226": "\nSELECT COUNT(bond_id) AS double_bonds FROM bond WHERE bond_type = \"double\" AND molecule_id = \"TR008\"; \n\t----- bird -----\ttoxicology",
    "227": "\nSELECT COUNT(molecule_id) AS total, \n       SUM(CASE WHEN label = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic FROM molecule; \n\t----- bird -----\ttoxicology",
    "228": "\nSELECT CAST(SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) FROM atom WHERE atom_id = \"TR206\"; \n\t----- bird -----\ttoxicology",
    "229": "\nSELECT bond_type FROM bond WHERE molecule_id = \"TR000\" AND bond_id IN ( SELECT bonded_molecule_id FROM connected )\n\t----- bird -----\ttoxicology",
    "230": "\nSELECT element, label FROM atom WHERE molecule_id = \"TR060\";\n\t----- bird -----\ttoxicology",
    "231": "\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'sigma_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'pi_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'delta_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'aromatic_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'ionic_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'metallic_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'covalent_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'ionic_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'metallic_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'covalent_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'sigma_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'pi_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'delta_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'aromatic_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'ionic_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'metallic_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'TR018', 'molecule_123', 'covalent_bond' \nFROM connected \nWHERE atom_id IN ('atom_456', 'atom_789') \nAND bond_id NOT IN (SELECT bond_id FROM connected WHERE atom_id = 'atom_456');\n\n\t----- bird -----\ttoxicology",
    "232": "SQL_START\nINSERT INTO molecule (molecule_id, label) \nSELECT 'COCOBAMOL', 'Cocobamol' \nFROM atom \nWHERE element = 'Carbon';\nINSERT INTO molecule (molecule_id, label) \nSELECT 'BENZENE', 'Benzene' \nFROM atom \nWHERE element = 'Carbon';\nINSERT INTO molecule (molecule_id, label) \nSELECT 'ETHANOL', 'Ethanol' \nFROM atom \nWHERE element = 'Hydrogen';\n\t----- bird -----\ttoxicology",
    "233": "\nSELECT bond_id FROM connected WHERE atom_id = \"TR006\" ORDER BY bond_type ASC LIMIT 2, 2 \n\t----- bird -----\ttoxicology",
    "234": "\nSELECT COUNT(bond_id) FROM bond WHERE atom_id = \"12\" AND molecule_id = \"TR009\";\n\t----- bird -----\ttoxicology",
    "235": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label = \"carcinogenic\" AND element = \"bromine\"; \n\t----- bird -----\ttoxicology",
    "236": "\nSELECT bond_type, atom_id FROM connected WHERE bond_id = \"TR001_6_9\";\n\t----- bird -----\ttoxicology",
    "237": "\nSELECT T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T1.element = 'TR001_10' AND T2.bond_id IN ( SELECT bond_id FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = 'carcinogenic' ) ); \n\t----- bird -----\ttoxicology",
    "238": "\nSELECT COUNT(molecule_id) FROM bond WHERE bond_type = 'triple';\n\t----- bird -----\ttoxicology",
    "239": "\nSELECT COUNT(bond_id) FROM connected WHERE atom_id = \"19\" \n\t----- bird -----\ttoxicology",
    "240": "\nSELECT element FROM atom WHERE molecule_id = \"TR004\";\n\t----- bird -----\ttoxicology",
    "241": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label != \"carcinogenic\" \n\t----- bird -----\ttoxicology",
    "242": "\nSELECT T1.molecule_id, T2.label FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element BETWEEN '21' AND '25'; \n\t----- bird -----\ttoxicology",
    "243": "\nSELECT bond_id FROM bond WHERE atom_id = \"phosphorus\" AND element = \"nitrogen\"; \n\n\t----- bird -----\ttoxicology",
    "244": "\nSELECT MAX(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) AS max_double_bonds FROM bond; \n\t----- bird -----\ttoxicology",
    "245": "\nSELECT AVG(COUNT(bond_id)) FROM connected WHERE element = \"iodine\"\n\t----- bird -----\ttoxicology",
    "246": "\nSELECT bond_type, bond_id FROM bond WHERE atom_id = \"45\"; \n\n\t----- bird -----\ttoxicology",
    "247": "\nSELECT element FROM atom WHERE atom_id IN ( SELECT atom_id2 FROM connected GROUP BY atom_id2 HAVING COUNT(bond_id) = 0 )\n\t----- bird -----\ttoxicology",
    "248": "\nSELECT atom.element FROM connected AS t1 INNER JOIN bond AS t2 ON t1.bond_id = t2.bond_id WHERE t1.bond_id = 'TR447' AND t2.bond_type = 'triple'; \n\t----- bird -----\ttoxicology",
    "249": "\nSELECT element FROM atom WHERE atom_id = \"TR144_8_19\";\n\t----- bird -----\ttoxicology",
    "250": "\nSELECT bond_id FROM bond WHERE bond_type = 'double bond' GROUP BY bond_id ORDER BY COUNT(bond_id) DESC LIMIT 1 \n\t----- bird -----\ttoxicology",
    "251": "\nSELECT element FROM atom WHERE element IN ( SELECT element FROM connected WHERE bond_type = 'carcinogenic' GROUP BY element ORDER BY COUNT(bond_id) ASC LIMIT 1 )\n\t----- bird -----\ttoxicology",
    "252": "\nSELECT atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE element = 'lead'\n\t----- bird -----\ttoxicology",
    "253": "\nSELECT element FROM bond WHERE bond_type = 'triple'; \n\n\t----- bird -----\ttoxicology",
    "254": "\nSELECT COUNT(bond_id) AS bond_count, \n       SUM(CASE WHEN element IN ('H', 'C') THEN 1 ELSE 0 END) AS h_c_count,\n       SUM(CASE WHEN element IN ('O', 'N') THEN 1 ELSE 0 END) AS o_n_count,\n       SUM(CASE WHEN element IN ('S', 'P') THEN 1 ELSE 0 END) AS s_p_count\nFROM bond\nGROUP BY element\n\t----- bird -----\ttoxicology",
    "255": "\nSELECT COUNT(bond_id) AS single_bonds FROM bond WHERE bond_type = 'single' AND carcinogenic = 'yes' \n\t----- bird -----\ttoxicology",
    "256": "\nSELECT COUNT(atom_id) FROM atom WHERE element = 'carbon' INTERSECT SELECT COUNT(atom_id) FROM atom WHERE element = 'hydrogen' \n\t----- bird -----\ttoxicology",
    "257": "\nSELECT atom_id2 FROM connected WHERE element = \"sulfur\"\n\t----- bird -----\ttoxicology",
    "258": "\nSELECT bond_type FROM bond WHERE element = \"Tin\" \n\t----- bird -----\ttoxicology",
    "259": "\nSELECT COUNT(element) FROM atom WHERE molecule_id = 'single bond'; \n\t----- bird -----\ttoxicology",
    "260": "\nSELECT COUNT(atom_id) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = 'Triple' AND element IN ('phosphorus', 'bromine')\n\t----- bird -----\ttoxicology",
    "261": "\nSELECT bond_id FROM bond WHERE bond_type = 'carcinogenic';\n\t----- bird -----\ttoxicology",
    "262": "\nSELECT molecule_id FROM connected WHERE bond_type = 'single' AND label != 'carcinogenic'; \n\t----- bird -----\ttoxicology",
    "263": "\nSELECT label, CAST(SUM(CASE WHEN bond_type = 'single' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) FROM connected WHERE atom_id IN ( SELECT atom_id FROM bond WHERE bond_type = 'single' ) AND molecule_id = 'chlorine'; \n\t----- bird -----\ttoxicology",
    "264": "\nSELECT label FROM molecule WHERE molecule_id = 'TR000' OR molecule_id = 'TR001' OR molecule_id = 'TR002'; \n\t----- bird -----\ttoxicology",
    "265": "\nSELECT molecule_id FROM molecule WHERE label = 'non-carcinogenic';\n\t----- bird -----\ttoxicology",
    "266": "\nSELECT COUNT(molecule_id) AS total_carcinogenic FROM connected WHERE atom_id IN ('TR000', 'TR001', 'TR002') AND bond_type = 'carcinogenic' \n\t----- bird -----\ttoxicology",
    "267": "\nSELECT bond_type FROM bond WHERE molecule_id IN ('TR000', 'TR001', 'TR002', 'TR003', 'TR004', 'TR005', 'TR006', 'TR007', 'TR008', 'TR009', 'TR010', 'TR011', 'TR012', 'TR013', 'TR014', 'TR015', 'TR016', 'TR017', 'TR018', 'TR019', 'TR020', 'TR021', 'TR022', 'TR023', 'TR024', 'TR025', 'TR026', 'TR027', 'TR028', 'TR029', 'TR030', 'TR031', 'TR032', 'TR033', 'TR034', 'TR035', 'TR036', 'TR037', 'TR038', 'TR039', 'TR040', 'TR041', 'TR042', 'TR043', 'TR044', 'TR045', 'TR046', 'TR047', 'TR048', 'TR049') \n\t----- bird -----\ttoxicology",
    "268": "\nSELECT element FROM atom WHERE atom_id = 'TR001_10_11';\n\t----- bird -----\ttoxicology",
    "269": "\nSELECT COUNT(bond_id) FROM bond WHERE element = \"iodine\" \n\t----- bird -----\ttoxicology",
    "270": "\nSELECT label FROM molecule WHERE element = \"Calcium\" AND carcinogenic IS NOT TRUE;\n\t----- bird -----\ttoxicology",
    "271": "\nSELECT atom.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = 'TR001_1_8' AND T1.atom_id IN ( SELECT atom_id FROM atom WHERE element = 'chlorine' OR element = 'carbon' ); \n\t----- bird -----\ttoxicology",
    "272": "\nSELECT molecule_id FROM bond WHERE bond_type = \"triple bond\" AND element = \"carbon\" AND carcinogenic IS FALSE; \n\n\t----- bird -----\ttoxicology",
    "273": "\nSELECT COUNT(CASE WHEN element = 'chlorine' THEN 1 ELSE NULL END) * 100 / COUNT(molecule_id) AS chlorine_percentage FROM connected WHERE bond_type = 'carcinogenic' \n\t----- bird -----\ttoxicology",
    "274": "\nSELECT element FROM atom WHERE molecule_id = 'TR001' AND toxicology_element IS NOT NULL; \n\n\t----- bird -----\ttoxicology",
    "275": "\nSELECT molecule_id FROM bond WHERE bond_type = \"double\" \n\t----- bird -----\ttoxicology",
    "276": "\nSELECT atom_id FROM connected WHERE bond_type = 'triple bond' AND atom_id2 = atom_id;\n\t----- bird -----\ttoxicology",
    "277": "\nSELECT element FROM atom WHERE molecule_id = ( SELECT bond_id FROM connected WHERE bond_id = 'TR005_16_26' ) AND toxicology_element = 'TOXICITY' \n\t----- bird -----\ttoxicology",
    "278": "\nSELECT COUNT(molecule_id) FROM bond WHERE bond_type = 'single' AND carcinogenic IS FALSE; \n\n\t----- bird -----\ttoxicology",
    "279": "\nSELECT label FROM molecule WHERE molecule_id = 'TR001_10_11';\n\t----- bird -----\ttoxicology",
    "280": "\nSELECT bond_id, CASE WHEN bond_type = 'triple' THEN 1 ELSE 0 END AS carcinogenic FROM bond WHERE bond_type = 'triple'; \n\t----- bird -----\ttoxicology",
    "281": "\nSELECT element FROM atom WHERE atom_id = '4th' AND molecule_id IN ( SELECT molecule_id FROM connected WHERE bond_type = 'carcinogenic') AND toxicology_element = 'toxic'; \n\t----- bird -----\ttoxicology",
    "282": "\nSELECT element, COUNT(bond_id) AS count FROM bond WHERE molecule_id = \"TR006\" AND bond_type = \"Hydrogen\" GROUP BY element; \n\t----- bird -----\ttoxicology",
    "283": "\nSELECT CASE WHEN element = 'Calcium' AND label LIKE '%carcinogenic%' THEN 'Yes' ELSE 'No' END AS result FROM molecule WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_type = 'Ca-Ca' )\n\t----- bird -----\ttoxicology",
    "284": "\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nVALUES ('Tl-Te', 'molecule1', 'single'), \n('Tl-O', 'molecule2', 'double'), \n('Tl-F', 'molecule3', 'single');\n\t----- bird -----\ttoxicology",
    "285": "\nINSERT INTO atom (atom_id, molecule_id, element) \nVALUES ('TR001_10_11', 'molecule', 'Hg');\n\t----- bird -----\ttoxicology",
    "286": "\nSELECT CAST(SUM(CASE WHEN bond_type = 'triple-bond' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) FROM connected;\n\t----- bird -----\ttoxicology",
    "287": "\nSELECT COUNT(bond_id) AS double_bond_count, \n       (COUNT(CASE WHEN bond_type = 'double' THEN 1 ELSE NULL END) / COUNT(bond_id)) * 100 AS percent_double_bond\nFROM connected\nWHERE atom_id2 = TR047\nGROUP BY double_bond_count;\n\t----- bird -----\ttoxicology",
    "288": "\nSELECT label FROM molecule WHERE atom_id = \"TR001_1\" AND carcinogenic IS TRUE; \n\t----- bird -----\ttoxicology",
    "289": "\nINSERT INTO molecule (molecule_id, label) VALUES ('TR151', 'Carcinogenic')\n\t----- bird -----\ttoxicology",
    "290": "\nINSERT INTO atom (atom_id, molecule_id, element) \nVALUES ('TR151', 'molecule1', 'Toxic')\n\t----- bird -----\ttoxicology",
    "291": "\nSELECT COUNT(molecule_id) FROM connected WHERE bond_type = 'carcinogenic'; \n\n\t----- bird -----\ttoxicology",
    "292": "\nSELECT atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id WHERE T1.bond_id BETWEEN 'TR010' AND 'TR050' AND T3.element = 'carbon';\n\t----- bird -----\ttoxicology",
    "293": "\nSELECT COUNT(atom_id) FROM atom WHERE label = \"carcinogenic compounds\" \n\t----- bird -----\ttoxicology",
    "294": "\nSELECT bond_id FROM connected WHERE atom_id2 = \"double-bond\" AND label = \"carcinogenic compound\"; \n\t----- bird -----\ttoxicology",
    "295": "\nSELECT COUNT(atom_id) FROM atom WHERE element = \"hydrogen\" AND label = \"carcinogenic compound\"; \n\n\t----- bird -----\ttoxicology",
    "296": "\nINSERT INTO molecule (molecule_id, label) VALUES ('TR00_1_2', 'TR00_1');\n\t----- bird -----\ttoxicology",
    "297": "\nSELECT atom_id FROM connected WHERE bond_type = 'carcinogenic' AND element = 'carbon' EXCEPT SELECT atom_id FROM connected WHERE bond_type = 'carcinogenic' AND element = 'carbon' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'compound') \n\t----- bird -----\ttoxicology",
    "298": "\nSELECT label, COUNT(bond_id) AS count, \n       SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) * 100 / COUNT(molecule_id) AS percentage FROM connected AS t1 INNER JOIN bond AS t2 ON t1.bond_id = t2.bond_id INNER JOIN atom AS t3 ON t1.atom_id = t3.atom_id2 WHERE t2.bond_type = 'carcinogenic' GROUP BY label; \n\t----- bird -----\ttoxicology",
    "299": "\nSELECT label FROM molecule WHERE molecule_id = 'TR124' AND carcinogenic = 'yes';\n\t----- bird -----\ttoxicology",
    "300": "\nSELECT atom.element FROM atom AS t1 INNER JOIN connected AS t2 ON t1.atom_id = t2.atom_id2 WHERE t1.molecule_id = 'TR186' AND t2.bond_type = 'single'; \n\t----- bird -----\ttoxicology",
    "301": "\nINSERT INTO bond (bond_id, molecule_id, bond_type) VALUES ('TR007_4_19', 'molecule', 'single');\n\t----- bird -----\ttoxicology",
    "302": "\nSELECT element FROM atom WHERE atom_id = \"TR001_2_4\";\n\t----- bird -----\ttoxicology",
    "303": "\nSELECT COUNT(bond_id) FROM bond WHERE bond_type = \"double\" AND atom_id IN ( SELECT atom_id FROM connected WHERE atom_id2 = \"TR006\" ) AND label = \"carcinogenic\"; \n\t----- bird -----\ttoxicology",
    "304": "\nSELECT T1.element, T2.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = 'carcinogenic' ) AND T1.molecule_id NOT IN ( SELECT molecule_id FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = 'carcinogenic' ) ); \n\t----- bird -----\ttoxicology",
    "305": "\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'single', atom1, 'single'\nFROM connected \nWHERE atom2 = atom1 AND bond_type = 'single';\n\n\n\t----- bird -----\ttoxicology",
    "306": "\nINSERT INTO molecule (molecule_id, label) \nSELECT 'C2H2', 'Acetylene';\nINSERT INTO molecule (molecule_id, label) \nSELECT 'N2O', 'Nitrous oxide';\nINSERT INTO molecule (molecule_id, label) \nSELECT 'CO2', 'Carbon dioxide';\nINSERT INTO molecule (molecule_id, label) \nSELECT 'CH4', 'Methane';\n\t----- bird -----\ttoxicology",
    "307": "\nSELECT element FROM atom WHERE atom_id = \"TR000_2_3\";\n\t----- bird -----\ttoxicology",
    "308": "\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'CHL', atom1, 'single' \nFROM atom \nWHERE element = 'chlorine';\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'CHL2', atom1, 'double' \nFROM atom \nWHERE element = 'chlorine';\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nSELECT 'CHL3', atom1, 'triple' \nFROM atom \nWHERE element = 'chlorine';\n\t----- bird -----\ttoxicology",
    "309": "\nSELECT atom_id FROM connected WHERE bond_id = \"TR346\";\n\t----- bird -----\ttoxicology",
    "310": "\nSELECT COUNT(molecule_id) FROM bond WHERE bond_type = \"double\" AND label = \"carcinogenic compound\"; \n\t----- bird -----\ttoxicology",
    "311": "\nSELECT COUNT(molecule_id) FROM connected WHERE element = \"sulphur\" AND bond_type != \"double\"; \n\t----- bird -----\ttoxicology",
    "312": "\nSELECT label FROM molecule WHERE label = 'carcinogenic' AND bond_id = 'TR001_2_4'; \n\t----- bird -----\ttoxicology",
    "313": "\nSELECT COUNT(atom_id) FROM atom WHERE molecule_id = \"TR005\";\n\t----- bird -----\ttoxicology",
    "314": "\nSELECT COUNT(bond_id) FROM bond WHERE bond_type = 'single'; \n\n\t----- bird -----\ttoxicology",
    "315": "\nSELECT molecule_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE element = 'cl' AND T2.bond_type = 'carcinogenic'; \n\t----- bird -----\ttoxicology",
    "316": "\nSELECT molecule_id FROM connected WHERE element = \"c\" AND label != \"carcinogenic\";\n\t----- bird -----\ttoxicology",
    "317": "\nSELECT COUNT(molecule_id) AS total, \n       SUM(CASE WHEN element = 'Chlorine' THEN 1 ELSE 0 END) AS carcinogenic FROM atom; \n\t----- bird -----\ttoxicology",
    "318": "\nSELECT molecule_id FROM bond WHERE bond_id = \"TR001_1_7\";\n\t----- bird -----\ttoxicology",
    "319": "\nSELECT element FROM atom WHERE atom_id = 'TR001_3_4';\n\t----- bird -----\ttoxicology",
    "320": "\nINSERT INTO bond (bond_id, molecule_id, bond_type) \nVALUES ('TR000_1_TR000_2', 'molecule', 'single');\n\t----- bird -----\ttoxicology",
    "321": "\nSELECT label FROM molecule WHERE molecule_id = ( SELECT atom_id FROM connected WHERE atom_id = \"TR000_2\" AND atom_id2 = \"TR000_4\" )\n\t----- bird -----\ttoxicology",
    "322": "\nSELECT element FROM atom WHERE atom_id = \"TR000_1\";\n\t----- bird -----\ttoxicology",
    "323": "\nINSERT INTO molecule (molecule_id, label) VALUES ('TR000', 'Carcinogenic')\n\t----- bird -----\ttoxicology",
    "324": "\nSELECT COUNT(bond_id) AS single_bond_count, CAST(COUNT(bond_id) AS REAL) * 100 / COUNT(molecule_id) AS percentage FROM connected WHERE bond_type = 'single' \n\t----- bird -----\ttoxicology",
    "325": "\nSELECT COUNT(molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T1.element = 'Nitrogen' AND T2.bond_type = 'carcinogenic'; \n\t----- bird -----\ttoxicology",
    "326": "\nINSERT INTO molecule (molecule_id, label) VALUES ('Sulphur', 'S');\n\t----- bird -----\ttoxicology",
    "327": "\nSELECT COUNT(molecule_id) FROM atom WHERE element = 'non-carcinogenic' AND atom_id > 5 GROUP BY molecule_id HAVING COUNT(molecule_id) > 5 \n\t----- bird -----\ttoxicology",
    "328": "\nSELECT element FROM atom WHERE molecule_id = \"TR024\" AND bond_type = \"double\"; \n\t----- bird -----\ttoxicology",
    "329": "\nSELECT atom_id, COUNT(bond_id) FROM connected GROUP BY atom_id ORDER BY COUNT(bond_id) DESC LIMIT 1 \n\t----- bird -----\ttoxicology",
    "330": "\nSELECT COUNT(bond_id) AS total, \n       SUM(CASE WHEN bond_type = 'triple_bonded_hidrogen' THEN 1 ELSE 0 END) AS triple_bonded_hidrogen,\n       CAST(SUM(CASE WHEN bond_type = 'triple_bonded_hidrogen' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) AS percentage FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'h')\n\t----- bird -----\ttoxicology",
    "331": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label = 'carcinogenic';\n\t----- bird -----\ttoxicology",
    "332": "\nSELECT COUNT(bond_id) FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM connected WHERE atom_id BETWEEN 'TR004' AND 'TR010' ) AND bond_type = 'single'; \n\t----- bird -----\ttoxicology",
    "333": "\nSELECT COUNT(element) FROM atom WHERE element = \"C\" AND molecule_id = \"TR008\";\n\t----- bird -----\ttoxicology",
    "334": "\nSELECT element FROM atom WHERE atom_id = \"TR004_7\" AND label != \"carcinogenic\";\n\t----- bird -----\ttoxicology",
    "335": "\nSELECT COUNT(molecule_id) FROM bond WHERE bond_type = \"double\" AND atom_id IN ( SELECT atom_id FROM connected WHERE atom_id2 = \"oxygen\")\n\t----- bird -----\ttoxicology",
    "336": "\nSELECT COUNT(molecule_id) FROM connected WHERE bond_type = 'triple' AND label NOT LIKE '%carcinogenic%' \n\t----- bird -----\ttoxicology",
    "337": "\nSELECT element, bond_type FROM connected WHERE atom_id = \"TR016\";\n\t----- bird -----\ttoxicology",
    "338": "\nSELECT atom_id FROM connected WHERE bond_type = \"double\" AND molecule_id = \"TR012\";\n\t----- bird -----\ttoxicology",
    "339": "\nSELECT atom_id FROM connected WHERE bond_type = \"carcinogenic\" AND element = \"oxygen\";\n\t----- bird -----\ttoxicology",
    "340": "\nSELECT cards.* FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T2.translation LIKE '%Incredibly powerful foil%' AND T1.isFoilOnly = 1; \n\t----- bird -----\tcard_games",
    "341": "\nSELECT cards.* FROM cards WHERE borderColor = '' AND cardKingdomId IN ( SELECT cardKingdomId FROM cards WHERE rarity = 'Common' ) AND convertedManaCost < 2.0; \n\t----- bird -----\tcard_games",
    "342": "\nSELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.faceConvertedManaCost > T1 converted mana cost AND T2.translation IS NOT NULL \n\t----- bird -----\tcard_games",
    "343": "\nSELECT cards.* FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.baseSetSize WHERE T2.type = 'Frame' AND T1.edhrecRank < 100 AND T1.frameVersion = '2015'; \n\t----- bird -----\tcard_games",
    "344": "\nSELECT T1.id, T2.rarity FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Gladiator' AND T1.type = 'Mythic'; \n\t----- bird -----\tcard_games",
    "345": "\nSELECT T1.type, T2.legalities FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Artifact' AND T1.isMultipleFaces = 0; \n\t----- bird -----\tcard_games",
    "346": "\nSELECT T1.id, T2.artist \nFROM cards AS T1 \nINNER JOIN legalities AS T2 ON T1.uuid = T2.uuid \nWHERE T2.status = 'legal' AND T1.power IS NULL; \n\t----- bird -----\tcard_games",
    "347": "\nINSERT INTO foreign_data (uuid, flavorText, language, multiverseid, name, text, type, uuid)\nSELECT T1.uuid, T2.flavorText, T2.language, T1.multiverseid, T3.name, T4.text, T5.type, T6.uuid\nFROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid\nINNER JOIN sets AS T3 ON T1.id = T3.mcmId AND T3.isFoilOnly = 0 AND T3.isNonFoilOnly = 0 AND T3.isOnlineOnly = 0\nINNER JOIN legalities AS T4 ON T1.uuid = T4.uuid\nWHERE T2.language = 'en' AND T4.status = 'active';\n\n\t----- bird -----\tcard_games",
    "348": "\nSELECT id, date, text, uuid FROM rulings WHERE uuid = 'cards/74s/Sublime Epiphany'; \n\t----- bird -----\tcard_games",
    "349": "\nSELECT T1.name, T2.artist FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T1.id IN ( SELECT id FROM rulings GROUP BY id ORDER BY COUNT(id) DESC LIMIT 1 ) AND T1.status = 'Promo'\n\t----- bird -----\tcard_games",
    "350": "\nSELECT keywords FROM foreign_data WHERE uuid = 'cards/annul_29';\n\t----- bird -----\tcard_games",
    "351": "\nSELECT cards.* FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language LIKE '%Japanese%'; \n\t----- bird -----\tcard_games",
    "352": "\nSELECT CAST(SUM(CASE WHEN asciiName LIKE '%Chinese Simplified%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards;\n\t----- bird -----\tcard_games",
    "353": "\nSELECT s.id, s.name, COUNT(c.id) AS cardCount FROM sets s JOIN foreign_data fd ON s.id = fd.uuid JOIN cards c ON fd.uuid = c.scryfallId WHERE language = 'it' GROUP BY s.id, s.name; \n\t----- bird -----\tcard_games",
    "354": "\nSELECT COUNT(T1.type) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText LIKE '%Aaron Boyd%' AND T1.artist = 'Aaron Boyd'; \n\t----- bird -----\tcard_games",
    "355": "\nSELECT keywords FROM cards WHERE name = 'Angel of Mercy';\n\t----- bird -----\tcard_games",
    "356": "\nSELECT COUNT(*) FROM cards WHERE power = \"INFINITE\" \n\t----- bird -----\tcard_games",
    "357": "\nSELECT T2.promotionType FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.id = T2.cardId WHERE T1.name = 'Duress' AND T2.uuid IS NOT NULL; \n\t----- bird -----\tcard_games",
    "358": "\nSELECT borderColor FROM cards WHERE uuid = 'Ancestor\\'s Chosen';\n\t----- bird -----\tcard_games",
    "359": "\nSELECT type FROM cards WHERE uuid = 'Ancestor's Chosen'; \n\t----- bird -----\tcard_games",
    "360": "\nSELECT T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.name = 'Angel of Mercy'\n\t----- bird -----\tcard_games",
    "361": "\nSELECT COUNT(*) FROM legalities WHERE status = 'restricted' AND text IS NOT NULL;\n\t----- bird -----\tcard_games",
    "362": "\nSELECT text FROM rulings WHERE uuid = 'Condemn';\n\t----- bird -----\tcard_games",
    "363": "\nSELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T1.status = 'restricted' AND T2.isStarter = 1 \n\t----- bird -----\tcard_games",
    "364": "\nSELECT status FROM legalities WHERE uuid = ( SELECT uuid FROM cards WHERE asciiName = 'Cloudchaser Eagle' ); \n\t----- bird -----\tcard_games",
    "365": "\nSELECT type FROM cards WHERE uuid = 'Benalish Knight'; \n\t----- bird -----\tcard_games",
    "366": "\nSELECT text FROM rulings WHERE uuid = 'Benalish Knight';\n\t----- bird -----\tcard_games",
    "367": "\nSELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.type = 'artist' AND T1.name LIKE '%Phyrexian%' \n\t----- bird -----\tcard_games",
    "368": "\nSELECT CAST(SUM(CASE WHEN borderless = TRUE THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE borderless = TRUE \n\t----- bird -----\tcard_games",
    "369": "\nSELECT COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T2.flavorText LIKE '%German%' AND T1.type = 'Card'; \n\t----- bird -----\tcard_games",
    "370": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'borderless' AND T1.language = 'Russian'; \n\t----- bird -----\tcard_games",
    "371": "\nSELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Story Spotlight' AND T1.scryfallId IN ( SELECT uuid FROM rulings WHERE date LIKE '%2023%' ) \n\t----- bird -----\tcard_games",
    "372": "\nSELECT COUNT(*) FROM cards WHERE toughness = \"99\" \n\t----- bird -----\tcard_games",
    "373": "\nSELECT asciiName FROM cards WHERE scryfallIllustrationId = 1234567890;\n\t----- bird -----\tcard_games",
    "374": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.baseSetSize WHERE T1.colorIdentity = 'black' AND T2.isOnlineOnly = 1; \n\t----- bird -----\tcard_games",
    "375": "\nSELECT id FROM cards WHERE convertedManaCost = 0;\n\t----- bird -----\tcard_games",
    "376": "\nSELECT layout FROM cards WHERE keywords LIKE '%Flying%';\n\t----- bird -----\tcard_games",
    "377": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.type = 'Summon - Angel' AND T2.translation != 'Angel'; \n\t----- bird -----\tcard_games",
    "378": "\nSELECT T1.id FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T2.translation = 'Incredibly powerful when paired with non-foiled cards' AND T1.isFoilOnly = 0; \n\t----- bird -----\tcard_games",
    "379": "\nSELECT id FROM cards WHERE duelDeck = \"A\";\n\t----- bird -----\tcard_games",
    "380": "\nSELECT edhrecRank FROM cards WHERE frameVersion = '2015';\n\t----- bird -----\tcard_games",
    "381": "\nSELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified' \n\t----- bird -----\tcard_games",
    "382": "\nSELECT cards.* FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T1.language = 'Japanese'; \n\t----- bird -----\tcard_games",
    "383": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text LIKE '%white border%' AND T1.type = 'Banned'; \n\t----- bird -----\tcard_games",
    "384": "\nSELECT T1.uuid, T2.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.type = 'Legacy'; \n\t----- bird -----\tcard_games",
    "385": "\nSELECT * FROM rulings WHERE id = 1234;\n\t----- bird -----\tcard_games",
    "386": "\nSELECT COUNT(T1.id) AS num_cards, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion LIKE '%Future%' AND T2.status IN ('Permanent', 'Non-Permanent') \n\t----- bird -----\tcard_games",
    "387": "\nSELECT T1.id, T2.colorIdentity FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'OWG' AND T1.type = 'Card'; \n\t----- bird -----\tcard_games",
    "388": "\nSELECT T1.id, T2.translation, T3.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.scryfallId = T2.setCode WHERE T1.id IN ( SELECT scryfallId FROM sets WHERE baseSetSize = 10 AND convertedManaCost = 5 )\n\t----- bird -----\tcard_games",
    "389": "\nSELECT T1.originalType, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.id = T2.uuid WHERE T1.originalType = 'Creature - Elf' \n\t----- bird -----\tcard_games",
    "390": "\nSELECT colors, format FROM foreign_data WHERE uuid IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n\t----- bird -----\tcard_games",
    "391": "\nSELECT T1.id, T2.name, T3.text FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Artifact' AND T1.colorIdentity = 'Black' AND T2.language = 'Foreign'; \n\t----- bird -----\tcard_games",
    "392": "SQL_START\nSELECT T1.id, T2.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'Uncommon' ORDER BY T2.date ASC;\n\t----- bird -----\tcard_games",
    "393": "SQL_START\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText LIKE '%John Avon%' AND T1.cardKingdomId NOT IN ( SELECT cardKingdomId FROM foreign_data WHERE uuid = T2.uuid )\n\t----- bird -----\tcard_games",
    "394": "SQL_START\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.cardKingdomId IS NOT NULL AND T1.colorIdentity = 'white' AND T1.cardKingdomFoilId = T1.cardKingdomId\n\t----- bird -----\tcard_games",
    "395": "\nSELECT COUNT(T2.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'UDON' AND T1.availability = 'Print Type' AND T1.startingMaxHandSize = '-1';\n\t----- bird -----\tcard_games",
    "396": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1993' AND T1.availability = 'available on paper' AND T2.text LIKE '%Sensitive content warning%' \n\t----- bird -----\tcard_games",
    "397": "\nSELECT convertedManaCost FROM cards WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND availability = 'paper; mtgo:frameVersion=2003;borderColor=\"black\"'\n\t----- bird -----\tcard_games",
    "398": "\nSELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander'; \n\t----- bird -----\tcard_games",
    "399": "\nSELECT types FROM sets WHERE type = 'Arena';\n\t----- bird -----\tcard_games",
    "400": "\nSELECT s.setCode FROM sets AS s INNER JOIN set_translations AS t ON s.id = t.setCode WHERE language = 'es'; \n\t----- bird -----\tcard_games",
    "401": "\nSELECT CAST(SUM(CASE WHEN T2.maxStartingMaxHandSize = 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.type = 'Legendary' AND T1.isFoilOnly = 0;\n\t----- bird -----\tcard_games",
    "402": "SQL_START\nSELECT \n    c.id,\n    c.name,\n    CASE WHEN c.isStorySpotlight = 1 AND c.isTextless = 1 THEN 'Yes' ELSE 'No' END AS isStorySpotlightWithText,\n    SUM(CASE WHEN c.isStorySpotlight = 1 AND c.isTextless = 1 THEN 1 ELSE 0 END) / \n    (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND isTextless = 1) * 100 AS percentage\nFROM cards c\nWHERE c.isStorySpotlight = 1 OR c.isTextless = 1\nGROUP BY c.id, c.name\n\t----- bird -----\tcard_games",
    "403": "\nSELECT \n    c.name,\n    COUNT(DISTINCT scryfallId) AS cardCount,\n    CAST(COUNT(DISTINCT scryfallId) AS REAL) * 100 / COUNT(*) AS percentage\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nJOIN legalities l ON fd.uuid = l.uuid\nJOIN sets s ON l.uuid = s.uuid\nWHERE language = 'es'\nGROUP BY c.name;\n\t----- bird -----\tcard_games",
    "404": "SQL_START\nSELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309;\n\t----- bird -----\tcard_games",
    "405": "SQL_START\nINSERT INTO sets (id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) \nVALUES (1, 100, 'Commander', 'Commander', 'Commander', 0, 0, 0, 0, 'No', 'No', 'No', 'No', 'No', 'No', 'No', 'No', '2022-01-01', 1234567890123456789);\n\t----- bird -----\tcard_games",
    "406": "\nSELECT T1.id, T2.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Creature' AND T2.status = 'Legal'; \n\t----- bird -----\tcard_games",
    "407": "\nSELECT types FROM sets WHERE type = 'German';\n\t----- bird -----\tcard_games",
    "408": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL AND T1.type LIKE '%Triggered Ability%'\n\t----- bird -----\tcard_games",
    "409": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Pre-Modern' AND T2.flavorText LIKE '%triggered%mana%ability%' AND T1.faceConvertedManaCost IS NULL; \n\t----- bird -----\tcard_games",
    "410": "\nSELECT id FROM cards WHERE artist = 'Erica Yang' AND format = 'pauper' AND availability = 'available'; \n\t----- bird -----\tcard_games",
    "411": "\nSELECT artist FROM cards WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation';\n\t----- bird -----\tcard_games",
    "412": "\nSELECT T1.text FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T2.type = 'Creature' AND T2.layout = 'normal' AND T2.borderColor = 'black' AND T2.artist = 'Matthew D. Wilson'; \n\t----- bird -----\tcard_games",
    "413": "\nSELECT COUNT(*) FROM rulings WHERE text LIKE '%print%rarity%' AND date = '10/01/2009'; \n\t----- bird -----\tcard_games",
    "414": "\nSELECT T1.language FROM foreign_data AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.mcmIdExtras WHERE T2.block = 'Ravnica' AND T2.baseSetSize = 180; \n\t----- bird -----\tcard_games",
    "415": "SQL_START\nSELECT CAST(COUNT(CASE WHEN T2.hasContentWarning = 0 THEN T1.id END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal';\n\t----- bird -----\tcard_games",
    "416": "SQL_START\nSELECT CAST(COUNT(CASE WHEN power IS NULL OR power = '*' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE language = 'French' AND power IS NULL OR power = '*';\n\t----- bird -----\tcard_games",
    "417": "\nSELECT CAST(SUM(CASE WHEN T2.type = 'Expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.type) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.language = 'Japanese';\n\t----- bird -----\tcard_games",
    "418": "\nSELECT printed FROM cards WHERE artist = 'Daren Bader';\n\t----- bird -----\tcard_games",
    "419": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.colorIdentity = 'No Borders' AND T1.ranked > 12000; \n\t----- bird -----\tcard_games",
    "420": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.baseSetSize WHERE T2.isOversized = 1 AND T2.isReprinted = 1 AND T2.isPrintedForPromotions = 1;\n\t----- bird -----\tcard_games",
    "421": "\nSELECT T1.power, T2.type FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Promo' AND T1.type = 'Unknown' ORDER BY T1.power DESC LIMIT 3 \n\t----- bird -----\tcard_games",
    "422": "\nSELECT language FROM foreign_data WHERE uuid = 149934;\n\t----- bird -----\tcard_games",
    "423": "\nSELECT T1.cardKingdomId, T2.cardKingdomFoilId FROM cards AS T1 INNER JOIN sets AS T2 ON T1.cardKingdomId = T2.type WHERE T1.power > 0 ORDER BY T1.cardKingdomId ASC LIMIT 3 \n\t----- bird -----\tcard_games",
    "424": "\nSELECT CAST(SUM(CASE WHEN T2.text IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.type = 'text' AND T2.language = 'en' \n\t----- bird -----\tcard_games",
    "425": "\nSELECT number FROM cards WHERE subtypes = 'Angel and Wizard' AND faceConvertedManaCost = 0;\n\t----- bird -----\tcard_games",
    "426": "\nSELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.isOnlineOnly = 0 AND T2.language != 'en' ORDER BY T1.name LIMIT 3 \n\t----- bird -----\tcard_games",
    "427": "\nSELECT T1.language FROM foreign_data AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.mcmIdExtras WHERE T2.code = 'ARC' AND T1.type = 'set'; \n\t----- bird -----\tcard_games",
    "428": "\nSELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5; \n\t----- bird -----\tcard_games",
    "429": "\nSELECT T1.language, T2.type FROM foreign_data AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.mcmId Extras WHERE T2.setCode = '206'; \n\t----- bird -----\tcard_games",
    "430": "\nSELECT T1.id, T2.name FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.block = 'Shadowmoor' AND T2.language = 'Italian'; \n\t----- bird -----\tcard_games",
    "431": "\nSELECT id FROM sets WHERE baseSetSize = 100 AND language != 'en' AND borderColor != 'Japanese'; \n\n\t----- bird -----\tcard_games",
    "432": "\nSELECT T1.id, COUNT(T2.id) AS total_cards FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.type = 'Russian' GROUP BY T1.id ORDER BY COUNT(T2.id) DESC LIMIT 1 \n\t----- bird -----\tcard_games",
    "433": "\nSELECT CAST(COUNT(CASE WHEN T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1; \n\t----- bird -----\tcard_games",
    "434": "\nSELECT COUNT(id) FROM sets WHERE language = 'Japanese' AND isOnlineOnly = 0;\n\t----- bird -----\tcard_games",
    "435": "\nSELECT id FROM cards WHERE colorIdentity = \"black\" AND colors LIKE \"%black%\" \n\t----- bird -----\tcard_games",
    "436": "\nSELECT id FROM cards WHERE frameEffects = 'extendedart';\n\t----- bird -----\tcard_games",
    "437": "\nSELECT id FROM cards WHERE borderColor = \"Full Art\" AND type = \"Black\";\n\t----- bird -----\tcard_games",
    "438": "SQL_START\nSELECT T2.language FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.mcmId = T2.uuid WHERE T1.id = 174;\n\t----- bird -----\tcard_games",
    "439": "\nSELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'en' AND T1.type = 'ALL'; \n\t----- bird -----\tcard_games",
    "440": "\nSELECT language FROM foreign_data WHERE uuid = 'cards/1234567890';\n\t----- bird -----\tcard_games",
    "441": "\nSELECT t1.setCode FROM sets AS t1 INNER JOIN legalities AS t2 ON t1.uuid = t2.uuid WHERE t2.status = 'released' AND t2.format = 'TCGplayer' AND t2.date = '07/13/2007'; \n\t----- bird -----\tcard_games",
    "442": "\nSELECT T1.baseSetSize, T2.code FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.block = 'Masques' AND T1.block = 'Mirage'; \n\t----- bird -----\tcard_games",
    "443": "\nSELECT s.code FROM sets AS t1 INNER JOIN legalities AS t2 ON t1.uuid = t2.uuid WHERE t2.status = 'expansion' AND t1.type = 'set'; \n\t----- bird -----\tcard_games",
    "444": "\nSELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T1.type = 'Worship' AND T1.watermark = 'Boros'; \n\t----- bird -----\tcard_games",
    "445": "\nSELECT T1.language, T2.flavorText \nFROM foreign_data AS T1 \nINNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId \nWHERE T1.watermark = 'colorpie' AND T2.type IN ('Artifact', 'Instant') \n\t----- bird -----\tcard_games",
    "446": "\nSELECT CAST(SUM(CASE WHEN convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode IN ( 'Abyssal Horror', 'Abyssal Horror: The Final Conflict' ) \n\t----- bird -----\tcard_games",
    "447": "\nSELECT s.code FROM sets AS t1 INNER JOIN legalities AS t2 ON t1.uuid = t2.uuid WHERE t2.status = 'Expansion' AND t1.type = 'Commander'; \n\t----- bird -----\tcard_games",
    "448": "\nSELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.text = 'Abzan Waterfall';\n\t----- bird -----\tcard_games",
    "449": "\nSELECT T1.type, T2.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T2.watermark = 'azorius' \n\t----- bird -----\tcard_games",
    "450": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T2.flavorText LIKE '%Aaron Miller%' AND T1.type = 'Artifact' AND T1.power > 0; \n\t----- bird -----\tcard_games",
    "451": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'PAPER' AND T1.startingMaxHandSize > 0 \n\t----- bird -----\tcard_games",
    "452": "\nSELECT asciiName FROM cards WHERE text IS NOT NULL;\n\t----- bird -----\tcard_games",
    "453": "\nSELECT convertedManaCost FROM cards WHERE asciiName = \"Ancestor's Chosen\";\n\t----- bird -----\tcard_games",
    "454": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'White' AND T2.power LIKE '%unknown%'\n\t----- bird -----\tcard_games",
    "455": "\nSELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text LIKE '%Promotional painting%' AND T1.type = 'face' GROUP BY T1.name HAVING COUNT(T1.id) > 1 \n\t----- bird -----\tcard_games",
    "456": "\nSELECT types FROM cards WHERE uuid = 'Molimo, Maro-Sorcerer'; \n\t----- bird -----\tcard_games",
    "457": "\nSELECT T1.scryfallId FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Promo' AND T1.type = 'bundle'; \n\t----- bird -----\tcard_games",
    "458": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.colorIndicator = 'black' AND T1.availability = 'both' AND T2.mtgjsonV4Id IN ('arena', 'mtgo');\n\t----- bird -----\tcard_games",
    "459": "\nSELECT convertedManaCost FROM cards WHERE asciiName = \"Serra Angel\" AND colorIdentity = \"White\" AND manaCost > ( SELECT convertedManaCost FROM cards WHERE asciiName = \"Shrine Keeper\" ) \n\t----- bird -----\tcard_games",
    "460": "\nSELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'Battra, Dark Destroyer' AND T1.artist IS NOT NULL; \n\t----- bird -----\tcard_games",
    "461": "\nSELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T2.language = 'en' AND T1.type = 'Artifact' AND T1.convertManaCost > 2000 AND T1.frameVersion = '2003' ORDER BY T1.convertManaCost DESC LIMIT 3; \n\t----- bird -----\tcard_games",
    "462": "\nSELECT T1.name FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text LIKE '%Ancestor%Chosen%' AND T1.type = 'Set'; \n\t----- bird -----\tcard_games",
    "463": "\nSELECT COUNT(id) FROM foreign_data WHERE text = 'Angel of Mercy'; \n\n\t----- bird -----\tcard_games",
    "464": "\nSELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.baseSetSize WHERE T2.setCode = 'Hauptset Zehnte Edition'\n\t----- bird -----\tcard_games",
    "465": "\nSELECT T1.name, T2.language FROM foreign_data AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.mcmIdExtras WHERE T2.setCode LIKE 'Ancestor%Chosen' AND T1.type = 'Card'; \n\t----- bird -----\tcard_games",
    "466": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T2.flavorText LIKE '%Adam Rex%' AND T1.artist = 'Adam Rex' AND T1.setCode = 'Hauptset Zehnte Edition'; \n\t----- bird -----\tcard_games",
    "467": "\nSELECT COUNT(*) FROM sets WHERE baseSetSize = 10 AND setCode = 'Hauptset Zehnte Edition'; \n\t----- bird -----\tcard_games",
    "468": "\nSELECT translation FROM set_translations WHERE setCode = 'Eighth Edition';\n\t----- bird -----\tcard_games",
    "469": "\nSELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'MTG Arena' AND T2.status = 'Online'; \n\t----- bird -----\tcard_games",
    "470": "\nSELECT T2.releaseDate FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T1.name = 'Ancestor's Chosen'; \n\t----- bird -----\tcard_games",
    "471": "\nSELECT T1.type FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Expansion' AND T1.name = 'Hauptset Zehnte Edition'; \n\t----- bird -----\tcard_games",
    "472": "\nSELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'; \n\t----- bird -----\tcard_games",
    "473": "\nSELECT T1.setCode FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T2.status = 'O' AND T1.isNonFoilOnly = 0 AND T1.baseSetSize = 5 AND T1.parentCode = 'ADARKAR VALKYRIE';\n\t----- bird -----\tcard_games",
    "474": "\nSELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 10;\n\t----- bird -----\tcard_games",
    "475": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.baseSetSize WHERE T2.type = 'Coldsnap' AND T1.colorIndicator = 'Black'; \n\t----- bird -----\tcard_games",
    "476": "\nSELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.baseSetSize WHERE T2.setCode = 'Coldsnap' ORDER BY T1 convertedManaCost DESC LIMIT 1 \n\t----- bird -----\tcard_games",
    "477": "\nSELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text LIKE '%Coldsnap%' AND T2.type = 'Artist'; \n\t----- bird -----\tcard_games",
    "478": "\nSELECT T1.number FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.baseSetSize WHERE T2.setCode = 'Coldsnap' AND T1.id = 4; \n\t----- bird -----\tcard_games",
    "479": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Coldsnap' AND T1.convertedManaCost > 5 AND T1.power IS NULL; \n\t----- bird -----\tcard_games",
    "480": "\nSELECT flavorText FROM foreign_data WHERE uuid = 'cards/Ancestor%27s%20Chosen';\n\t----- bird -----\tcard_games",
    "481": "\nSELECT T1.language FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T2.flavorText LIKE '%Ancestor%\\'s Chosen%' AND T1.type = 'Card' \n\t----- bird -----\tcard_games",
    "482": "\nSELECT types FROM sets WHERE name = 'Ancestor\\'s Chosen';\n\t----- bird -----\tcard_games",
    "483": "\nSELECT T1.text FROM rulings AS T1 INNER JOIN set_translations AS T2 ON T1.uuid = T2.setCode WHERE T2.language = 'it' AND T2.setCode IN ( SELECT id FROM sets WHERE baseSetSize = 100 AND block = 'Coldsnap' ); \n\t----- bird -----\tcard_games",
    "484": "\nSELECT asciiName FROM cards WHERE flavorText = 'Coldsnap' AND convertedManaCost = ( SELECT MAX(convertedManaCost) FROM cards WHERE flavorText = 'Coldsnap' ) \n\t----- bird -----\tcard_games",
    "485": "\nSELECT rulings.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T2.name = 'Reminisce' AND T1.id IN ( SELECT id FROM rulings ORDER BY date DESC LIMIT 1 ) \n\t----- bird -----\tcard_games",
    "486": "\nSELECT CAST(SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode = 'Coldsnap' \n\t----- bird -----\tcard_games",
    "487": "SQL_START\nSELECT SUM(CASE WHEN T2.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) / COUNT(T1.id) * 100 AS percentage FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Coldsnap' AND T2.status = 'legal'\n\t----- bird -----\tcard_games",
    "488": "\nSELECT s.code FROM sets s WHERE STRFTIME('%Y/%m/%d', releaseDate) = '2017/07/14'; \n\t----- bird -----\tcard_games",
    "489": "\nSELECT keyruneCode FROM sets WHERE code = 'PKHC';\n\t----- bird -----\tcard_games",
    "490": "\nSELECT mcmId FROM sets WHERE code = 'SS2';\n\t----- bird -----\tcard_games",
    "491": "\nSELECT T1.name FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T2.format = 'Magic: The Gathering' AND T1.releaseDate LIKE '%/%/9%'\n\t----- bird -----\tcard_games",
    "492": "\nSELECT T2.type FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'From the Vault: Lore' AND T1.setCode = 'FromTheVaultLore'; \n\t----- bird -----\tcard_games",
    "493": "\nSELECT T2.parentCode FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.name = 'Commander 2014 Oversized' AND T1.type = 'set'; \n\t----- bird -----\tcard_games",
    "494": "\nSELECT cards.id, cards.artist, cards.asciiName, cards.availability, cards.borderColor, cards.cardKingdomFoilId, cards.cardKingdomId, cards.colorIdentity, cards.colorIndicator, cards.colors, \n       CASE WHEN cards.flavorText IS NULL THEN 'Missing' ELSE cards.flavorText END AS flavorText, \n       CASE WHEN cards.hand = '' THEN 'Degraded' ELSE cards.hand END AS hand, \n       CASE WHEN cards.hasAlternativeDeckLimit > 0 AND cards.isAlternative = 1 THEN 'Missing' ELSE cards.hasAlternativeDeckLimit END AS alternativeDeckLimit, \n       CASE WHEN cards.hasContentWarning > 0 AND cards.isContentWarning = 1 THEN 'Missing' ELSE cards.hasContentWarning END AS contentWarning, \n       CASE WHEN cards.hasFoil > 0 AND cards.isFoil = 1 THEN 'Missing' ELSE cards.hasFoil END AS foil, \n       CASE WHEN cards.hasNonFoil > 0 AND cards.isNonFoil = 1 THEN 'Missing' ELSE cards.hasNonFoil END AS nonfoil, \n       CASE WHEN cards.isAlternative = 1 THEN 'Missing' ELSE cards.isAlternative END AS isAlternative, \n       CASE WHEN cards.isFullArt = 1 THEN 'Missing' ELSE cards.isFullArt END AS isFullArt, \n       CASE WHEN cards.isOnlineOnly = 1 THEN 'Missing' ELSE cards.isOnlineOnly END AS isOnlineOnly, \n       CASE WHEN cards.isOversized = 1 THEN 'Missing' ELSE cards.isOversized END AS isOversized, \n       CASE WHEN cards.isPromo = 1 THEN 'Missing' ELSE cards.isPromo END AS isPromo, \n       CASE WHEN cards.isReprint = 1 THEN 'Missing' ELSE cards.isReprint END AS isReprint, \n       CASE WHEN cards.isReserved = 1 THEN 'Missing' ELSE cards.isReserved END AS isReserved, \n       CASE WHEN cards.isStarter = 1 THEN 'Missing' ELSE cards.isStarter END AS isStarter, \n       CASE WHEN cards.isStorySpotlight = 1 THEN 'Missing' ELSE cards.isStorySpotlight END AS isStorySpotlight, \n       CASE WHEN cards.isTextless = 1 THEN 'Missing' ELSE cards.isTextless END AS isTextless, \n       CASE WHEN cards.isTimeshifted = 1 THEN 'Missing' ELSE cards.isTimeshifted END AS timeshifted, \n       CASE WHEN cards.keywords IS NULL THEN 'Missing' ELSE cards.keywords END AS keywords, \n       CASE WHEN cards.layout IS NULL THEN 'Missing' ELSE cards.layout END AS layout, \n       CASE WHEN cards.leadershipSkills IS NULL THEN 'Missing' ELSE cards.leadershipSkills END AS leadershipSkills, \n       CASE WHEN cards.life = '' THEN 'Degraded' ELSE cards.life END AS life, \n       CASE WHEN cards.loyalty = '' THEN 'Degraded' ELSE cards.loyalty END AS loyalty, \n       CASE WHEN cards.manaCost IS NULL THEN 'Missing' ELSE cards.manaCost END AS manaCost, \n       CASE WHEN cards.mcmId IS NULL THEN 'Missing' ELSE cards.mcmId END AS mcmId, \n       CASE WHEN cards.mcmMetaId IS NULL THEN 'Missing' ELSE cards.mcmMetaId END AS mcmMetaId, \n       CASE WHEN cards.mtgArenaId IS NULL THEN 'Missing' ELSE cards.mtgArenaId END AS mtgArenaId, \n       CASE WHEN cards.mtgoFoilId IS NULL THEN 'Missing' ELSE cards.mtgoFoilId END AS mtgoFoilId, \n       CASE WHEN cards.mtgoId IS NULL THEN 'Missing' ELSE cards.mtgoId END AS mtgoId, \n       CASE WHEN cards.multiverseId IS NULL THEN 'Missing' ELSE cards.multiverseId END AS multiverseId, \n       CASE WHEN cards.name = '' THEN 'Degraded' ELSE cards.name END AS name, \n       CASE WHEN cards.number = '' THEN 'Degraded' ELSE cards.number END AS number, \n       CASE WHEN cards.originalReleaseDate IS NULL THEN 'Missing' ELSE cards.originalReleaseDate END AS originalReleaseDate, \n       CASE WHEN cards.originalText = '' THEN 'Degraded' ELSE cards.originalText END AS originalText, \n       CASE WHEN cards.originalType = '' THEN 'Degraded' ELSE cards.originalType END AS originalType, \n       CASE WHEN cards.otherFaceIds IS NULL THEN 'Missing' ELSE cards.otherFaceIds END AS otherFaceIds, \n       CASE WHEN cards.power = '' THEN 'Degraded' ELSE cards.power END AS power, \n       CASE WHEN cards.printings = '' THEN 'Degraded' ELSE cards.printings END AS printing, \n       CASE WHEN cards.promoTypes IS NULL THEN 'Missing' ELSE cards.promoTypes END AS promoTypes, \n       CASE WHEN cards.purchaseUrls IS NULL THEN 'Missing' ELSE cards.purchaseUrls END AS purchaseUrls, \n       CASE WHEN cards.rarity = '' THEN 'Degraded' ELSE cards.rarity END AS rarity, \n       CASE WHEN cards.scryfallIllustrationId IS NULL THEN 'Missing' ELSE cards.scryfallIllustrationId END AS scryfallIllustrationId, \n       CASE WHEN cards.scryfallOracleId IS NULL THEN 'Missing' ELSE cards.scryfallOracleId END AS scryfallOracleId, \n       CASE WHEN cards.setCode = '' THEN 'Degraded' ELSE cards.setCode END AS setCode, \n       CASE WHEN cards.side = '' THEN 'Degraded' ELSE cards.side END AS side, \n       CASE WHEN cards.subtypes IS NULL THEN 'Missing' ELSE cards.subtypes END AS subtypes, \n       CASE WHEN cards.supertypes IS NULL THEN 'Missing' ELSE cards.supertypes END AS supertypes, \n       CASE WHEN cards.tcgplayerProductId = '' THEN 'Degraded' ELSE cards.tcgplayerProductId END AS tcgplayerProductId, \n       CASE WHEN cards.text = '' THEN 'Degraded' ELSE cards.text END AS text, \n       CASE WHEN cards.toughness = '' THEN 'Degraded' ELSE cards.toughness END AS toughness, \n       CASE WHEN cards.type = '' THEN 'Degraded' ELSE cards.type END AS type, \n       CASE WHEN cards.url IS NULL THEN 'Missing' ELSE cards.url END AS url, \n       CASE WHEN cards.value IS NULL THEN 'Missing' ELSE cards.value END AS value, \n       CASE WHEN cards.weight IS NULL THEN 'Missing' ELSE cards.weight END AS weight, \n       CASE WHEN cards.x = '' THEN 'Degraded' ELSE cards.x END AS x, \n       CASE WHEN cards.y = '' THEN 'Degraded' ELSE cards.y END AS y, \n       CASE WHEN cards.z = '' THEN 'Degraded' ELSE cards.z END AS z\n    END\n\n    SELECT *\n    FROM (\n      SELECT *, ROW_NUMBER() OVER (ORDER BY id) as row_num\n      FROM table_name\n    ) subquery\n    WHERE row_num BETWEEN 1 AND 10;\n\n    -- Optional: you can also use a subquery with LIMIT to get the first 10 rows\n    -- SELECT *\n    -- FROM (\n    --     SELECT *, ROW_NUMBER() OVER (ORDER BY id) as row_num\n   --     FROM table_name\n   -- ) subquery\n    -- WHERE row_num BETWEEN 1 AND 10;\n\n\t----- bird -----\tcard_games",
    "495": "\nSELECT T2.releaseDate FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Evacuation'; \n\t----- bird -----\tcard_games",
    "496": "\nSELECT COUNT(*) FROM sets WHERE setCode = 'Rinascita di Alara';\n\t----- bird -----\tcard_games",
    "497": "\nSELECT T1.type FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Expansion' AND T1.name = 'Huiti\u00e8me \u00e9dition'; \n\t----- bird -----\tcard_games",
    "498": "\nSELECT T1.name FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text LIKE '%Tendo Ice Bridge%' AND T1.type = 'Commander'; \n\t----- bird -----\tcard_games",
    "499": "\nSELECT COUNT(setCode) FROM set_translations WHERE language = 'en' AND setCode = 'Salvat 2011'; \n\t----- bird -----\tcard_games",
    "500": "\nSELECT asciiName FROM cards WHERE flavorText = \"Fellwar Stone\";\n\t----- bird -----\tcard_games",
    "501": "\nSELECT T1.name, T2.convertedManaCost FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T2.language = 'en' AND T1.type = 'Hero' AND T1.setCode = 'Journey into Nyx Hero's Path';\n\t----- bird -----\tcard_games",
    "502": "\nSELECT originalReleaseDate FROM sets WHERE setCode = 'Ola de fr\u00edo';\n\t----- bird -----\tcard_games",
    "503": "\nSELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.id = T2.baseSetSize WHERE T1.name = 'Samite Pilgrim' AND T2.setCode IN ('Alpha', 'Beta'); \n\t----- bird -----\tcard_games",
    "504": "\nSELECT COUNT(*) FROM cards WHERE convertedManaCost = \"3\" AND setCode = \"World Championship Decks 2004\"; \n\t----- bird -----\tcard_games",
    "505": "\nSELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T2.language = 'simplified chinese' AND T1.type = 'set'; \n\t----- bird -----\tcard_games",
    "506": "\nSELECT CAST(SUM(CASE WHEN T2.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM foreign_data AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.mcmId Extras WHERE T2.language = 'ja'\n\t----- bird -----\tcard_games",
    "507": "\nSELECT CAST(SUM(CASE WHEN T2.isOnlineOnly = 1 AND T1.id IN ( SELECT T3.id FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'pt-BR' ) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.uuid = T2.setCode WHERE T2.language = 'pt-BR'\n\t----- bird -----\tcard_games",
    "508": "\nSELECT variations FROM cards WHERE text IS NULL AND artist = 'Aleksi Briclot';\n\t----- bird -----\tcard_games",
    "509": "\nSELECT s.id FROM sets s WHERE s.totalSetSize = ( SELECT MAX(totalSetSize) FROM sets );\n\t----- bird -----\tcard_games",
    "510": "\nSELECT T1.artist, T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.id NOT IN ( SELECT id FROM cards WHERE convertedManaCost > 0 ) AND T1.type = 'Art'\n\t----- bird -----\tcard_games",
    "511": "\nSELECT frameEffects FROM sets WHERE type = 'foil' AND power > 8 AND rarity = 'infinite';\n\t----- bird -----\tcard_games",
    "512": "\nSELECT COUNT(*) FROM cards WHERE power = 'unknown' AND cardKingdomId IN ( SELECT id FROM sets WHERE baseSetSize > 1 ) AND duelDeck = 'A' AND hasFoil = 0; \n\t----- bird -----\tcard_games",
    "513": "\nSELECT T1.id FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Commander' AND T1.isNonFoilOnly = 0 GROUP BY T1.id ORDER BY COUNT(T1.id) DESC LIMIT 1 \n\t----- bird -----\tcard_games",
    "514": "\nSELECT id, convertedManaCost FROM cards WHERE faceConvertedManaCost = ( SELECT MAX(convertedManaCost) FROM cards ) AND duelDeck LIKE '%duel%' ORDER BY convertedManaCost DESC LIMIT 10 \n\t----- bird -----\tcard_games",
    "515": "\nSELECT T1.releaseDate, T2.format \nFROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Mythic' ORDER BY T1.releaseDate ASC LIMIT 1 \n\t----- bird -----\tcard_games",
    "516": "\nSELECT COUNT(T1.id) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.scryfallId WHERE T2.flavorText LIKE '%Volkan Ba\u00c7\u00b5a%' AND T1.language = 'French'; \n\t----- bird -----\tcard_games",
    "517": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Enchantment' AND T1.rarity = 'Rare' AND T2.status = 'All Legal'; \n\t----- bird -----\tcard_games",
    "518": "\nSELECT T1.playFormat, T2.cardName FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.id = T2.uuid WHERE T2.status = 'Banned' GROUP BY T1.playFormat, T2.cardName ORDER BY COUNT(T2.uuid) DESC LIMIT 1 \n\t----- bird -----\tcard_games",
    "519": "\nSELECT language FROM foreign_data WHERE uuid = ( SELECT uuid FROM cards WHERE name = 'Battlebond' );\n\t----- bird -----\tcard_games",
    "520": "\nSELECT T1.flavorText, T2.format \nFROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.type = 'illustrator' GROUP BY T1.uuid ORDER BY COUNT(T1.uuid) LIMIT 1 \n\t----- bird -----\tcard_games",
    "521": "\nSELECT T1.uuid, T2.text FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.type = 'Artifact' AND T1.flavorText LIKE '%D.%Alexander%Gregory%' AND T1.scryfallIllustrationId IN ( SELECT uuid FROM rulings WHERE date LIKE '1997%' ) AND T1.isSensitiveContent OR T1.isWizardsOfTheCoast; \n\t----- bird -----\tcard_games",
    "522": "\nSELECT T1.name, T2.bannedPlayFormat \nFROM cards AS T1 INNER JOIN rulings AS T2 ON T1.id = T2.uuid WHERE T2.date = '2023-01-01' AND T1.rank = 1;\n\t----- bird -----\tcard_games",
    "523": "\nSELECT AVG(T1.totalSetSize) AS avg_sets, T2.language FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE STRFTIME('%Y', T1.releaseDate) BETWEEN '2012-01-01' AND '2015-12-31';\n\t----- bird -----\tcard_games",
    "524": "\nSELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text LIKE '%black border%' AND T1.availability = 'Arena'\n\t----- bird -----\tcard_games",
    "525": "\nSELECT uuid FROM legalities WHERE status = 'restricted' OR status = 'banned';\n\t----- bird -----\tcard_games",
    "526": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText LIKE 'paper' AND T1.artist = 'Matthew D. Wilson'; \n\t----- bird -----\tcard_games",
    "527": "\nSELECT id, date FROM rulings WHERE uuid = ( SELECT uuid FROM cards WHERE artist = 'Kev Walker' AND asciiName = 'And Designed By Kev Walker' ORDER BY date DESC ) \n\t----- bird -----\tcard_games",
    "528": "\nSELECT T1.name, T2.format \nFROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = 'Hour of Devastation' AND T2.status = 'Legal'; \n\t----- bird -----\tcard_games",
    "529": "\nSELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T2.language != 'ja' AND T2.translation != 'ko'; \n\t----- bird -----\tcard_games",
    "530": "\nSELECT T1.frameStyle, T2.cardName \nFROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText LIKE '%Allen Williams%' AND T1.id IN ( SELECT cardKingdomId FROM cards WHERE artist = 'Allen Williams' ); \n\n\t----- bird -----\tcard_games",
    "531": "\nSELECT u.Id, u.DisplayName FROM users u INNER JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN ( SELECT PostId FROM posts WHERE OwnerUserId = 1 ) AND u.Reputation > Jarrod Dixon.Reputation; \n\t----- bird -----\tcodebase_community",
    "532": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2014'; \n\t----- bird -----\tcodebase_community",
    "533": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.LastAccessDate > '2014-09-01' AND T1.LasActivityDate IS NOT NULL;\n\t----- bird -----\tcodebase_community",
    "534": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T1.ViewCount DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "535": "\nSELECT COUNT(T2.UserId) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.UpVotes > 100 AND T1.DownVotes > 0; \n\t----- bird -----\tcodebase_community",
    "536": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Reputation > 10 AND T2.CreationDate >= '2013-01-01'\n\t----- bird -----\tcodebase_community",
    "537": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'; \n\t----- bird -----\tcodebase_community",
    "538": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\n\t----- bird -----\tcodebase_community",
    "539": "\nSELECT DISTINCT OwnerUserId FROM posts WHERE Title = 'Eliciting priors from experts';\n\t----- bird -----\tcodebase_community",
    "540": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.ParentId WHERE T1.OwnerUserId = 1 AND T1.Score = ( SELECT MAX(Score) FROM posts ) ORDER BY T1.Score DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "541": "\nSELECT T1.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T1.Score DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "542": "\nSELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = 1 AND T1.Title LIKE '%csg Gillespie%'\n\t----- bird -----\tcodebase_community",
    "543": "\nSELECT T1.Score, COUNT(T2.Id) AS AnswerCount FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = 1 AND T1.Title LIKE '%csgillespie%' GROUP BY T1.Score ORDER BY COUNT(T2.Id) DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "544": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE 'Examples for teaching: Correlation does not mean causation' AND T2.RelatedPostId IS NULL; \n\t----- bird -----\tcodebase_community",
    "545": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = 1 AND T1.PostTypeId = 1; \n\t----- bird -----\tcodebase_community",
    "546": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.AcceptedAnswerId IS NOT NULL AND T1.CreaionDate > NOW() - INTERVAL 7 DAY; \n\t----- bird -----\tcodebase_community",
    "547": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score > 19; \n\t----- bird -----\tcodebase_community",
    "548": "\nSELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title LIKE 'Eliciting priors from experts'; \n\t----- bird -----\tcodebase_community",
    "549": "\nSELECT T2.Body, T1.PostId FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'\n\t----- bird -----\tcodebase_community",
    "550": "\nSELECT T2.Body, T1.PostId FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id ORDER BY COUNT(T1.TagName) DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "551": "\nSELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie';\n\t----- bird -----\tcodebase_community",
    "552": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\n\t----- bird -----\tcodebase_community",
    "553": "\nSELECT COUNT(T2.Id) FROM badges AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Date LIKE '2011%' AND T2.CreationDate IS NOT NULL; \n\t----- bird -----\tcodebase_community",
    "554": "\nSELECT DISTINCT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id ORDER BY COUNT(T1.Id) DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "555": "\nSELECT AVG(Score) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' ); \n\t----- bird -----\tcodebase_community",
    "556": "\nSELECT AVG(b.Id) FROM badges b INNER JOIN posts p ON b.PostId = p.Id WHERE p.ViewCount > 200 GROUP BY b.Id;\n\t----- bird -----\tcodebase_community",
    "557": "\nSELECT CAST(COUNT(CASE WHEN OwnerUserId = 1 THEN Id ELSE NULL END) AS REAL) * 100 / COUNT(Id) FROM posts WHERE Score > 20;\n\t----- bird -----\tcodebase_community",
    "558": "\nSELECT COUNT(T1.VoteTypeId) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'No.58' AND T1.CreationDate LIKE '%2010/7/19%'\n\t----- bird -----\tcodebase_community",
    "559": "\nSELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(*) DESC LIMIT 1;\n\t----- bird -----\tcodebase_community",
    "560": "\nSELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.RevisionGUID LIKE 'Revival%' AND T1.Name LIKE '%Revival%'; \n\t----- bird -----\tcodebase_community",
    "561": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.RevisionGUID IS NULL AND T2.CreationDate > ( SELECT MAX(CreationDate) FROM postHistory ) ORDER BY T2.Score DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "562": "\nSELECT COUNT(T2.CommentId) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount = 1910;\n\t----- bird -----\tcodebase_community",
    "563": "\nSELECT COUNT(T1.FavoriteCount) FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.RelatedPostId = 3025 AND T1.ViewCount > 0 AND T1.CreationDate BETWEEN '2014-04-23' AND '2014-04-24';\n\t----- bird -----\tcodebase_community",
    "564": "\nSELECT T2.Text FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.RelatedPostId = 107829; \n\t----- bird -----\tcodebase_community",
    "565": "\nINSERT INTO badges (Id, UserId, Name, Date) \nVALUES (1, 23853, 'Commenter', '2013-07-12 09:08:18');\n\t----- bird -----\tcodebase_community",
    "566": "\nSELECT u.Reputation FROM users AS u WHERE u.Id = ( SELECT OwnerUserId FROM postHistory WHERE PostId = 65041 )\n\t----- bird -----\tcodebase_community",
    "567": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini'\n\t----- bird -----\tcodebase_community",
    "568": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.VoteTypeId = 6 AND T1.Id = 6347; \n\t----- bird -----\tcodebase_community",
    "569": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data%visualization%' AND T2.VoteTypeId IN (6, 7); \n\t----- bird -----\tcodebase_community",
    "570": "\nSELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'; \n\t----- bird -----\tcodebase_community",
    "571": "\nSELECT COUNT(CASE WHEN T2.UserId = 24 THEN 1 ELSE NULL END) AS PostCount,\n       COUNT(T1.Id) AS VoteCount\nFROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id\nWHERE T1.Name LIKE 'No.24%'\n\t----- bird -----\tcodebase_community",
    "572": "\nSELECT COUNT(T1.ViewCount) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer%' AND T2.RevisionGUID IS NOT NULL;\n\t----- bird -----\tcodebase_community",
    "573": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score = 17;\n\t----- bird -----\tcodebase_community",
    "574": "\nINSERT INTO users (Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) \nVALUES (1, 1000, '2022-01-01', 'Stack Overflow User', '2022-01-01', 'http://stackoverflow.com', 'New York', 'I love coding', 100000, 50000, 20000, 15000, 1, 'https://example.com/profile.jpg');\n\t----- bird -----\tcodebase_community",
    "575": "\nSELECT T2.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\n\t----- bird -----\tcodebase_community",
    "576": "\nSELECT T1.UserId FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%thank you user93%' AND T2.Score > 0; \n\t----- bird -----\tcodebase_community",
    "577": "\nSELECT T2.Text FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'A Lion.' \n\t----- bird -----\tcodebase_community",
    "578": "\nSELECT u.Id, u.Reputation FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId WHERE p.Title LIKE '%Understanding what Dassault iSight is doing%' AND u.DisplayName = 'Unknown User'; \n\t----- bird -----\tcodebase_community",
    "579": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE 'How does gentle boosting differ from AdaBoost%' AND T1.PostTypeId = 1;\n\t----- bird -----\tcodebase_community",
    "580": "\nSELECT Id, DisplayName FROM users WHERE Reputation = 100 AND Name LIKE '%Necromancer.';\n\t----- bird -----\tcodebase_community",
    "581": "\nSELECT DISTINCT T2.LastEditorDisplayName FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE 'Open source tools for visualizing multi-dimensional data%' AND T2.RevisionGUID IS NOT NULL;\n\t----- bird -----\tcodebase_community",
    "582": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.RevisionGUID LIKE '%Vebjorn Ljosa%' AND T1.OwnerUserId = 12345; \n\t----- bird -----\tcodebase_community",
    "583": "\nSELECT u.Reputation, p.Score, u.WebsiteUrl\nFROM users u\nJOIN postHistory ph ON u.Id = ph.UserId\nJOIN posts p ON ph.PostId = p.Id\nWHERE u.DisplayName = 'Yevgeny' AND p.Score > 0;\n\t----- bird -----\tcodebase_community",
    "584": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%Why square the difference instead of taking the absolute value in standard deviation%' AND T1.OwnerUserId = ( SELECT UserId FROM users WHERE Id IN ( SELECT OwnerUserId FROM postHistory WHERE PostId = T1.Id ) );\n\t----- bird -----\tcodebase_community",
    "585": "\nSELECT SUM(v.BountyAmount) FROM votes v INNER JOIN posts p ON v.PostId = p.Id WHERE p.Title LIKE '%data%' AND v.VoteTypeId = 1;\n\t----- bird -----\tcodebase_community",
    "586": "\nSELECT DISTINCT T1.UserId FROM users AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.LinkTypeId = 3 AND T2.CreationDate >= (SELECT MIN(CreationDate) FROM posts WHERE Title LIKE '%variance%') AND T2.CreationDate <= (SELECT MAX(CreationDate) FROM posts WHERE Title LIKE '%variance%');\n\t----- bird -----\tcodebase_community",
    "587": "\nSELECT p.Title, p.Body, COALESCE(c.Score, 0) AS CommentScore, c.Text \nFROM posts p \nJOIN tags t ON p.Id = t.ExcerptPostId \nJOIN comments c ON p.Id = c.PostId AND c.Score IS NOT NULL \nWHERE t.TagName = 'humor' \nGROUP BY p.Title, p.Body, COALESCE(c.Score, 0) AS CommentScore, c.Text \nORDER BY p.ViewCount DESC;\n\t----- bird -----\tcodebase_community",
    "588": "\nSELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.Id = 13;\n\t----- bird -----\tcodebase_community",
    "589": "\nSELECT Id FROM users ORDER BY Reputation DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "590": "\nSELECT Id FROM users ORDER BY Views LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "591": "\nSELECT COUNT(T2.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE STRFTIME('%Y', T1.Date) = '2011' AND T1.Name = 'Supporter';\n\t----- bird -----\tcodebase_community",
    "592": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name > '5' GROUP BY T2.UserId;\n\t----- bird -----\tcodebase_community",
    "593": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'New York' AND T1.Name = 'Teacher' AND T1.Name = 'Supporter';\n\t----- bird -----\tcodebase_community",
    "594": "\nSELECT u.Id, u.Reputation FROM users u JOIN postHistory ph ON u.Id = ph.UserId WHERE ph.PostId = 1;\n\t----- bird -----\tcodebase_community",
    "595": "\nSELECT DISTINCT T1.UserId FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount = 1000 AND T2.RevisionGUID IS NULL; \n\t----- bird -----\tcodebase_community",
    "596": "\nSELECT u.Id, u.DisplayName, b.Name \nFROM users u \nJOIN badges b ON u.Id = b.UserId \nWHERE b.Name = 'Commenter' \nORDER BY COUNT(b.Name) DESC \nLIMIT 10 \n\t----- bird -----\tcodebase_community",
    "597": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Country = 'India' AND T1.Name = 'Teacher';\n\t----- bird -----\tcodebase_community",
    "598": "\nSELECT CAST(SUM(CASE WHEN T2.Date BETWEEN '2010-01-01' AND '2011-12-31' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Date BETWEEN '2010-01-01' AND '2011-12-31' THEN 1 ELSE 0 END) FROM badges AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Name LIKE '%Student%'\n\t----- bird -----\tcodebase_community",
    "599": "\nSELECT DISTINCT T1.PostHistoryTypeId FROM postHistory AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.Id WHERE T1.PostId = 3720; \n\t----- bird -----\tcodebase_community",
    "600": "\nSELECT p.* , \n       COUNT(v.Id) AS VoteCount \nFROM posts p \nJOIN postHistory ph ON p.Id = ph.PostId \nJOIN votes v ON ph.Id = v.PostId \nWHERE ph.RevisionGUID = '61217' \nGROUP BY p.*;\n\t----- bird -----\tcodebase_community",
    "601": "\nSELECT T2.Score, T1.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 395;\n\t----- bird -----\tcodebase_community",
    "602": "\nSELECT p.Id, u.Id FROM postHistory AS p INNER JOIN badges AS b ON p.PostId = b.Id WHERE b.Score > 60;\n\t----- bird -----\tcodebase_community",
    "603": "\nSELECT SUM(CASE WHEN T2.UserId = 686 THEN T1.FavoriteCount ELSE 0 END) AS FavoriteCount FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate BETWEEN '2011-01-01' AND '2011-12-31';\n\t----- bird -----\tcodebase_community",
    "604": "\nSELECT AVG(UpVotes), AVG(Age) FROM users WHERE CreationDate >= (SELECT MIN(CreationDate) FROM posts WHERE PostTypeId = 1 AND CreatedAt > CURRENT_DATE - INTERVAL '10 year')\n\t----- bird -----\tcodebase_community",
    "605": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Announcer';\n\t----- bird -----\tcodebase_community",
    "606": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName LIKE '%7/19/%' AND T1.Date >= '2010-07-19 00:00:00'; \n\t----- bird -----\tcodebase_community",
    "607": "\nSELECT COUNT(CASE WHEN Score > 0 THEN 1 END) FROM comments;\n\t----- bird -----\tcodebase_community",
    "608": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Date LIKE '7/19/%' AND T2.RevisionGUID IS NOT NULL; \n\t----- bird -----\tcodebase_community",
    "609": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Score = 10;\n\t----- bird -----\tcodebase_community",
    "610": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id ORDER BY T2.Reputation DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "611": "\nSELECT u.Reputation FROM users u WHERE u.Reputation > ( SELECT MAX(u2.Reputation) FROM users u2 WHERE u2.Reputation = 0 AND u2.LastAccessDate >= '2010-07-19 00:00:00' )\n\t----- bird -----\tcodebase_community",
    "612": "\nSELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Pierre'\n\t----- bird -----\tcodebase_community",
    "613": "\nSELECT DISTINCT T2.CreationDate FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location LIKE '%Rochester, NY%'\n\t----- bird -----\tcodebase_community",
    "614": "\nSELECT CAST(SUM(CASE WHEN T2.UserId = U.Id THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(U.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher'\n\t----- bird -----\tcodebase_community",
    "615": "\nSELECT CAST(SUM(CASE WHEN T2.Age < 13 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer'\n\t----- bird -----\tcodebase_community",
    "616": "\nSELECT T2.Score FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate LIKE '7/19/%' AND T1.`CreationDate` > '2010-07-19 00:00:00';\n\t----- bird -----\tcodebase_community",
    "617": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate LIKE '7/19/%' AND T2.RevisionGUID IS NOT NULL; \n\t----- bird -----\tcodebase_community",
    "618": "\nSELECT u.Age FROM users AS u JOIN badges AS b ON u.Id = b.UserId WHERE u.Location = 'Vienna, Austria';\n\t----- bird -----\tcodebase_community",
    "619": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age > 18;\n\t----- bird -----\tcodebase_community",
    "620": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.CreationDate LIKE '2010-07-19 07:39:08%' AND T2.Name = 'Badge'; \n\t----- bird -----\tcodebase_community",
    "621": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id ORDER BY T2.Reputation DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "622": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Sharpie'\n\t----- bird -----\tcodebase_community",
    "623": "\nSELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Age > 65 AND T1.Name = 'Supporter';\n\t----- bird -----\tcodebase_community",
    "624": "\nSELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Id = 30;\n\t----- bird -----\tcodebase_community",
    "625": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName LIKE '%New York%' AND T1.Location LIKE 'New York'; \n\t----- bird -----\tcodebase_community",
    "626": "\nSELECT COUNT(Id) FROM votes WHERE CreationDate LIKE '%2010%' AND VoteTypeId = 1;\n\t----- bird -----\tcodebase_community",
    "627": "\nSELECT COUNT(Id) FROM users WHERE Age > 18;\n\t----- bird -----\tcodebase_community",
    "628": "\nSELECT Id, Views FROM users ORDER BY Views DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "629": "\nSELECT CAST(SUM(CASE WHEN CreationDate BETWEEN '2010-01-01' AND '2011-12-31' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN CreationDate BETWEEN '2010-01-01' AND '2011-12-31' THEN 1 ELSE 0 END) FROM votes;\n\t----- bird -----\tcodebase_community",
    "630": "\nSELECT T2.TagName FROM users AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T1.DisplayName = 'John Stauffer'\n\t----- bird -----\tcodebase_community",
    "631": "\nINSERT INTO posts (Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) \nVALUES (1, 1, NULL, '2022-01-01', 10, 1000, 'This is a sample post.', 1, '2022-01-01 12:00:00', 'Sample Post Title', 'sample-tag', 20, 50, 5, 1, '2022-01-01 11:00:00', 1, '2022-01-01 10:00:00');\n\t----- bird -----\tcodebase_community",
    "632": "\nSELECT COUNT(Id) FROM votes WHERE UserId = 1;\n\t----- bird -----\tcodebase_community",
    "633": "\nSELECT T1.Id FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.RelatedPostId IN ( SELECT PostId FROM badges WHERE UserId = 'slashnick' ) GROUP BY T1.Id ORDER BY COUNT(T1.Id) DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "634": "\nSELECT T1.PostId, T2.Name FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = 123 AND T1.Title LIKE '%Motulsky%' OR T1.Title LIKE '%Snyder%' ORDER BY T2.RevisionGUID DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "635": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1 AND T1.Score > 4;\n\t----- bird -----\tcodebase_community",
    "636": "\nSELECT COUNT(CASE WHEN T2.Score < 0 THEN 1 END) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = 123; \n\t----- bird -----\tcodebase_community",
    "637": "\nSELECT DISTINCT T2.TagName FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T1.OwnerUserId = 123 AND T1.PostTypeId = 1 AND T1.CreationDate > NOW() - INTERVAL '3 day'\n\t----- bird -----\tcodebase_community",
    "638": "\nSELECT DISTINCT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer Badges';\n\t----- bird -----\tcodebase_community",
    "639": "\nSELECT CAST(COUNT(CASE WHEN T2.Name = 'R' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId WHERE T1.PostTypeId = 1 AND T1.OwnerUserId IN (SELECT Id FROM users WHERE Reputation > 0)\n\t----- bird -----\tcodebase_community",
    "640": "\nSELECT SUM(CASE WHEN T2.PostTypeId = 1 THEN T3.ViewCount ELSE 0 END) - \n       SUM(CASE WHEN T4.PostTypeId = 1 THEN T5.ViewCount ELSE 0 END) AS ViewCountDiff FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id INNER JOIN tags AS T4 ON T2.ExcerptPostId = T4.Id INNER JOIN posts AS T5 ON T4.PostId = T5.Id WHERE T1.OwnerUserId = 1 AND T5.OwnerUserId = 1; \n\t----- bird -----\tcodebase_community",
    "641": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE STRFTIME('%Y', T1.Date) = '2014' AND T1.Name LIKE '%commentator%'\n\t----- bird -----\tcodebase_community",
    "642": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.CreationDate LIKE '2010-07-21%' AND T1.CreaionDate > '2010-01-01';\n\t----- bird -----\tcodebase_community",
    "643": "\nSELECT DISTINCT T1.DisplayName, T2.Age FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.ViewCount DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "644": "\nSELECT T2.LastEditDate, T1.UserId FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE 'Detecting a given face in a database of facial images' AND T2.RevisionGUID IS NOT NULL\n\t----- bird -----\tcodebase_community",
    "645": "\nSELECT COUNT(T2.Comment) FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.Id = 13 AND T2.Score < 0;\n\t----- bird -----\tcodebase_community",
    "646": "\nSELECT T1.Title, U.DisplayName FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.RevisionGUID IS NOT NULL AND T2.Comment IS NOT NULL GROUP BY T1.Title, U.DisplayName HAVING COUNT(T2.Comment) > 0; \n\t----- bird -----\tcodebase_community",
    "647": "\nSELECT T2.Name FROM posts AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.PostId WHERE T1.`CreationDate` LIKE '2011-01%' AND T1.Location LIKE '%North Pole%'; \n\t----- bird -----\tcodebase_community",
    "648": "\nSELECT DISTINCT T2.DisplayName, T1.WebsiteUrl \nFROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount > 150;\n\t----- bird -----\tcodebase_community",
    "649": "\nSELECT \n    p.Title, \n    COUNT(pH.Id) AS postHistoryCount, \n    MAX(pH.CreationDate) AS lastEditDate FROM posts p JOIN postHistory pH ON p.Id = pH.PostId WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY p.Title;\n\t----- bird -----\tcodebase_community",
    "650": "\nSELECT T1.DisplayName, T2.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'outliers' AND T1.LastAccessDate IS NOT NULL ORDER BY T1.LastAccessDate DESC LIMIT 1;\n\t----- bird -----\tcodebase_community",
    "651": "\nSELECT T2.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%How to tell if something happened in a data set which monitors a value over time%' OR T1.Title LIKE 'Monitoring data sets'\n\t----- bird -----\tcodebase_community",
    "652": "\nSELECT p.Id, b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Samuel' AND EXTRACT(YEAR FROM CreationDate) = 2013; \n\t----- bird -----\tcodebase_community",
    "653": "\nSELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1;\n\t----- bird -----\tcodebase_community",
    "654": "\nSELECT u.DisplayName, u.Location FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id WHERE p.ExcerptPostId IN ( SELECT t.ExcerptPostId FROM tags t ) AND t.TagName = 'hypothesis-testing'\n\t----- bird -----\tcodebase_community",
    "655": "\nSELECT T2.Title, T1.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Id = 123;\n\t----- bird -----\tcodebase_community",
    "656": "\nSELECT T2.DisplayName FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Score = ( SELECT MAX(Score) FROM posts ) ORDER BY T1.Score DESC LIMIT 1;\n\t----- bird -----\tcodebase_community",
    "657": "\nSELECT T2.DisplayName, T1.WebsiteUrl \nFROM votes AS T1 \nJOIN users AS T2 ON T1.UserId = T2.Id \nWHERE T1.VoteTypeId = 8 AND T1.BountyAmount = ( SELECT MAX(BountyAmount) FROM votes )\n\t----- bird -----\tcodebase_community",
    "658": "\nSELECT T1.Title, COUNT(T2.Id) AS Popularity FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId ORDER BY T2.RevisionGUID DESC LIMIT 5;\n\t----- bird -----\tcodebase_community",
    "659": "\nSELECT COUNT(T1.Id) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T2.Score BETWEEN 5000 AND 7000;\n\t----- bird -----\tcodebase_community",
    "660": "\nSELECT T1.OwnerUserId FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Score = ( SELECT MAX(Score) FROM posts ) ORDER BY T1.Score DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "661": "\nSELECT u.Age FROM users AS u INNER JOIN posts AS p ON u.Id = p.OwnerUserId ORDER BY u.Age DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "662": "\nSELECT COUNT(T1.PostId) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE STRFTIME('%Y', T2.CreationDate) = '2011' AND T2.VoteTypeId = 50;\n\t----- bird -----\tcodebase_community",
    "663": "\nSELECT Id FROM users ORDER BY CreationDate ASC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "664": "\nSELECT T2.TagName, COUNT(T1.Id) AS Score FROM tags T1 INNER JOIN postLinks T2 ON T1.Id = T2.ExcerptPostId GROUP BY T2.TagName ORDER BY COUNT(T1.Id) DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "665": "\nSELECT AVG(CASE WHEN T2.RevisionGUID IS NULL THEN 0 ELSE T1.LasActivityDate - T2.LasActivityDate END) AS AverageLinksCreated FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Score > 0 AND T1.PostTypeId = 1 AND T1.AcceptedAnswerId IS NULL GROUP BY T1.Id, T1.Score\n\t----- bird -----\tcodebase_community",
    "666": "\nSELECT T1.Id FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 1465 ORDER BY T2.VoteAmount DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "667": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId ORDER BY T2.CreationDate ASC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "668": "\nSELECT DISTINCT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id ORDER BY SUM(T1.BountyAmount) DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "669": "\nSELECT T2.CreationDate FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.RelatedPostId = 'chl' AND T1.AcceptedAnswerId IS NULL;\n\t----- bird -----\tcodebase_community",
    "670": "\nSELECT MIN(CreationDate) FROM users WHERE Age = ( SELECT MIN(Age) FROM users );\n\t----- bird -----\tcodebase_community",
    "671": "\nSELECT DISTINCT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "672": "\nSELECT COUNT(T1.UserId) FROM users AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location LIKE '%United Kingdom%' AND T2.FavoriteCount >= 4;\n\t----- bird -----\tcodebase_community",
    "673": "\nSELECT AVG(CASE WHEN T2.LastEditorUserId = users.Id THEN T1.Votes ELSE 0 END) AS avg FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount > ( SELECT MAX(ViewCount) FROM posts ) AND T1.LasActivityDate < ( SELECT MIN(LasActivityDate) FROM posts ); \n\t----- bird -----\tcodebase_community",
    "674": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T2.Reputation DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "675": "\nSELECT u.Id, u.Reputation FROM users u WHERE u.Reputation > 2000 AND u_views > 1000;\n\t----- bird -----\tcodebase_community",
    "676": "\nSELECT DISTINCT T2.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Age > 18 \n\t----- bird -----\tcodebase_community",
    "677": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND T1.CreationDate LIKE '%2010%'\n\t----- bird -----\tcodebase_community",
    "678": "\nSELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.RevisionGUID LIKE '2019-01-01%' AND T1.ViewCount DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "679": "\nSELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.RevisionGUID IS NULL ORDER BY T1.Score DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "680": "\nSELECT AVG(Score) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'Stephen Turner' ); \n\t----- bird -----\tcodebase_community",
    "681": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount > 20000 AND T1.CreationDate BETWEEN '2011-01-01' AND '2011-12-31';\n\t----- bird -----\tcodebase_community",
    "682": "\nSELECT T1.Id, T2.DisplayName \nFROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate BETWEEN '2010-01-01' AND '2010-12-31' ORDER BY T1.Score DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "683": "\nSELECT CAST(COUNT(CASE WHEN Reputation > 1000 THEN OwnerUserId END) AS REAL) * 100 / COUNT(OwnerUserId) FROM posts WHERE CreationDate LIKE '2011%'\n\t----- bird -----\tcodebase_community",
    "684": "\nSELECT CAST(SUM(CASE WHEN T2.Age < 13 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Reputation > 500 AND T2.ViewCount > 10000\n\t----- bird -----\tcodebase_community",
    "685": "\nSELECT u.DisplayName, COUNT(v.Id) AS Views FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Computer Game Datasets' AND p.ViewCount > ( SELECT MAX(ViewCount) FROM posts ) GROUP BY u.DisplayName ORDER BY Views DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "686": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount / (SELECT COUNT(*) FROM posts) > 0 AND T2.RevisionGUID IS NULL; \n\t----- bird -----\tcodebase_community",
    "687": "\nSELECT T2.Score FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Score = ( SELECT MAX(Score) FROM posts ) ORDER BY Score DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "688": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount < 35000 AND T2.RevisionGUID IS NULL; \n\t----- bird -----\tcodebase_community",
    "689": "\nSELECT u.DisplayName, u.Location FROM users AS u INNER JOIN posts AS p ON u.Id = p.OwnerUserId WHERE p.Id = 183 ORDER BY u.LastEditDate DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "690": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY Date DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "691": "\nSELECT COUNT(T1.UserId) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.UpVotes > 5000 AND T1.Reputation >= 100; \n\t----- bird -----\tcodebase_community",
    "692": "\nSELECT T1.Date - T2.CreationDate AS TimeTaken FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon'\n\t----- bird -----\tcodebase_community",
    "693": "\nSELECT COUNT(T1.Id) AS PostCount, COUNT(CASE WHEN T2.CreationDate = ( SELECT MAX(CreationDate) FROM users WHERE Id = T1.UserId ) THEN 1 END) AS CommentCount FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = ( SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1 )\n\t----- bird -----\tcodebase_community",
    "694": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE 'Analysing wind data with R' AND T2.RelatedPostId IN ( SELECT PostId FROM comments WHERE UserId = 12345 )\n\t----- bird -----\tcodebase_community",
    "695": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Citizen Patrol'\n\t----- bird -----\tcodebase_community",
    "696": "\nSELECT COUNT(T1.Id) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'careers'\n\t----- bird -----\tcodebase_community",
    "697": "\nSELECT u.Reputation, u.ViewCount FROM users u WHERE u.DisplayName = 'Jarrod Dixon';\n\t----- bird -----\tcodebase_community",
    "698": "\nSELECT COUNT(T2.CommentId) AS Comments, COUNT(T1.Id) AS Answers FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE 'Clustering 1D data' AND T2.RevisionGUID IS NOT NULL;\n\t----- bird -----\tcodebase_community",
    "699": "\nINSERT INTO users (Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) \nVALUES (1, 1000, '2022-01-01', 'IrishStat', '2022-01-01', 'https://example.com', 'Ireland', 'About me: IrishStat is a user who loves statistics.', 10000, 500, 200, 150, 1, '2022-01-01');\n\t----- bird -----\tcodebase_community",
    "700": "\nSELECT COUNT(T1.PostId) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.VoteTypeId = 3 AND T1.Score > 30; \n\t----- bird -----\tcodebase_community",
    "701": "\nSELECT p.Id, p.Score, COUNT(b.Id) AS numPosts FROM badges b JOIN postHistory ph ON b.Id = ph.PostId WHERE b.UserId = ( SELECT UserId FROM users ORDER BY Reputation DESC LIMIT 1 ) GROUP BY p.Id HAVING SUM(p.Score) > 50 * 100 / COUNT(b.Id) \n\t----- bird -----\tcodebase_community",
    "702": "\nSELECT COUNT(*) FROM posts WHERE Score < 20;\n\t----- bird -----\tcodebase_community",
    "703": "\nSELECT COUNT(*) FROM tags WHERE Id < 15 AND Count = 20;\n\t----- bird -----\tcodebase_community",
    "704": "\nSELECT T2.ExcerptPostId, T1.WikiPostId FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'sample'\n\t----- bird -----\tcodebase_community",
    "705": "\nSELECT u.Reputation, v.UpVotes FROM users u INNER JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN ( SELECT PostId FROM comments WHERE Text LIKE '%fine, you win :)%' )\n\t----- bird -----\tcodebase_community",
    "706": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%linear% regression%' AND T2.LinkTypeId = 1; \n\t----- bird -----\tcodebase_community",
    "707": "\nSELECT T2.Comment, MAX(T1.Score) AS MaxScore FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.RevisionGUID IS NOT NULL AND T1.ViewCount BETWEEN 100 AND 150 GROUP BY T2.Comment ORDER BY MaxScore DESC \n\t----- bird -----\tcodebase_community",
    "708": "\nSELECT T1.CreationDate, T2.Age \nFROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.PostId IN ( SELECT PostId FROM comments WHERE Text LIKE '%website%' )\n\t----- bird -----\tcodebase_community",
    "709": "\nSELECT COUNT(T2.PostId) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.RevisionGUID IS NULL AND T1.ViewCount < 5;\n\t----- bird -----\tcodebase_community",
    "710": "\nSELECT COUNT(T2.CommentId) FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.RevisionGUID IS NULL AND T2.Score = 0; \n\t----- bird -----\tcodebase_community",
    "711": "\nSELECT COUNT(T1.UserId) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.RevisionGUID IS NULL AND T1.Age = 40 AND T2.Score = 0;\n\t----- bird -----\tcodebase_community",
    "712": "\nSELECT T1.PostId, T2.CommentText FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%Group differences on a five point Likert item%' AND T2.RelatedPostId IS NULL;\n\t----- bird -----\tcodebase_community",
    "713": "\nSELECT T2.UpVotes FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.PostId IN ( SELECT PostId FROM comments WHERE Text = 'R is also lazy evaluated.' )\n\t----- bird -----\tcodebase_community",
    "714": "\nSELECT T2.Text FROM users AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Harvey Motulsky'\n\t----- bird -----\tcodebase_community",
    "715": "\nSELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score BETWEEN 1 AND 5 GROUP BY T2.DisplayName HAVING COUNT(T2.UserId) = 0;\n\t----- bird -----\tcodebase_community",
    "716": "\nSELECT CAST(COUNT(CASE WHEN T2.UpVotes = 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.UpVotes) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.Score BETWEEN 5 AND 10\n\t----- bird -----\tcodebase_community",
    "717": "\nINSERT INTO superpower (id, power_name) VALUES (1, 'Flight');\n\t----- bird -----\tsuperhero",
    "718": "\nSELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_name = 'Super Strength'\n\t----- bird -----\tsuperhero",
    "719": "\nSELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_name = 'Super Strength' AND T1.height_cm > 200; \n\t----- bird -----\tsuperhero",
    "720": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('Batman', 'Bruce Wayne', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80),\n('Wonder Woman', 'Diana Prince', 1, 2, 3, 4, 5, 6, 7, 8, 160, 60),\n('Spider-Man', 'Peter Parker', 1, 2, 3, 4, 5, 6, 7, 8, 170, 70),\n('Iron Man', 'Tony Stark', 1, 2, 3, 4, 5, 6, 7, 8, 190, 90),\n('Captain America', 'Steve Rogers', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80),\n('Thor', 'Odin', 1, 2, 3, 4, 5, 6, 7, 8, 200, 100),\n('Black Widow', 'Natasha Romanoff', 1, 2, 3, 4, 5, 6, 7, 8, 160, 60),\n('Hulk', 'Bruce Banner', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80);\n\n\t----- bird -----\tsuperhero",
    "721": "\nSELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T2.attribute_value = 3 AND T1.eye_colour_id = 1 \n\t----- bird -----\tsuperhero",
    "722": "\nINSERT INTO colour (id, colour) VALUES (1, 'red');\n\t----- bird -----\tsuperhero",
    "723": "\nSELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.power_id = 1 AND T2.eye_colour_id = 1; \n\t----- bird -----\tsuperhero",
    "724": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('Batman', 'Bruce Wayne', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80),\n('Superman', 'Kal-El', 1, 2, 3, 4, 5, 6, 7, 8, 190, 90);\n\t----- bird -----\tsuperhero",
    "725": "\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Marvel Comics');\n\t----- bird -----\tsuperhero",
    "726": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('Doctor Strange', 'Stephen Strange', 1, 2, 3, 4, 5, 6, 7, 8, 185, 82),\n('Thor', 'Odin's son', 2, 1, 2, 1, 5, 6, 7, 9, 201, 90)\n\t----- bird -----\tsuperhero",
    "727": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'Sauron')\n\t----- bird -----\tsuperhero",
    "728": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Iron Man', 'Tony Stark', 1, 2, 3, 4, 5, 6, 7, 8, 190, 80), \n       ('Captain America', 'Steve Rogers', 1, 2, 3, 4, 5, 6, 7, 8, 180, 70);\n\t----- bird -----\tsuperhero",
    "729": "\nSELECT AVG(height_cm) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ); \n\t----- bird -----\tsuperhero",
    "730": "\nSELECT CAST(SUM(CASE WHEN T2.power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id\n\t----- bird -----\tsuperhero",
    "731": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'DC Comics');\n\t----- bird -----\tsuperhero",
    "732": "\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'DC Comics'), (2, 'Marvel Comics');\n\t----- bird -----\tsuperhero",
    "733": "\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Marvel Comics');\n\t----- bird -----\tsuperhero",
    "734": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'DC Comics');\n\t----- bird -----\tsuperhero",
    "735": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Blonde', 'Bella', 1, 2, 3, 4, 5, 6, 7, 8, 9);\n\t----- bird -----\tsuperhero",
    "736": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Dumbest', 'Superman', 1, 2, 3, 4, 5, 6, 7, 8, 9);\n\t----- bird -----\tsuperhero",
    "737": "\nINSERT INTO colour (id, colour) VALUES (1, 'Blue');\n\t----- bird -----\tsuperhero",
    "738": "\nSELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T2.attribute_value < 50; \n\t----- bird -----\tsuperhero",
    "739": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Death Touch', 'Diana Prince', 1, 2, 3, 4, 5, 6, 7, 8, 180, 70);\n\t----- bird -----\tsuperhero",
    "740": "\nSELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T1.gender = 'Female' AND T2.attribute_value = 100; \n\t----- bird -----\tsuperhero",
    "741": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY COUNT(T2.power_id) DESC LIMIT 1 \n\t----- bird -----\tsuperhero",
    "742": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Vampire', 'Count Dracula', 1, 2, 3, 4, 5, 6, 7, 8, 170, 70);\n\t----- bird -----\tsuperhero",
    "743": "\nSELECT CAST(SUM(CASE WHEN T2.gender_id = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = 'self-interest' OR T2.attribute_value = 'moral code' AND T1.publisher_id IN (SELECT id FROM publisher WHERE name = 'Marvel Comics')\n\t----- bird -----\tsuperhero",
    "744": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'DC Comics');\nINSERT INTO publisher (id, publisher_name) VALUES (2, 'Marvel Comics');\n\nSELECT COUNT(id) AS difference FROM superhero WHERE publisher_id = 1 UNION SELECT COUNT(id) AS difference FROM superhero WHERE publisher_id = 2;\n\t----- bird -----\tsuperhero",
    "745": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'Star Trek');\n\t----- bird -----\tsuperhero",
    "746": "\nSELECT AVG(attribute_value) FROM hero_attribute\n\t----- bird -----\tsuperhero",
    "747": "\nSELECT COUNT(id) FROM superhero WHERE full_name IS NULL;\n\t----- bird -----\tsuperhero",
    "748": "\nINSERT INTO colour (id, colour) VALUES (1, 'blue');\n\t----- bird -----\tsuperhero",
    "749": "\nINSERT INTO superpower (id, power_name) VALUES (1, 'Telepathy');\n\t----- bird -----\tsuperhero",
    "750": "\nSELECT AVG(weight_kg) FROM superhero WHERE gender_id = ( SELECT id FROM gender WHERE gender = 'female' ) \n\t----- bird -----\tsuperhero",
    "751": "\nINSERT INTO superpower (id, power_name) VALUES \n(1, 'Flight'),\n(2, 'Super Strength'),\n(3, 'Teleportation'),\n(4, 'Invisibility'),\n(5, 'Time Travel');\n\t----- bird -----\tsuperhero",
    "752": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Alien', 'Zorvath', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\t----- bird -----\tsuperhero",
    "753": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nSELECT T1.superhero_name, T2.full_name, T3.gender_id, T4.eye_colour_id, T5.hair_colour_id, T6.skin_colour_id, T7.race_id, T8.publisher_id, T9.alignment_id, T10.height_cm, T11.weight_kg\nFROM alignment AS T1\nJOIN superhero AS T2 ON T1.id = T2.alignment_id\nJOIN attribute AS T3 ON T1.attribute_name = T3.attribute_name\nJOIN colour AS T4 ON T1.colour = T4.colour\nJOIN gender AS T5 ON T1.gender = T5.gender\nJOIN publisher AS T6 ON T1.publisher = T6.publisher\nJOIN race AS T7 ON T1.race = T7.race\nJOIN superpower AS T8 ON T1.power_name = T8.power_name\nJOIN hero_attribute AS T9 ON T2.id = T9.hero_id\nJOIN superpower AS T10 ON T8.id = T10.power_id\nWHERE T1.height_cm BETWEEN 170 AND 190\n\t----- bird -----\tsuperhero",
    "754": "\nINSERT INTO superpower (id, power_name) VALUES (56, 'Flight')\n\t----- bird -----\tsuperhero",
    "755": "\nSELECT full_name FROM superhero WHERE gender_id = 1 AND eye_colour_id IN (2,3) AND hair_colour_id IN (4,5) AND skin_colour_id IN (6,7); \n\t----- bird -----\tsuperhero",
    "756": "\nSELECT COUNT(*) FROM superhero WHERE power_name = 'Bad'\n\t----- bird -----\tsuperhero",
    "757": "\nINSERT INTO race (id, race) \nVALUES (1, 'Human');\n\t----- bird -----\tsuperhero",
    "758": "\nINSERT INTO colour (id, colour) VALUES (1, 'Human Hair Colour');\n\t----- bird -----\tsuperhero",
    "759": "\nINSERT INTO colour (id, colour) VALUES (1, 'Blue'); \nINSERT INTO colour (id, colour) VALUES (2, 'Red'); \nINSERT INTO colour (id, colour) VALUES (3, 'Green'); \nINSERT INTO colour (id, colour) VALUES (4, 'Yellow'); \nINSERT INTO colour (id, colour) VALUES (5, 'Purple'); \nINSERT INTO colour (id, colour) VALUES (6, 'Orange'); \nINSERT INTO colour (id, colour) VALUES (7, 'Pink'); \nINSERT INTO colour (id, colour) VALUES (8, 'Brown'); \nINSERT INTO colour (id, colour) VALUES (9, 'Grey'); \nINSERT INTO colour (id, colour) VALUES (10, 'Black');\n\t----- bird -----\tsuperhero",
    "760": "\nSELECT CAST(SUM(CASE WHEN T2.height_cm BETWEEN 150 AND 180 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T1.publisher_id IN (SELECT id FROM publisher WHERE name = 'Marvel Comics')\n\t----- bird -----\tsuperhero",
    "761": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nSELECT T1.full_name, T2.full_name AS hero_full_name\nFROM superhero AS T1\nJOIN hero_attribute AS T2 ON T1.id = T2.superhero_id\nWHERE T1.gender_id = 1 AND T1.weight_kg > ( SELECT AVG(weight_kg) * 0.79 FROM superhero )\n\t----- bird -----\tsuperhero",
    "762": "\nINSERT INTO superpower (id, power_name) VALUES \n(1, 'Flight'), \n(2, 'Super Strength'), \n(3, 'Telekinesis'), \n(4, 'Invisibility'), \n(5, 'Healing Factor');\n\t----- bird -----\tsuperhero",
    "763": "\nINSERT INTO attribute (id, attribute_name) VALUES (1, 'Superhuman Strength');\n\t----- bird -----\tsuperhero",
    "764": "\nINSERT INTO superpower (id, power_name) VALUES (1, 'Flight');\n\t----- bird -----\tsuperhero",
    "765": "\nSELECT COUNT(T1.id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'\n\t----- bird -----\tsuperhero",
    "766": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES ('Batman', 'Bruce Wayne', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80), \n       ('Wonder Woman', 'Diana Prince', 1, 2, 3, 4, 5, 6, 7, 8, 160, 60);\n\t----- bird -----\tsuperhero",
    "767": "\nSELECT AVG(T1.power_name) FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T1.skin_colour_id IS NULL; \n\t----- bird -----\tsuperhero",
    "768": "\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Dark Horse Comics');\n\t----- bird -----\tsuperhero",
    "769": "\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Dark Horse Comics');\n\t----- bird -----\tsuperhero",
    "770": "\nINSERT INTO colour (id, colour) VALUES (1, 'blue');\n\t----- bird -----\tsuperhero",
    "771": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Superman', 'Kal-El', 1, 2, 3, 4, 5, 6, 7, 8, 200, 80), \n       ('Iron Man', 'Tony Stark', 2, 1, 2, 3, 4, 6, 7, 9, 210, 90);\n\t----- bird -----\tsuperhero",
    "772": "\nINSERT INTO colour (id, colour) \nVALUES (1, 'Blue'), (2, 'Green'), (3, 'Red');\nINSERT INTO gender (id, gender) \nVALUES (1, 'Female');\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Dark Horse Comics');\nINSERT INTO race (id, race) \nVALUES (1, 'Human');\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES (1, 'Black Widow', 'Natasha Romanoff', 1, 2, 3, 1, 1, 1, 1, 180, 55);\nINSERT INTO gender (id, gender) \nVALUES (1, 'Female');\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Dark Horse Comics');\nINSERT INTO race (id, race) \nVALUES (1, 'Human');\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES (2, 'Black Widow', 'Natasha Romanoff', 1, 3, 1, 2, 1, 1, 1, 180, 55);\nINSERT INTO gender (id, gender) \nVALUES (1, 'Female');\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Dark Horse Comics');\nINSERT INTO race (id, race) \nVALUES (1, 'Human');\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES (3, 'Black Widow', 'Natasha Romanoff', 1, 2, 3, 1, 1, 1, 1, 180, 55);\nINSERT INTO gender (id, gender) \nVALUES (1, 'Female');\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Dark Horse Comics');\nINSERT INTO race (id, race) \nVALUES (1, 'Human');\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES (4, 'Black Widow', 'Natasha Romanoff', 1, 3, 2, 1, 1, 1, 1, 180, 55);\nINSERT INTO gender (id, gender) \nVALUES (1, 'Female');\nINSERT INTO publisher (id, publisher_name) \nVALUES (1, 'Dark Horse Comics');\nINSERT INTO race (id, race) \nVALUES (1, 'Human');\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES (5, 'Black Widow', 'Natasha Romanoff', 1, 2, 3, 1, 1, 1, 1, 180, 55);\n\n\t----- bird -----\tsuperhero",
    "773": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('Iron Man', 'Tony Stark', 1, 2, 3, 4, 5, 6, 7, 8, 190, 80),\n('Captain America', 'Steve Rogers', 2, 1, 2, 3, 5, 6, 7, 8, 180, 75);\n\t----- bird -----\tsuperhero",
    "774": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('A-Bomb', 'Superman', 1, 2, 3, 4, 5, 6, 7, 8, 2000, 80);\n\t----- bird -----\tsuperhero",
    "775": "\nSELECT CAST(SUM(CASE WHEN T2.gender = 'Female' AND T1.attribute_name = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN attribute AS T2 ON T1.id = T2.id WHERE T1.gender_id = ( SELECT gender_id FROM gender WHERE gender = 'Female' ) AND T2.attribute_name = 'Blue';\n\t----- bird -----\tsuperhero",
    "776": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Charles Chandler', 'Charles Chandler', 1, 2, 3, 4, 5, 6, 7, 8, 180, 70);\n\t----- bird -----\tsuperhero",
    "777": "\nINSERT INTO gender (gender) VALUES ('Male');\n\t----- bird -----\tsuperhero",
    "778": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Superman', 'Clark Kent', 1, 2, 3, 4, 5, 6, 7, 8, 200, 80), \n       ('Wonder Woman', 'Diana Prince', 1, 2, 3, 4, 5, 6, 7, 8, 180, 65);\n\t----- bird -----\tsuperhero",
    "779": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Amazo', 'Amaro', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80);\n\t----- bird -----\tsuperhero",
    "780": "\nINSERT INTO superpower (id, power_name) VALUES (1, 'Superhuman Strength');\n\t----- bird -----\tsuperhero",
    "781": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Amber', 'Aurora Star', 1, 2, 3, 4, 5, 6, 7, 8, 180, 70);\n\t----- bird -----\tsuperhero",
    "782": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('Black Widow', 'Natasha Romanoff', 1, 2, 3, 4, 5, 6, 7, 8, 170, 55),\n('Batgirl', 'Barbara Gordon', 2, 1, 2, 3, 5, 6, 7, 8, 160, 50);\n\t----- bird -----\tsuperhero",
    "783": "\nINSERT INTO colour (id, colour) \nVALUES (1, 'gold'), (2, 'blue');\n\t----- bird -----\tsuperhero",
    "784": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('Countess Dracula', 'Dracula', 1, 2, 3, 4, 5, 6, 7, 8, 170, 70),\n('Vlad the Impaler', 'Vlad', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80);\n\t----- bird -----\tsuperhero",
    "785": "\nSELECT T1.alignment FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id WHERE T1.alignment = 'Neutral' AND T2.gender_id IS NULL; \n\t----- bird -----\tsuperhero",
    "786": "\nSELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_id = ( SELECT id FROM attribute WHERE attribute_name = 'strength' ) AND T2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute );\n\t----- bird -----\tsuperhero",
    "787": "\nINSERT INTO race (id, race) VALUES (1, 'Human');\nINSERT INTO alignment (id, alignment) VALUES (1, 'Neutral');\n\t----- bird -----\tsuperhero",
    "788": "\nSELECT CAST(SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.publisher_name = 'Marvel Comics';\n\t----- bird -----\tsuperhero",
    "789": "\nSELECT AVG(weight_kg) FROM superhero WHERE race_id = 1 AND gender_id IN ( SELECT id FROM gender WHERE attribute_name = 'Alien' ) AND alignment_id IN ( SELECT id FROM alignment WHERE attribute_name = 'Superhuman Strength' ); \n\t----- bird -----\tsuperhero",
    "790": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Emil Blonsky', 'Emil Blonsky', 1, 2, 3, 4, 5, 6, 7, 8, 180, 90);\n\t----- bird -----\tsuperhero",
    "791": "\nSELECT AVG(height_cm) AS average_height FROM superhero;\n\t----- bird -----\tsuperhero",
    "792": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Abomination', 'Abomination', 1, 2, 3, 4, 5, 6, 7, 8, 200, 150);\n\t----- bird -----\tsuperhero",
    "793": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('God', 'Eternal', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n('God', 'Eternal', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\t----- bird -----\tsuperhero",
    "794": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Batman', 'Bruce Wayne', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80), \n       ('Wonder Woman', 'Diana Prince', 1, 2, 3, 4, 5, 6, 7, 8, 160, 60);\n\t----- bird -----\tsuperhero",
    "795": "\nSELECT COUNT(T1.id) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id WHERE T1.alignment = 'Neutral'\n\t----- bird -----\tsuperhero",
    "796": "\nINSERT INTO attribute (id, attribute_name) VALUES \n(1, 'Superhuman Strength'),\n(2, 'Flight'),\n(3, 'Teleportation');\n\nINSERT INTO colour (id, colour) VALUES \n(1, 'Blue'),\n(2, 'Red'),\n(3, 'Green');\n\nINSERT INTO gender (id, gender) VALUES \n(1, 'Male'),\n(2, 'Female');\n\nINSERT INTO publisher (id, publisher_name) VALUES \n(1, 'DC Comics'),\n(2, 'Marvel Comics');\n\nINSERT INTO race (id, race) VALUES \n(1, 'Human'),\n(2, 'Superhero');\n\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) VALUES \n(1, '3-D Man', 'John Smith', 1, 2, 1, 3, 1, 1, 1, 180, 80);\n\nINSERT INTO attribute (id, attribute_name) VALUES \n(4, 'Superhuman Speed');\n\nINSERT INTO colour (id, colour) VALUES \n(4, 'Silver');\n\nINSERT INTO gender (id, gender) VALUES \n(3, 'Male');\n\nINSERT INTO publisher (id, publisher_name) VALUES \n(3, 'DC Comics');\n\nINSERT INTO race (id, race) VALUES \n(2, 'Superhero');\n\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) VALUES \n(2, '3-D Man', 'John Smith', 1, 2, 1, 3, 1, 1, 1, 180, 80);\n\nINSERT INTO attribute (id, attribute_name) VALUES \n(5, 'Superhuman Agility');\n\nINSERT INTO colour (id, colour) VALUES \n(5, 'Gold');\n\nINSERT INTO gender (id, gender) VALUES \n(2, 'Female');\n\nINSERT INTO publisher (id, publisher_name) VALUES \n(4, 'Marvel Comics');\n\nINSERT INTO race (id, race) VALUES \n(1, 'Human');\n\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) VALUES \n(3, '3-D Man', 'John Smith', 1, 2, 1, 3, 1, 1, 1, 180, 80);\n\t----- bird -----\tsuperhero",
    "797": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Blue Eyes', 'Bart Simpson', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\t----- bird -----\tsuperhero",
    "798": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'DC Comics'), (2, 'Warner Bros. Entertainment'), (3, 'Marvel Comics');\n\t----- bird -----\tsuperhero",
    "799": "\nSELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\n\t----- bird -----\tsuperhero",
    "800": "\nSELECT CAST(SUM(CASE WHEN T2.eye_colour_id = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id\n\t----- bird -----\tsuperhero",
    "801": "\nSELECT COUNT(T1.superhero_name) AS male_count, COUNT(T2.superhero_name) AS female_count FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.gender_id IN (1, 3) GROUP BY T1.superhero_name;\n\t----- bird -----\tsuperhero",
    "802": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T2.attribute_value = ( SELECT MAX(T2.attribute_value) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id )\n\t----- bird -----\tsuperhero",
    "803": "\nINSERT INTO superpower (id, power_name) VALUES (1, 'Cryokinesis');\n\t----- bird -----\tsuperhero",
    "804": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id = 294; \n\t----- bird -----\tsuperhero",
    "805": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Superman', 'Clark Kent', 1, 2, 3, 4, 5, 6, 7, 8, 200, NULL);\n\t----- bird -----\tsuperhero",
    "806": "\nINSERT INTO colour (id, colour) VALUES (1, 'Blue');\n\t----- bird -----\tsuperhero",
    "807": "\nINSERT INTO superpower (id, power_name) VALUES (1, 'Flight');\n\t----- bird -----\tsuperhero",
    "808": "\nINSERT INTO race (id, race) \nVALUES (1, 'Human');\n\t----- bird -----\tsuperhero",
    "809": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'Marvel Comics');\n\t----- bird -----\tsuperhero",
    "810": "\nINSERT INTO race (id, race) SELECT 1 FROM race;\n\t----- bird -----\tsuperhero",
    "811": "\nINSERT INTO alignment (id, alignment) VALUES (1, 'Neutral');\nINSERT INTO superpower (id, power_name) VALUES (1, 'Atomic Energy');\n\t----- bird -----\tsuperhero",
    "812": "\nSELECT full_name FROM superhero WHERE eye_colour_id = 1 AND gender_id IN (2,3) AND height_cm > 180 AND weight_kg < 80; \n\n\t----- bird -----\tsuperhero",
    "813": "\nSELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.gender_id = 3 AND T2.eye_colour_id IS NOT NULL AND T2.hair_colour_id IS NOT NULL AND T2.skin_colour_id IS NOT NULL\n\t----- bird -----\tsuperhero",
    "814": "\nINSERT INTO colour (id, colour) VALUES (1, 'Blue'); \nINSERT INTO colour (id, colour) VALUES (2, 'Red'); \nINSERT INTO colour (id, colour) VALUES (3, 'Green'); \nINSERT INTO colour (id, colour) VALUES (4, 'Yellow'); \nINSERT INTO colour (id, colour) VALUES (5, 'Black'); \nINSERT INTO colour (id, colour) VALUES (6, 'White'); \nINSERT INTO colour (id, colour) VALUES (7, 'Brown'); \nINSERT INTO colour (id, colour) VALUES (8, 'Grey'); \nINSERT INTO colour (id, colour) VALUES (9, 'Pink'); \nINSERT INTO colour (id, colour) VALUES (10, 'Orange');\n\t----- bird -----\tsuperhero",
    "815": "\nSELECT COUNT(T1.superhero_name) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T1.gender = 'Female' AND T2.attribute_value > 0;\n\t----- bird -----\tsuperhero",
    "816": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T2.attribute_value BETWEEN 75 AND 80; \n\t----- bird -----\tsuperhero",
    "817": "\nINSERT INTO race (id, race) VALUES (1, 'Human'); \n\n\t----- bird -----\tsuperhero",
    "818": "\nSELECT CAST(SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.gender != 'Bad'\n\t----- bird -----\tsuperhero",
    "819": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Superman', 'Clark Kent', 1, NULL, NULL, NULL, 1, 1, 1, 180, 80), \n       ('Wonder Woman', 'Diana Prince', 2, 1, 1, 1, 1, 1, 1, 160, 55), \n       ('Batman', 'Bruce Wayne', 3, NULL, NULL, NULL, 1, 1, 1, 180, 80);\n\t----- bird -----\tsuperhero",
    "820": "\nINSERT INTO superhero (id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES (1, 'Hulk', 'Bruce Banner', 2, 3, 4, 5, 6, 7, 8, 9, 200, 100);\n\t----- bird -----\tsuperhero",
    "821": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Ajax', 'Alexei Alexandrovich', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80);\n\t----- bird -----\tsuperhero",
    "822": "\nINSERT INTO colour (id, colour) \nVALUES (1, 'green');\n\t----- bird -----\tsuperhero",
    "823": "\nINSERT INTO superhero (gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES (1, 2, 3, 4, 5, 6, 7, 180, 70);\n\t----- bird -----\tsuperhero",
    "824": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('Aerius', 'Aerius Blackwood', 1, 2, 3, 4, 5, 6, 7, 8, 180, 70),\n('Breeze', 'Luna Nightshade', 2, 1, 2, 3, 4, 5, 6, 7, 160, 60),\n('Cyclone', 'Kai Stormbringer', 3, 2, 3, 4, 5, 6, 7, 8, 190, 75),\n('Dust', 'Vesper Windsong', 1, 3, 4, 5, 6, 7, 8, 9, 170, 65),\n('Gale', 'Aster Luminari', 2, 1, 2, 3, 4, 5, 6, 7, 160, 60),\n('Storm', 'Riven Windshear', 3, 2, 3, 4, 5, 6, 7, 8, 180, 70),\n('Tornado', 'Lysander Stormsurge', 1, 3, 4, 5, 6, 7, 8, 9, 170, 65),\n('Wind', 'Eira Shadowglow', 2, 1, 2, 3, 4, 5, 6, 7, 160, 60),\n('Zephyr', 'Caelum Windsong', 3, 2, 3, 4, 5, 6, 7, 8, 190, 75);\n\t----- bird -----\tsuperhero",
    "825": "\nINSERT INTO gender (gender) VALUES ('Male'); \nINSERT INTO gender (gender) VALUES ('Female'); \nINSERT INTO gender (gender) VALUES ('Non-binary'); \n\n\t----- bird -----\tsuperhero",
    "826": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'DC Comics');\n\t----- bird -----\tsuperhero",
    "827": "\nSELECT AVG(height_cm) FROM superhero WHERE race_id IN ( SELECT id FROM race WHERE name = 'non-human' ) AND publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics' ); \n\t----- bird -----\tsuperhero",
    "828": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id IN ( SELECT power_id FROM superpower ORDER BY weight_kg ASC LIMIT 1 ) GROUP BY T1.superhero_name;\n\t----- bird -----\tsuperhero",
    "829": "\nINSERT INTO publisher (id, publisher_name) VALUES (1, 'DC Comics');\nINSERT INTO publisher (id, publisher_name) VALUES (2, 'Marvel Comics');\n\nSELECT COUNT(T1.id), COUNT(DISTINCT T3.id) - COUNT(DISTINCT T4.id) AS difference FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id INNER JOIN hero_attribute AS T3 ON T2.id = T3.hero_id INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T1.id IN (1, 2);\n\t----- bird -----\tsuperhero",
    "830": "\nINSERT INTO attribute (id, attribute_name) VALUES (1, 'Strength');\n\t----- bird -----\tsuperhero",
    "831": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Abomination', 'Abomination', 1, 2, 3, 4, 5, 6, 7, 8, 200, 100);\n\t----- bird -----\tsuperhero",
    "832": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id IN ( SELECT power_id FROM superpower ORDER BY height_cm DESC LIMIT 1 )\n\t----- bird -----\tsuperhero",
    "833": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Charles Chandler', 'Superman', 1, 2, 3, 4, 5, 6, 7, 8, 2000, 90);\n\t----- bird -----\tsuperhero",
    "834": "\nSELECT CAST(SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.publisher_name = 'George Lucas';\n\t----- bird -----\tsuperhero",
    "835": "\nSELECT CAST(SUM(CASE WHEN T2.attribute_name = 'good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM alignment AS T1 INNER JOIN superhero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T1.alignment = 'Marvel Comics';\n\t----- bird -----\tsuperhero",
    "836": "\nSELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.superhero_id WHERE T1.full_name LIKE '%John%'\n\t----- bird -----\tsuperhero",
    "837": "\nSELECT T1.hero_id FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id ORDER BY T1.attribute_value LIMIT 1 \n\t----- bird -----\tsuperhero",
    "838": "\nINSERT INTO superhero (full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) \nVALUES ('Alien', 1, 2, 3, 4, 5, 6, 7, 180, 70);\n\t----- bird -----\tsuperhero",
    "839": "\nINSERT INTO superhero (superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg)\nVALUES \n('Batman', 'Bruce Wayne', 1, 2, 3, 4, 5, 6, 7, 8, 180, 80),\n('Spider-Man', 'Peter Parker', 2, 1, 2, 3, 4, 5, 6, 9, 170, 70);\n\t----- bird -----\tsuperhero",
    "840": "\nSELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.full_name = 'Aquababy'\n\t----- bird -----\tsuperhero",
    "841": "\nINSERT INTO hero_attribute (hero_id, attribute_id, attribute_value) \nVALUES (40, 1, 5); -- weight_kg\nINSERT INTO hero_attribute (hero_id, attribute_id, attribute_value) \nVALUES (40, 2, 3); -- race_id\n\t----- bird -----\tsuperhero",
    "842": "\nSELECT AVG(height_cm) FROM superhero WHERE race_id = 1 AND gender_id IS NOT NULL;\n\t----- bird -----\tsuperhero",
    "843": "\nSELECT T1.id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_name = 'Intelligence'\n\t----- bird -----\tsuperhero",
    "844": "\nINSERT INTO colour (id, colour) VALUES (1, 'black');\n\t----- bird -----\tsuperhero",
    "845": "\nINSERT INTO superpower (id, power_name) VALUES (1, 'Super Speed'); \nINSERT INTO superpower (id, power_name) VALUES (2, 'Flight'); \nINSERT INTO superpower (id, power_name) VALUES (3, 'Telekinesis'); \nINSERT INTO superpower (id, power_name) VALUES (4, 'Invisibility'); \nINSERT INTO superpower (id, power_name) VALUES (5, 'Time Travel'); \nINSERT INTO superpower (id, power_name) VALUES (6, 'Super Strength'); \nINSERT INTO superpower (id, power_name) VALUES (7, 'Healing Factor'); \nINSERT INTO superpower (id, power_name) VALUES (8, 'Elemental Control'); \nINSERT INTO superpower (id, power_name) VALUES (9, 'Mind Reading'); \nINSERT INTO superpower (id, power_name) VALUES (10, 'Telepathy');\n\t----- bird -----\tsuperhero",
    "846": "\nSELECT T1.driverRef FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 18 AND T2.position < 18;\n\t----- bird -----\tformula_1",
    "847": "\nSELECT surname FROM drivers WHERE points = ( SELECT MAX(points) FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE round BETWEEN 19 AND 20 ) AND position = 1 ); \n\t----- bird -----\tformula_1",
    "848": "\nSELECT DISTINCT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name LIKE '%Shanghai%'\n\t----- bird -----\tformula_1",
    "849": "\nSELECT url FROM races WHERE circuitId = 1;\n\t----- bird -----\tformula_1",
    "850": "\nSELECT name FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Germany' );\n\t----- bird -----\tformula_1",
    "851": "\nINSERT INTO circuits (circuitId, circuitRef, name, location, country, lat, lng, alt, url)\nVALUES \n(1, 'Renault', 'Circuit 1', 'Location 1', 'Country 1', 37.7749, -122.4194, 1000, 'https://www.circuit1.com'),\n(2, 'Renault', 'Circuit 2', 'Location 2', 'Country 2', 37.7859, -122.4364, 1200, 'https://www.circuit2.com');\n\n\t----- bird -----\tformula_1",
    "852": "\nSELECT COUNT(raceId) FROM races WHERE year = 2010 AND url LIKE '%Grand Prix%' AND country NOT IN ('Asia', 'Europe');\n\t----- bird -----\tformula_1",
    "853": "\nSELECT T1.name FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T3.country = 'Spain' AND T2.url LIKE '%Spain%' \n\t----- bird -----\tformula_1",
    "854": "\nSELECT T1.location, T2.lat, T2.lng FROM circuits AS T1 INNER JOIN seasons AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2023 AND T1.name LIKE '%Australian Grand Prix%'\n\t----- bird -----\tformula_1",
    "855": "\nINSERT INTO races (year, url) VALUES (2019, 'https://www.sepanagroup.com/races/');\n\t----- bird -----\tformula_1",
    "856": "\nSELECT time FROM lapTimes WHERE raceId = 1 AND circuitRef = 'Sepang International Circuit';\n\t----- bird -----\tformula_1",
    "857": "\nSELECT lat, lng FROM races WHERE name = 'Abu Dhabi Grand Prix';\n\t----- bird -----\tformula_1",
    "858": "SQL_START\nINSERT INTO constructors (constructorId, constructorRef, name, nationality, url) \nVALUES (1, 'CONSTR-001', 'John Doe', 'American', 'https://www.constr-001.com');\n\t----- bird -----\tformula_1",
    "859": "\nSELECT q1 FROM qualifying WHERE driverId = ( SELECT driverId FROM drivers WHERE number = 32 ) AND raceId = 354;\n\t----- bird -----\tformula_1",
    "860": "\nSELECT nationality FROM qualifying WHERE q2 = '0:01:40' AND raceId = 355;\n\t----- bird -----\tformula_1",
    "861": "\nSELECT T1.number FROM qualifying AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.position = 3 AND T2.q3 = '0:01:54' AND T2.raceId = 903;\n\t----- bird -----\tformula_1",
    "862": "\nSELECT driverId FROM results WHERE raceId = 2007 AND position NOT IN (1,2)\n\t----- bird -----\tformula_1",
    "863": "\nSELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\n\t----- bird -----\tformula_1",
    "864": "\nSELECT COUNT(driverId) FROM results WHERE raceId = 1 AND date = '2015-11-29';\n\t----- bird -----\tformula_1",
    "865": "\nSELECT T1.surname, T2.forename FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 ORDER BY T1.dob DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "866": "\nSELECT T1.driverId, T2.name, T3.url FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN lapTimes AS T3 ON T2.resultId = T3.resultId WHERE T3.lap = 161 AND T3.position = 1;\n\t----- bird -----\tformula_1",
    "867": "\nINSERT INTO status (statusId, status) \nVALUES (1, 'Active');\n\t----- bird -----\tformula_1",
    "868": "SQL_START\nINSERT INTO circuits (circuitId, circuitRef, name, location, country, lat, lng, alt, url) \nVALUES (1, 'Malaysian Grand Prix', 'Sepang International Circuit', 'Sepang, Malaysia', 'Malaysia', 3.14159, -101.6832, 0, 'https://www.sepanationalracecourse.com/', 1);\n\t----- bird -----\tformula_1",
    "869": "SQL_START\nINSERT INTO constructorStandings (constructorId, points, position, positionText) \nSELECT c.circuitId, 0, 1, 'Unknown' \nFROM constructors c \nWHERE c.name = 'Red Bull Racing' AND c.points = ( SELECT MAX(points) FROM constructorResults r WHERE r.raceId = 9 )\n\t----- bird -----\tformula_1",
    "870": "\nSELECT q1 FROM qualifying AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId AND T1.qualifyId = T2.qualifyId WHERE T2.raceId = 345 AND T1.number = ( SELECT MIN(number) FROM qualifying AS T3 INNER JOIN results AS T4 ON T3.driverId = T4.driverId AND T3.qualifyId = T4.qualifyId WHERE T4.raceId = 345 )\n\t----- bird -----\tformula_1",
    "871": "\nSELECT T1.forename, T1.surname, T2.country FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.qualifyId = 347 AND T2.time LIKE '0:01:15';\n\t----- bird -----\tformula_1",
    "872": "\nSELECT DISTINCT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.position = 3 AND T2.q3 LIKE '0:01:33';\n\t----- bird -----\tformula_1",
    "873": "\nSELECT T1.time FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.name = 'Bruce McLaren' AND T1.stop = 743;\n\t----- bird -----\tformula_1",
    "874": "\nINSERT INTO results (raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId) \nVALUES (1, 2, 3, 4, 5, 2, 'Second', 10, 25.0, 50, '00:34.567', 100, 20, 'Fastest lap time: 00:35.123', 'Fastest lap speed: 200 km/h');\n\t----- bird -----\tformula_1",
    "875": "\nSELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\n\t----- bird -----\tformula_1",
    "876": "\nSELECT COUNT(driverId) FROM results WHERE raceId = 1 AND date LIKE '%/%/29';\n\t----- bird -----\tformula_1",
    "877": "\nSELECT T1.forename, T1.surname, DATEDIFF(T2.dob, T1.dob) AS age FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 ORDER BY age LIMIT 1 \n\t----- bird -----\tformula_1",
    "878": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 348 AND T2.position = ( SELECT MAX(position) FROM results WHERE raceId = 348 )\n\t----- bird -----\tformula_1",
    "879": "\nSELECT T1.nationality FROM status AS T1 INNER JOIN results AS T2 ON T1.statusId = T2.statusId WHERE T2.fastestLapSpeed = ( SELECT MIN(T3.fastestLapSpeed) FROM results AS T3 INNER JOIN driverStandings AS T4 ON T3.driverId = T4.driverId AND T3.positionOrder = 1 )\n\t----- bird -----\tformula_1",
    "880": "\nSELECT CAST((r1.points - r2.points) * 100 / (r1.fastestLapSpeed - r2.fastestLapSpeed) AS REAL) * 100 FROM results r1 INNER JOIN results r2 ON r1.statusId = r2.statusId AND r1.resultId = r2.resultId WHERE r1.driverId = 1 AND r1.raceId = 853 AND r2.raceId = 854;\n\t----- bird -----\tformula_1",
    "881": "\nSELECT CAST(SUM(CASE WHEN T1.driverId = D.driverId THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DriverId) FROM drivers D, races R WHERE STRFTIME('%Y/%j/%d', R.date) = '1983/7/16' AND R.raceId IN (SELECT raceId FROM races); \n\t----- bird -----\tformula_1",
    "882": "\nSELECT DISTINCT T1.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.url LIKE 'Singapore%' ORDER BY T1.year LIMIT 1 \n\t----- bird -----\tformula_1",
    "883": "SQL_START\nINSERT INTO seasons (year, url)\nVALUES \n(2005, 'http://www.grandprix.com/2005'),\n(2004, 'http://www.grandprix.com/2004'),\n(2003, 'http://www.grandprix.com/2003'),\n(2002, 'http://www.grandprix.com/2002'),\n(2001, 'http://www.grandprix.com/2001'),\n(2000, 'http://www.grandprix.com/2000');\n\nSQL_END\n\t----- bird -----\tformula_1",
    "884": "\nSELECT T1.url FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.resultId = 1 AND T2.status = 'First'\n\t----- bird -----\tformula_1",
    "885": "\nSELECT T1.name, T2.date FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.year = 1999 ORDER BY T1.round DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "886": "\nSELECT MAX(year) FROM races;\n\t----- bird -----\tformula_1",
    "887": "\nSELECT DISTINCT T1.name FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year != 2000 AND T1.year = 2017;\n\t----- bird -----\tformula_1",
    "888": "SQL_START\nINSERT INTO countries (country) VALUES ('France');\nINSERT INTO circuits (circuitId, circuitRef, name, location, country, lat, lng, alt, url) \nVALUES (1, 'FRANCE', 'Circuit de Monaco', 'Monaco', 'France', 43.85, -7.58, 1000, 'https://www.grand-prix.com/circuit/monaco');\nSQL_END\n\t----- bird -----\tformula_1",
    "889": "\nSELECT DISTINCT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.name = 'British Grand Prix' AND T1.circuitId = 1;\n\t----- bird -----\tformula_1",
    "890": "\nSELECT COUNT(*) FROM races WHERE circuitId = 1 AND year = 2019;\n\t----- bird -----\tformula_1",
    "891": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2010 AND T2.position < ( SELECT MAX(position) FROM results AS T3 INNER JOIN races AS T4 ON T3.raceId = T4.raceId WHERE T4.year = 2010 )\n\t----- bird -----\tformula_1",
    "892": "\nSELECT T1.driverName, T2.points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "893": "\nSELECT T1.driverId, T2.points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2017 AND T2.resultId = 1 ORDER BY T2.points DESC LIMIT 3;\n\t----- bird -----\tformula_1",
    "894": "\nINSERT INTO results (raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId) \nVALUES \n(1, 1, 1, 1, 1, 1, '1:23.456', 1, 10, 100, '00:01.234', 0, 1, '1st', 1, '1:23.456', '1:23.456');\n\t----- bird -----\tformula_1",
    "895": "\nSELECT AVG(time) FROM lapTimes WHERE driverId = 1 AND raceId = 2009 AND circuitId = 2;\n\t----- bird -----\tformula_1",
    "896": "\nSELECT CAST(SUM(CASE WHEN T1.name = 'Hamilton' AND T2.track = '2010' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.name) FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.driverId WHERE T2.year > 2010\n\t----- bird -----\tformula_1",
    "897": "\nSELECT T1.driverName, T2.nationality, AVG(T3.points) AS avg_points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN constructorResults AS T3 ON T2.raceId = T3.raceId GROUP BY T1.driverName, T2.nationality ORDER BY COUNT(*) DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "898": "SQL_START\nSELECT T2.surname, T2.forename FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Japanese' AND T2.points = ( SELECT MAX(points) FROM results WHERE nationality = 'Japanese' ) + 1;\n\t----- bird -----\tformula_1",
    "899": "\nINSERT INTO circuits (circuitId, circuitRef, name, location, country, lat, lng, alt, url)\nVALUES \n(1, 'Circuit 1', 'Circuit 1 Name', 'Location 1', 'Country 1', 37.7749, -122.4194, 1000, 'https://www.circuit1.com'),\n(2, 'Circuit 2', 'Circuit 2 Name', 'Location 2', 'Country 2', 34.0522, -118.2437, 500, 'https://www.circuit2.com'),\n(3, 'Circuit 3', 'Circuit 3 Name', 'Location 3', 'Country 3', 40.7128, -74.0060, 2000, 'https://www.circuit3.com');\n\t----- bird -----\tformula_1",
    "900": "\nINSERT INTO circuits (circuitId, circuitRef, name, location, country, lat, lng, alt, url)\nVALUES \n(1, 'USA', 'Circuit 1', 'New York City, USA', 'USA', 40.7128, -74.0060, 100, 'https://www.circuit1.com'),\n(2, 'USA', 'Circuit 2', 'Los Angeles, USA', 'USA', 34.0522, -118.2437, 200, 'https://www.circuit2.com');\n\n\t----- bird -----\tformula_1",
    "901": "\nINSERT INTO races (year, url) VALUES (2005, 'http://www.f1.com/races/2005');\n\t----- bird -----\tformula_1",
    "902": "\nSELECT T1.name FROM races AS T1 INNER JOIN constructorStandings AS T2 ON T1.id = T2.raceId WHERE T2.position < 10 AND T1.name = 'Alex Yoong';\n\t----- bird -----\tformula_1",
    "903": "\nSELECT COUNT(*) FROM races AS T1 INNER JOIN constructorResults AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Sepang International Circuit' AND T2.points > 0 AND T2.status = 'Winner';\n\t----- bird -----\tformula_1",
    "904": "\nSELECT T1.year, T2.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = 1 AND T2.positionOrder = 1;\n\t----- bird -----\tformula_1",
    "905": "\nSELECT AVG(points) FROM driverStandings WHERE driverId = 1 AND year = 2000;\n\t----- bird -----\tformula_1",
    "906": "\nINSERT INTO races (year, url) VALUES (2024, 'https://www.formula1.com/races/2024');\n\t----- bird -----\tformula_1",
    "907": "\nSELECT DISTINCT T1.year, T2.country FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year ORDER BY T1.year, T2.date;\n\t----- bird -----\tformula_1",
    "908": "\nSELECT T1.name, T2.year, T3.location FROM races AS T1 INNER JOIN constructorResults AS T2 ON T1.id = T2.raceId INNER JOIN constructors AS T3 ON T2.constructorId = T3.constructorId ORDER BY T2.points DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "909": "\nSELECT CAST(SUM(CASE WHEN T2.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.name LIKE '%European Grand Prix%'\n\t----- bird -----\tformula_1",
    "910": "\nSELECT location FROM circuits WHERE circuitId = 1;\n\t----- bird -----\tformula_1",
    "911": "\nSELECT lat FROM circuits WHERE location = 'higher latitude' AND circuitId IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring');\n\t----- bird -----\tformula_1",
    "912": "\nSELECT name FROM circuits WHERE circuitRef = 'Marina Bay Street Circuit';\n\t----- bird -----\tformula_1",
    "913": "SQL_START\nSELECT country FROM circuits WHERE alt = ( SELECT MAX(alt) FROM circuits );\n\t----- bird -----\tformula_1",
    "914": "\nSELECT COUNT(driverId) FROM drivers WHERE code IS NULL;\n\t----- bird -----\tformula_1",
    "915": "SQL_START\nSELECT country FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1;\n\t----- bird -----\tformula_1",
    "916": "\nSELECT surname FROM drivers WHERE nationality = 'Italy';\n\t----- bird -----\tformula_1",
    "917": "\nSELECT url FROM drivers WHERE driverRef = 'Anthony Davidson';\n\t----- bird -----\tformula_1",
    "918": "\nSELECT name FROM constructors WHERE nationality = 'British';\n\t----- bird -----\tformula_1",
    "919": "\nSELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2009 AND T2.url = 'Spanish Grand Prix'\n\t----- bird -----\tformula_1",
    "920": "\nSELECT DISTINCT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.name LIKE '%Silverstone Circuit%'\n\t----- bird -----\tformula_1",
    "921": "\nCREATE TABLE races (\nraceId integer,\nyear integer,\nround integer,\ncircuitId integer,\nname text,\ndate date,\ntime text,\nurl text,\nPRIMARY KEY (raceId),\nFOREIGN KEY (year) REFERENCES seasons(year),\nFOREIGN KEY (circuitId) REFERENCES circuits(circuitId),\n);\n\t----- bird -----\tformula_1",
    "922": "\nSELECT time FROM races WHERE year = 2010 AND circuitId = 1;\n\t----- bird -----\tformula_1",
    "923": "\nSELECT COUNT(raceId) FROM races WHERE circuitRef = 'Italy';\n\t----- bird -----\tformula_1",
    "924": "\nSELECT date FROM races WHERE circuitId = 1 AND name = 'Barcelona-Catalunya'\n\t----- bird -----\tformula_1",
    "925": "\nSELECT url FROM races WHERE year = 2009 AND circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Spanish Grand Prix' );\n\t----- bird -----\tformula_1",
    "926": "\nSELECT T1.time FROM driverStandings AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.position = 1 AND T2.driverId = ( SELECT driverId FROM drivers WHERE surname = 'Hamilton' ) AND T2.points = ( SELECT MAX(points) FROM results );\n\t----- bird -----\tformula_1",
    "927": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.points = ( SELECT MAX(points) FROM results ) AND T2.fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results );\n\t----- bird -----\tformula_1",
    "928": "\nSELECT T1.driverRef FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2008 AND T2.position = 1;\n\t----- bird -----\tformula_1",
    "929": "\nSELECT T1.name FROM races AS T1 INNER JOIN constructorResults AS T2 ON T1.id = T2.raceId WHERE T2.driverRef = 'Lewis Hamilton' AND T2.points > 0 \n\t----- bird -----\tformula_1",
    "930": "\nSELECT T1.name, T2.points FROM races AS T1 INNER JOIN constructorStandings AS T2 ON T1.year = T2.year AND T1.circuitId = T2.circuitId WHERE T1.name LIKE 'Formula_1' ORDER BY T2.points DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "931": "\nSELECT T1.fastestLapSpeed FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 2009 AND T1.position = 1;\n\t----- bird -----\tformula_1",
    "932": "\nSELECT DISTINCT T2.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.name = 'Lewis Hamilton' AND T2.status = 'Winner';\n\t----- bird -----\tformula_1",
    "933": "\nSELECT T1.position FROM driverStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = '2008 Australian Grand Prix' AND T1.driverId = 1 ORDER BY T1.position DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "934": "SQL_START\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2008 AND T2.positionOrder = 4;\n\t----- bird -----\tformula_1",
    "935": "\nSELECT COUNT(driverId) FROM results WHERE raceId = 2008 AND status = 'Finish';\n\t----- bird -----\tformula_1",
    "936": "\nSELECT T1.lapTime FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.name = 'Lewis Hamilton' AND T1.lap = 50 AND T1.time = 'Fastest Lap' AND T1.milliseconds = 100;\n\t----- bird -----\tformula_1",
    "937": "\nSELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 2008 AND T2.position = 2;\n\t----- bird -----\tformula_1",
    "938": "\nINSERT INTO races (year, url) VALUES (2008, 'https://www.australiangrandprix.com.au');\n\n\t----- bird -----\tformula_1",
    "939": "\nSELECT COUNT(driverId) FROM drivers WHERE nationality = 'USA' AND date BETWEEN '2008-01-01' AND '2008-12-31';\n\t----- bird -----\tformula_1",
    "940": "\nSELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 2008 AND statusId = 1 AND nationality IN ('British', 'Italian', 'German')\n\t----- bird -----\tformula_1",
    "941": "\nSELECT SUM(points) FROM constructorResults WHERE driverRef = 'Lewis Hamilton';\n\t----- bird -----\tformula_1",
    "942": "\nSELECT AVG(T2.time) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.name = 'Lewis Hamilton' AND T2.statusId = 1;\n\t----- bird -----\tformula_1",
    "943": "\nSELECT COUNT(driverId) AS total FROM lapTimes WHERE raceId = 2008 AND driverId IN ( SELECT driverId FROM results WHERE raceId = 2008 AND points > 0 )\n\t----- bird -----\tformula_1",
    "944": "\nSELECT CAST((CONVERT(DATE, results.position) - CONVERT(DATE, qualifying.position)) * 100 / (SELECT MAX(position) FROM qualifying WHERE raceId = 2008 Australian Grand Prix) AS REAL) * 100 AS percentage FROM results INNER JOIN qualifying ON results.driverId = qualifying.driverId AND results.raceId = qualifying.raceId WHERE results.statusId = 1 AND results.position < (SELECT MIN(position) FROM qualifying WHERE raceId = 2008 Australian Grand Prix); \n\t----- bird -----\tformula_1",
    "945": "\nSELECT COUNT(circuitId) FROM circuits WHERE location = 'Melbourne, Australia';\n\t----- bird -----\tformula_1",
    "946": "\nSELECT T1.location, T2.lat, T2.lng FROM circuits AS T1 INNER JOIN locations AS T2 ON T1.location = T2.name WHERE T2.country = 'United States' \n\t----- bird -----\tformula_1",
    "947": "\nSELECT COUNT(driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980';\n\t----- bird -----\tformula_1",
    "948": "\nSELECT AVG(points) FROM constructorResults WHERE nationality = 'British';\n\t----- bird -----\tformula_1",
    "949": "\nSELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId ORDER BY T2.points DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "950": "\nSELECT name FROM constructors WHERE points = 0 AND raceId = 291;\n\t----- bird -----\tformula_1",
    "951": "\nINSERT INTO constructorResults (raceId, constructorId, points, status) \nVALUES \n(2, 1, 0, 'DNF'), \n(3, 2, 0, 'DNF');\n\t----- bird -----\tformula_1",
    "952": "\nINSERT INTO constructorStandings (constructorId, points, position, positionText, wins) \nSELECT c.constructorId, 1, 1, '1st', 0 FROM constructors c WHERE c.points = ( SELECT MAX(points) FROM constructorStandings );\n\t----- bird -----\tformula_1",
    "953": "\nSELECT COUNT(T1.constructorId) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.points > 50;\n\t----- bird -----\tformula_1",
    "954": "\nSELECT \n    driverId,\n    SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS num_drivers,\n    CAST(SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100 AS completion_percentage\nFROM drivers\nWHERE year BETWEEN 2007 AND 2009\nGROUP BY driverId;\n\t----- bird -----\tformula_1",
    "955": "\nSELECT AVG(T1.time) AS average_time FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.code = 'CHAMPION' AND T1.year IN ( SELECT year FROM seasons );\n\t----- bird -----\tformula_1",
    "956": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.rank = 2 AND T1.dob > '1975';\n\t----- bird -----\tformula_1",
    "957": "\nSELECT COUNT(driverId) FROM drivers WHERE nationality = 'Italian';\n\t----- bird -----\tformula_1",
    "958": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.lapTimes.lap = ( SELECT MIN(lap) FROM lapTimes ) AND T2.time = ( SELECT time FROM lapTimes ORDER BY milliseconds LIMIT 1 ); \n\t----- bird -----\tformula_1",
    "959": "\nSELECT T1.lap FROM driverStandings AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2009 AND T1.position = 1;\n\t----- bird -----\tformula_1",
    "960": "\nSELECT AVG(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\n\t----- bird -----\tformula_1",
    "961": "\nSELECT T1.name, T2.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T2.time ASC LIMIT 1;\n\t----- bird -----\tformula_1",
    "962": "\nSELECT CAST(SUM(CASE WHEN dob < '1985' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM drivers WHERE dob BETWEEN '2000' AND '2005';\n\t----- bird -----\tformula_1",
    "963": "\nSELECT COUNT(driverId) FROM drivers WHERE nationality = 'French' AND time < '02:00.00';\n\t----- bird -----\tformula_1",
    "964": "\nSELECT driverRef FROM drivers WHERE nationality = 'America';\n\t----- bird -----\tformula_1",
    "965": "\nSELECT raceId FROM races WHERE year = 2009;\n\t----- bird -----\tformula_1",
    "966": "\nSELECT COUNT(driverId) FROM results WHERE raceId = 18;\n\t----- bird -----\tformula_1",
    "967": "SQL_START\nSELECT T1.driverId, T2.number FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.rank = 3 ORDER BY T2.rank LIMIT 3;\n\t----- bird -----\tformula_1",
    "968": "\nSELECT T1.name FROM drivers AS T1 INNER JOIN constructorResults AS T2 ON T1.driverId = T2.driverId WHERE T2.constructorRef = 'Robert Kubica'; \n\t----- bird -----\tformula_1",
    "969": "\nSELECT COUNT(driverId) FROM drivers WHERE dob LIKE '%1980%' AND nationality = 'Australian';\n\t----- bird -----\tformula_1",
    "970": "\nSELECT T1.driverId, T2.name \nFROM drivers AS T1 \nJOIN results AS T2 ON T1.driverId = T2.driverId \nWHERE T1.dob BETWEEN '1980-1990' AND '1990-1999' \nAND T2.time LIKE '%%Lap%%' \nORDER BY T2.time ASC LIMIT 3;\n\t----- bird -----\tformula_1",
    "971": "\nSELECT T1.name FROM drivers AS T1 INNER JOIN constructorResults AS T2 ON T1.driverId = T2.driverId WHERE T2.status = 'Oldest' AND T1.country = 'Germany' ORDER BY T1.dob ASC LIMIT 1 \n\t----- bird -----\tformula_1",
    "972": "\nINSERT INTO results (raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\nSELECT r.raceId, d.driverId, c.constructorId, 1, 1, 1, '1st', 1, 0, 10, '00:01.2345', 100, 0, NULL, NULL, 1, '00:01.2345', NULL\nFROM races r\nJOIN seasons s ON r.year = s.url\nJOIN constructorResults cr ON s.year = cr.year AND r.raceId = cr.raceId\nJOIN drivers d ON cr.driverId = d.driverId\nWHERE d.dob LIKE '%1971%'\n\t----- bird -----\tformula_1",
    "973": "\nSELECT T1.driverId, T2.name \nFROM drivers AS T1 \nJOIN results AS T2 ON T1.driverId = T2.driverId \nWHERE T2.raceId IN ( SELECT raceId FROM races WHERE year = 2023 ) \nAND T1.dob < '1982-01-01' \nORDER BY T2.time DESC LIMIT 10;\n\t----- bird -----\tformula_1",
    "974": "\nSELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.year = T2.raceId ORDER BY T2.time DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "975": "\nSELECT MIN(milliseconds) FROM lapTimes WHERE time = ( SELECT MAX(milliseconds) FROM lapTimes )\n\t----- bird -----\tformula_1",
    "976": "\nSELECT driverId FROM results ORDER BY points DESC, time ASC LIMIT 5;\n\t----- bird -----\tformula_1",
    "977": "\nSELECT COUNT(DISTINCT driverId) FROM results WHERE raceId BETWEEN 50 AND 100 AND status = 'Disqualified';\n\t----- bird -----\tformula_1",
    "978": "\nSELECT T1.name, T2.lat, T2.lng FROM circuits AS T1 INNER JOIN seasons AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2020 AND T1.location LIKE '%Austria%';\n\t----- bird -----\tformula_1",
    "979": "\nSELECT MAX(number) FROM races;\n\t----- bird -----\tformula_1",
    "980": "\nSELECT T1.forename, T1.surname, T2.nationality, T2.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.qualifyId = 23 AND T2.position < 2;\n\t----- bird -----\tformula_1",
    "981": "\nSELECT T1.year, T2.forename, T2.surname, T3.date, T3.time \nFROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId \nINNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.dob IS NULL ORDER BY T2.year LIMIT 1;\n\t----- bird -----\tformula_1",
    "982": "\nSELECT COUNT(driverId) FROM drivers WHERE nationality = 'American' AND status = 'Disqualified';\n\t----- bird -----\tformula_1",
    "983": "\nINSERT INTO constructors (constructorRef, name, nationality, url) \nVALUES ('Ferrari', 'Scuderia Ferrari', 'Italy', 'https://www.scuderiaraffa.com/');\n\t----- bird -----\tformula_1",
    "984": "\nINSERT INTO status (statusId, status) SELECT 1, 'Constructor who tallied the most total wins.' FROM constructorStandings ORDER BY points DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "985": "\nSELECT T1.driverId, T2.time FROM driverStandings AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.lap = 3 AND T1.position < ( SELECT MIN(position) FROM driverStandings AS T WHERE T.raceId = 1 )\n\t----- bird -----\tformula_1",
    "986": "\nSELECT T1.time, T2.milliseconds FROM lapTimes AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.position = 1 AND T2.points > ( SELECT MAX(T3.points) FROM results AS T3 WHERE T3.position = 1 )\n\t----- bird -----\tformula_1",
    "987": "\nSELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.position = 10 AND T1.raceId = 2006;\n\t----- bird -----\tformula_1",
    "988": "\nSELECT T1.driverId, AVG(T2.pitStopDuration) AS avgPitStopDuration \nFROM drivers T1 \nJOIN results T2 ON T1.driverId = T2.driverId \nWHERE T1.dob BETWEEN '1980-01-01' AND '1985-12-31' \nAND T2.status = 'Qualifying'\nGROUP BY T1.driverId \nORDER BY avgPitStopDuration ASC\nLIMIT 5 \n\t----- bird -----\tformula_1",
    "989": "\nINSERT INTO races (year, url) VALUES (2008, 'http://www.canadagrandprix.com');\nINSERT INTO status (statusId, status text) VALUES (1, 'Champion');\n\t----- bird -----\tformula_1",
    "990": "SQL_START\nINSERT INTO constructors (constructorRef, name, nationality, url) \nVALUES ('Champion', 'Ayrton Senna', 'Brazilian', 'https://www.motorsport.com/f1/champions-of-the-year/2009/singapore-grand-prix/a-yrton-senna');\n\nSQL_END\n\t----- bird -----\tformula_1",
    "991": "\nSELECT T2.forename, T2.surname, T1.dob FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.country = 'Austria' AND T1.dob BETWEEN '1981-01-01' AND '1991-12-31';\n\t----- bird -----\tformula_1",
    "992": "\nSELECT T1.forename, T1.surname, T2.wikipedia_link, T1.dob \nFROM drivers AS T1 INNER JOIN status AS T2 ON T1.driverId = T2.driverId \nWHERE T1.country = 'Germany' AND T1.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY T1.dob DESC;\n\t----- bird -----\tformula_1",
    "993": "SQL_START\nINSERT INTO circuits (circuitId, circuitRef, name, location, country, lat, lng, alt, url)\nVALUES (1, 'Hungaroring', 'Hungaroring Circuit', 'Budapest, Hungary', 'Hungary', 47.5033, 19.0833, 100, 'https://www.hungaroring.com/');\n\nSQL_END\n\t----- bird -----\tformula_1",
    "994": "\nINSERT INTO constructorResults (constructorResultsId, raceId, constructorId, points, status) \nSELECT T1.constructorResultsId, T2.raceId, T3.constructorId, COALESCE(T4.points, 0), 'Winner' FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year INNER JOIN constructorResults AS T3 ON T1.year = T3.year AND T1.circuitId = T3.circuitId INNER JOIN constructors AS T4 ON T3.constructorId = T4.constructorId WHERE T2.year BETWEEN 1980 AND 2010 AND T1.name LIKE '%Monaco%' ORDER BY T3.points DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "995": "\nSELECT AVG(T1.points) FROM constructorResults AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Turkish Grand Prix' AND T1.constructorRef = 'Lewis Hamilton';\n\t----- bird -----\tformula_1",
    "996": "\nSELECT AVG(r.year) AS average_races FROM races r WHERE SUBSTR(r.year, 1, 4) = '21' AND SUBSTR(r.year, -2) <= 10;\n\t----- bird -----\tformula_1",
    "997": "SQL_START\nSELECT nationality, COUNT(nationality) AS citizenship FROM drivers GROUP BY nationality ORDER BY citizenship DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "998": "\nINSERT INTO driverStandings (raceId, driverId, points, position, positionText, wins) \nSELECT 91, drivers.driverId, results.points, results.position, results.positionText, results.wins FROM races AS T1 INNER JOIN results AS T2 ON T1.year = T2.year AND T1.circuitId = T2.circuitId WHERE T2.status = 'Victory'\n\t----- bird -----\tformula_1",
    "999": "\nINSERT INTO status (statusId, status) SELECT 1, 'Fastest Lap Speed' FROM races WHERE fastestLapSpeed IS NOT NULL;\n\t----- bird -----\tformula_1",
    "1000": "SQL_START\nSELECT T1.name, T2.location + T2.country AS full_location FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.url ORDER BY T1.date DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "1001": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 3 AND T2.position = 1 AND T2.qualifyId = 2008;\n\t----- bird -----\tformula_1",
    "1002": "SQL_START\nSELECT T1.forename, T1.surname, T2.name, T3.year AS raceYear \nFROM drivers D \nJOIN results R ON D.driverId = R.driverId \nJOIN constructorResults CR ON R.raceId = CR.raceId \nJOIN constructors C ON CR.constructorId = C.constructorId \nWHERE D.dob = (SELECT MAX(dob) FROM drivers) AND T1.name = 'Youngest racer'; \nSQL_END\n\t----- bird -----\tformula_1",
    "1003": "\nINSERT INTO results (statusId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed) \nVALUES (3, 1, 14, 2, 10, 4, 6, 'Accident', 7, 0.000, 100, '00:03.123', 30, NULL, NULL);\n\t----- bird -----\tformula_1",
    "1004": "\nSELECT T1.surname, T1.forename FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId ORDER BY T2.wins DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "1005": "\nSELECT T1.time FROM pitStops AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.points = ( SELECT MAX(points) FROM results ) AND T1.lap = ( SELECT MAX(lap) FROM lapTimes ); \n\t----- bird -----\tformula_1",
    "1006": "\nSELECT MAX(time) FROM lapTimes WHERE milliseconds = ( SELECT MIN(milliseconds) FROM lapTimes )\n\t----- bird -----\tformula_1",
    "1007": "\nSELECT T1.time FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.name = 'Lewis Hamilton' ORDER BY T1.time DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "1008": "\nSELECT T2.position FROM races AS T1 INNER JOIN pitStops AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2011 AND T1.name = 'Australian Grand Prix' AND T2.stop = 3;\n\t----- bird -----\tformula_1",
    "1009": "\nINSERT INTO pitStops (raceId, driverId, stop, lap, time, duration, milliseconds)\nSELECT T1.raceId, T2.driverId, 1, 1, '00:00', '00:00', 0\nFROM races AS T1 INNER JOIN results AS T2 ON T1.year = T2.raceId WHERE T1.year = 2011 AND T1.name = 'Australian Grand Prix'\n\t----- bird -----\tformula_1",
    "1010": "\nSELECT MAX(lap) AS lap_record FROM lapTimes WHERE driverId = ( SELECT driverId FROM drivers WHERE surname = 'Hamilton' AND forename = 'Lewis' ) AND raceId IN ( SELECT raceId FROM races WHERE year = 2020 );\n\t----- bird -----\tformula_1",
    "1011": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.lapTimes.lap = ( SELECT MIN(lap) FROM lapTimes ) AND T2.time = 'Shortest'\n\t----- bird -----\tformula_1",
    "1012": "\nSELECT T2.position FROM races AS T1 INNER JOIN constructorStandings AS T2 ON T1.year = T2.year AND T1.circuitId = T2.circuitId WHERE T1.driverId = 1 ORDER BY T1.time DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "1013": "\nSELECT MAX(lap) AS lap_record FROM races WHERE circuitId = 1 AND raceId IN ( SELECT raceId FROM races WHERE year = 2022 );\n\t----- bird -----\tformula_1",
    "1014": "\nSELECT T1.circuitId, T2.lat, T2.lng, T3.time FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.year = T2.year AND T1.raceId = T2.raceId WHERE T1.country = 'Italy'\n\t----- bird -----\tformula_1",
    "1015": "\nSELECT T1.name FROM races AS T1 INNER JOIN constructorStandings AS T2 ON T1.year = T2.year AND T1.circuitId = T2.circuitId WHERE T2.position = 1 AND T1.circuitRef = 'Austrian Grand Prix Circuit'\n\t----- bird -----\tformula_1",
    "1016": "\nSELECT T1.time, T2.duration FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Austrian Grand Prix Circuit' AND T1.stop = 3;\n\t----- bird -----\tformula_1",
    "1017": "\nSELECT T1.location, T2.lat, T2.lng FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T2.position = 1 AND T2.time = '1:29.488'; \n\t----- bird -----\tformula_1",
    "1018": "\nSELECT AVG(milliseconds) FROM pitStops WHERE driverId = ( SELECT driverId FROM drivers WHERE surname = 'Hamilton' ) AND stop > 0;\n\t----- bird -----\tformula_1",
    "1019": "\nSELECT AVG(milliseconds) FROM lapTimes WHERE lat BETWEEN 45 AND 46 AND lng BETWEEN 12 AND 13;\n\t----- bird -----\tformula_1",
    "1020": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1021": "\nSELECT T1.player_name, T2.height FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id ORDER BY T2.height DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1022": "\nSELECT preferred_foot FROM Player_Attributes WHERE attacking_work_rate = 'Lowest' ORDER BY potential ASC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1023": "\nSELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating BETWEEN 60 AND 65 AND T2.preferred_foot = 'Attack'\n\t----- bird -----\teuropean_football_2",
    "1024": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN (\n  SELECT player_api_id, SUM(CASE WHEN type = 'cross' THEN 1 ELSE 0 END) AS count \n  FROM Match \n  GROUP BY player_api_id\n) AS T2 ON T1.id = T2.player_api_id ORDER BY T2.count DESC LIMIT 5;\n\t----- bird -----\teuropean_football_2",
    "1025": "\nSELECT id FROM League WHERE date = '2016 season' GROUP BY id ORDER BY SUM(goal) DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1026": "\nSELECT home_team_api_id FROM Match AS T1 INNER JOIN Team_Attributes AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.season = '2016' AND T1.match_api_id IN ( SELECT match_api_id FROM Match WHERE season = '2016' ) GROUP BY T1.home_team_api_id ORDER BY COUNT(T1.match_api_id) LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1027": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.penalties DESC LIMIT 10; \n\t----- bird -----\teuropean_football_2",
    "1028": "\nSELECT away_team_api_id FROM Match WHERE season = '2010' AND country_id IN ( SELECT id FROM Country WHERE name = 'Scotland' ) GROUP BY away_team_api_id ORDER BY COUNT(away_team_api_id) DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1029": "\nSELECT T1.buildUpPlaySpeed, T2.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id ORDER BY T1.buildUpPlaySpeed DESC LIMIT 4;\n\t----- bird -----\teuropean_football_2",
    "1030": "\nSELECT T1.league_name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.match_api_id IN ( SELECT match_api_id FROM Match WHERE season = '2016' AND stage = 3 ) GROUP BY T1.league_name ORDER BY COUNT(T2.match_api_id) DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1031": "\nSELECT DISTINCT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date BETWEEN '2013-01-01' AND '2015-12-31' AND T1.sprint_speed >= 97;\n\t----- bird -----\teuropean_football_2",
    "1032": "\nSELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.name ORDER BY COUNT(T2.match_api_id) DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1033": "\nSELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31';\n\t----- bird -----\teuropean_football_2",
    "1034": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > ( SELECT AVG(T2.overall_rating) FROM Player_Attributes AS T3 INNER JOIN Player AS T4 ON T3.player_api_id = T4.player_api_id WHERE T4.year = 2010 )\n\t----- bird -----\teuropean_football_2",
    "1035": "\nSELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 50 AND 59;\n\t----- bird -----\teuropean_football_2",
    "1036": "\nSELECT T1.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed > 0 AND T1.buildUpPlaySpeedClass = 'Above Average' AND T2.season = '2012';\n\t----- bird -----\teuropean_football_2",
    "1037": "\nSELECT SUM(CASE WHEN preferred_foot = 'Left' AND birthday BETWEEN '1987-01-01' AND '1992-12-31' THEN 1 ELSE 0 END) AS percentage FROM Player_Attributes \n\t----- bird -----\teuropean_football_2",
    "1038": "\nSELECT id, name FROM League ORDER BY SUM(goal) DESC LIMIT 5;\n\t----- bird -----\teuropean_football_2",
    "1039": "\nSELECT AVG(long_shots) FROM Player_Attributes WHERE player_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1040": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 ORDER BY AVG(T1.heading_accuracy) DESC LIMIT 10;\n\t----- bird -----\teuropean_football_2",
    "1041": "\nSELECT T1.team_long_name FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id OR T1.team_api_id = T2.away_team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T2.season = 2014 GROUP BY T1.team_long_name ORDER BY AVG(T2.chanceCreationPassing) * (T2.chanceCreationCrossing - T2.chanceCreationShooting) / T2.chanceCreationCrossing DESC; \n\t----- bird -----\teuropean_football_2",
    "1042": "\nSELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.home_team_goal > T2.away_team_goal AND T2.season LIKE '2009/2010'\n\t----- bird -----\teuropean_football_2",
    "1043": "\nSELECT home_player_6 AS short_name FROM Team WHERE team_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1044": "\nSELECT DISTINCT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday LIKE '1970%October'\n\t----- bird -----\teuropean_football_2",
    "1045": "\nSELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1046": "\nSELECT SUM(CASE WHEN T1.buildUpPlayPositioningClass = 'Defender' THEN 1 ELSE 0 END) AS freedom_of_movement \nFROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id AND T1.team_fifa_api_id = T2.away_team_api_id \nWHERE T2.season = '2023' AND T2.stage = 1 AND T2.date LIKE '%01%' AND T2.match_api_id IN (SELECT match_api_id FROM Match WHERE stage = 1)\n\t----- bird -----\teuropean_football_2",
    "1047": "\nSELECT AVG(finishing) FROM Player_Attributes WHERE date = \"18/09/2014\" AND player_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1048": "\nSELECT overall_rating FROM Player_Attributes WHERE player_api_id = 1 AND date = '2011';\n\t----- bird -----\teuropean_football_2",
    "1049": "\nSELECT COUNT(*) FROM Match WHERE date LIKE '%Scotland Premier League 2015/2016%' AND season = '2015/2016'; \n\t----- bird -----\teuropean_football_2",
    "1050": "\nSELECT preferred_foot FROM Player_Attributes WHERE player_api_id = ( SELECT MIN(player_api_id) FROM Player_Attributes ) AND date = '2020-01-01';\n\t----- bird -----\teuropean_football_2",
    "1051": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.potential DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1052": "\nSELECT COUNT(T1.player_api_id) \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.weight < 130 AND T1.preferred_foot = 'Attacking'\n\t----- bird -----\teuropean_football_2",
    "1053": "\nSELECT DISTINCT T1.team_short_name FROM Team_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.team_api_id = T2.player_api_id WHERE T2.preferred_foot = 'Risky' AND T1.buildUpPlaySpeedClass = 'Risky'; \n\t----- bird -----\teuropean_football_2",
    "1054": "\nSELECT defensive_work_rate FROM Player_Attributes WHERE player_api_id = 1 AND preferred_foot = 'Defensive';\n\t----- bird -----\teuropean_football_2",
    "1055": "\nSELECT T1.player_api_id, T2.birthday FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_fifa_api_id ORDER BY T1.overall_rating DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1056": "SQL_START\nSELECT name FROM Country WHERE name = 'Netherlands';\n\t----- bird -----\teuropean_football_2",
    "1057": "\nSELECT AVG(B365H) FROM Match WHERE country_id = ( SELECT id FROM Country WHERE name = 'Poland' ) AND season = '2010/2011';\n\t----- bird -----\teuropean_football_2",
    "1058": "\nSELECT T1.player_api_id, AVG(T2.finishing) AS avg_finishing_rate FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes ) AND T1.height = ( SELECT MIN(height) FROM Player_Attributes ) ORDER BY T1.height, T1.finishing DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1059": "\nSELECT player_name FROM Player WHERE overall_rating > 180;\n\t----- bird -----\teuropean_football_2",
    "1060": "\nSELECT COUNT(id) FROM Player WHERE date > \"1990\";\n\t----- bird -----\teuropean_football_2",
    "1061": "\nSELECT COUNT(player_api_id) FROM Player WHERE player_name = 'Adam' AND weight > 170;\n\t----- bird -----\teuropean_football_2",
    "1062": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > 80 AND T1.date BETWEEN '2008-01-01' AND '2010-12-31';\n\t----- bird -----\teuropean_football_2",
    "1063": "\nSELECT player_api_id FROM Player_Attributes WHERE player_name = 'Aaron Doran';\n\t----- bird -----\teuropean_football_2",
    "1064": "\nSELECT DISTINCT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_fifa_api_id WHERE T1.preferred_foot = 'Left'\n\t----- bird -----\teuropean_football_2",
    "1065": "\nSELECT DISTINCT T1.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Fast' \n\t----- bird -----\teuropean_football_2",
    "1066": "\nSELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'Club Brugge KAA' ) AND date = '2022-01-01'; \n\t----- bird -----\teuropean_football_2",
    "1067": "\nSELECT T1.team_short_name FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id OR T1.team_api_id = T2.away_team_api_id WHERE T1.buildUpPlaySpeed > 70;\n\t----- bird -----\teuropean_football_2",
    "1068": "\nSELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id > 170 AND date BETWEEN '2010-01-01' AND '2015-12-31';\n\t----- bird -----\teuropean_football_2",
    "1069": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height = ( SELECT MIN(height) FROM Player ); \n\t----- bird -----\teuropean_football_2",
    "1070": "SQL_START\nSELECT DISTINCT T1.country_id FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Italy Serie A';\n\t----- bird -----\teuropean_football_2",
    "1071": "\nSELECT T1.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlanDribbling = 53 AND T1.buildUpPlayPassing = 32;\n\t----- bird -----\teuropean_football_2",
    "1072": "\nSELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1073": "\nSELECT COUNT(id) FROM Match WHERE date LIKE '%2008-08%' AND league_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1074": "\nSELECT home_team_short_name FROM Team WHERE home_team_goal = 10;\n\t----- bird -----\teuropean_football_2",
    "1075": "\nSELECT T1.player_api_id, T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 61 AND T2.potential = 61; \n\t----- bird -----\teuropean_football_2",
    "1076": "\nSELECT AVG(BallControl) - AVG(Aggression) AS diff FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo' ) AND player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye' ); \n\t----- bird -----\teuropean_football_2",
    "1077": "\nSELECT home_team_long_name FROM Team WHERE team_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1078": "\nSELECT player_api_id FROM Player WHERE birthday = ( SELECT MAX(birthday) FROM Player WHERE player_api_id IN ('Aaron Lennon', 'Abdelaziz Barrada') ); \n\t----- bird -----\teuropean_football_2",
    "1079": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.height DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1080": "\nSELECT COUNT(T1.id) AS count FROM Player_Attributes T1 INNER JOIN Team_Attributes T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPositioningClass = 'Left' AND T1.preferred_foot = 'Left'; \n\t----- bird -----\teuropean_football_2",
    "1081": "SQL_START\nSELECT DISTINCT T1.country_id FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Belgium Jupiler League';\n\t----- bird -----\teuropean_football_2",
    "1082": "\nSELECT id FROM League WHERE country_id IN ( SELECT id FROM Country WHERE name = 'Germany' );\n\t----- bird -----\teuropean_football_2",
    "1083": "\nSELECT player_api_id FROM Player_Attributes WHERE overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes ); \n\t----- bird -----\teuropean_football_2",
    "1084": "\nSELECT COUNT(T1.id) AS count FROM Player_Attributes T1 INNER JOIN Player_Team_Attributes T2 ON T1.id = T2.player_api_id WHERE T2.position = 'Defender' AND T2.defense = 1 AND T1.date LIKE '%1986%'\n\t----- bird -----\teuropean_football_2",
    "1085": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'Right' AND T2.overall_rating IN ( SELECT MAX(overall_rating) FROM Player_Attributes AS T3 INNER JOIN Player_Attributes AS T4 ON T3.player_api_id = T4.player_api_id WHERE T3.preferred_foot = 'Left' )\n\t----- bird -----\teuropean_football_2",
    "1086": "\nSELECT heading_accuracy FROM Player_Attributes WHERE player_api_id = 123456;\n\t----- bird -----\teuropean_football_2",
    "1087": "\nSELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_fifa_api_id WHERE T2.height > 180 AND T1.volley_score > 70; \n\t----- bird -----\teuropean_football_2",
    "1088": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.volley_score > 70 AND T1.dribbling_score > 70; \n\t----- bird -----\teuropean_football_2",
    "1089": "\nSELECT COUNT(*) FROM Match WHERE date LIKE '%Belgium%' AND season = '2008/2009';\n\t----- bird -----\teuropean_football_2",
    "1090": "\nSELECT MAX(long_passing) FROM Player_Attributes WHERE overall_rating = ( SELECT MIN(overall_rating) FROM Player_Attributes WHERE date = 'oldest' )\n\t----- bird -----\teuropean_football_2",
    "1091": "\nSELECT COUNT(*) FROM Match WHERE date LIKE '%April, 2009%' AND league_id = ( SELECT id FROM League WHERE name = 'Belgium Jupiler League' ); \n\t----- bird -----\teuropean_football_2",
    "1092": "\nSELECT T1.league_id FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2008/2009' GROUP BY T1.league_id ORDER BY COUNT(T2.id) DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1093": "\nSELECT AVG(overall_rating) FROM Player_Attributes WHERE date < '1986-01-01';\n\t----- bird -----\teuropean_football_2",
    "1094": "\nSELECT CAST((B1.overall_rating - B2.overall_rating) AS REAL) * 100 / (B2.overall_rating + 0) FROM Player_Attributes AS B1 INNER JOIN Player_Attributes AS B2 ON B1.player_api_id = B2.player_api_id WHERE B1.player_fifa_api_id = 123 AND B2.player_fifa_api_id = 456;\n\t----- bird -----\teuropean_football_2",
    "1095": "\nSELECT AVG(B365H) FROM Team_Attributes WHERE team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'Heart of Midlothian' ); \n\t----- bird -----\teuropean_football_2",
    "1096": "\nSELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1097": "\nSELECT SUM(crossing) FROM Player_Attributes WHERE player_api_id = 123;\n\t----- bird -----\teuropean_football_2",
    "1098": "\nSELECT MAX(chanceCreationPassing) AS highest_chance_creation_passing, chanceCreationPassingClass FROM Player_Attributes WHERE player_api_id = 1 AND date LIKE '%2018%' \n\t----- bird -----\teuropean_football_2",
    "1099": "\nSELECT preferred_foot FROM Player_Attributes WHERE player_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1100": "\nSELECT MAX(overall_rating) FROM Player_Attributes WHERE player_api_id = 123;\n\t----- bird -----\teuropean_football_2",
    "1101": "\nSELECT AVG(away_team_goal) FROM Match WHERE home_team_api_id = 1 AND country_id = 2;\n\t----- bird -----\teuropean_football_2",
    "1102": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date = '2016/06/23' ORDER BY T2.birthday ASC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1103": "\nSELECT overall_rating FROM Player_Attributes WHERE player_api_id = 1 AND date = '2016/2/4';\n\t----- bird -----\teuropean_football_2",
    "1104": "\nSELECT potential FROM Player_Attributes WHERE player_api_id = 12345 AND date = '2010/8/30';\n\t----- bird -----\teuropean_football_2",
    "1105": "\nSELECT attacking_work_rate FROM Player_Attributes WHERE date = '2015/05/01' AND player_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1106": "\nSELECT defensive_work_rate FROM Player_Attributes WHERE player_api_id = 12345 AND date = '2013/2/22';\n\t----- bird -----\teuropean_football_2",
    "1107": "\nSELECT date FROM Player_Attributes WHERE player_api_id = 1 AND crossing = ( SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = 1 )\n\t----- bird -----\teuropean_football_2",
    "1108": "\nSELECT buildUpPlaySpeedClass FROM Player_Attributes WHERE player_api_id = 1 AND date = '2011/2/22';\n\t----- bird -----\teuropean_football_2",
    "1109": "\nSELECT buildUpPlayDribblingClass FROM Player_Attributes WHERE player_api_id = 1 AND date = '2015/9/10' AND team_fifa_api_id = 2;\n\t----- bird -----\teuropean_football_2",
    "1110": "\nSELECT buildUpPlayPassingClass FROM Player_Attributes WHERE team_api_id = 1 AND date = '2010/2/22';\n\t----- bird -----\teuropean_football_2",
    "1111": "\nSELECT chanceCreationPassingClass FROM Player_Attributes WHERE player_api_id = 12345 AND date = '2013/9/20';\n\t----- bird -----\teuropean_football_2",
    "1112": "\nSELECT chanceCreationCrossingClass FROM Player_Attributes WHERE date = '2010/02/22' AND team_api_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1113": "\nSELECT defenceAggressionClass FROM Team_Attributes WHERE team_api_id = 1 AND date = '2015-09-10';\n\t----- bird -----\teuropean_football_2",
    "1114": "\nSELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = 1 AND date BETWEEN '2007-02-22' AND '2016-04-21';\n\t----- bird -----\teuropean_football_2",
    "1115": "\nSELECT CAST((LandonDonovan.overall_rating - JordanBowery.overall_rating) AS REAL) * 100 / (LandonDonovan.overall_rating + JordanBowery.overall_rating) FROM Player_Attributes WHERE date = '2013/7/12' AND player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan' ) AND player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery' ); \n\t----- bird -----\teuropean_football_2",
    "1116": "\nSELECT player_name FROM Player WHERE height = ( SELECT MAX(height) FROM Player );\n\t----- bird -----\teuropean_football_2",
    "1117": "SQL_START\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height = ( SELECT MAX(height) FROM Player ) AND T2.weight = ( SELECT MAX(weight) FROM Player );\n\t----- bird -----\teuropean_football_2",
    "1118": "\nSELECT player_name FROM Player WHERE birthday LIKE '%35%'\n\t----- bird -----\teuropean_football_2",
    "1119": "\nSELECT SUM(CASE WHEN T1.home_player_1 = 2 THEN T1.home_team_goal ELSE 0 END) FROM Player_Attributes AS T1 INNER JOIN Match AS T2 ON T1.id = T2.home_player_X1 AND T1.player_api_id = T2.home_team_api_id WHERE T1.player_name = 'Aaron Lennon'\n\t----- bird -----\teuropean_football_2",
    "1120": "\nSELECT SUM(away_team_goal) FROM Player_Attributes WHERE home_player_1 = ( SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith' ) AND home_player_2 = ( SELECT player_api_id FROM Player WHERE player_name = 'Filipe Ferreira' );\n\t----- bird -----\teuropean_football_2",
    "1121": "\nSELECT SUM(CASE WHEN T1.age < 30 THEN T2.home_team_goal ELSE 0 END) AS total_home_team_goal \nFROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_fifa_api_id WHERE T1.date LIKE '%/%//%' AND T1.overall_rating > 70;\n\t----- bird -----\teuropean_football_2",
    "1122": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T2.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes ) AND T2.potential = 10; \n\t----- bird -----\teuropean_football_2",
    "1123": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.potential DESC LIMIT 10; \n\t----- bird -----\teuropean_football_2",
    "1124": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Match AS T2 ON T1.id = T2.home_player_X1 OR T1.id = T2.away_player_X1 WHERE T1.attacking_work_rate > ( SELECT AVG(T3.attacking_work_rate) FROM Player_Attributes AS T3 INNER JOIN Match AS T4 ON T3.id = T4.home_player_X1 OR T3.id = T4.away_player_X1 )\n\t----- bird -----\teuropean_football_2",
    "1125": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.finishing = 1 ORDER BY T2.birthday DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1126": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T2.team_short_name LIKE '%Belgium%' AND T1.player_fifa_api_id IS NOT NULL; \n\t----- bird -----\teuropean_football_2",
    "1127": "\nSELECT T1.country_id, T2.name \nFROM Player_Attributes AS T1 \nINNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T1.vision > 90; \n\n\t----- bird -----\teuropean_football_2",
    "1128": "\nSELECT id, weight FROM Player WHERE weight = ( SELECT AVG(weight) FROM Player );\n\t----- bird -----\teuropean_football_2",
    "1129": "\nSELECT T1.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Slow Speed'\n\t----- bird -----\teuropean_football_2",
    "1130": "\nSELECT home_player_X1 || ' ' || home_player_X2 || ' ' || home_player_X3 || ' ' || home_player_X4 || ' ' || home_player_X5 || ' ' || home_player_X6 || ' ' || home_player_X7 || ' ' || home_player_X8 || ' ' || home_player_X9 || ' ' || home_player_X10 || ' ' || home_player_X11\nFROM Match\nWHERE shotoff = 'safe'\n\t----- bird -----\teuropean_football_2",
    "1131": "\nSELECT AVG(height) FROM Player WHERE country_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1132": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.height > 180 ORDER BY T1.player_name ASC LIMIT 3 \n\t----- bird -----\teuropean_football_2",
    "1133": "\nSELECT COUNT(T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE STRFTIME('%Y', T1.birthday) > 1990 AND T1.first_name = 'Aaron'\n\t----- bird -----\teuropean_football_2",
    "1134": "\nSELECT AVG(jumping) AS jumping_diff FROM Player_Attributes WHERE id = 6 AND id = 23;\n\t----- bird -----\teuropean_football_2",
    "1135": "\nSELECT id FROM Player_Attributes WHERE potential < 50 AND preferred_foot = 'right' ORDER BY overall_rating DESC LIMIT 3 \n\t----- bird -----\teuropean_football_2",
    "1136": "\nSELECT COUNT(T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_api_id WHERE T1.preferred_foot = 'Left' AND T2.overall_rating > 70;\n\t----- bird -----\teuropean_football_2",
    "1137": "\nSELECT CAST(SUM(CASE WHEN strength > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player_Attributes;\n\t----- bird -----\teuropean_football_2",
    "1138": "SQL_START\nSELECT country.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id INNER JOIN Team AS T3 ON T2.id = T3.league_id WHERE T3.team_long_name LIKE '%Poland%' AND T3.team_api_id IN ( SELECT team_api_id FROM Player_Attributes WHERE player_fifa_api_id IN ( SELECT player_api_id FROM Player WHERE player_name LIKE '%Ekstraklasa%' ) ); SQL_END\n\t----- bird -----\teuropean_football_2",
    "1139": "\nSELECT B365H, B365D, B365A, BWH, BWD, BWA \nFROM Match \nWHERE date = 'September 24, 2008' \nAND home_team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'Belgian Jupiler League' ) \nAND away_team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'Belgian Jupiler League' );\n\t----- bird -----\teuropean_football_2",
    "1140": "\nSELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id = 12345;\n\t----- bird -----\teuropean_football_2",
    "1141": "\nSELECT CASE\n    WHEN SUM(CASE WHEN building_up_play_speed_class = 'slow' THEN 1 ELSE 0 END) > \n        (SUM(CASE WHEN building_up_play_speed_class = 'balanced' THEN 1 ELSE 0 END)) \n    AND SUM(CASE WHEN building_up_play_speed_class = 'fast' THEN 1 ELSE 0 END) > \n        (SUM(CASE WHEN building_up_play_speed_class = 'slow' THEN 1 ELSE 0 END)) \n    THEN 'slow'\n    WHEN SUM(CASE WHEN building_up_play_speed_class = 'balanced' THEN 1 ELSE 0 END) > \n        (SUM(CASE WHEN building_up_play_speed_class = 'fast' THEN 1 ELSE 0 END)) \n    AND SUM(CASE WHEN building_up_play_speed_class = 'slow' THEN 1 ELSE 0 END) > \n        (SUM(CASE WHEN building_up_play_speed_class = 'balanced' THEN 1 ELSE 0 END)) \n    THEN 'balanced'\n    ELSE 'fast'\nEND AS speed_class FROM Team_Attributes WHERE team_api_id IN (SELECT team_api_id FROM Team WHERE team_fifa_api_id = 123)\n\t----- bird -----\teuropean_football_2",
    "1142": "\nSELECT COUNT(*) FROM Match WHERE season = '2015-2016';\n\t----- bird -----\teuropean_football_2",
    "1143": "\nSELECT MAX(home_team_goal) FROM Match WHERE country_id = ( SELECT id FROM Country WHERE name = 'Netherlands' ) AND league_id = 1;\n\t----- bird -----\teuropean_football_2",
    "1144": "\nSELECT player_api_id, MAX(finishing) AS finishing_rate, MAX(curve) AS curve_score FROM Player_Attributes WHERE weight = ( SELECT MAX(weight) FROM Player_Attributes ) GROUP BY player_api_id; \n\t----- bird -----\teuropean_football_2",
    "1145": "\nSELECT id FROM League WHERE date = '2015\u20132016 season' GROUP BY id ORDER BY COUNT(id) DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1146": "\nSELECT home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11 \nFROM Match \nWHERE away_team_goal = ( SELECT MAX(away_team_goal) FROM Match );\n\t----- bird -----\teuropean_football_2",
    "1147": "\nSELECT player_api_id FROM Player_Attributes WHERE overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes ); \n\t----- bird -----\teuropean_football_2",
    "1148": "\nSELECT CAST(SUM(CASE WHEN T1.strength > 70 AND T1.height < 180 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_fifa_api_id\n\t----- bird -----\teuropean_football_2",
    "1149": "\nSELECT SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) AS Male_Inpatient, \n       SUM(CASE WHEN T2.SEX = 'M' THEN 1 ELSE 0 END) AS Male_Outpatient,\n       (SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN T2.SEX = 'M' THEN 1 ELSE 0 END)) AS Percentage_Male_Inpatient, \n       (SUM(CASE WHEN T3.SEX = 'M' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN T4.SEX = 'M' THEN 1 ELSE 0 END)) AS Percentage_Male_Outpatient\nFROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID INNER JOIN Patient AS T4 ON T3.ID = T4.ID; \n\t----- bird -----\tthrombosis_prediction",
    "1150": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1930-01-01'\n\t----- bird -----\tthrombosis_prediction",
    "1151": "\nSELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'Inpatient' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday BETWEEN '1930-01-01' AND '1940-12-31';\n\t----- bird -----\tthrombosis_prediction",
    "1152": "\nSELECT SUM(CASE WHEN Diagnosis = 'Outpatient' THEN 1 ELSE 0 END) AS Outpatient, \n       SUM(CASE WHEN Diagnosis = 'Inpatient' THEN 1 ELSE 0 END) AS Inpatient FROM Examination WHERE aCL IgG > 10 AND aCL IgM > 10 AND ANA Pattern IN ('Anti-Sm', 'Anti-DNA')\n\t----- bird -----\tthrombosis_prediction",
    "1153": "\nINSERT INTO Examination (ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis)\nVALUES (30609, '2022-01-01', 10.0, 20.0, 5, 'positive', 15.0, 'Hemophilia A', 'normal', 'low', 'headache', 1);\n\n\t----- bird -----\tthrombosis_prediction",
    "1154": "\nINSERT INTO Patient (ID, SEX, Birthday) VALUES (163109, 'M', '2022-01-01');\n\n\t----- bird -----\tthrombosis_prediction",
    "1155": "\nSELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.PatientID WHERE L.LDH > 35; \n\t----- bird -----\tthrombosis_prediction",
    "1156": "\nSELECT T1.ID, T2.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-BIL > 0; \n\t----- bird -----\tthrombosis_prediction",
    "1157": "\nSELECT P.ID, P.SEX, D.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Thrombosis > 50 AND D.Diagnosis LIKE '%Thrombosis%' \n\t----- bird -----\tthrombosis_prediction",
    "1158": "\nSELECT DISTINCT P.ID, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE EXAMINATION.Date LIKE '1937%' AND E.Diagnosis = 'Beyond normal range'\n\t----- bird -----\tthrombosis_prediction",
    "1159": "\nSELECT P.ID, P.SEX, D.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.ACL IGAL < 3.5 AND E.Diagnosis != 'Unknown' \n\t----- bird -----\tthrombosis_prediction",
    "1160": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN T2.TG ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID\n\t----- bird -----\tthrombosis_prediction",
    "1161": "\nSELECT AVG(aCL_IgG) FROM Examination WHERE Age >= 50 AND Diagnosis = 'In-patient';\n\t----- bird -----\tthrombosis_prediction",
    "1162": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Examination Date) = '1997' AND T1.SEX = 'F'; \n\t----- bird -----\tthrombosis_prediction",
    "1163": "\nSELECT MIN(BirthDate) AS Age FROM Patient;\n\t----- bird -----\tthrombosis_prediction",
    "1164": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'Thrombosis' AND STRFTIME('%Y', T2.Examination Date) = '1997' AND T1.SEX = 'F';\n\t----- bird -----\tthrombosis_prediction",
    "1165": "\nSELECT MIN(T1.BirthDate) - MAX(T2.BirthDate) AS age_gap FROM Patient T1 INNER JOIN Laboratory T2 ON T1.ID = T2.PATIENT_ID WHERE T2.TG < 150 AND T2.TG > 200; \n\t----- bird -----\tthrombosis_prediction",
    "1166": "\nSELECT Symptoms, Diagnosis FROM Examination WHERE ID = ( SELECT MIN(ID) FROM Examination );\n\t----- bird -----\tthrombosis_prediction",
    "1167": "\nSELECT AVG(T1.TAT) AS Average_TAT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'Male' AND EXAMINATION_DATE LIKE '%1998%' GROUP BY MONTH(EXAMINATION_DATE)\n\t----- bird -----\tthrombosis_prediction",
    "1168": "\nSELECT T1.Date, T2.Age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' ORDER BY T1.Date DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1169": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.T-CHO > 5.6 AND T1.T-CHO < 7.8\n\t----- bird -----\tthrombosis_prediction",
    "1170": "\nSELECT COUNT(DISTINCT ID) FROM Patient WHERE First Date >= (EXTRACT(YEAR FROM EXAMINATION_DATE) - 1) AND Admission = 'No' AND EXAMINATION_DATE > EXAMINATION_DATE; \n\t----- bird -----\tthrombosis_prediction",
    "1171": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'N' AND T1.Examination Date BETWEEN '1990-01-01' AND '1993-12-31';\n\t----- bird -----\tthrombosis_prediction",
    "1172": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-BIL > 0 AND T1.SEX = 'M'\n\t----- bird -----\tthrombosis_prediction",
    "1173": "\nSELECT T1.Diagnosis, COUNT(T2.ID) AS Count\nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nJOIN Laboratory L ON E.ID = L.ID\nWHERE E.Examination Date BETWEEN '1985-01-01' AND '1995-12-31'\nGROUP BY T1.Diagnosis\nORDER BY Count DESC\nLIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1174": "\nSELECT AVG(T2.TAT) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE EXAMINATION DATE LIKE '1991-10%' AND EXAMINATION Date >= '1991-01-01' AND EXAMINATION Date <= '1991-12-31';\n\t----- bird -----\tthrombosis_prediction",
    "1175": "\nSELECT T1.BirthDate, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID ORDER BY T2.HG DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1176": "\nSELECT T1.ANA FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 3605340 AND T2.Examination Date = '1996-12-02'\n\t----- bird -----\tthrombosis_prediction",
    "1177": "\nSELECT T1.T-CHO FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal' AND T2.`First Date` = '1995-09-04' AND T1.ID = 2927464;\n\t----- bird -----\tthrombosis_prediction",
    "1178": "\nSELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'AORTITIS' AND T1.SEX = 'M'; \n\t----- bird -----\tthrombosis_prediction",
    "1179": "\nSELECT T1.TAT, T2.IGG FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T1.Date > '1994-02-19'; \n\t----- bird -----\tthrombosis_prediction",
    "1180": "\nSELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Examination Date = '1992-06-12' AND T1.SEX = 'M';\n\t----- bird -----\tthrombosis_prediction",
    "1181": "\nSELECT T1.BirthDate - T2.Date AS Age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT = 8 AND T1.Date = '1991-10-21';\n\t----- bird -----\tthrombosis_prediction",
    "1182": "\nSELECT SUM(L.TAT) FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID WHERE E.Diagnosis = 'SJS' AND EXAMINATION.Date BETWEEN '1991-06-13' AND '1995-12-31'; \n\t----- bird -----\tthrombosis_prediction",
    "1183": "\nSELECT T1.Diagnosis, T2.Diagnosis \nFROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.Diagnosis = '1997/1/27'; \n\t----- bird -----\tthrombosis_prediction",
    "1184": "\nSELECT Symptoms FROM Laboratory WHERE PatientID IN ( SELECT ID FROM Patient WHERE Birthday = '1959-03-01' AND ExaminationDate LIKE '%1993-09-27%' )\n\t----- bird -----\tthrombosis_prediction",
    "1185": "\nSELECT T2.TG - T1.TG AS DecreaseRate FROM Patient T1 INNER JOIN Laboratory T2 ON T1.ID = T2.ID WHERE T1.Birthday LIKE '1959-02-18' AND T2.Date BETWEEN '1981-11-01' AND '1981-12-31';\n\t----- bird -----\tthrombosis_prediction",
    "1186": "\nSELECT DISTINCT T1.ID, T2.BIRTHDAY FROM Patient T1 INNER JOIN Examination T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Behcet's' AND T2.Examination Date BETWEEN '1970-01-01' AND '1997-12-31';\n\t----- bird -----\tthrombosis_prediction",
    "1187": "\nSELECT P.ID, P.SEX, P.Birthday, P.Description, P.First Date, P.Admission, L.Diagnosis, L.KCT, L.RVVT, L.LAC, L.Symptoms, T.Thrombosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.PatientID \nWHERE L.Date BETWEEN '1987-07-06' AND '1996-01-31' \nAND L.GPT > 30 \nAND L.ALB < 4;\n\t----- bird -----\tthrombosis_prediction",
    "1188": "\nSELECT P.ID, P.Birthday FROM Patient P WHERE P.SEX = 'F' AND P.BirthDate LIKE '%1964%'\n\t----- bird -----\tthrombosis_prediction",
    "1189": "\nSELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE 'Thrombosis level 2' AND T2.AnA Pattern = 'S' AND T1.ACL IgM > T1.ACL IGM * 0.20; \n\t----- bird -----\tthrombosis_prediction",
    "1190": "\nSELECT CAST(SUM(CASE WHEN T1.TG < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'proteinuria' AND T1.TG < 0\n\t----- bird -----\tthrombosis_prediction",
    "1191": "\nSELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.Examination Date LIKE '%1981%'\n\t----- bird -----\tthrombosis_prediction",
    "1192": "\nSELECT DISTINCT P.ID, P.SEX, P.Birthday, P.Description, P.First Date, P.Admission, L.Diagnosis, \n       L.KCT, L.RVVT, L.LAC, L.Symptoms, T.Thrombosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.Date LIKE '1991-10%' AND L.T-BIL < 18.5;\n\t----- bird -----\tthrombosis_prediction",
    "1193": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.Diagnosis LIKE '%P%' AND T1.Examination Date BETWEEN '1980-01-01' AND '1989-12-31';\n\t----- bird -----\tthrombosis_prediction",
    "1194": "\nINSERT INTO Patient (ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) \nVALUES (1, 'M', '2020-01-01', 'Unknown', '2020-01-01', 'Unknown', 'PSS');\n\t----- bird -----\tthrombosis_prediction",
    "1195": "\nSELECT AVG(T1.T-CHO) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.T-CHO > 400 AND T2.Diagnosis = 'SLE'; \n\t----- bird -----\tthrombosis_prediction",
    "1196": "\nSELECT Symptoms FROM Examination WHERE Diagnosis = 'Systemic Lupus Erythematosus'; \n\n\t----- bird -----\tthrombosis_prediction",
    "1197": "\nINSERT INTO Examination (ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis)\nVALUES (48473, '2022-01-01', 10.0, 20.0, 3, 'positive', 5.0, 'disease1', 'KCT', 'RVVT', 'LAC', 'Symptoms1', 1)\n\t----- bird -----\tthrombosis_prediction",
    "1198": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND Diagnosis = 'APS'; \n\t----- bird -----\tthrombosis_prediction",
    "1199": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Examination Date) = '1997' AND T1.T-BIL < 0.5; \n\t----- bird -----\tthrombosis_prediction",
    "1200": "\nSELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Diagnosis) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis > 10; \n\t----- bird -----\tthrombosis_prediction",
    "1201": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday LIKE '%1980%' AND T2.Diagnosis LIKE 'RA'\n\t----- bird -----\tthrombosis_prediction",
    "1202": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.Diagnosis LIKE '%BEHCET%' AND T2.Diagnosis NOT IN ('Hospitalized', 'Treatment') AND EXTRACT(YEAR FROM T2.Examination Date) BETWEEN 1995 AND 1997; \n\t----- bird -----\tthrombosis_prediction",
    "1203": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5; \n\t----- bird -----\tthrombosis_prediction",
    "1204": "\nSELECT T1.Diagnosis, T2.Date - T1.First Date AS Evaluation Time FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 821298; \n\t----- bird -----\tthrombosis_prediction",
    "1205": "\nSELECT T1.TG FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.ID = 57266 AND T1.TG < 6.5 \n\t----- bird -----\tthrombosis_prediction",
    "1206": "\nSELECT T1.Date, T2.GOT FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 48473 AND T1.GOT > ( SELECT MIN(GOT) FROM Laboratory WHERE ID = 48473 );\n\t----- bird -----\tthrombosis_prediction",
    "1207": "\nSELECT P.ID, P.SEX, P.Birthday FROM Patient P INNER JOIN Examination E ON P.ID = E.ID WHERE E.Examination Date LIKE '1994%' AND E.GOT BETWEEN 0 AND 35; \n\t----- bird -----\tthrombosis_prediction",
    "1208": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T1.SEX = 'M' AND T2.GPT > 35; \n\t----- bird -----\tthrombosis_prediction",
    "1209": "\nSELECT Diagnosis FROM Examination WHERE aCL IgM > 0 AND aCL IgA > 0 ORDER BY Birthday ASC;\n\t----- bird -----\tthrombosis_prediction",
    "1210": "\nSELECT AVG(LDH) FROM Laboratory WHERE ALP < 1 AND LDH >= 0 AND ALB > 0 AND UA = 'Normal' AND UN = 'Normal' AND T-BIL = 'Normal' AND T-CHO = 'Normal' AND TG = 'Normal' AND CPK = 'Normal' AND GLU = 'Normal' AND WBC = 'Normal'\n\t----- bird -----\tthrombosis_prediction",
    "1211": "\nSELECT T1.ID, T2.BirthDate FROM Patient T1 INNER JOIN Laboratory T2 ON T1.ID = T2.PATIENT_ID WHERE T2.LDH BETWEEN 100 AND 300; \n\t----- bird -----\tthrombosis_prediction",
    "1212": "\nSELECT CASE WHEN T1.TAT = 0 THEN 'Inpatient' ELSE 'Outpatient' END AS Treatment FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALB > 0 AND T1.T-CHO < 4.5\n\t----- bird -----\tthrombosis_prediction",
    "1213": "\nSELECT Patient.ID FROM Patient WHERE Birthday = '1982-04-01';\n\t----- bird -----\tthrombosis_prediction",
    "1214": "\nSELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.TP < ( SELECT MIN(T3.TP) FROM Laboratory AS T3 INNER JOIN Examination AS T4 ON T3.ID = T4.ID WHERE T4.Diagnosis = 'Total Protein')\n\t----- bird -----\tthrombosis_prediction",
    "1215": "\nSELECT T1.TP, T2.TP - 100 AS TP_deviation FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T1.SEX = 'F' AND T2.TP > 100;\n\t----- bird -----\tthrombosis_prediction",
    "1216": "SQL_START\nSELECT Patient.* FROM Patient WHERE Sex = 'Male' AND Albumin < 35 ORDER BY Birthday DESC;\n\t----- bird -----\tthrombosis_prediction",
    "1217": "\nSELECT T1.SEX, T2.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE STRFTIME('%Y', T1.Birthday) = '1982' AND T2.ALB real >= 3.5;\n\t----- bird -----\tthrombosis_prediction",
    "1218": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN T2.UGT / 1000000 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.T-CHO > 5.0; \n\t----- bird -----\tthrombosis_prediction",
    "1219": "\nSELECT AVG(T1.TA) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal' AND T1.TA > ( SELECT MIN(T1.TA) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal' )\n\t----- bird -----\tthrombosis_prediction",
    "1220": "\nSELECT P.ID, P.SEX, P.Birthday FROM Patient P INNER JOIN Laboratory L ON P.ID = L.PatientID WHERE L.UN BETWEEN 0 AND 26; \n\t----- bird -----\tthrombosis_prediction",
    "1221": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.Diagnosis = 'RA' AND UN < 100; \n\t----- bird -----\tthrombosis_prediction",
    "1222": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.CRE < 1.25 AND T1.SEX = 'M'\n\t----- bird -----\tthrombosis_prediction",
    "1223": "\nSELECT COUNT(T1.ID) AS MaleCreatinine, \n       COUNT(DISTINCT T2.ID) AS FemaleCreatinine,\n       CASE \n           WHEN T1.SEX = 'M' THEN 1\n           ELSE 0\n       END AS IsMale\nFROM Examination T1\nJOIN Patient T2 ON T1.ID = T2.ID\nWHERE T1.Diagnosis LIKE '%creatinine%' AND T1.Diagnosis NOT LIKE '%normal%'\nGROUP BY T1.SEX, T1.Diagnosis, T1.ID\n\t----- bird -----\tthrombosis_prediction",
    "1224": "\nSELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PatientID ORDER BY T2.T-BIL DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1225": "\nSELECT Sex, COUNT(*) as Total_Bilirubin FROM Laboratory WHERE T-BIL < 1.2 AND Sex = 'M' GROUP BY Sex; \n\t----- bird -----\tthrombosis_prediction",
    "1226": "\nSELECT P.ID, T.T-CHO FROM Patient P JOIN Laboratory T ON P.ID = T.ID ORDER BY T.T-CHO DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1227": "\nSELECT AVG(T1.T-CHO) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'Male' AND T1.T-CHO > 150; \n\t----- bird -----\tthrombosis_prediction",
    "1228": "\nSELECT P.ID, P.Diagnosis, T.TG\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.PatientID\nJOIN Examination E ON L.ID = E.ExaminationID\nWHERE E.TG > 100 AND T.TG >= 150;\n\t----- bird -----\tthrombosis_prediction",
    "1229": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.TG > 150 AND T1.Birthday >= DATE_SUB(CURRENT_DATE, INTERVAL 50 YEAR); \n\t----- bird -----\tthrombosis_prediction",
    "1230": " \n\t----- bird -----\tthrombosis_prediction",
    "1231": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T1.BIRTHDAY BETWEEN '1936-01-01' AND '1956-12-31' AND T2.CPK > 0.9;\n\t----- bird -----\tthrombosis_prediction",
    "1232": "\nSELECT P.ID, P.SEX, P.Birthday FROM Patient P INNER JOIN Laboratory L ON P.ID = L.PatientID WHERE L.GLU > 126 AND T-CHO < 200 \n\t----- bird -----\tthrombosis_prediction",
    "1233": "\nSELECT P.ID, L.GLU FROM Patient P JOIN Laboratory L ON P.ID = L.PATIENT_ID WHERE P.First Date = '1991-01-01' AND L.GLU < 140; \n\t----- bird -----\tthrombosis_prediction",
    "1234": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.PatientID \nWHERE L.WBC > 10 \nGROUP BY P.SEX, P.Birthday \nORDER BY P.SEX ASC; \n\t----- bird -----\tthrombosis_prediction",
    "1235": "\nSELECT T1.Diagnosis, T1.ID, T1.BirthDate FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 14; \n\t----- bird -----\tthrombosis_prediction",
    "1236": "\nSELECT P.ID, P.SEX, P.Birthday, P.Description, P.First Date, P.Admission, L.GOT, L.GPT, L.LDH, L.ALP, L.TP, L.ALB, L.UA, L.UN, L.CRE, L.T-BIL, L.T-CHO, L.TG, L.CPK, L.GLU, L.WBC, L.RBC, L.HGB, L.HCT, L.PLT, L.PT, L.APT, L.FG, L.PIC, L.TAT, L.TAT2, L.U-PRO, L.IGG, L.IGA, L.IGM, L.CRP, L.RA, L.RF, L.C3, L.C4, L.RNP, L.SM, L.SCB170, L.SSA, L.SSB, L.CENTROMEA, L.DNA, L.DNA-II FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND P.Age >= 50 AND L.GOT IS NOT NULL AND L.GPT IS NOT NULL AND L.LDH IS NOT NULL AND L.ALP IS NOT NULL AND L.TP IS NOT NULL AND L.ALB IS NOT NULL AND L.UA IS NOT NULL AND L.UN IS NOT NULL AND L.CRE IS NOT NULL AND L.T-BIL IS NOT NULL AND L.T-CHO IS NOT NULL AND L.TG IS NOT NULL AND L.CPK IS NOT NULL AND L.GLU IS NOT NULL AND L.WBC IS NOT NULL AND L.RBC IS NOT NULL AND L.HGB IS NOT NULL AND L.HCT IS NOT NULL AND L.PLT IS NOT NULL AND L.PT IS NOT NULL AND L.APT IS NOT NULL AND L.FG IS NOT NULL AND L.PIC IS NOT NULL AND L.TAT IS NOT NULL AND L.TAT2 IS NOT NULL AND L.U-PRO IS NOT NULL AND L.IGG IS NOT NULL AND L.IGA IS NOT NULL AND L.IGM IS NOT NULL AND L.CRP IS NOT NULL AND L.RA IS NOT NULL AND L.RF IS NOT NULL AND L.C3 IS NOT NULL AND L.C4 IS NOT NULL AND L.RNP IS NOT NULL AND L.SM IS NOT NULL AND L.SCB170 IS NOT NULL AND L.SSA IS NOT NULL AND L.SSB IS NOT NULL AND L.CENTROMEA IS NOT NULL AND L.DNA-II IS NOT NULL\n\t----- bird -----\tthrombosis_prediction",
    "1237": "\nSELECT P.ID, P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.HGB < 12 AND E.Examination Date IS NOT NULL \n\t----- bird -----\tthrombosis_prediction",
    "1238": "\nSELECT T1.ID, T2.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.HGB > 13.5; \n\t----- bird -----\tthrombosis_prediction",
    "1239": "\nSELECT T1.ID, T2.BirthDate FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Hematoclit > 40 AND T1.Hematoclit < 50; \n\t----- bird -----\tthrombosis_prediction",
    "1240": "\nSELECT AVG(T1.TG) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Examination Date) = '1991' AND T1.TG < 40; \n\t----- bird -----\tthrombosis_prediction",
    "1241": "\nSELECT COUNT(T1.ID) AS LowerThanNormal, \n       COUNT(DISTINCT T2.ID) AS HigherThanNormal FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.T-P < 150 AND T1.T-ATP > 200 GROUP BY T1.ID;\n\t----- bird -----\tthrombosis_prediction",
    "1242": "\nSELECT P.* FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.PatientID WHERE STRFTIME('%Y', L.Date) = '1984' AND L.T-CHO > 50; \n\t----- bird -----\tthrombosis_prediction",
    "1243": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > DATE('2028-01-01') AND T2.Diagnosis LIKE '%PT abnormal%'\n\t----- bird -----\tthrombosis_prediction",
    "1244": "\nSELECT DISTINCT P.ID, P.SEX, P.Birthday, P.Description, P.First Date, P.Admission, L.TAT, L.TAT2, L.U-PRO \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.PatientID \nWHERE L.TAT IS NOT NULL AND L.TAT2 IS NOT NULL AND L.TAT > 1992 AND L.TAT2 > 1992 AND L.TAT < 2000 AND L.TAT2 < 2000 AND L.TAT > 1993 AND L.TAT2 > 1993 AND L.TAT < 2001 AND L.TAT2 < 2001 \nAND P.Diagnosis = 'Normal'\n\t----- bird -----\tthrombosis_prediction",
    "1245": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Examination Date) > '1997-01-01' AND T2.T-BIL < 100; \n\t----- bird -----\tthrombosis_prediction",
    "1246": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT LIKE 'Mild' AND T2.Thrombosis > 0; \n\t----- bird -----\tthrombosis_prediction",
    "1247": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T1.SEX = 'Male' AND T2.T-BIL < 150 AND T2.T-CHO > 40; \n\t----- bird -----\tthrombosis_prediction",
    "1248": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE STRFTIME('%Y', T1.Birthday) > '1980-01-01' AND T2.GOT IS NOT NULL; \n\t----- bird -----\tthrombosis_prediction",
    "1249": "\nSELECT DISTINCT T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RVVT LIKE 'Proteinuria' AND T1.Diagnosis NOT IN ('Hypertension', 'Diabetes Mellitus') \n\t----- bird -----\tthrombosis_prediction",
    "1250": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.Proteinuria = 0; \n\t----- bird -----\tthrombosis_prediction",
    "1251": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ACL_IgG < 10 AND T2.Symptoms LIKE '%abortion%' \n\t----- bird -----\tthrombosis_prediction",
    "1252": "\nSELECT COUNT(T1.Symptoms) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TBIL IS NULL AND T1.TG > 0 AND T1.GOT < 50 AND T1.GPT < 40 AND T1.LDH < 20 AND T1.IGA < 100 AND T1.IGM < 200 AND T1.CRP = 'Negative'\n\t----- bird -----\tthrombosis_prediction",
    "1253": "\nSELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.aCL IgA > 0 AND T1.Diagnosis IN ( SELECT Diagnosis FROM Examination WHERE aCL IgA >= 40 )\n\t----- bird -----\tthrombosis_prediction",
    "1254": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'Normal Ig A' AND T2.Examination Date >= '1990-01-01'; \n\t----- bird -----\tthrombosis_prediction",
    "1255": "\nSELECT T1.Disease, COUNT(T2.Disease) AS Count\nFROM Examination AS T1\nJOIN Patient AS T2 ON T1.ID = T2.ID\nWHERE T1.ACL_M >= 40 AND T1.Diagnosis IS NOT NULL\nGROUP BY T1.Disease\nORDER BY Count DESC;\n\t----- bird -----\tthrombosis_prediction",
    "1256": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-C3 < 0 AND T2.CRP IS NULL \n\t----- bird -----\tthrombosis_prediction",
    "1257": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-CRP IS NOT NULL AND T1.BirthDate < '18'\n\t----- bird -----\tthrombosis_prediction",
    "1258": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.RVVT LIKE 'Normal' AND T2.T-CHO > 0.5; \n\t----- bird -----\tthrombosis_prediction",
    "1259": "\nSELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) > '1995-01-01' AND T2.RVTVT LIKE '%Normal%'\n\t----- bird -----\tthrombosis_prediction",
    "1260": "\nSELECT Patient.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RF IS NOT NULL AND T1.Birthday > '60'; \n\t----- bird -----\tthrombosis_prediction",
    "1261": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RF = 0 AND T1.Thrombosis = 0; \n\t----- bird -----\tthrombosis_prediction",
    "1262": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ANA Pattern = 'P' AND T1.C3 > 0; \n\t----- bird -----\tthrombosis_prediction",
    "1263": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-CHO < 30 AND T2.TG > 50 GROUP BY T1.ID ORDER BY SUM(T2.IGA) DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1264": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-CHO < 4 AND T2.Diagnosis LIKE '%blood clot%'\n\t----- bird -----\tthrombosis_prediction",
    "1265": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'Normal' AND T1.Admission LIKE 'Hospital'; \n\t----- bird -----\tthrombosis_prediction",
    "1266": "\nSELECT T1.BirthDate FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'Abnormal anti-ribonuclear protein' ORDER BY T2.Examination Date LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1267": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.Diagnosis = 'Thrombosis' AND T1.Thrombosis > 100 AND T1.ACL_IgM = 0 AND T1.ACL_IgA = 0 AND T1.ANA Pattern = 'Negative' AND T1.Diagnosis = 'Thrombosis'; \n\t----- bird -----\tthrombosis_prediction",
    "1268": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'Abnormal anti-SM' ORDER BY T1.Birthdate LIMIT 3; \n\t----- bird -----\tthrombosis_prediction",
    "1269": "\nSELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Examination Date > '1997-01-01' AND T2.Sex = 'F' AND T2.Diagnosis LIKE '%anti-scl70%' \n\t----- bird -----\tthrombosis_prediction",
    "1270": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ANA = 0 AND T2.Symptoms LIKE '%vertigo%'\n\t----- bird -----\tthrombosis_prediction",
    "1271": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEA = 'N' AND T2.Examination Date < '1990-01-01'; \n\t----- bird -----\tthrombosis_prediction",
    "1272": "\nINSERT INTO Patient (ID, SEX, Birthday, Description, First Date, Admission) \nVALUES (1, 'M', '2020-01-01', 'Patient 1', '2022-01-01', '2022-01-05');\n\t----- bird -----\tthrombosis_prediction",
    "1273": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T1.ASB = 'Normal'; \n\t----- bird -----\tthrombosis_prediction",
    "1274": "\nSELECT COUNT(DISTINCT T1.Symptoms) AS SymptomCount FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T2.Diagnosis LIKE '%SSB%' AND T1.ACL_SSB IS NOT NULL; \n\t----- bird -----\tthrombosis_prediction",
    "1275": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Male' AND T2.AN = 0 AND T2.ANA Pattern = 'Normal' AND T2.ACL IgG = 0 AND T2.ACL IgM = 0 AND T2.ANA = 0\n\t----- bird -----\tthrombosis_prediction",
    "1276": "\nSELECT DISTINCT T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ACL_IgA < 10 AND T1.ACL_IgM < 10 AND T1.Diagnosis LIKE '%Anti-DNA%' \n\t----- bird -----\tthrombosis_prediction",
    "1277": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ACL_DNA < 0 AND T2.Diagnosis IS NULL \n\t----- bird -----\tthrombosis_prediction",
    "1278": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE 'Abnormal level of anti-DNA-II' AND T2.Admission IS NOT NULL; \n\t----- bird -----\tthrombosis_prediction",
    "1279": "\nSELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.T-BIL > 50 AND T1.T-CHO < 10; \n\t----- bird -----\tthrombosis_prediction",
    "1280": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-BIL < 40 AND T1.SEX = 'M' AND T2.T-CHO > 4.0;\n\t----- bird -----\tthrombosis_prediction",
    "1281": "\nSELECT T1.Birthdate FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PatientID WHERE T2.T-BIL > 0 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200 AND T2.CRE = 1 AND T2.T-BIL < 60 AND T2.T-CHO < 10 AND T2.GOT > 50 AND T2.GPT > 40 AND T2.LDH > 20 AND T2.ALB > 30 AND T2.UA > 100 AND T2.UN < 200\n\t----- bird -----\tthrombosis_prediction",
    "1282": "\nSELECT T1.Birthdate, AVG(T2.TP) AS avg_TP FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TP < 40 AND T2.Diagnosis = 'Normal' GROUP BY T1.Birthdate ORDER BY AVG(T2.TP) DESC LIMIT 3;\n\t----- bird -----\tthrombosis_prediction",
    "1283": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-BIL = 'Normal' AND T2.T-CHO = 'Normal' AND T1.SEX = 'Male';\n\t----- bird -----\tthrombosis_prediction",
    "1284": "\nSELECT T1.First Date FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GLH > 0 AND T2.Diagnosis = 'Normal' ORDER BY T1.GLH DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1285": "\nINSERT INTO Laboratory (ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SSA, SSB, CENTROMEA, DNA, DNA-II) \nVALUES (1, '2022-01-01', 1000, 200, 150, 50, 20, 10, 5, 15, 25, 30, 40, 60, 80, 120, 180, 250, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100);\n\t----- bird -----\tthrombosis_prediction",
    "1286": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-BIL < 0 AND T2.T-CHO > 50; \n\t----- bird -----\tthrombosis_prediction",
    "1287": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-CHO < 4 AND T2.TG > 0.5; \n\t----- bird -----\tthrombosis_prediction",
    "1288": "\nSELECT DISTINCT Diagnosis FROM Examination WHERE aCL IGProtein < 40; \n\n\t----- bird -----\tthrombosis_prediction",
    "1289": "\nSELECT COUNT(T1.TG) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T1.Diagnosis = 'SJS' AND T2.TP < 0.3; \n\t----- bird -----\tthrombosis_prediction",
    "1290": "\nSELECT T1.Examination Date FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal' AND T1.ACL IGAL > ( SELECT MAX(T1.ACL IGAL) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal' )\n\t----- bird -----\tthrombosis_prediction",
    "1291": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T1.SEX = 'M' AND T2.T-CHO > 0.5 AND T2.TG < 20 AND T2.TG > 15\n\t----- bird -----\tthrombosis_prediction",
    "1292": "\nSELECT MAX(T1.TG) AS uric_acid_level, T2.ACL_IgM FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Cardiomyopathy' AND T2.Symptoms = 'High uric acid level' AND T2.TG > 6.5 GROUP BY T1.ID, T2.ACL_IgM\n\t----- bird -----\tthrombosis_prediction",
    "1293": "\nSELECT MAX(T1.T-CHO) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal Creatinine' AND T1.T-BIL > 0; \n\t----- bird -----\tthrombosis_prediction",
    "1294": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal' AND T2.CRE = ( SELECT MAX(CRE) FROM Examination )\n\t----- bird -----\tthrombosis_prediction",
    "1295": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE 'Peripheral pattern' AND T1.TBIL > 0.05; \n\t----- bird -----\tthrombosis_prediction",
    "1296": "\nSELECT MAX(T1.TBIL) AS TBIL FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal' AND T1.TBIL > ( SELECT MAX(T1.TBIL) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal' )\n\t----- bird -----\tthrombosis_prediction",
    "1297": "\nSELECT COUNT(T1.ID) AS TotalPatients FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-CHO > 5 AND T2.TBIL < 150; \n\t----- bird -----\tthrombosis_prediction",
    "1298": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE 'Normal Cholesterol' AND T2.AnA Pattern LIKE '%P%'\n\t----- bird -----\tthrombosis_prediction",
    "1299": "\nSELECT COUNT(T1.ID) AS Total FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG < 150 AND Symptoms LIKE '%other%'\n\t----- bird -----\tthrombosis_prediction",
    "1300": "\nSELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG > 150 AND T2.Diagnosis = ( SELECT Diagnosis FROM Examination ORDER BY T1.TG DESC LIMIT 1 ) \n\t----- bird -----\tthrombosis_prediction",
    "1301": "\nSELECT Patient.ID FROM Patient WHERE Thrombosis = 0 AND CRP != \"normal\"\n\t----- bird -----\tthrombosis_prediction",
    "1302": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-CHO > 0 AND T2.TBIL < 150 AND T2.T-CHO - T2.TBIL > 10; \n\t----- bird -----\tthrombosis_prediction",
    "1303": "\nSELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.GOT > 100 AND T2.GPT < 50 ORDER BY T1.Birthday DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1304": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Normal Blood Glucose' AND T1.Thrombosis = 0; \n\t----- bird -----\tthrombosis_prediction",
    "1305": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.WBC < 4,000; \n\t----- bird -----\tthrombosis_prediction",
    "1306": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC < 4E9; \n\t----- bird -----\tthrombosis_prediction",
    "1307": "\nSELECT Patient.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RBC > 14 AND T2.Outpatient = 'Yes' \n\t----- bird -----\tthrombosis_prediction",
    "1308": "\nSELECT COUNT(DISTINCT T1.Symptoms) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.PATIENT_ID WHERE T2.T-CHO > 0 AND T2.TG < 150 AND T2.GOT < 100 AND T2.GPT < 50 AND T2.LDH < 200 AND T2.ALB < 20 AND T2.UA < 40 AND T2.UN < 30 AND T2.CRP = 'Low'\n\t----- bird -----\tthrombosis_prediction",
    "1309": "\nSELECT PLT FROM Laboratory WHERE TAT < 150 AND Diagnosis = 'MCTD';\n\t----- bird -----\tthrombosis_prediction",
    "1310": "\nSELECT AVG(T1.TAT) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'Male' AND T1.TAT IS NOT NULL AND T1.TAT2 IS NULL AND T1.TAT3 IS NULL AND T1.TAT4 IS NULL AND T1.TAT5 IS NULL AND T1.TAT6 IS NULL AND T1.TAT7 IS NULL AND T1.TAT8 IS NULL AND T1.TAT9 IS NULL AND T1.TAT10 IS NULL AND T1.TAT11 IS NULL AND T1.TAT12 IS NULL AND T1.TAT13 IS NULL AND T1.TAT14 IS NULL AND T1.TAT15 IS NULL AND T1.TAT16 IS NULL AND T1.TAT17 IS NULL AND T1.TAT18 IS NULL AND T1.TAT19 IS NULL AND T1.TAT20 IS NULL AND T1.TAT21 IS NULL AND T1.TAT22 IS NULL AND T1.TAT23 IS NULL AND T1.TAT24 IS NULL AND T1.TAT25 IS NULL AND T1.TAT26 IS NULL AND T1.TAT27 IS NULL AND T1.TAT28 IS NULL AND T1.TAT29 IS NULL AND T1.TAT30 IS NULL\n\t----- bird -----\tthrombosis_prediction",
    "1311": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Severe Thrombosis' AND T2.T-P < 14; \n\t----- bird -----\tthrombosis_prediction",
    "1312": "\nSELECT m.major_name FROM member AS t1 INNER JOIN major AS t2 ON t1.zip = t2.zip_code WHERE t1.email = 'angela.sanders@example.com'; \n\t----- bird -----\tstudent_club",
    "1313": "\nSELECT COUNT(member_id) FROM member WHERE college = \"College of Engineering\" AND position = \"Student_Club\";\n\t----- bird -----\tstudent_club",
    "1314": "\nSELECT T1.first_name, T1.last_name \nFROM member M \nJOIN major M2 ON M.zip = M2.zip_code \nJOIN event E ON M.link_to_event = E.event_id \nWHERE E.type = 'Student_Club' AND M.department = 'Art_and_Design';\n\t----- bird -----\tstudent_club",
    "1315": "\nSELECT COUNT(link_to_member) FROM attendance WHERE event_name = \"Women's Soccer\" AND link_to_event IN ( SELECT event_id FROM event WHERE type = 'event' )\n\t----- bird -----\tstudent_club",
    "1316": "\nSELECT phone FROM member WHERE zip = ( SELECT zip_code FROM event WHERE event_name = 'Women's Soccer' ) AND position = 'Student';\n\t----- bird -----\tstudent_club",
    "1317": "\nSELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.event_name = 'Women\\'s Soccer' AND T1.t_shirt_size = 'Medium'; \n\t----- bird -----\tstudent_club",
    "1318": "\nSELECT event_id FROM attendance WHERE link_to_member = ( SELECT member_id FROM member WHERE position = 'Student_Club' ) ORDER BY COUNT(*) DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1319": "SQL_START\nINSERT INTO major (major_id, major_name, department, college) \nVALUES ('VP', 'Student_Club', 'Business Administration', 'College Name');\n\t----- bird -----\tstudent_club",
    "1320": "\nSELECT event_name FROM attendance WHERE link_to_member = \"Maya Mclean\";\n\t----- bird -----\tstudent_club",
    "1321": "\nSELECT COUNT(event_id) FROM attendance WHERE link_to_event = \"Student_Club\" AND event_date = \"2019\";\n\t----- bird -----\tstudent_club",
    "1322": "\nSELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.type = 'meeting' AND T1.member_count > 10;\n\t----- bird -----\tstudent_club",
    "1323": "\nSELECT event_name FROM attendance WHERE link_to_event = 'Student_Club' AND count(*) > 20;\n\t----- bird -----\tstudent_club",
    "1324": "\nSELECT AVG(CASE WHEN type = 'meeting' THEN cost ELSE 0 END) AS avg_attendance FROM expense WHERE expense_date LIKE '%2020%' AND link_to_event IS NOT NULL; \n\t----- bird -----\tstudent_club",
    "1325": "\nSELECT MAX(cost) FROM expense WHERE event_type = \"club events\" AND category = \"support\";\n\t----- bird -----\tstudent_club",
    "1326": "\nSELECT COUNT(member_id) FROM member WHERE position = 'Student_Club' AND major_name = 'Environmental Engineering';\n\t----- bird -----\tstudent_club",
    "1327": "\nSELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.event_name = 'Laugh Out Loud' AND T2.type = 'Attendee'; \n\t----- bird -----\tstudent_club",
    "1328": "\nSELECT last_name FROM member WHERE position = 'Student' AND major_id IN ( SELECT major_id FROM major WHERE major_name = 'Law and Constitutional Studies' ) \n\t----- bird -----\tstudent_club",
    "1329": "SQL_START\nINSERT INTO zip_code (zip_code, type, city, county, state, short_state) \nVALUES (12345, 'residential', 'Anytown', 'Doe County', 'CA', 'CA')\n\t----- bird -----\tstudent_club",
    "1330": "\nSELECT college FROM major WHERE major_name = 'Tyler Hewitt';\n\t----- bird -----\tstudent_club",
    "1331": "\nSELECT SUM(amount) FROM income WHERE member_id = \"Vice President\";\n\t----- bird -----\tstudent_club",
    "1332": "\nSELECT SUM(b.cost) FROM expense AS e INNER JOIN attendance AS a ON e.link_to_member = a.link_to_member WHERE e.link_to_event = 'September Meeting' AND e.expense_description = 'Food' AND a.link_to_member = 'Student_Club';\n\t----- bird -----\tstudent_club",
    "1333": "SQL_START\nINSERT INTO zip_code (zip_code, type, city, county, state, short_state) \nVALUES (10001, 'city', 'state', 'county', 'state', 'short_state');\n\t----- bird -----\tstudent_club",
    "1334": "\nSELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'IL' AND T1.position = 'Student_Club'; \n\t----- bird -----\tstudent_club",
    "1335": "\nSELECT SUM(b.cost) FROM expense AS e INNER JOIN attendance AS a ON e.link_to_member = a.link_to_member WHERE e.link_to_event = 'September Meeting' AND e.approved = 'true' AND a.event_date LIKE '%September%' AND a.link_to_member IN ( SELECT member_id FROM member WHERE first_name = 'Student' AND last_name = 'Club');\n\t----- bird -----\tstudent_club",
    "1336": "\nSELECT department FROM major WHERE major_name = 'Pierce and Guidi';\n\t----- bird -----\tstudent_club",
    "1337": "\nSELECT SUM(budget.remaining) FROM budget AS b INNER JOIN event AS e ON b.link_to_event = e.event_id WHERE e.type = 'October Speaker' AND b.category = 'Budget'; \n\t----- bird -----\tstudent_club",
    "1338": "\nSELECT expense_id FROM expense WHERE expense_date = \"October 8, 2019\" AND event_name = \"October Meeting\";\n\t----- bird -----\tstudent_club",
    "1339": "\nSELECT SUM(CASE WHEN event_date LIKE '%September%' THEN cost ELSE 0 END) AS average_cost FROM expense WHERE link_to_member = 'Elijah Allen' AND event_date BETWEEN '2023-09-01' AND '2023-10-31';\n\t----- bird -----\tstudent_club",
    "1340": "\nSELECT SUM(CASE WHEN status = 'Spent' THEN cost ELSE 0 END) AS total_spent FROM budget WHERE link_to_event IN ( SELECT event_id FROM attendance WHERE link_to_member = 'Student_Club' AND event_date LIKE '%2019%' OR event_date LIKE '%2020%' )\n\t----- bird -----\tstudent_club",
    "1341": "\nSELECT location FROM event WHERE event_name = \"Spring Budget Review\"\n\t----- bird -----\tstudent_club",
    "1342": "\nSELECT cost FROM expense WHERE expense_description = \"Posters\" AND expense_date = \"2019/09/04\";\n\t----- bird -----\tstudent_club",
    "1343": "\nSELECT SUM(b.remaining) - SUM(b.spent) AS remaining FROM budget b WHERE b.category = 'Food';\n\t----- bird -----\tstudent_club",
    "1344": "\nSELECT notes FROM attendance WHERE event_date = \"2019-09-14\";\n\t----- bird -----\tstudent_club",
    "1345": "\nSELECT COUNT(major_id) FROM major WHERE department = \"College of Humanities and Social Sciences\";\n\t----- bird -----\tstudent_club",
    "1346": "\nSELECT phone FROM member WHERE first_name = \"Carlo\" AND last_name = \"Jacobs\";\n\t----- bird -----\tstudent_club",
    "1347": "\nSELECT county FROM zip_code WHERE city = \"Adela O'Gallagher\";\n\t----- bird -----\tstudent_club",
    "1348": "\nSELECT COUNT(budget_id) FROM budget WHERE event_status = \"Exceeded\" AND link_to_event = \"November Meeting\";\n\t----- bird -----\tstudent_club",
    "1349": "\nSELECT SUM(b.amount) FROM budget AS b INNER JOIN event AS e ON b.link_to_event = e.event_id WHERE e.type = 'September Speaker' AND e.status = 'Active'; \n\t----- bird -----\tstudent_club",
    "1350": "\nSELECT event_status FROM budget WHERE link_to_event = \"Post Cards, Posters\" AND expense_date = \"2019/8/20\";\n\t----- bird -----\tstudent_club",
    "1351": "\nSELECT m.major_name FROM member AS t1 INNER JOIN major AS t2 ON t1.zip = t2.zip_code INNER JOIN event AS t3 ON t1.member_id = t3.link_to_member WHERE t1.first_name = 'Brent' AND t1.last_name = 'Thomason'\n\t----- bird -----\tstudent_club",
    "1352": "\nSELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.zip = T2.zip_code INNER JOIN event AS T3 ON T1.zip = T3.location WHERE T2.major_name = 'Human Development and Family Studies' AND T1.t_shirt_size = 'Large';\n\t----- bird -----\tstudent_club",
    "1353": "\nSELECT DISTINCT T1.type FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip = T2.zip WHERE T2.first_name = 'Christof' AND T2.last_name = 'Nielson'; \n\t----- bird -----\tstudent_club",
    "1354": "\nSELECT major_name FROM major WHERE major_id = 'Vice President';\n\t----- bird -----\tstudent_club",
    "1355": "\nSELECT short_state FROM zip_code WHERE city = \"Sacha Harrison\"\n\t----- bird -----\tstudent_club",
    "1356": "\nSELECT department FROM major WHERE major_name = 'President';\n\t----- bird -----\tstudent_club",
    "1357": "\nSELECT event_date FROM attendance WHERE link_to_member = \"Connor Hilton\" AND status = \"paid\";\n\t----- bird -----\tstudent_club",
    "1358": "\nSELECT first_name, last_name FROM member WHERE zip = ( SELECT zip_code FROM budget ORDER BY spent LIMIT 1 ) AND approved = 'true' \n\t----- bird -----\tstudent_club",
    "1359": "\nSELECT COUNT(budget_id) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.link_to_event = T2.link_to_event WHERE T1.event_status = 'Advertisement' AND T2.expense_description = 'Yearly Kickoff' meeting AND T1.event_date LIKE '%October%' GROUP BY T1.event_id HAVING COUNT(T1.event_id) > (SELECT MAX(event_id) FROM budget AS T3 INNER JOIN expense AS T4 ON T3.link_to_event = T4.link_to_event WHERE T3.event_status = 'Advertisement' AND T4.expense_description = 'Yearly Kickoff' meeting AND T3.event_date LIKE '%October%')\n\t----- bird -----\tstudent_club",
    "1360": "\nSELECT CAST(SUM(CASE WHEN budget_type = 'Parking' THEN budget_remaining ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN budget_type = 'November Speaker' THEN budget_remaining ELSE 0 END) FROM budget;\n\t----- bird -----\tstudent_club",
    "1361": "\nSELECT SUM(cost) FROM expense WHERE expense_description = 'pizzas';\n\t----- bird -----\tstudent_club",
    "1362": "\nSELECT city FROM zip_code WHERE county = 'Orange County, Virginia';\n\t----- bird -----\tstudent_club",
    "1363": "\nCREATE OR REPLACE FUNCTION get_college_departments()\nRETURNS TABLE (\nevent_id text,\ndepartment text\n) AS $$\nSELECT DISTINCT m.department \nFROM member m \nJOIN major m2 ON m.zip = m2.zip_code \nWHERE m2.major_name IN ('College of Arts and Sciences', 'College of Humanities and Social Sciences');\n$$ LANGUAGE plpg \n\t----- bird -----\tstudent_club",
    "1364": "\nSELECT location FROM member WHERE first_name = 'Amy' AND last_name = 'Firth';\n\t----- bird -----\tstudent_club",
    "1365": "\nSELECT expense_id FROM expense WHERE link_to_budget IN ( SELECT budget_id FROM budget ORDER BY remaining LIMIT 1 )\n\t----- bird -----\tstudent_club",
    "1366": "\nSELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_event = 'October Meeting'\n\t----- bird -----\tstudent_club",
    "1367": "\nSELECT college FROM member GROUP BY college ORDER BY COUNT(*) DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1368": "\nINSERT INTO member (member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major) \nVALUES ('809-555-3360', 'John', 'Doe', 'john.doe@example.com', 'Software Engineer', 'Large', '809-555-3360', 12345, 'major_1');\n\t----- bird -----\tstudent_club",
    "1369": "\nSELECT MAX(budget_amount) AS max_budget FROM budget;\n\t----- bird -----\tstudent_club",
    "1370": "\nINSERT INTO expense (expense_id, expense_description, cost, approved, link_to_member, link_to_budget) \nVALUES ('VP Expense 1', 'Office Supplies', 100.00, 'Approved', 'vp', 'event');\n\t----- bird -----\tstudent_club",
    "1371": "\nSELECT COUNT(link_to_member) FROM attendance WHERE event_name = \"Women's Soccer\"\n\t----- bird -----\tstudent_club",
    "1372": "\nSELECT date_received FROM income WHERE member_id = \"Casey Mason\"\n\t----- bird -----\tstudent_club",
    "1373": "\nSELECT COUNT(zip_code) FROM member WHERE state = 'MD';\n\t----- bird -----\tstudent_club",
    "1374": "\nSELECT COUNT(event_id) FROM attendance WHERE link_to_member = \"954-555-6240\";\n\t----- bird -----\tstudent_club",
    "1375": "\nSELECT first_name, last_name FROM member WHERE department = \"School of Applied Sciences, Technology and Education\" \n\t----- bird -----\tstudent_club",
    "1376": "\nSELECT event_id, CAST(SUM(budget_remaining) AS REAL) / budget_spent FROM budget WHERE status = \"closed\" GROUP BY event_id ORDER BY SUM(budget_remaining) DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1377": "\nSELECT COUNT(member_id) FROM member WHERE position = 'President';\n\t----- bird -----\tstudent_club",
    "1378": "\nSELECT MAX(budget_remaining) FROM budget WHERE event_status = 'High';\n\t----- bird -----\tstudent_club",
    "1379": "\nSELECT COUNT(event_id) FROM event WHERE event_date LIKE '%2020%' AND type = 'meeting';\n\t----- bird -----\tstudent_club",
    "1380": "\nINSERT INTO budget (budget_id, category, spent) VALUES ('food', 'Food', 10000);\nINSERT INTO budget (budget_id, category, spent) VALUES ('food', 'Food', 5000);\n\t----- bird -----\tstudent_club",
    "1381": "\nSELECT event_name FROM attendance WHERE link_to_event LIKE '%7%' GROUP BY event_name HAVING COUNT(event_id) > 7 \n\t----- bird -----\tstudent_club",
    "1382": "\nSELECT DISTINCT T1.first_name, T1.last_name \nFROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nWHERE T1.major_name = 'Interior Design' AND T2.event_name = 'Community Theater';\n\t----- bird -----\tstudent_club",
    "1383": "\nSELECT first_name FROM member WHERE zip = 29624 AND college = 'Georgetown'\n\t----- bird -----\tstudent_club",
    "1384": "\nSELECT COUNT(income_id) FROM income WHERE member_id = \"Grant Gilmour\";\n\t----- bird -----\tstudent_club",
    "1385": "\nSELECT member_id FROM income WHERE amount > \"40\"\n\t----- bird -----\tstudent_club",
    "1386": "\nSELECT SUM(cost) FROM expense WHERE link_to_event = \"Yearly Kickoff\";\n\t----- bird -----\tstudent_club",
    "1387": "\nSELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN budget AS T2 ON T1.zip = T2.zip_code WHERE T2.event_status = 'Yearly Kickoff' AND T2.link_to_event = 'Budget Manager';\n\t----- bird -----\tstudent_club",
    "1388": "\nSELECT T1.first_name, T1.last_name, T2.amount AS income_source \nFROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member \nWHERE T2.source = 'Student' AND T2.amount > ( SELECT MAX(amount) FROM income );\n\t----- bird -----\tstudent_club",
    "1389": "\nSELECT MIN(cost) FROM expense\n\t----- bird -----\tstudent_club",
    "1390": "\nSELECT SUM(cost) AS total_cost, \n       SUM(CASE WHEN type = 'Yearly Kickoff' THEN cost ELSE 0 END) AS yearly_kickoff_cost,\n       CAST(SUM(CASE WHEN type = 'Yearly Kickoff' THEN cost ELSE 0 END) AS REAL) * 100 / SUM(cost) AS percentage\nFROM expense\n\t----- bird -----\tstudent_club",
    "1391": "\nSELECT COUNT(T1.major_id) AS finance_count, COUNT(T2.major_id) AS physics_count FROM major AS T1 INNER JOIN budget AS T2 ON T1.major_id = T2.category WHERE T1.major_name = 'Finance' OR T1.major_name = 'Physics'\n\t----- bird -----\tstudent_club",
    "1392": "\nSELECT source FROM income WHERE date_received = \"September 2019\" AND amount > ( SELECT MAX(amount) FROM income WHERE date_received = \"September 2019\" );\n\t----- bird -----\tstudent_club",
    "1393": "\nSELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_event = 'Student_Club' AND T1.position = 'Secretary'; \n\t----- bird -----\tstudent_club",
    "1394": "\nSELECT COUNT(member_id) FROM member WHERE position = 'Student_Club' AND major_name = 'Physics Teaching';\n\t----- bird -----\tstudent_club",
    "1395": "\nSELECT COUNT(link_to_member) FROM attendance WHERE event_name = 'Community Theater' AND event_date LIKE '%2019%' \n\t----- bird -----\tstudent_club",
    "1396": "\nSELECT COUNT(event_id) FROM attendance WHERE link_to_member = \"Luisa Guidi\"\n\t----- bird -----\tstudent_club",
    "1397": "\nSELECT AVG(cost) FROM expense WHERE event_name = \"Student_Club\" AND category = \"Food\";\n\t----- bird -----\tstudent_club",
    "1398": "\nSELECT MAX(cost) AS highest_amount_spent FROM expense WHERE expense_description = \"advertisement\" \n\t----- bird -----\tstudent_club",
    "1399": "\nSELECT COUNT(*) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T1.event_name = 'Women\\'s Soccer';\n\t----- bird -----\tstudent_club",
    "1400": "\nSELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) FROM event WHERE event_date LIKE '%2019%' AND link_to_member IN ( SELECT member_id FROM member WHERE position = 'Student_Club')\n\t----- bird -----\tstudent_club",
    "1401": "\nINSERT INTO budget (budget_id, category, spent, remaining, amount, event_status, link_to_event) VALUES ('poster_cost', 'event', 1000.00, 900.00, 1100.00, 'approved', 'September Speaker');\n\t----- bird -----\tstudent_club",
    "1402": "\nSELECT t_shirt_size, COUNT(*) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.source = 'club' GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1403": "\nSELECT event_name FROM budget WHERE cost > ( SELECT MAX(cost) FROM budget ) ORDER BY cost DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1404": "\nSELECT type, SUM(cost) AS total_value FROM expense WHERE link_to_event = \"October Meeting\" GROUP BY type;\n\t----- bird -----\tstudent_club",
    "1405": "\nSELECT budget_id, SUM(cost) AS amount, category FROM expense WHERE link_to_event = \"April Speaker\" GROUP BY category ORDER BY amount ASC;\n\t----- bird -----\tstudent_club",
    "1406": "\nSELECT MAX(cost) AS highest_budget FROM budget WHERE category = 'Food';\n\t----- bird -----\tstudent_club",
    "1407": "\nSELECT T1.category, SUM(T2.cost) AS total_spent FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget GROUP BY T1.category ORDER BY SUM(T2.cost) DESC LIMIT 3; \n\t----- bird -----\tstudent_club",
    "1408": "\nSELECT SUM(cost) FROM expense WHERE category = \"Parking\";\n\t----- bird -----\tstudent_club",
    "1409": "\nSELECT SUM(cost) FROM expense WHERE expense_date = \"8/20/2019\";\n\t----- bird -----\tstudent_club",
    "1410": "\nSELECT T1.first_name || ' ' || T1.last_name AS full_name, SUM(T2.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name; \n\t----- bird -----\tstudent_club",
    "1411": "\nINSERT INTO expense (expense_description, cost, approved, link_to_member, link_to_budget) \nVALUES ('Travel to New York', 1000.00, 'Approved', 'Sacha Harrison', 'Event Budget');\n\t----- bird -----\tstudent_club",
    "1412": "\nSELECT DISTINCT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large'\n\t----- bird -----\tstudent_club",
    "1413": "\nSELECT zip_code FROM member WHERE amount < \"50\"\n\t----- bird -----\tstudent_club",
    "1414": "\nSELECT major_name FROM major WHERE member_id = 'Phillip Cullen';\n\t----- bird -----\tstudent_club",
    "1415": "\nSELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.zip = T2.zip_code WHERE T2.major_name = 'Business'\n\t----- bird -----\tstudent_club",
    "1416": "\nSELECT COUNT(member_id) FROM member WHERE t_shirt_size = \"Medium\" AND position = \"Business\";\n\t----- bird -----\tstudent_club",
    "1417": "\nSELECT type FROM budget WHERE remaining > \"30\"\n\t----- bird -----\tstudent_club",
    "1418": "\nSELECT category FROM budget WHERE link_to_event = \"MU 215\";\n\t----- bird -----\tstudent_club",
    "1419": "\nSELECT category FROM budget WHERE event_date = \"2020-03-24T12:00:00\"\n\t----- bird -----\tstudent_club",
    "1420": "\nSELECT major_name FROM major WHERE member_id = 'Vice President';\n\t----- bird -----\tstudent_club",
    "1421": "\nSELECT CAST(SUM(CASE WHEN major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(member_id) FROM member;\n\t----- bird -----\tstudent_club",
    "1422": "\nSELECT category FROM budget WHERE link_to_event = \"MU 215\";\n\t----- bird -----\tstudent_club",
    "1423": "\nSELECT income_id FROM income WHERE amount = \"50\";\n\t----- bird -----\tstudent_club",
    "1424": "\nSELECT COUNT(member_id) FROM member WHERE t_shirt_size = \"Extra Large\";\n\t----- bird -----\tstudent_club",
    "1425": "\nSELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education'; \n\n\t----- bird -----\tstudent_club",
    "1426": "\nSELECT T1.last_name, T2.department, T2.college \nFROM member AS T1 INNER JOIN major AS T2 ON T1.zip = T2.zip_code \nWHERE T2.major_name = 'Environmental Engineering'\n\t----- bird -----\tstudent_club",
    "1427": "\nINSERT INTO budget (category, spent, amount) \nVALUES ('Miscellaneous', 0, 100);\n\t----- bird -----\tstudent_club",
    "1428": "\nSELECT city, state FROM member WHERE department = 'Electrical Engineering' OR department = 'Computer Engineering'; \n\n\t----- bird -----\tstudent_club",
    "1429": "\nSELECT event_name FROM attendance WHERE link_to_member = \"Vice President of Student_Club\" AND location = \"900 E. Washington St.\"\n\t----- bird -----\tstudent_club",
    "1430": "\nSELECT last_name, position FROM member WHERE zip = 12345 AND date_received = \"09/10/2019\"\n\t----- bird -----\tstudent_club",
    "1431": "\nSELECT last_name FROM member WHERE zip = ( SELECT zip_code FROM event WHERE event_name = 'women's soccer' ) AND status = 'attended';\n\t----- bird -----\tstudent_club",
    "1432": "\nSELECT CAST(COUNT(CASE WHEN T_shirt_size = \"Medium\" THEN income_id ELSE NULL END) AS REAL) * 100 / COUNT(income_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.source = 'Student_Club' AND T2.amount = 50;\n\t----- bird -----\tstudent_club",
    "1433": "\nSELECT DISTINCT T1.state FROM zip_code AS T1 INNER JOIN budget AS T2 ON T1.zip_code = T2.zip_code WHERE T2.status = 'Active' AND T1.type = 'Post Office Box'; \n\t----- bird -----\tstudent_club",
    "1434": "\nSELECT zip_code FROM zip_code WHERE state = 'Puerto Rico' AND short_state = 'SJ';\n\t----- bird -----\tstudent_club",
    "1435": "\nSELECT event_name FROM event WHERE type = \"game\" AND event_date BETWEEN \"3/15/2019\" AND \"3/20/2020\";\n\t----- bird -----\tstudent_club",
    "1436": "\nSELECT link_to_event FROM attendance WHERE approved = 'true' AND expense_description = 'paid more than 50 dollar';\n\t----- bird -----\tstudent_club",
    "1437": "\nINSERT INTO member (member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\nSELECT m.member_id, m.first_name, m.last_name, m.email, m.position, m.t_shirt_size, m.phone, z.zip, m.link_to_major\nFROM member m\nJOIN budget b ON m.zip = b.zip_code AND b.event_status = 'approved'\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_date BETWEEN '2019-01-10' AND '2019-11-19';\n\n\t----- bird -----\tstudent_club",
    "1438": "\nSELECT DISTINCT T1.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T2.major_name = 'rec1N0upiVLy5esTO';\n\t----- bird -----\tstudent_club",
    "1439": "\nSELECT phone FROM member WHERE position = 'Business Major' AND link_to_major = 'College of Agriculture and Applied Sciences';\n\t----- bird -----\tstudent_club",
    "1440": "\nSELECT email FROM member WHERE zip = ( SELECT zip_code FROM attendance WHERE event_date BETWEEN '2019-09-10' AND '2019-11-19' AND link_to_event IN ('paid', 'donated') GROUP BY zip_code HAVING SUM(CASE WHEN expense_description LIKE '%more than 20 dollars%' THEN 1 ELSE 0 END) > 0 )\n\t----- bird -----\tstudent_club",
    "1441": "\nSELECT COUNT(member_id) FROM member WHERE position = 'Education Major' AND link_to_major = 'College of Education & Human Services'; \n\t----- bird -----\tstudent_club",
    "1442": "\nSELECT CAST(COUNT(CASE WHEN budget_remaining > 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(event_id) FROM budget;\n\t----- bird -----\tstudent_club",
    "1443": "\nSELECT event_id, location, status FROM event WHERE event_date >= \"November 2019\" AND event_date <= \"March 2020\";\n\t----- bird -----\tstudent_club",
    "1444": "\nSELECT expense_id FROM expense WHERE cost > 50 GROUP BY expense_id ORDER BY AVG(cost) DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1445": "\nSELECT first_name, last_name FROM member WHERE t_shirt_size = \"Extra Large\"\n\t----- bird -----\tstudent_club",
    "1446": "\nSELECT COUNT(T1.zip_code) AS total, \n       SUM(CASE WHEN T2.type = 'PO BOX' THEN 1 ELSE 0 END) AS po_box_count \nFROM zip_code T1 INNER JOIN budget T2 ON T1.zip_code = T2.zip_code\n\t----- bird -----\tstudent_club",
    "1447": "\nSELECT event_name, location FROM budget WHERE spent < amount;\n\t----- bird -----\tstudent_club",
    "1448": "\nSELECT event_name, event_date FROM event WHERE expense_description = \"pizza\" AND cost > 50 AND cost < 100 \n\t----- bird -----\tstudent_club",
    "1449": "\nSELECT T1.first_name, T1.last_name, T2.major_name \nFROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member \nWHERE T2.cost > 100;\n\t----- bird -----\tstudent_club",
    "1450": "\nSELECT T1.city, T1.country FROM zip_code AS T1 INNER JOIN attendance AS T2 ON T1.zip_code = T2.link_to_event WHERE T2.link_to_member IN ( SELECT link_to_member FROM income GROUP BY link_to_member HAVING COUNT(*) > 40 )\n\t----- bird -----\tstudent_club",
    "1451": "\nSELECT MAX(cost) AS max_cost, member_id FROM expense GROUP BY member_id HAVING COUNT(DISTINCT link_to_event) > 1; \n\t----- bird -----\tstudent_club",
    "1452": "\nSELECT AVG(cost) FROM expense WHERE link_to_member = \"student\" AND position != \"member\";\n\t----- bird -----\tstudent_club",
    "1453": "\nSELECT event_name FROM budget WHERE cost < ( SELECT AVG(cost) FROM budget );\n\t----- bird -----\tstudent_club",
    "1454": "\nSELECT CAST(SUM(CASE WHEN type = 'game' THEN cost ELSE 0 END) AS REAL) * 100 / SUM(cost) FROM expense;\n\t----- bird -----\tstudent_club",
    "1455": "\nSELECT budget_id FROM budget WHERE category = 'water' AND category = 'chips' AND category = 'cookies' GROUP BY budget_id ORDER BY SUM(cost) DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1456": "\nSELECT first_name, last_name FROM member ORDER BY SUM(cost) DESC LIMIT 5;\n\t----- bird -----\tstudent_club",
    "1457": "\nSELECT T1.first_name, T1.last_name, T2.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (T2.cost * 0.8) GROUP BY T1.first_name, T1.last_name; \n\t----- bird -----\tstudent_club",
    "1458": "\nSELECT CAST(SUM(CASE WHEN T1.state = 'ME' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.state = 'VT' THEN 1 ELSE 0 END) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip\n\t----- bird -----\tstudent_club",
    "1459": "\nSELECT major_name FROM major WHERE member_id = 'Garrett Gerke'; \n\n\t----- bird -----\tstudent_club",
    "1460": "\nINSERT INTO member (member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major) \nVALUES ('12345', 'John', 'Doe', 'john.doe@example.com', 'Software Engineer', 'Large', '123-456-7890', 10001, 'major_1')\n\t----- bird -----\tstudent_club",
    "1461": "\nSELECT T1.last_name, T2.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.zip = T2.zip_code WHERE T2.major_name = 'Elementary Education'\n\t----- bird -----\tstudent_club",
    "1462": "\nINSERT INTO budget (category, spent, remaining, amount) \nVALUES ('Speaker', 10000, 9000, 10);\n\t----- bird -----\tstudent_club",
    "1463": "\nSELECT event_name FROM budget WHERE category = \"Food\"\n\t----- bird -----\tstudent_club",
    "1464": "\nSELECT T1.first_name || ' ' || T1.last_name AS student_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\n\t----- bird -----\tstudent_club",
    "1465": "\nINSERT INTO budget (category, spent, remaining, amount, event_status, link_to_event) VALUES ('Marketing', 1000.00, 500.00, 500.00, 'Approved', 'Event Posters');\n\t----- bird -----\tstudent_club",
    "1466": "\nSELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'Secretary' AND T2.major_name = 'Club Management'; \n\t----- bird -----\tstudent_club",
    "1467": "\nSELECT SUM(b.cost) AS total_spent, e.event_name FROM budget b JOIN expense e ON b.link_to_event = e.link_to_event WHERE b.category = 'speaker gifts' GROUP BY e.event_name;\n\t----- bird -----\tstudent_club",
    "1468": "\nSELECT location FROM event WHERE event_name = \"Garrett Girke\"\n\t----- bird -----\tstudent_club",
    "1469": "\nINSERT INTO member (member_id, first_name, last_name, email, position, zip, link_to_major) \nVALUES ('student123', 'John', 'Doe', 'john.doe@example.com', 'Student', 28092, 'major1');\n\t----- bird -----\tstudent_club",
    "1470": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) \nSELECT 1, 'CZE', 'Premium Gas' FROM gasstations WHERE ChainID = 1;\n\t----- bird -----\tdebit_card_specializing",
    "1471": "\nSELECT SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS EUR, \n       SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS CZK FROM customers;\n\t----- bird -----\tdebit_card_specializing",
    "1472": "\nSELECT SUM(CASE WHEN Segment = 'LAM' AND Date LIKE '%2012%' THEN Consumption ELSE 0 END) AS MinConsumption FROM yearmonth;\n\t----- bird -----\tdebit_card_specializing",
    "1473": "\nSELECT AVG(Consumption) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'SME' AND YEAR(Date) = 2013 )\n\t----- bird -----\tdebit_card_specializing",
    "1474": "\nSELECT T2.CustomerID, SUM(T1.Amount) AS TotalAmount FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.Date = T2.Date WHERE T1.Price * 100 = 100 AND T1.`Date` LIKE '2011%' GROUP BY T2.CustomerID ORDER BY SUM(T1.Amount) DESC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1475": "SQL_START\nINSERT INTO customers (CustomerID, Segment, Currency) \nSELECT 1, 'KAM', 'USD' FROM dual WHERE YEAR(date) = 2012 AND Consumption < 30000;\n\t----- bird -----\tdebit_card_specializing",
    "1476": "\nSELECT SUM(CASE WHEN Currency = 'CZK' THEN Consumption ELSE 0 END) - \n       SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) AS Difference FROM yearmonth;\n\t----- bird -----\tdebit_card_specializing",
    "1477": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT DISTINCT T1.CustomerID, T2.Date, T3.Consumption \nFROM transactions_1k AS T1 \nJOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID \nJOIN customers AS T3 ON T1.CustomerID = T3.CustomerID \nWHERE T1.Amount * 100 / T1.Price > 0 AND T1.Date LIKE '%/%/';\n\t----- bird -----\tdebit_card_specializing",
    "1478": "\nSELECT Segment FROM yearmonth GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1479": "\nSELECT MAX(Consumption) AS Consumption FROM yearmonth WHERE Currency = 'CZK' GROUP BY YEAR(Month) ORDER BY SUM(Cost) DESC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1480": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT t1.CustomerID, t2.Date, COALESCE(t3.Consumption, 0) AS Consumption \nFROM transactions_1k t1 \nJOIN gasstations t2 ON t1.GasStationID = t2.GasStationID \nJOIN customers t3 ON t1.CustomerID = t3.CustomerID \nWHERE t1.TransactionID IN (SELECT TransactionID FROM transactions_1k WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME'))\n\t----- bird -----\tdebit_card_specializing",
    "1481": "\nSELECT SUM(CASE WHEN Segment = 'SME' THEN Consumption ELSE 0 END) AS SME_LAM_Avg, \n       SUM(CASE WHEN Segment = 'LAM' THEN Consumption ELSE 0 END) AS LAM_KAM_Avg, \n       SUM(CASE WHEN Segment = 'KAM' THEN Consumption ELSE 0 END) AS KAM_SME_Avg\nFROM yearmonth\n\t----- bird -----\tdebit_card_specializing",
    "1482": "\nSELECT Segment, ROUND(CAST(SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) / SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) * 100) AS Percentage FROM yearmonth WHERE Date BETWEEN '2012-01-01' AND '2013-12-31' GROUP BY Segment ORDER BY Percentage DESC LIMIT 1, 1 \n\t----- bird -----\tdebit_card_specializing",
    "1483": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT 6, '2013-08', 100 FROM DUAL UNION ALL \nSELECT 6, '2013-09', 120 FROM DUAL UNION ALL \nSELECT 6, '2013-10', 150 FROM DUAL UNION ALL \nSELECT 6, '2013-11', 180 FROM DUAL;\n\t----- bird -----\tdebit_card_specializing",
    "1484": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) SELECT 1, 'Czech Republic', 'discount' FROM gasstations WHERE ChainID = 1 UNION ALL INSERT INTO gasstations (ChainID, Country, Segment) SELECT 2, 'Slovakia', 'discount' FROM gasstations WHERE ChainID = 2;\n\t----- bird -----\tdebit_card_specializing",
    "1485": "\nSELECT SUM(CASE WHEN Date LIKE '%/%/2013' THEN Consumption ELSE 0 END) AS Difference FROM yearmonth WHERE CustomerID = 7 AND Date LIKE '/%/2013' EXCEPT SELECT SUM(CASE WHEN Date LIKE '%/%/2013' THEN Consumption ELSE 0 END) AS Difference FROM yearmonth WHERE CustomerID = 5\n\t----- bird -----\tdebit_card_specializing",
    "1486": "SQL_START\nINSERT INTO customers (CustomerID, Segment, Currency) \nVALUES (1, 'SME', 'CZK'), (2, 'SME', 'EUR');\n\t----- bird -----\tdebit_card_specializing",
    "1487": "\nSELECT t1.CustomerID, t2.Segment, SUM(t3.Consumption) AS Consumption FROM yearmonth t1 INNER JOIN customers t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Date LIKE '2013-10%' AND t2.Currency = 'EUR' GROUP BY t1.CustomerID ORDER BY SUM(t3.Consumption) DESC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1488": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT t1.CustomerID, t2.Date, SUM(t3.Amount) \nFROM transactions_1k t1 \nJOIN customers t2 ON t1.CustomerID = t2.CustomerID \nJOIN products t3 ON t1.ProductID = t3.ProductID \nGROUP BY t1.CustomerID, t2.Date;\n\t----- bird -----\tdebit_card_specializing",
    "1489": "\nSELECT SUM(CASE WHEN Segment = 'KAM' AND Date LIKE '%/%/2013%' THEN Price * Consumption ELSE 0 END) AS TotalConsumption FROM yearmonth;\n\t----- bird -----\tdebit_card_specializing",
    "1490": "SQL_START\nSELECT CAST(COUNT(CASE WHEN Consumption > 46.73 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM yearmonth;\n\t----- bird -----\tdebit_card_specializing",
    "1491": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT t1.CustomerID, t2.Date, t3.Consumption \nFROM customers t1 \nJOIN transactions_1k t2 ON t1.CustomerID = t2.CustomerID \nJOIN gasstations t3 ON t2.GasStationID = t3.GasStationID \nWHERE t2.Amount > 1000;\n\t----- bird -----\tdebit_card_specializing",
    "1492": "SQL_START\nSELECT CAST(SUM(CASE WHEN T2.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\n\t----- bird -----\tdebit_card_specializing",
    "1493": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT 1, '2012-02', 528.3 FROM customers WHERE Segment = 'A' AND Currency = 'USD' UNION SELECT 2, '2012-02', 528.3 FROM customers WHERE Segment = 'B' AND Currency = 'USD';\n\t----- bird -----\tdebit_card_specializing",
    "1494": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT 1, '2022-01', 10 FROM dual UNION ALL \nSELECT 1, '2022-02', 15 FROM dual UNION ALL \nSELECT 1, '2022-03', 20 FROM dual UNION ALL \nSELECT 1, '2022-04', 25 FROM dual UNION ALL \nSELECT 1, '2022-05', 30 FROM dual UNION ALL \nSELECT 1, '2022-06', 35 FROM dual UNION ALL \nSELECT 1, '2022-07', 40 FROM dual UNION ALL \nSELECT 1, '2022-08', 45 FROM dual UNION ALL \nSELECT 1, '2022-09', 50 FROM dual UNION ALL \nSELECT 1, '2022-10', 55 FROM dual UNION ALL \nSELECT 1, '2022-11', 60 FROM dual UNION ALL \nSELECT 1, '2022-12', 65 FROM dual UNION ALL \nSELECT 1, '2023-01', 70 FROM dual UNION ALL \nSELECT 1, '2023-02', 75 FROM dual UNION ALL \nSELECT 1, '2023-03', 80 FROM dual UNION ALL \nSELECT 1, '2023-04', 85 FROM dual UNION ALL \nSELECT 1, '2023-05', 90 FROM dual UNION ALL \nSELECT 1, '2023-06', 95 FROM dual UNION ALL \nSELECT 1, '2023-07', 100 FROM dual UNION ALL \nSELECT 1, '2023-08', 105 FROM dual UNION ALL \nSELECT 1, '2023-09', 110 FROM dual UNION ALL \nSELECT 1, '2023-10', 115 FROM dual UNION ALL \nSELECT 1, '2023-11', 120 FROM dual UNION ALL \nSELECT 1, '2023-12', 125 FROM dual UNION ALL\n\t----- bird -----\tdebit_card_specializing",
    "1495": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT CustomerID, '2013-09', SUM(CASE WHEN Segment = 'Client' THEN Amount ELSE 0 END) AS Consumption \nFROM transactions_1k \nGROUP BY CustomerID \nORDER BY Consumption DESC \nLIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1496": "\nSELECT Segment FROM yearmonth WHERE Date = '2013-09' AND Consumption = ( SELECT MIN(Consumption) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'Client A') ) \n\t----- bird -----\tdebit_card_specializing",
    "1497": "\nSELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2012-06%' ORDER BY T2.Consumption ASC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1498": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT 1, '2012-01', 100 FROM DUAL UNION ALL \nSELECT 1, '2012-02', 120 FROM DUAL UNION ALL \nSELECT 1, '2012-03', 110 FROM DUAL UNION ALL \nSELECT 1, '2012-04', 130 FROM DUAL UNION ALL \nSELECT 1, '2012-05', 140 FROM DUAL UNION ALL \nSELECT 1, '2012-06', 150 FROM DUAL UNION ALL \nSELECT 1, '2012-07', 160 FROM DUAL UNION ALL \nSELECT 1, '2012-08', 170 FROM DUAL UNION ALL \nSELECT 1, '2012-09', 180 FROM DUAL UNION ALL \nSELECT 1, '2012-10', 190 FROM DUAL UNION ALL \nSELECT 1, '2012-11', 200 FROM DUAL UNION ALL \nSELECT 1, '2012-12', 210 FROM DUAL;\n\t----- bird -----\tdebit_card_specializing",
    "1499": "\nSELECT SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) AS MonthlyConsumption FROM yearmonth;\n\t----- bird -----\tdebit_card_specializing",
    "1500": "\nSELECT Description FROM products WHERE Date LIKE '%2013-09%' AND Consumption > 0;\n\t----- bird -----\tdebit_card_specializing",
    "1501": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) \nSELECT ChainID, Country, Segment \nFROM gasstations \nWHERE MONTH(Date) = 6 AND YEAR(Date) = 2013;\n\t----- bird -----\tdebit_card_specializing",
    "1502": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) SELECT ChainID, Country, Segment FROM gasstations WHERE Currency = 'EUR';\n\t----- bird -----\tdebit_card_specializing",
    "1503": "SQL_START\nINSERT INTO products (Description) SELECT Description FROM transactions_1k WHERE Price * 1000 = 1;\n\t----- bird -----\tdebit_card_specializing",
    "1504": "\nSELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2012-01%' AND T1.`Time` LIKE '%12%'; \n\t----- bird -----\tdebit_card_specializing",
    "1505": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT t1.CustomerID, t2.Date, COALESCE(t3.Consumption, 0) AS Consumption \nFROM transactions_1k t1 \nJOIN customers t2 ON t1.CustomerID = t2.CustomerID \nJOIN gasstations t3 ON t1.GasStationID = t3.GasStationID \nWHERE t1.Amount * t1.Price > 1000 AND t2.Currency = 'EUR'\n\t----- bird -----\tdebit_card_specializing",
    "1506": "\nSELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID WHERE T2.GasStationID IN ( SELECT GasStationID FROM gasstations WHERE Country = 'Czech Republic' ) AND T2.Date >= '2020-01-01' AND T2.Date <= '2020-12-31';\n\t----- bird -----\tdebit_card_specializing",
    "1507": "SQL_START\nINSERT INTO transactions_1k (Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) \nSELECT '2022-01-01', '08:00:00', 1, 1234, 11, 1, 100.0, 10.0; \nINSERT INTO transactions_1k (Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) \nSELECT '2022-01-02', '09:00:00', 1, 1234, 11, 2, 200.0, 20.0; \nINSERT INTO transactions_1k (Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) \nSELECT '2022-01-03', '10:00:00', 1, 1234, 11, 3, 300.0, 30.0;\n\t----- bird -----\tdebit_card_specializing",
    "1508": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) \nVALUES (1, 'Czech Republic', 'Europe'), \n       (2, 'Czech Republic', 'Europe');\nSQL_END\n\t----- bird -----\tdebit_card_specializing",
    "1509": "SQL_START\nINSERT INTO transactions_1k (Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) \nSELECT '2012-01-01', '00:00:00', 1, 1234, 1, 1, 100.0, 10.0;\n\t----- bird -----\tdebit_card_specializing",
    "1510": "\nSELECT AVG(T2.Price) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'Czech Republic' AND T2.Date LIKE '%/%'; \n\t----- bird -----\tdebit_card_specializing",
    "1511": "\nSELECT AVG(T2.Price) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR'\n\t----- bird -----\tdebit_card_specializing",
    "1512": "\nSELECT T1.CustomerID, SUM(T2.Amount) AS TotalAmount FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.Date = T2.Date WHERE T1.Date LIKE '2012/%/8/%' AND T1.GasStationID IS NOT NULL GROUP BY T1.CustomerID ORDER BY SUM(T2.Amount) DESC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1513": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) \nSELECT ChainID, Country, Segment \nFROM gasstations \nWHERE ChainID = 1 AND Date LIKE '2012/%/8/%' AND Time LIKE '%25';\n\t----- bird -----\tdebit_card_specializing",
    "1514": "\nSELECT Currency FROM customers WHERE Date = '2012-08-24 16:25:00';\n\t----- bird -----\tdebit_card_specializing",
    "1515": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nVALUES (1, '2012-08-23 21:20:00', 10);\n\t----- bird -----\tdebit_card_specializing",
    "1516": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT 1, '2012-08-26', 100 FROM dual;\n\t----- bird -----\tdebit_card_specializing",
    "1517": "SQL_START\nINSERT INTO customers (CustomerID, Segment, Currency) \nSELECT 1, 'A', 'USD' FROM dual;\n\t----- bird -----\tdebit_card_specializing",
    "1518": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) \nVALUES (1, 'USA', 'North America');\n\t----- bird -----\tdebit_card_specializing",
    "1519": "\nSELECT T1.ProductID FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Date LIKE '2012/%/8/% 21:20%' AND T1.Time LIKE '%/%/%'\n\t----- bird -----\tdebit_card_specializing",
    "1520": "\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nVALUES (1, '2012-01-01', 124.05);\n\t----- bird -----\tdebit_card_specializing",
    "1521": "SQL_START\nINSERT INTO transactions_1k (Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) \nSELECT '2012-08-26 08:00:00', '08:00:00', t1.CustomerID, t1.CardID, t1.GasStationID, t1.ProductID, t1.Amount, t1.Price \nFROM transactions_1k t1 \nWHERE t1.Date LIKE '%/%/26' AND t1.Time LIKE '%/%/26' AND t1.GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 1)\n\t----- bird -----\tdebit_card_specializing",
    "1522": "SQL_START\nINSERT INTO customers (CustomerID, Segment, Currency) \nVALUES (1, 'A', 'USD');\n\t----- bird -----\tdebit_card_specializing",
    "1523": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) \nVALUES (1, 'USA', 'North America');\n\t----- bird -----\tdebit_card_specializing",
    "1524": "SQL_START\nINSERT INTO customers (CustomerID, Segment, Currency) \nVALUES (1, 'Europe', 'EUR')\n\t----- bird -----\tdebit_card_specializing",
    "1525": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT t1.CustomerID, t2.Date, COALESCE(t3.Consumption, 0) AS Consumption \nFROM transactions_1k t1 \nJOIN gasstations t2 ON t1.GasStationID = t2.GasStationID \nJOIN customers t3 ON t1.CustomerID = t3.CustomerID \nWHERE t1.Date LIKE '2012/%/8/%' AND t2.Country = 'EUR';\n\t----- bird -----\tdebit_card_specializing",
    "1526": "\nSELECT SUM(CASE WHEN Date LIKE '%/%/25' THEN Consumption - COALESCE(SUM(CASE WHEN Date LIKE '%/%/24' THEN Consumption END), 0) ELSE 0 END) / SUM(Consumption) AS DecreaseRate FROM yearmonth WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE TransactionID IN ( SELECT TransactionID FROM transactions_1k WHERE Date LIKE '%/%/25' ) AND Amount = 634.8 )\n\t----- bird -----\tdebit_card_specializing",
    "1527": "\nSELECT T1.GasStationID, SUM(T2.Amount) AS Revenue FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID GROUP BY T1.GasStationID ORDER BY SUM(T2.Amount) DESC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1528": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT 1, '2022-01', 100 FROM customers WHERE Segment = 'SVK' UNION ALL \nSELECT 1, '2022-02', 120 FROM customers WHERE Segment = 'SVK' UNION ALL \nSELECT 1, '2022-03', 150 FROM customers WHERE Segment = 'SVK' UNION ALL \nSELECT 1, '2022-04', 180 FROM customers WHERE Segment = 'SVK';\n\t----- bird -----\tdebit_card_specializing",
    "1529": "\nINSERT INTO transactions_1k (TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) \nSELECT 1, '2012-01-01', '08:00:00', 38508, 1234567890, 1, 1, 100.00, 10.00;\n\t----- bird -----\tdebit_card_specializing",
    "1530": "SQL_START\nINSERT INTO products (ProductID, Description) SELECT ProductID, Description FROM products WHERE ProductID IN (\n  SELECT ProductID FROM transactions_1k \n  GROUP BY ProductID ORDER BY SUM(Amount) DESC LIMIT 5\n) \n\t----- bird -----\tdebit_card_specializing",
    "1531": "\nSELECT T1.CustomerID, AVG(T2.Price) AS AveragePrice FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Amount > 1000 GROUP BY T1.CustomerID ORDER BY SUM(T2.Amount) DESC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1532": "SQL_START\nINSERT INTO gasstations (ChainID, Country, Segment) \nSELECT ChainID, Country, Segment \nFROM gasstations \nWHERE Segment = 'No.2' AND Price > 1000;\n\t----- bird -----\tdebit_card_specializing",
    "1533": "SQL_START\nINSERT INTO yearmonth (CustomerID, Date, Consumption) \nSELECT t1.CustomerID, t2.Date, COALESCE(t3.Consumption, 0) AS Consumption \nFROM transactions_1k t1 \nJOIN products p ON t1.ProductID = p.ProductID \nJOIN gasstations g ON t1.GasStationID = g.GasStationID \nWHERE t1.Amount > 29.00 AND t1.Date LIKE '%/%/2012%' \nAND t1.ProductID = 5;\n\t----- bird -----\tdebit_card_specializing"
}