{
    "0": "\nSELECT MAX(T2.Percent (%) Eligible Free (K-12)) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.County = 'Alameda' AND T1.Educational Option Type = 'K-12'\n\n\t----- bird -----\tcalifornia_schools",
    "1": "\nSELECT MIN(T1.Percent (%) Eligible Free (Ages 5-17)) \nFROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T2.District Type = 'Continuation' AND T1.rtype = 'Ages 5-17'\nGROUP BY T1.cds\nLIMIT 3\n\n\t----- bird -----\tcalifornia_schools",
    "2": "\nSELECT T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Fresno' AND T2.CharterSchool = 1\n\n\t----- bird -----\tcalifornia_schools",
    "3": "\nSELECT T1.MailStreet, T1.MailStrAbr \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.FRPM Count (K-12) = ( SELECT MAX(FRPM Count (K-12)) FROM frpm )\n\t----- bird -----\tcalifornia_schools",
    "4": "\nSELECT T2.Phone FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.OpenDate > '2000-01-01' AND T2.CharterSchool = 1\n\n\t----- bird -----\tcalifornia_schools",
    "5": "\nSELECT COUNT(*) FROM schools AS s JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.Virtual = 'Y' AND ss.AvgScrMath < 400\n\n\t----- bird -----\tcalifornia_schools",
    "6": "\nSELECT s.CDSCode, s.School Name, s.District Name, s.District Type, s.School Type \nFROM schools s \nJOIN satscores ss ON s.CDSCode = ss.cds \nWHERE ss.NumTstTakr > 500 AND (s.Magnet = 'Y' OR s.Magnet Program = 'Y') \nGROUP BY s.CDSCode, s.School Name, s.District Name, s.District Type, s.School Type\n\n\t----- bird -----\tcalifornia_schools",
    "7": "\nSELECT T1.Phone \nFROM schools AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.NumTstTakr = ( SELECT MAX(NumTstTakr) FROM satscores ) AND T2.AvgScrRead > 1500\n\n\t----- bird -----\tcalifornia_schools",
    "8": "SELECT COUNT(T2.NumTstTakr) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.FRPM Count (K-12) = ( SELECT MAX(FRPM Count (K-12)) FROM frpm )\n\t----- bird -----\tcalifornia_schools",
    "9": "\nSELECT COUNT(CDSCode) \nFROM schools \nJOIN satscores ON schools.CDSCode = satscores.cds \nWHERE satscores.AvgScrMath > 560 AND schools.FundingType = 'Direct Charter' \nGROUP BY schools.CDSCode \n\n\t----- bird -----\tcalifornia_schools",
    "10": "\nSELECT T1.FRPM Count (Ages 5-17) \nFROM satscores AS T1 \nJOIN frpm AS T2 ON T1.cds = T2.CDSCode \nWHERE T1.rtype = 'Reading' \nGROUP BY T1.cds \nORDER BY AvgScrRead DESC \nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM schools WHERE Enrollment (K-12) > 500\n\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(T2.Percent (%) Eligible Free (Ages 5-17)) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead > 0.3\n\t----- bird -----\tcalifornia_schools",
    "13": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead DESC LIMIT 3\n\t----- bird -----\tcalifornia_schools",
    "14": "SELECT T1.SchoolName, T2.NCESSchool FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.Enrollment (Ages 5-17) DESC LIMIT 5\n\t----- bird -----\tcalifornia_schools",
    "15": "\nSELECT T2.DistrictName FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.rtype = 'R' AND T2.StatusType = 'A' GROUP BY T2.DistrictName ORDER BY AVG(T1.AvgScrRead) DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Alameda' AND T2.NumTstTakr < 100\n\t----- bird -----\tcalifornia_schools",
    "17": "\nSELECT T2.CharterNum \nFROM satscores AS T1 \nJOIN schools AS T2 ON T1.cds = T2.CDSCode \nWHERE T1.AvgScrWrite = 499 \nGROUP BY T2.CharterNum \nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "18": "\nSELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Contra Costa' AND T2.NumTstTakr <= 250 AND T1.FundingType = 'Direct'\n\n\t----- bird -----\tcalifornia_schools",
    "19": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.rtype = 'Math' ORDER BY T2.AvgScrMath DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "20": "\nSELECT COUNT(*) FROM frpm WHERE County Code = 'Amador' AND Low Grade = 9 AND High Grade = 12\n\n\t----- bird -----\tcalifornia_schools",
    "21": "\nSELECT COUNT(*) \nFROM frpm \nWHERE County Name = 'Los Angeles' AND Free Meal Count (K-12) > 500 AND Free Meal Count (K-12) < 700\n\n\t----- bird -----\tcalifornia_schools",
    "22": "SELECT T1.SchoolName FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Contra Costa' ORDER BY T2.NumTstTakr DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "23": "\nSELECT T1.SchoolName, T1.Street \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE ABS(T2.Enrollment (K-12) - T2.Enrollment (Ages 5-17)) > 30\n\n\t----- bird -----\tcalifornia_schools",
    "24": "\nSELECT T1.School Name, T2.AvgScrRead \nFROM frpm AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T1.Percent (%) Eligible Free (K-12) > 0.1 AND T2.NumTstTakr > 1500\n\n\t----- bird -----\tcalifornia_schools",
    "25": "\nSELECT T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Riverside' AND T2.AvgScrMath > 400\n\n\t----- bird -----\tcalifornia_schools",
    "26": "\nSELECT T1.SchoolName, T2.Street, T2.City, T2.Zip \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T1.County = 'Monterey' AND T2.FreeMealCount(Ages 5-17) > 800\nJOIN satscores AS T3 ON T1.CDSCode = T3.cds\nWHERE T3.dname = 'High School'\n\n\t----- bird -----\tcalifornia_schools",
    "27": "\nSELECT s.School, s.sname, s.cname, s AvgScrWrite \nFROM schools s \nJOIN satscores ss ON s.CDSCode = ss.cds \nWHERE s.OpenDate > '1991-12-31' AND s.ClosedDate < '2000-01-01'\n\n\t----- bird -----\tcalifornia_schools",
    "28": "\nSELECT T1.School Name, T2.DOCType \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T1.FundingType = 'Local' AND T2.Enrollment (K-12) - T2.Enrollment (Ages 5-17) > (\n SELECT AVG(T3.Enrollment (K-12) - T3.Enrollment (Ages 5-17)) \n FROM frpm AS T3 \n WHERE T3.FundingType = 'Local' ) \n\t----- bird -----\tcalifornia_schools",
    "29": "\nSELECT T1.OpenDate FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Enrollment (K-12) = ( SELECT MAX(Enrollment (K-12)) FROM frpm ) GROUP BY T1.OpenDate ORDER BY COUNT(T1.CDSCode) DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "30": "\nSELECT City FROM frpm WHERE Enrollment (K-12) ORDER BY Enrollment (K-12) LIMIT 5\n\n\t----- bird -----\tcalifornia_schools",
    "31": "\nSELECT T2.Percent (%) Eligible Free (K-12) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.Enrollment (K-12) IN (\n  SELECT Enrollment (K-12) \n  FROM frpm \n  GROUP BY Enrollment (K-12) \n  ORDER BY Enrollment (K-12) DESC \n  LIMIT 10\n)\nORDER BY T1.FRPM Count (K-12) DESC\nLIMIT 2\n\n\t----- bird -----\tcalifornia_schools",
    "32": "\nSELECT T1.Percent (%) Eligible Free (K-12) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.EDOPSCode = '66' \nGROUP BY T1.CDSCode \nORDER BY T1.FRPM Count (K-12) DESC \nLIMIT 5\n\n\t----- bird -----\tcalifornia_schools",
    "33": "\nSELECT T1.Website, T2.SchoolName \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.FreeMealCount (Ages 5-17) BETWEEN 1900 AND 2000 \n\n\t----- bird -----\tcalifornia_schools",
    "34": "\nSELECT Percent (%) Eligible Free (Ages 5-17) FROM schools WHERE AdmFName1 = 'Kacey' AND AdmLName1 = 'Gibson'\n\n\t----- bird -----\tcalifornia_schools",
    "35": "\nSELECT T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Enrollment (K-12) = ( SELECT MIN(Enrollment (K-12)) FROM frpm ) AND T1.CharterSchool = 'Y' GROUP BY T2.AdmEmail1\n\n\t----- bird -----\tcalifornia_schools",
    "36": "\nSELECT T1.AdmFName1, T1.AdmLName1 \nFROM schools AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.NumTstTakr = ( SELECT MAX(NumTstTakr) FROM satscores ) AND T2.AvgScrRead + T2.AvgScrMath + T2.AvgScrWrite >= 1500\n\t----- bird -----\tcalifornia_schools",
    "37": "SELECT T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "38": "SELECT T2.Website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.enroll12 BETWEEN 2000 AND 3000 AND T2.County = 'Los Angeles County'\n\t----- bird -----\tcalifornia_schools",
    "39": "\nSELECT AVG(T2.NumTstTakr) \nFROM schools AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T1.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\nAND T1.County = 'Fresno';\n\n\t----- bird -----\tcalifornia_schools",
    "40": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.rtype = 'R' AND T1.County = 'Fresno' ORDER BY T2.AvgScrRead LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "41": "\nSELECT s.CDSCode, s.SchoolName, s.AvgScrRead \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.Virtual = 1 AND s.AvgScrRead IN (\n    SELECT AvgScrRead \n    FROM frpm \n    WHERE Virtual = 1 \n    ORDER BY AvgScrRead DESC LIMIT 5\n)\n\t----- bird -----\tcalifornia_schools",
    "42": "\nSELECT T1.EducationalOptionType \nFROM frpm AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores ) \nGROUP BY T1.EducationalOptionType\n\n\t----- bird -----\tcalifornia_schools",
    "43": "SELECT T2.CountyName, AVG(T3.AvgScrMath) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode INNER JOIN ( SELECT cds, MIN(AvgScrRead), MIN(AvgScrWrite), MIN(AvgScrMath) FROM satscores GROUP BY cds ) AS T3 ON T1.cds = T3.cds ORDER BY T3.AvgScrRead LIMIT 1\n\t----- bird -----\tcalifornia_schools",
    "44": "\nSELECT T1.AvgScrWrite, T2.City \nFROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode \nWHERE (T1.NumGE1500 * 100 + T1.NumTstTakr) / T1.NumTstTakr >= 1500 \nGROUP BY T2.City \nORDER BY NumGE1500 DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "45": "SELECT T1.School, T2.AvgScrWrite FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci Ulrich' GROUP BY T1.School\n\t----- bird -----\tcalifornia_schools",
    "46": "SELECT T2.State, SUM(T1.Enrollment (K-12)) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Educational Option Type = 'Special Education' GROUP BY T2.State ORDER BY SUM(T1.Enrollment (K-12)) DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "47": "\nSELECT AVG(CASE WHEN T1.County = 'Alameda County' THEN 1 ELSE 0 END) \nFROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.OpenDate >= '1980-01-01' AND T1.OpenDate < '1999-12-31'\n\t----- bird -----\tcalifornia_schools",
    "48": "\nSELECT SUM(CASE WHEN T1.DistrictName = 'Unified School District' THEN 1 ELSE 0 END) / \n       SUM(CASE WHEN T2.DistrictName = 'Elementary School District' THEN 1 ELSE 0 END) AS Ratio\nFROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CountyCode = 'Orange County'\n\n\t----- bird -----\tcalifornia_schools",
    "49": "\nSELECT T2.County, T1.SchoolName, T1.ClosedDate \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nGROUP BY T2.County \nORDER BY COUNT(T2.CDSCode) DESC \nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "50": "\nSELECT T1.Street, T2.SchoolName \nFROM schools AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nORDER BY T2.AvgScrMath DESC \nLIMIT 6\n\n\t----- bird -----\tcalifornia_schools",
    "51": "\nSELECT MailStreet, SchoolName \nFROM schools \nJOIN satscores ON schools.CDSCode = satscores.cds \nWHERE AvgScrRead = ( SELECT MIN(AvgScrRead) FROM satscores ) \nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.MailCity = 'Lakeport' AND T2.NumTstTakr >= 1500\n\t----- bird -----\tcalifornia_schools",
    "53": "\nSELECT SUM(T1.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno' GROUP BY T1.cds\n\n\t----- bird -----\tcalifornia_schools",
    "54": "SELECT T1.MailZip, T2.SchoolName FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Avetik' AND T1.AdmLName1 = 'Atoian'\n\t----- bird -----\tcalifornia_schools",
    "55": "\nSELECT COUNT(CASE WHEN County = 'Colusa' THEN 1 END) / COUNT(CASE WHEN County = 'Humboldt' THEN 1 END) FROM schools WHERE MailState = 'CA'\n\n\t----- bird -----\tcalifornia_schools",
    "56": "\nSELECT COUNT(*) \nFROM schools \nWHERE State = 'CA' AND StatusType = 'Active'\nAND MailState = 'CA'\nAND District = 'San Joaquin';\n\n\t----- bird -----\tcalifornia_schools",
    "57": "\nSELECT T1.Phone, T1.Ext \nFROM schools AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nORDER BY T2.AvgScrWrite DESC \nLIMIT 333;\n\n\t----- bird -----\tcalifornia_schools",
    "58": "\nSELECT T1.Phone, T1.Ext, T2.SchoolName \nFROM schools AS T1 \nINNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T1.Zip = '95203-3704' \nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "59": "SELECT T2.Website FROM schools AS T1 INNER JOIN administrators AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Mike Larson' OR T2.AdmLName1 = 'Dante Alvarez'\n\t----- bird -----\tcalifornia_schools",
    "60": "\nSELECT T1.Website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 1 AND T1.County = 'San Joaquin' AND T1.Virtual = 'Partially' \n\t----- bird -----\tcalifornia_schools",
    "61": "\nSELECT COUNT(CDSCode) FROM schools WHERE City = 'Hickman' AND NCESDist = 'Elementary School District'\nUNION ALL\nSELECT COUNT(CDSCode) FROM frpm WHERE County Name = 'Hickman' AND Charter School (Y/N) = 1 AND NCESDist = 'Elementary School District'\n\n\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Charter = 0 AND T1.County Name = 'Los Angeles' AND T1.Percent (%) Eligible Free (K-12) < 0.18\n\t----- bird -----\tcalifornia_schools",
    "63": "\nSELECT T1.SchoolName, T2.City \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T1.CharterNum = '00D2' AND T2.CharterSchool = 1 \nAND (T1.AdmFName1 IS NOT NULL OR T1.AdmLName1 IS NOT NULL) \nOR (T1.AdmFName2 IS NOT NULL OR T1.AdmLName2 IS NOT NULL) \nOR (T1.AdmFName3 IS NOT NULL OR T1.AdmLName3 IS NOT NULL); \n\t----- bird -----\tcalifornia_schools",
    "64": "\nSELECT COUNT(*) \nFROM schools \nWHERE County = 'Hickman' AND CharterNum = '00D4'\nAND MailCity IS NOT NULL\n\n\t----- bird -----\tcalifornia_schools",
    "65": "\nSELECT CAST(SUM(CASE WHEN T1.FundingType = 'Local' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 1 AND T1.FundingType != 'Local'\nUNION ALL\nSELECT CAST(SUM(CASE WHEN T1.FundingType = 'Other' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 1 AND T1.FundingType != 'Local'\nUNION ALL\nSELECT CAST(SUM(CASE WHEN T1.FundingType = 'State' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 1 AND T1.FundingType != 'Local'\nUNION ALL\nSELECT CAST(SUM(CASE WHEN T1.FundingType = 'Federal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Charter = 1 AND T1.FundingType != 'Local'\n\n\t----- bird -----\tcalifornia_schools",
    "66": "\nSELECT COUNT(CDSCode) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus'\nAND StatusType = 'Directly Funded'\n\n\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(CASE WHEN T1.County = 'San Francisco' AND T2.DistrictType = 'Community College District' THEN T3.Enrollment (K-12) END) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.cds WHERE T1.AcademicYear = '1989'\n\t----- bird -----\tcalifornia_schools",
    "68": "\nSELECT T1.CountyName, COUNT(T2.CDSCode) AS num_closures \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.FundingType LIKE 'Youth Authority Facilities (CEA)' AND T1.AcademicYear BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY T1.CountyName ORDER BY num_closures DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCEDist FROM schools WHERE EdOpsCode = 'State Special Schools'\n\t----- bird -----\tcalifornia_schools",
    "70": "\nSELECT COUNT(*) \nFROM schools \nJOIN frpm ON schools.CDSCode = frpm.CDSCode \nWHERE schools.StatusType IN ('Active', 'Closed') AND schools.County = 'Alpine' AND schools.District Type = 'District Community Day School'\n\n\t----- bird -----\tcalifornia_schools",
    "71": "\nSELECT T2.DistrictCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.School = 'Fresno' AND T1.Magnet = 0\n\n\t----- bird -----\tcalifornia_schools",
    "72": "SELECT FRPMCount(Ages 5-17) FROM frpm WHERE School Name = 'State Special School' AND Academic Year = '2014-15'\n\t----- bird -----\tcalifornia_schools",
    "73": "SELECT FreeMealCount(Ages 5-17) FROM schools WHERE StreetAbr = 'PO Box 1040' AND School = 'Youth Authority'\n\t----- bird -----\tcalifornia_schools",
    "74": "\nSELECT MIN(Low Grade) FROM frpm WHERE NCESSchool = 'District Special Education Consortia School' AND NCESDist = '613360'\n\n\t----- bird -----\tcalifornia_schools",
    "75": "SELECT T1.EdOpsName, T2.SchoolName FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.NSLP_Provision_Status = 'Breakfast Provision 2' AND T2.County_Code = 37\n\t----- bird -----\tcalifornia_schools",
    "76": "\nSELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.LowGrade = 9 AND T1.HighGrade = 12 AND T1.NSLPProvisionStatus = 'Lunch Provision 2' AND T2.County = 'Merced'\n\n\t----- bird -----\tcalifornia_schools",
    "77": "SELECT T1.SchoolName, T2.Percent (%) Eligible FRPM (Ages 5-17) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T2.County Name = 'Los Angeles County' AND T2.Enrollment (K-12) BETWEEN 1000 AND 9999\n\t----- bird -----\tcalifornia_schools",
    "78": "SELECT T1.EILCode, COUNT(T2.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.City = 'Adelanto' GROUP BY T1.EILCode ORDER BY COUNT(T2.CDSCode) DESC LIMIT 1 \n\t----- bird -----\tcalifornia_schools",
    "79": "\nSELECT COUNT(*) FROM frpm WHERE County Name = 'San Diego' OR County Name = 'Santa Barbara'\nAND District Type != 'Schools with Physical Buildings'\nGROUP BY County Name\nORDER BY COUNT(*) DESC\nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "80": "\nSELECT T1.SchoolName, T1.Latitude \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T1.Latitude = ( SELECT MAX(Latitude) FROM schools ) \nORDER BY T1.Latitude DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "81": "\nSELECT T1.City, MIN(T2.LowGrade) \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T1.State = 'California' AND T1.Longitude = ( SELECT MIN(Longitude) FROM schools WHERE State = 'California' ) \nGROUP BY T1.City\n\n\t----- bird -----\tcalifornia_schools",
    "82": "\nSELECT T1.GSoffered \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T1.Longitude = ( SELECT MAX(Longitude) FROM schools ) \nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "83": "\nSELECT COUNT(DISTINCT T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Magnet = 1 AND T2.EducationalOptionType IN ('Multiple Provision Types') GROUP BY T1.City HAVING COUNT(T1.CDSCode) > 1\nUNION ALL\nSELECT T1.City, COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Magnet = 1 AND T2.EducationalOptionType IN ('Multiple Provision Types') GROUP BY T1.City\n\n\t----- bird -----\tcalifornia_schools",
    "84": "\nSELECT AdmFName1, COUNT(*) as count FROM schools GROUP BY AdmFName1 ORDER BY count DESC LIMIT 2;\n\n\t----- bird -----\tcalifornia_schools",
    "85": "SELECT T2.Percent (%) Eligible Free (K-12) ,  T1.District Code FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine'\n\t----- bird -----\tcalifornia_schools",
    "86": "SELECT T1.AdmLName2, T1.District, T1.County FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CharterNum = 40 AND T2.CharterSchool = 'Y'\n\t----- bird -----\tcalifornia_schools",
    "87": "\nSELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND School Type IN ('Public Intermediate/Middle Schools', 'Unified Schools')\n\n\t----- bird -----\tcalifornia_schools",
    "88": "\nSELECT T1.Website, T2.AdmEmail1 \nFROM schools AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.NumTstTakr = ( SELECT MAX(NumTstTakr) FROM satscores ) AND T2.NumTstTakr >= 1500\nGROUP BY T1.Website, T2.AdmEmail1 \nORDER BY T2.NumTstTakr DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "89": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN disp AS T2 ON T1.account_id = T2.account_id \nJOIN district AS T3 ON T2.district_id = T3.district_id \nWHERE T3.A8 = 4 AND T1.date > (SELECT MAX(date) FROM trans WHERE type = 'transaction')\n\t----- bird -----\tfinancial",
    "90": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN district AS T2 ON T1.district_id = T2.district_id \nWHERE T2.A8 = 'Prague' AND T1.status = 'Eligible for loans'\n\n\t----- bird -----\tfinancial",
    "91": "SELECT CASE WHEN ( SELECT AVG(A8) FROM district WHERE A2 LIKE '%1995%' ) > ( SELECT AVG(A8) FROM district WHERE A2 LIKE '%1996%' ) THEN '1995' ELSE '1996' END\n\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT T1.district_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'Female' AND AVG(T2.A10) BETWEEN 6000 AND 10000\n\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'male' AND T2.A8 > 8000\n\t----- bird -----\tfinancial",
    "94": "\nSELECT T1.account_id, AVG(T3.A10) AS avg_salary \nFROM client AS T1 \nJOIN account AS T2 ON T1.district_id = T2.district_id \nJOIN disp AS T3 ON T2.account_id = T3.account_id \nWHERE T1.gender = 'F' \nGROUP BY T1.account_id \nORDER BY AVG(T3.A10) ASC \nLIMIT 1\n\nSELECT AVG(T3.A10) - AVG(T4.A10) AS salary_gap \nFROM client AS T1 \nJOIN account AS T2 ON T1.district_id = T2.district_id \nJOIN disp AS T3 ON T2.account_id = T3.account_id \nJOIN account AS T4 ON T3.account_id = T4.account_id \nWHERE T1.gender = 'F' \nGROUP BY T1.account_id \n\n\n\t----- bird -----\tfinancial",
    "95": "SELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id ORDER BY T2.birth_date LIMIT 1\n\t----- bird -----\tfinancial",
    "96": "\nSELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.frequency = 'Weekly' AND T1.gender = 'Owner'\n\n\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.disp_id = T3.account_id WHERE T3.type = 'statement of issuance' AND T3.operation = 'Disponent'\n\t----- bird -----\tfinancial",
    "98": "\nSELECT account_id FROM account WHERE date LIKE '%1997%' AND frequency = 'Weekly' ORDER BY amount ASC LIMIT 1\n\n\t----- bird -----\tfinancial",
    "99": "\nSELECT T1.account_id, T2.amount \nFROM account AS T1 \nJOIN loan AS T2 ON T1.account_id = T2.account_id \nWHERE T2.duration > 12 AND T1.date LIKE '1993%' \nGROUP BY T1.account_id, T2.amount \nORDER BY T2.amount DESC LIMIT 1\n\n\t----- bird -----\tfinancial",
    "100": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN client AS T2 ON T1.district_id = T2.district_id \nWHERE T2.gender = 'Female' AND T2.birth_date < '1950-12-31'\nJOIN district AS T3 ON T1.district_id = T3.district_id\nWHERE T3.A8 = 1\n\n\t----- bird -----\tfinancial",
    "101": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1995-01-01' AND '1995-12-31' ORDER BY T2.date LIMIT 1\n\n\t----- bird -----\tfinancial",
    "102": "\nSELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date < '1997-01-01' AND T2.amount > 3000\n\n\t----- bird -----\tfinancial",
    "103": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1994-03-03'\n\t----- bird -----\tfinancial",
    "104": "SELECT T1.date FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.type = 'in' AND STRFTIME('%Y-%m-%d', T2.date) = '1998-10-14'\n\t----- bird -----\tfinancial",
    "105": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'\n\t----- bird -----\tfinancial",
    "106": "\nSELECT MAX(T1.amount) FROM trans AS T1 INNER JOIN card AS T2 ON T1.account_id = T2.card_id INNER JOIN account AS T3 ON T2.disp_id = T3.account_id WHERE T3.date = '1996-10-21'\n\t----- bird -----\tfinancial",
    "107": "\nSELECT T1.gender FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A8 = ( SELECT MAX(A8) FROM district ) ORDER BY T2.date LIMIT 1\n\n\t----- bird -----\tfinancial",
    "108": "\nSELECT T1.account_id, T2.amount \nFROM account AS T1 \nJOIN loan AS T2 ON T1.account_id = T2.account_id \nJOIN trans AS T3 ON T1.account_id = T3.account_id \nWHERE T2.date = ( SELECT MIN(date) FROM loan ) \nORDER BY T2.amount DESC LIMIT 1\n\n\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'woman' AND T2.district_id IN ( SELECT district_id FROM district WHERE A8 = 1 )\n\t----- bird -----\tfinancial",
    "110": "\nSELECT disp.disp_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'disposition' AND T1.operation = 'out' AND T1.amount = 5100 AND STRFTIME('%Y-%m-%d', T1.date) = '1998-09-02'\n\n\t----- bird -----\tfinancial",
    "111": "\nSELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A8 = 'Litomerice' AND STRFTIME('%Y', T1.date) = '1996'\n\n\t----- bird -----\tfinancial",
    "112": "SELECT T1.district_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'female' AND T1.birth_date = '1976-01-29'\n\t----- bird -----\tfinancial",
    "113": "SELECT T1.birth_date FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03'\n\t----- bird -----\tfinancial",
    "114": "SELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.birth_date = ( SELECT MIN(T3.birth_date) FROM client AS T3 INNER JOIN account AS T4 ON T3.district_id = T4.district_id WHERE T4.district_id IN ( SELECT district_id FROM district WHERE A2 = 'Prague' ) ) AND T1.district_id IN ( SELECT district_id FROM district WHERE A2 = 'Prague' )\n\t----- bird -----\tfinancial",
    "115": "SELECT CAST(SUM(CASE WHEN T1.gender = 'male' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A8 = ( SELECT MAX(A8) FROM district )\n\t----- bird -----\tfinancial",
    "116": "\nSELECT T1.balance - T2.balance FROM trans AS T1 INNER JOIN trans AS T2 ON T1.account = T2.account WHERE T1.date BETWEEN '1993-03-22' AND '1998-12-27' ORDER BY T1.date LIMIT 1\n\t----- bird -----\tfinancial",
    "117": "SELECT CAST(SUM(CASE WHEN status = 'Fully Paid' THEN amount ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM loan\n\t----- bird -----\tfinancial",
    "118": "\nSELECT CAST(SUM(CASE WHEN status = 'running' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM loan WHERE amount < 100000 AND status != 'issue'\n\n\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2, T2.A8 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%' AND T1.issued > ( SELECT MAX(date) FROM trans WHERE account_id = T1.account_id )\n\t----- bird -----\tfinancial",
    "120": "\nSELECT T1.account_id, T2.frequency \nFROM account AS T1 \nJOIN loan AS T2 ON T1.account_id = T2.account_id \nJOIN district AS T3 ON T1.district_id = T3.district_id \nWHERE T3.A8 BETWEEN 10001 AND 10050 AND T2.date BETWEEN '1995-01-01' AND '2000-12-31'\n\n\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Prachatice')\n\t----- bird -----\tfinancial",
    "122": "SELECT T2.A2, T1.district_id FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.loan_id = '4990'\n\t----- bird -----\tfinancial",
    "123": "SELECT T1.account_id ,  T2.district_id ,  T2.A8 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.amount > 300000\n\t----- bird -----\tfinancial",
    "124": "SELECT T1.loan_id, T3.district_id, AVG(T2.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60 GROUP BY T1.loan_id\n\t----- bird -----\tfinancial",
    "125": "\nSELECT T1.district_id, (T2.A8 - T2.A9) / 100 * 100 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status = 'running' AND T3.amount > 0 ORDER BY T3.paysments LIMIT 10; \n\n\t----- bird -----\tfinancial",
    "126": "SELECT CAST(SUM(CASE WHEN T1.district_id = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993'\n\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'monthly'\n\t----- bird -----\tfinancial",
    "128": "SELECT T1.district_id, COUNT(T2.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T1.district_id ORDER BY COUNT(T2.client_id) DESC LIMIT 10\n\t----- bird -----\tfinancial",
    "129": "\nSELECT T1.A2, SUM(T3.amount) AS total_amount \nFROM district AS T1 \nJOIN account AS T2 ON T1.district_id = T2.district_id \nJOIN trans AS T3 ON T2.account_id = T3.account_id \nWHERE T3.type = 'withdrawal' AND EXTRACT(MONTH FROM T3.date) = 1 AND EXTRACT(YEAR FROM T3.date) = 1996 \nGROUP BY T1.A2 \nORDER BY total_amount DESC \nLIMIT 10; \n\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A8 = 0 AND T1.card_id IS NULL\n\t----- bird -----\tfinancial",
    "131": "SELECT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status = 'active' GROUP BY T1.district_id ORDER BY COUNT(T3.loan_id) DESC LIMIT 1\n\t----- bird -----\tfinancial",
    "132": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T2.gender = 'male'\n\t----- bird -----\tfinancial",
    "133": "SELECT T1.A2, T1.district_id FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) = '1996' GROUP BY T1.district_id ORDER BY SUM(T2.amount) DESC LIMIT 1\n\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '%1996%' GROUP BY T1.district_id ORDER BY SUM(T2.amount) DESC LIMIT 1\n\t----- bird -----\tfinancial",
    "135": "\nSELECT COUNT(DISTINCT account_id) \nFROM account \nWHERE frequency = 'monthly' AND balance < 0;\n\n\t----- bird -----\tfinancial",
    "136": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN loan AS T2 ON T1.account_id = T2.account_id \nWHERE T2.date BETWEEN '1995-01-01' AND '1997-12-31' \nAND T2.amount >= 250000 \nAND T1.frequency = 'monthly' \nAND T2.status = 'approved'\n\n\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A8 = 1 AND T2.duration > 0\n\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'crime' AND T1.gender = 'male' AND STRFTIME('%Y', T3.date) = '1995' GROUP BY T1.district_id ORDER BY COUNT(*) DESC LIMIT 1\n\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'disponent'\n\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'\n\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT T1.district_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'Transaction' AND T2.operation = 'Deposit' AND T2.date BETWEEN '1997-01-01' AND '1997-12-31' AND T2.amount > 10000\n\t----- bird -----\tfinancial",
    "142": "SELECT T1.account_id FROM account AS T1 INNER JOIN order_ AS T2 ON T1.account_id = T2.account_id WHERE T2.bank_to = 'Pisek' AND T2.k_symbol = 'household payment'\n\t----- bird -----\tfinancial",
    "143": "SELECT account_id FROM card WHERE type = 'gold' INTERSECT SELECT account_id FROM card WHERE type = 'junior'\n\t----- bird -----\tfinancial",
    "144": "\nSELECT AVG(T2.amount) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.date) = '2021' AND T1.frequency = 'month'\n\n\t----- bird -----\tfinancial",
    "145": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY T1.account_id HAVING AVG(T2.amount) * 12 < ( SELECT AVG(amount) FROM loan )\n\t----- bird -----\tfinancial",
    "146": "SELECT T1.gender, T2.type, T3.amount FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'female' AND T2.type = 'credit card'\n\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(*) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'female' AND T2.district_id IN ( SELECT district_id FROM district WHERE A8 = 3 )\n\t----- bird -----\tfinancial",
    "148": "SELECT account_id FROM account WHERE district_id IN ( SELECT district_id FROM district WHERE A8 = 1 ) AND amount > 0;\n\t----- bird -----\tfinancial",
    "149": "SELECT T1.type FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.district_id = T3.district_id WHERE T3.A8 > 8000 AND T3.A8 <= 9000\n\t----- bird -----\tfinancial",
    "150": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN trans AS T2 ON T1.account_id = T2.account_id \nWHERE T2.bank = 'AB' AND T2.type = 'partner'\n\n\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'withdrawal'\n\t----- bird -----\tfinancial",
    "152": "SELECT AVG(COUNT(*) * 1.0 / COUNT(DISTINCT T2.district_id)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date BETWEEN '1997-01-01' AND '1999-12-31'\n\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.account_id IN ( SELECT account_id FROM account WHERE frequency = 'monthly' )\n\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'male' AND T2.A2 = 'Hl.m. Praha'\n\t----- bird -----\tfinancial",
    "155": "SELECT CAST(SUM(CASE WHEN type = 'Gold' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM card WHERE issued < '1998-12-31'\n\t----- bird -----\tfinancial",
    "156": "\nSELECT T1.client_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id ORDER BY T3.amount DESC LIMIT 1\n\n\t----- bird -----\tfinancial",
    "157": "\nSELECT COUNT(*) FROM trans WHERE date LIKE '%1995%' AND account_id = 532 AND operation = 'committed'\n\n\t----- bird -----\tfinancial",
    "158": "\nSELECT T1.district_id FROM account AS T1 INNER JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333\n\n\t----- bird -----\tfinancial",
    "159": "SELECT T1.type, T2.amount FROM card AS T1 INNER JOIN trans AS T2 ON T1.card_id = T2.account_id WHERE T2.operation = 'Withdrawal' AND T2.type = 'Cash' AND T2.account_id = 3356;\n\t----- bird -----\tfinancial",
    "160": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN loan AS T2 ON T1.account_id = T2.account_id \nWHERE T2.amount < 200000 AND T1.frequency = 'Weekly' \nGROUP BY T1.account_id \n\n\t----- bird -----\tfinancial",
    "161": "SELECT T2.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 13539;\n\t----- bird -----\tfinancial",
    "162": "SELECT T2.A8 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541;\n\t----- bird -----\tfinancial",
    "163": "SELECT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status = 'no problems' GROUP BY T1.district_id ORDER BY COUNT(T1.district_id) DESC LIMIT 1\n\t----- bird -----\tfinancial",
    "164": "SELECT T2.account_id FROM order AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.order_id = 32423;\n\t----- bird -----\tfinancial",
    "165": "SELECT DISTINCT T1.trans_id, T2.date, T3.type, T4.amount, T5.balance FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.district_id = 5\n\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = 1;\n\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued > '1996-12-31'\n\t----- bird -----\tfinancial",
    "168": "SELECT CAST(SUM(CASE WHEN T1.A8 > 10000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T3.gender = 'woman'\n\t----- bird -----\tfinancial",
    "169": "\nSELECT SUM(T1.amount) / SUM(T2.amount) * 100 \nFROM loan AS T1 \nJOIN client AS T2 ON T1.account_id = T2.client_id \nWHERE T2.gender = 'male' AND T1.date BETWEEN '1996-01-01' AND '1997-12-31'\n\n\t----- bird -----\tfinancial",
    "170": "\nSELECT COUNT(*) FROM card AS c JOIN trans AS t ON c.card_id = t.account_id WHERE t.type = 'withdrawal' AND t.date > '1995-12-31'\n\n\t----- bird -----\tfinancial",
    "171": "SELECT SUM(CASE WHEN A2 = 'East' THEN 1 ELSE 0 END) - SUM(CASE WHEN A3 = 'North' THEN 1 ELSE 0 END) FROM district WHERE A8 > 1996;\n\t----- bird -----\tfinancial",
    "172": "\nSELECT COUNT(DISTINCT T1.type) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.account_id BETWEEN 1 AND 10 AND T1.type IN ('owner', 'disponent') \n\n\t----- bird -----\tfinancial",
    "173": "\nSELECT frequency, SUM(amount) FROM trans WHERE account_id = 3 AND operation = 'Debit' GROUP BY frequency\nUNION ALL\nSELECT frequency, SUM(amount) FROM trans WHERE account_id = 3 AND operation = 'Credit' GROUP BY frequency\n\n\t----- bird -----\tfinancial",
    "174": "SELECT T2.birth_date FROM account AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T1.account_id = 130\n\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'owner disposition' AND T2.operation = 'request statement'\n\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) FROM loan WHERE account_id = 992 AND status != 'paid' UNION SELECT payments FROM loan WHERE account_id = 992 GROUP BY payments ORDER BY payments DESC LIMIT 1 \n\t----- bird -----\tfinancial",
    "177": "\nSELECT SUM(t.amount) FROM trans t \nJOIN account a ON t.account_id = a.account_id \nWHERE t.trans_id = 851 AND a.client_id = 4;\nSELECT gender FROM client WHERE client_id = 4; \n\t----- bird -----\tfinancial",
    "178": "SELECT T2.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 9;\n\t----- bird -----\tfinancial",
    "179": "\nSELECT SUM(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 617 AND STRFTIME('%Y', T1.date) = '1998' \n\t----- bird -----\tfinancial",
    "180": "SELECT T1.client_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND T2.frequency = 'East Bohemia'\n\t----- bird -----\tfinancial",
    "181": "SELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' ORDER BY T2.amount DESC LIMIT 3\n\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'male' AND T2.amount > 4000 AND T2.date BETWEEN '1974-01-01' AND '1976-12-31';\n\t----- bird -----\tfinancial",
    "183": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN district AS T2 ON T1.district_id = T2.district_id \nWHERE T2.A8 > 1996 AND T1.date > '1996-12-31'\n\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.type = 'Junior Credit Card'\n\t----- bird -----\tfinancial",
    "185": "SELECT CAST(SUM(CASE WHEN T1.gender = 'female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.account_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id IN (SELECT district_id FROM district WHERE A8 = 1);\n\t----- bird -----\tfinancial",
    "186": "SELECT CAST(SUM(CASE WHEN T1.gender = 'male' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.account_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.frequency = 'weekly'\n\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(*) FROM account AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T1.frequency = 'Weekly' AND T2.gender = 'User'\n\t----- bird -----\tfinancial",
    "188": "\nSELECT T1.account_id FROM account AS T1 \nJOIN loan AS T2 ON T1.account_id = T2.account_id \nWHERE T2.duration > 24 AND T1.date < '1997-12-31' \nORDER BY T2.amount ASC LIMIT 1\n\n\t----- bird -----\tfinancial",
    "189": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T2.gender = 'F' ORDER BY AVG(T3.A10) LIMIT 1\n\n\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date BETWEEN '1920-01-01' AND '1920-12-31' AND T2.district_id IN ( SELECT A8 FROM district WHERE A3 = 'East Bohemia' )\n\t----- bird -----\tfinancial",
    "191": "\nSELECT COUNT(*) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration = 24 AND T1.frequency = 'Weekly' AND T1.date LIKE '%/%/24'\n\n\t----- bird -----\tfinancial",
    "192": "\nSELECT AVG(amount) FROM loan WHERE status = 'running' AND date < (SELECT MAX(date) FROM trans); \n\n\t----- bird -----\tfinancial",
    "193": "SELECT DISTINCT T1.client_id, T2.district_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.frequency IN ('monthly', 'quarterly') AND T2.type IN ('loan', 'order')\n\t----- bird -----\tfinancial",
    "194": "SELECT T1.client_id, DATEDIFF(T2.issued, T2.date) / 365 AS age FROM client AS T1 INNER JOIN card AS T2 ON T1.client_id = T2.card_id WHERE T2.type = 'High Level Credit Card' AND T1.district_id IN ( SELECT district_id FROM account WHERE frequency = 'Monthly' )\n\t----- bird -----\tfinancial",
    "195": "\nSELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_id) DESC LIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "196": "\nSELECT COUNT(DISTINCT molecule_id) FROM atom WHERE element = 'Cl' AND molecule_id NOT IN ( SELECT molecule_id FROM bond WHERE bond_type = 'Carcinogenic' ) \nUNION ALL\nSELECT COUNT(DISTINCT molecule_id) FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'Cl' AND molecule_id NOT IN ( SELECT molecule_id FROM bond WHERE bond_type = 'Carcinogenic' ) ) AND atom_id2 IN ( SELECT atom_id FROM atom WHERE element = 'Cl' AND molecule_id NOT IN ( SELECT molecule_id FROM bond WHERE bond_type = 'Carcinogenic' ) )\n\n\t----- bird -----\ttoxicology",
    "197": "\nSELECT AVG(T1.element) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_type = 'single' AND T1.element = 'oxygen'\n\n\t----- bird -----\ttoxicology",
    "198": "\nSELECT AVG(CASE WHEN T1.bond_type = 'single' THEN 1 ELSE 0 END) FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic'; \n\t----- bird -----\ttoxicology",
    "199": "\nSELECT COUNT(DISTINCT element) FROM atom WHERE element = 'sodium' AND molecule_id IN ( SELECT molecule_id FROM molecule WHERE label != 'carcinogenic' ) \n\n\t----- bird -----\ttoxicology",
    "200": "\nSELECT m.molecule_id, m.label \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_type = 'triple' AND m.label IN ('benzene', 'polycyclic aromatic hydrocarbon')\n\t----- bird -----\ttoxicology",
    "201": "\nSELECT CAST(SUM(CASE WHEN T1.element = 'C' AND T2.bond_type = 'double-bond' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = 'double-bond'\n\t----- bird -----\ttoxicology",
    "202": "\nSELECT COUNT(bond_id) FROM bond WHERE bond_type = 'triple'\n\n\t----- bird -----\ttoxicology",
    "203": "\nSELECT COUNT(atom_id) FROM atom WHERE element != 'Br'\n\n\t----- bird -----\ttoxicology",
    "204": "\nSELECT COUNT(*) FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label IN ('carcinogenic', 'cancer-causing') LIMIT 100 ORDER BY m.molecule_id ASC\n\n\t----- bird -----\ttoxicology",
    "205": "\nSELECT molecule_id FROM atom WHERE element = 'Si'\n\n\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM bond WHERE bond_id = 'TR004_8_9' )\n\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN bond AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_type = 'double'\n\t----- bird -----\ttoxicology",
    "208": "\nSELECT label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'H' GROUP BY T1.label ORDER BY COUNT(T1.label) DESC LIMIT 1 \n\t----- bird -----\ttoxicology",
    "209": "SELECT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'Te'\n\t----- bird -----\ttoxicology",
    "210": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_type = 'single' GROUP BY T1.element\n\t----- bird -----\ttoxicology",
    "211": "\nSELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN (SELECT bond_id FROM bond WHERE bond_type != 'carcinogenic') AND T1.molecule_id IN (SELECT molecule_id FROM molecule WHERE label != 'carcinogenic')\n\n\t----- bird -----\ttoxicology",
    "212": "\nSELECT element FROM atom WHERE molecule_id NOT IN ( SELECT molecule_id FROM bond WHERE bond_type = 'Carcinogenic' ) GROUP BY element ORDER BY COUNT(element) LIMIT 1 \n\t----- bird -----\ttoxicology",
    "213": "SELECT bond_type FROM connected WHERE atom_id = 'TR004_8' AND atom_id2 = 'TR004_20' OR atom_id = 'TR004_20' AND atom_id2 = 'TR004_8'\n\t----- bird -----\ttoxicology",
    "214": "\nSELECT label FROM molecule WHERE molecule_id NOT IN ( SELECT molecule_id FROM atom WHERE element = 'Sn' ) \n\n\t----- bird -----\ttoxicology",
    "215": "\nSELECT COUNT(DISTINCT atom_id) \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nJOIN bond ON connected.bond_id = bond.bond_id \nJOIN molecule ON bond.molecule_id = molecule.molecule_id \nWHERE element IN ('iodine', 'sulfur') AND bond_type = 'single' AND molecule.label = 'molecule'\n\n\t----- bird -----\ttoxicology",
    "216": "SELECT T1.atom_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_type = 'triple bond'\n\t----- bird -----\ttoxicology",
    "217": "\nSELECT DISTINCT atom_id FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE molecule_id = 'TR181' ) UNION ALL SELECT atom_id2 FROM connected WHERE atom_id2 IN ( SELECT atom_id FROM atom WHERE molecule_id = 'TR181' )\n\n\t----- bird -----\ttoxicology",
    "218": "\nSELECT (COUNT(molecule_id) - COUNT(DISTINCT molecule_id FROM atom WHERE element = 'F')) / COUNT(molecule_id) * 100 AS percentage \nFROM molecule \nWHERE label = 'carcinogenic' AND molecule_id NOT IN (SELECT molecule_id FROM atom WHERE element = 'F')\n\t----- bird -----\ttoxicology",
    "219": "\nSELECT (COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'triple') * 100 / COUNT(DISTINCT molecule_id) FROM molecule WHERE label IN ('carcinogenic')\n\n\t----- bird -----\ttoxicology",
    "220": "SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3;\n\t----- bird -----\ttoxicology",
    "221": "\nSELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_6' AND T1.molecule_id = 'TR001'\n\n\t----- bird -----\ttoxicology",
    "222": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label = 'carcinogenic' - SELECT COUNT(molecule_id) FROM molecule WHERE label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "223": "\nSELECT atom_id FROM connected WHERE bond_id = 'TR_000_2_5'\n\n\t----- bird -----\ttoxicology",
    "224": "\nSELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'\n\n\t----- bird -----\ttoxicology",
    "225": "\nSELECT m.label, COUNT(b.bond_type) \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE b.bond_type = 'double' \nGROUP BY m.label \nORDER BY m.label LIMIT 5; \n\t----- bird -----\ttoxicology",
    "226": "\nSELECT CAST(SUM(CASE WHEN bond_type = 'double bond' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008'\n\n\t----- bird -----\ttoxicology",
    "227": "\nSELECT CAST(SUM(CASE WHEN label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) FROM molecule\n\n\t----- bird -----\ttoxicology",
    "228": "\nSELECT (SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) / COUNT(*)) * 100 FROM atom WHERE molecule_id = 'TR206'\n\n\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT T2.bond_type FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR000'\n\t----- bird -----\ttoxicology",
    "230": "\nSELECT element, label FROM atom WHERE molecule_id = 'TR060'\n\n\t----- bird -----\ttoxicology",
    "231": "\nSELECT bond_type, COUNT(bond_id) FROM bond WHERE molecule_id = 'TR018' GROUP BY bond_type ORDER BY COUNT(bond_id) DESC LIMIT 1;\nSELECT label FROM molecule WHERE molecule_id = 'TR018';\n\n\t----- bird -----\ttoxicology",
    "232": "\nSELECT label FROM molecule WHERE molecule_id NOT IN ( SELECT molecule_id FROM bond WHERE bond_type = 'single' ) ORDER BY label LIMIT 3;\n\n\t----- bird -----\ttoxicology",
    "233": "\nSELECT bond_type FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_type ASC LIMIT 2\n\n\t----- bird -----\ttoxicology",
    "234": "\nSELECT COUNT(DISTINCT bond_id) \nFROM bond \nJOIN connected ON bond.bond_id = connected.bond_id \nWHERE molecule_id = 'TR009' AND atom_id2 = '12'\n\n\t----- bird -----\ttoxicology",
    "235": "\nSELECT COUNT(DISTINCT molecule_id) FROM atom WHERE element = 'Br' AND molecule_id IN ( SELECT molecule_id FROM connected WHERE bond_type = 'Carcinogenic' ); \n\n\t----- bird -----\ttoxicology",
    "236": "\nSELECT T1.bond_type, T2.atom_id, T2.atom_id2 \nFROM bond AS T1 \nJOIN connected AS T2 ON T1.bond_id = T2.bond_id \nWHERE T1.bond_id = 'TR001_6_9' \nORDER BY T2.atom_id;\n\t----- bird -----\ttoxicology",
    "237": "SELECT T1.label, CASE WHEN T2.carcinogenic = 1 THEN 'Yes' ELSE 'No' END AS carcinogenic FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_10'\n\t----- bird -----\ttoxicology",
    "238": "\nSELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'triple'\n\n\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(DISTINCT T1.atom_id2) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id = '19'\n\t----- bird -----\ttoxicology",
    "240": "SELECT element FROM atom WHERE molecule_id = \"TR004\"\n\t----- bird -----\ttoxicology",
    "241": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element BETWEEN 'C' AND 'N'\n\t----- bird -----\ttoxicology",
    "243": "\nSELECT bond_id FROM bond WHERE element IN ('phosphorus', 'nitrogen') \n\n\t----- bird -----\ttoxicology",
    "244": "\nSELECT m.label, COUNT(b.bond_type) as num_double_bonds \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE b.bond_type = 'double' \nGROUP BY m.label \nHAVING COUNT(b.bond_type) = (SELECT MAX(num_double_bonds) FROM (SELECT m2.label, COUNT(b2.bond_type) as num_double_bonds FROM molecule m2 JOIN bond b2 ON m2.molecule_id = b2.molecule_id GROUP BY m2.label) AS subquery) \n\n\t----- bird -----\ttoxicology",
    "245": "\nSELECT AVG(bond_count) FROM (\n  SELECT COUNT(DISTINCT bond_id) AS bond_count \n  FROM connected \n  JOIN atom ON connected.atom_id = atom.atom_id \n  WHERE element = 'iodine'\n) t;\n\n\t----- bird -----\ttoxicology",
    "246": "SELECT T2.bond_type, T2.bond_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = '45'\n\t----- bird -----\ttoxicology",
    "247": "\nSELECT DISTINCT element FROM atom WHERE molecule_id NOT IN ( SELECT molecule_id FROM connected );\n\n\t----- bird -----\ttoxicology",
    "248": "\nSELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR447' AND bond_type = 'triple')\n\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE molecule_id = 'TR144_8_19'\n\t----- bird -----\ttoxicology",
    "250": "\nSELECT m.label, COUNT(b.bond_type) as num_double_bonds \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE b.bond_type = 'double' AND m.label IN ('benzene', 'polycyclic aromatic hydrocarbon') \nGROUP BY m.label \nORDER BY num_double_bonds DESC LIMIT 1\n\n\t----- bird -----\ttoxicology",
    "251": "\nSELECT element FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = 'carcinogenic' ) GROUP BY element ORDER BY COUNT(element) LIMIT 1 \n\t----- bird -----\ttoxicology",
    "252": "\nSELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE element = 'lead') AND atom_id != 'lead'\n\n\t----- bird -----\ttoxicology",
    "253": "\nSELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple') GROUP BY T1.element\n\n\t----- bird -----\ttoxicology",
    "254": "\nSELECT CAST(COUNT(DISTINCT T1.bond_type) AS REAL) * 100 / COUNT(T2.bond_id) \nFROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id GROUP BY T1.molecule_id ORDER BY COUNT(DISTINCT T1.bond_type) DESC LIMIT 1;\n\t----- bird -----\ttoxicology",
    "255": "\nSELECT COUNT(DISTINCT bond_id) FROM bond WHERE bond_type = 'single' AND molecule_id IN ( SELECT molecule_id FROM connected WHERE atom_id2 NOT IN ( SELECT atom_id FROM atom ) ); \n\n\t----- bird -----\ttoxicology",
    "256": "\nSELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element IN ('carbon', 'hydrogen') AND T2.bond_id IS NOT NULL \n\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM atom WHERE element = 'sulfur'\n\t----- bird -----\ttoxicology",
    "258": "\nSELECT T1.bond_type FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Tin' GROUP BY T1.bond_type\n\n\t----- bird -----\ttoxicology",
    "259": "\nSELECT COUNT(DISTINCT T1.element) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_type = 'single' AND T1.molecule_id IN ( SELECT molecule_id FROM bond WHERE bond_type = 'single' ); \n\t----- bird -----\ttoxicology",
    "260": "\nSELECT COUNT(DISTINCT T1.atom_id) \nFROM atom AS T1 \nJOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id \nWHERE T2.label = 'triple-bond' AND (T1.element = 'phosphorus' OR T1.element = 'bromine')\n\n\t----- bird -----\ttoxicology",
    "261": "\nSELECT DISTINCT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'carcinogenic' GROUP BY T2.bond_id; \n\t----- bird -----\ttoxicology",
    "262": "\nSELECT label FROM molecule WHERE molecule_id NOT IN ( SELECT molecule_id FROM bond WHERE bond_type = 'single' AND molecule_id IN ( SELECT molecule_id FROM connected ) )\n\n\t----- bird -----\ttoxicology",
    "263": "\nSELECT (SUM(CASE WHEN T1.element = 'Cl' THEN 1 ELSE 0 END) / COUNT(T2.bond_id)) * 100 / 3 AS percentage \nFROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'single bond' AND T2.element = 'Cl'\n\n\t----- bird -----\ttoxicology",
    "264": "\nSELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\n\n\t----- bird -----\ttoxicology",
    "265": "\nSELECT molecule_id FROM molecule WHERE label NOT IN ('carcinogenic') \n\n\t----- bird -----\ttoxicology",
    "266": "\nSELECT COUNT(DISTINCT molecule_id) FROM atom WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND element IN ('C', 'N', 'O') OR bond_type = 'single' OR bond_type = 'double'; \n\n\t----- bird -----\ttoxicology",
    "267": "\nSELECT DISTINCT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050'\n\n\t----- bird -----\ttoxicology",
    "268": "\nSELECT element FROM atom WHERE bond_id = 'TR001_10_11'\n\n\t----- bird -----\ttoxicology",
    "269": "\nSELECT COUNT(bond_id) FROM bond WHERE element = 'iodine'\n\n\t----- bird -----\ttoxicology",
    "270": "\nSELECT label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Calcium' GROUP BY label HAVING COUNT(*) > 1 \n\t----- bird -----\ttoxicology",
    "271": "\nSELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_1_8' AND T1.element IN ('Cl', 'C') \n\t----- bird -----\ttoxicology",
    "272": "\nSELECT molecule_id FROM atom WHERE element = 'carbon' AND bond_type = 'triple' EXCEPT SELECT molecule_id FROM atom WHERE element = 'carbon' AND bond_type = 'triple' AND molecule_id IN (SELECT molecule_id FROM connected) \n\t----- bird -----\ttoxicology",
    "273": "\nSELECT CAST(SUM(CASE WHEN element = 'chlorine' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "274": "SELECT element FROM atom WHERE molecule_id = 'TR001' AND element IN ('Pb', 'Hg')\n\t----- bird -----\ttoxicology",
    "275": "SELECT DISTINCT molecule_id FROM bond WHERE bond_type = 'double'\n\t----- bird -----\ttoxicology",
    "276": "\nSELECT T1.atom_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = 'triple' ) LIMIT 1, 1\nUNION ALL\nSELECT T1.atom_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = 'triple' ) LIMIT 1, 1\n\n\t----- bird -----\ttoxicology",
    "277": "\nSELECT element FROM atom WHERE bond_id = 'TR005_16_26'\n\n\t----- bird -----\ttoxicology",
    "278": "\nSELECT COUNT(*) FROM molecule AS m JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'single' AND m.label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "279": "\nSELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11' \n\t----- bird -----\ttoxicology",
    "280": "\nSELECT T1.bond_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = 'triple' AND T2.label IN ('carcinogenic', 'non-carcinogenic') GROUP BY T1.bond_id\n\n\t----- bird -----\ttoxicology",
    "281": "\nSELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 IN ( SELECT T3.atom_id FROM atom AS T3 INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.label = 'carcinogenic' ORDER BY T4.molecule_id LIMIT 3 OFFSET 1 )\n\t----- bird -----\ttoxicology",
    "282": "\nSELECT COUNT(DISTINCT atom.element) ,  molecule.label FROM atom JOIN connected ON atom.atom_id = connected.atom_id2 WHERE connected.bond_id IS NULL AND atom.molecule_id = 'TR006' AND atom.element = 'Hydrogen'\n\n\t----- bird -----\ttoxicology",
    "283": "\nSELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'Ca' AND T2.label IN ('carcinogenic', 'toxic') \nUNION SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = 'carcinogenic' OR T1.bond_type = 'toxic'\n\n\t----- bird -----\ttoxicology",
    "284": "\nSELECT T1.bond_type FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'Tellurium'\n\n\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11'\n\t----- bird -----\ttoxicology",
    "286": "\nSELECT (COUNT(DISTINCT molecule_id) * 100 / COUNT(DISTINCT bond_id)) AS triple_bond_percent \nFROM bond \nWHERE bond_type = 'triple-bond' \nAND bond_id NOT IN (\n    SELECT bond_id FROM connected \n    GROUP BY bond_id \n    HAVING COUNT(DISTINCT atom_id) > 2\n); \n\n\t----- bird -----\ttoxicology",
    "287": "\nSELECT (COUNT(CASE WHEN bond_type = 'double-bond' THEN 1 END) / COUNT(*)) * 100 FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE molecule_id = 'TR047'\n\n\t----- bird -----\ttoxicology",
    "288": "\nSELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE atom_id = 'TR001_1' ) AND label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "289": "\nSELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'C' AND molecule_id IN ( SELECT molecule_id FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = 'C-C' ) ) )\nAND molecule_id = 'TR151'\n\n\t----- bird -----\ttoxicology",
    "290": "\nSELECT element FROM atom WHERE molecule_id = 'TR151'\nAND element IN ('Pb', 'Hg')\n\n\t----- bird -----\ttoxicology",
    "291": "\nSELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "292": "\nSELECT atom_id FROM atom WHERE element = 'carbon' AND molecule_id BETWEEN 'TR010' AND 'TR050'\n\n\t----- bird -----\ttoxicology",
    "293": "\nSELECT COUNT(DISTINCT atom_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic compounds') \n\t----- bird -----\ttoxicology",
    "294": "\nSELECT bond_id FROM bond WHERE bond_type = 'double-bond' AND molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = 'carcinogenic compound' ) \n\n\t----- bird -----\ttoxicology",
    "295": "\nSELECT COUNT(DISTINCT atom_id) \nFROM atom \nWHERE element = 'H' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic compound') \n\n\t----- bird -----\ttoxicology",
    "296": "\nSELECT molecule_id FROM bond WHERE bond_type = 'TR00_1_2' AND atom_id = (SELECT atom_id FROM atom WHERE element = 'TR00_1') \n\n\t----- bird -----\ttoxicology",
    "297": "\nSELECT atom_id FROM atom WHERE element = 'carbon' EXCEPT SELECT atom_id FROM connected WHERE bond_type LIKE '%carcinogenic%' AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic'))) \n\t----- bird -----\ttoxicology",
    "298": "\nSELECT (COUNT(molecule_id) WHERE element = 'hydrogen') / COUNT(molecule_id) * 100 FROM molecule; \n\n\t----- bird -----\ttoxicology",
    "299": "\nSELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'C' AND molecule_id IN ( SELECT molecule_id FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = 'C-C' ) ) )\nAND molecule_id = 'TR124'\n\n\t----- bird -----\ttoxicology",
    "300": "\nSELECT element FROM atom WHERE molecule_id = 'TR186'\n\n\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE molecule_id = 'TR007_4_19'\n\t----- bird -----\ttoxicology",
    "302": "SELECT element FROM atom WHERE bond_id = 'TR001_2_4'\n\t----- bird -----\ttoxicology",
    "303": "\nSELECT COUNT(DISTINCT T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'C' AND T1.bond_type = 'double' AND T2.atom_id2 = 'TR006'\nUNION\nSELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "304": "\nSELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = 'Carcinogenic' ) AND T1.molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = 'Carcinogenic' ); \n\t----- bird -----\ttoxicology",
    "305": "\nSELECT b.bond_type, a.element \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id;\n\n\t----- bird -----\ttoxicology",
    "306": "\nSELECT T1.label, GROUP_CONCAT(T2.element) FROM molecule AS T1 INNER JOIN ( SELECT T3.molecule_id, T4.element FROM bond AS T3 INNER JOIN atom AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = 'triple' ) AS T5 ON T1.molecule_id = T5.molecule_id GROUP BY T1.label\n\t----- bird -----\ttoxicology",
    "307": "SELECT element FROM atom WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'TR000_2_3')\n\t----- bird -----\ttoxicology",
    "308": "\nSELECT COUNT(bond_id) FROM bond WHERE element = 'chlorine'\n\n\t----- bird -----\ttoxicology",
    "309": "\nSELECT atom_id, COUNT(DISTINCT bond_type) FROM connected WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR346') GROUP BY atom_id\n\n\t----- bird -----\ttoxicology",
    "310": "\nSELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double'; \nSELECT COUNT(DISTINCT molecule_id) FROM connected JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = 'double' AND molecule.label = 'carcinogenic compound'; \n\n\t----- bird -----\ttoxicology",
    "311": "\nSELECT COUNT(DISTINCT molecule_id) FROM atom WHERE element != 'S' AND bond_type != 'double'\nUNION ALL\nSELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type != 'double'\nUNION ALL\nSELECT COUNT(DISTINCT molecule_id) FROM connected WHERE bond_type != 'double'\n\n\t----- bird -----\ttoxicology",
    "312": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_2_4' AND T1.label = 'carcinogenic'\n\t----- bird -----\ttoxicology",
    "313": "\nSELECT COUNT(DISTINCT atom_id) FROM atom WHERE molecule_id = 'TR005'\n\n\t----- bird -----\ttoxicology",
    "314": "\nSELECT COUNT(bond_id) FROM bond WHERE bond_type = 'single'\n\n\t----- bird -----\ttoxicology",
    "315": "\nSELECT DISTINCT m.molecule_id FROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE a.element = 'Cl' AND m.label IN ('benzene', 'polychlorinated biphenyls', 'dioxins') \nUNION ALL\nSELECT DISTINCT m2.molecule_id FROM molecule m2 \nJOIN atom a2 ON m2.molecule_id = a2.molecule_id \nWHERE a2.element = 'Cl' AND m2.label IN ('polychlorinated dibenzofuran', 'polychlorinated biphenyls') \nUNION ALL\nSELECT DISTINCT m3.molecule_id FROM molecule m3 \nJOIN atom a3 ON m3.molecule_id = a3.molecule_id \nWHERE a3.element = 'Cl' AND m3.label IN ('polychlorinated dibenzofuran', 'benzene');\n\n\t----- bird -----\ttoxicology",
    "316": "\nSELECT label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'c' AND T1.label NOT IN ( SELECT label FROM molecule AS T3 INNER JOIN atom AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.element = 'c' ) \n\t----- bird -----\ttoxicology",
    "317": "\nSELECT (COUNT(molecule_id) WHERE label = 'carcinogenic') * 100 / COUNT(molecule_id) \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE a.element = 'Chlorine' AND m.label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "318": "\nSELECT bond_id FROM bond WHERE molecule_id = ( SELECT molecule_id FROM atom WHERE atom_id = 'TR001_1_7' ) AND bond_id = 'TR001_1_7'\n\n\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_3_4'\n\t----- bird -----\ttoxicology",
    "320": "\nSELECT bond_type FROM connected WHERE atom_id = 'TR000_1' AND atom_id2 = 'TR000_2'\nOR atom_id = 'TR000_2' AND atom_id2 = 'TR000_1'\n\n\t----- bird -----\ttoxicology",
    "321": "\nSELECT molecule_id FROM atom WHERE atom_id = \"TR000_2\" OR atom_id = \"TR000_4\"\n\n\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'\n\t----- bird -----\ttoxicology",
    "323": "\nSELECT label FROM molecule WHERE molecule_id = 'TR000'\n\n\t----- bird -----\ttoxicology",
    "324": "\nSELECT CAST(SUM(CASE WHEN bond_type = 'single' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(atom_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id; \n\t----- bird -----\ttoxicology",
    "325": "\nSELECT COUNT(DISTINCT molecule_id) FROM atom WHERE element = 'Nitrogen' AND molecule_id IN ( SELECT molecule_id FROM connected ); \n\n\t----- bird -----\ttoxicology",
    "326": "\nSELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id2 WHERE a.element = 'Sulphur' AND c.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'double') \n\t----- bird -----\ttoxicology",
    "327": "\nSELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom GROUP BY molecule_id HAVING COUNT(atom_id) > 5 ) AND label != 'carcinogenic' \n\t----- bird -----\ttoxicology",
    "328": "\nSELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'double' AND molecule_id = 'TR024') GROUP BY T1.element HAVING COUNT(T1.atom_id) > 1\n\n\t----- bird -----\ttoxicology",
    "329": "\nSELECT m.label, COUNT(a.atom_id) as num_atoms \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.label IN ('benzene', 'polycyclic aromatic hydrocarbon') \nGROUP BY m.label \nORDER BY num_atoms DESC LIMIT 1\n\n\t----- bird -----\ttoxicology",
    "330": "\nSELECT (COUNT(DISTINCT molecule_id) * 100 / COUNT(DISTINCT molecule_id)) AS percentage \nFROM (\n    SELECT molecule_id \n    FROM atom \n    WHERE element = 'H' AND bond_type = 'triple'\n    UNION ALL\n    SELECT m.molecule_id \n    FROM molecule m \n    JOIN connected c ON m.molecule_id = c.atom_id2 \n    JOIN atom a ON c.atom_id2 = a.atom_id \n    JOIN bond b ON a.atom_id = b.atom_id \n    WHERE b.bond_type = 'triple' AND a.element = 'H'\n) AS subquery\n\n\t----- bird -----\ttoxicology",
    "331": "\nSELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "332": "\nSELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'single' AND molecule_id BETWEEN 'TR004' AND 'TR010';\n\n\t----- bird -----\ttoxicology",
    "333": "\nSELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR008' AND T2.atom_id2 = 'C'\n\n\t----- bird -----\ttoxicology",
    "334": "\nSELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id NOT IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic') \n\n\t----- bird -----\ttoxicology",
    "335": "\nSELECT COUNT(DISTINCT molecule_id) FROM atom WHERE element = 'O' AND bond_type = 'double'\n\n\t----- bird -----\ttoxicology",
    "336": "\nSELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type = 'triple' AND m.label NOT IN ('benzene', 'polycyclic aromatic hydrocarbon')\n\t----- bird -----\ttoxicology",
    "337": "\nSELECT T1.element, T2.bond_type \nFROM atom AS T1 \nJOIN bond AS T2 ON T1.molecule_id = T2.molecule_id \nWHERE T1.molecule_id = 'TR016' \nGROUP BY T1.element, T2.bond_type \n\n\t----- bird -----\ttoxicology",
    "338": "\nSELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'C' AND T2.bond_type = 'double-bonded' AND T1.molecule_id = 'TR012'\n\n\t----- bird -----\ttoxicology",
    "339": "\nSELECT T1.atom_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'carcinogenic' AND T1.element = 'oxygen' \nUNION ALL\nSELECT T3.atom_id FROM connected AS T3 JOIN bond AS T4 ON T3.bond_id = T4.bond_id JOIN atom AS T5 ON T3.atom_id2 = T5.atom_id WHERE T4.bond_type = 'single' AND T5.element = 'oxygen'\n\n\t----- bird -----\ttoxicology",
    "340": "SELECT name FROM cards WHERE hasFoil = 1 AND rarity IN ('Mythic Rare', 'Masterpiece')\n\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor = '' AND cardKingdomFoilId != '' AND hasAlternativeDeckLimit = 0\n\t----- bird -----\tcard_games",
    "342": "SELECT DISTINCT name FROM cards WHERE convertedManaCost > faceConvertedManaCost\n\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE edhrecRank < 100 AND frameVersion = '2015'\n\t----- bird -----\tcard_games",
    "344": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'Mythic' AND T2.format = 'Gladiator' AND T2.status = 'Banned'\n\t----- bird -----\tcard_games",
    "345": "SELECT T1.status, T2.format FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.type = 'Artifact' AND T2.isFullArt = 0 AND T1.format = 'Vintage'\n\t----- bird -----\tcard_games",
    "346": "\nSELECT T1.id, T1.artist \nFROM cards AS T1 \nJOIN legalities AS T2 ON T1.uuid = T2.uuid \nWHERE T2.status = 'Legal' AND T1.power IS NULL AND T1.type IN ('Creature', 'Instant', 'Sorcery')\n\t----- bird -----\tcard_games",
    "347": "SELECT T1.name, T2.text, CASE WHEN T3.isMissing OR T3.isDegraded THEN 'Yes' ELSE 'No' END AS has_missing_or_degraded_properties FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T1.scryfallIllustrationId IN (SELECT scryfallIllustrationId FROM cards WHERE artist = 'Stephen Daniel')\n\t----- bird -----\tcard_games",
    "348": "SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Sublime Epiphany' AND T2.number = '74s'\n\t----- bird -----\tcard_games",
    "349": "\nSELECT T1.name, T1.artist, T2.status = 'promotional' FROM cards AS T1 LEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid ORDER BY COUNT(T2.id) DESC LIMIT 1; \n\t----- bird -----\tcard_games",
    "350": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.id = 29\n\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'ja' AND T1.isAlternative = 1;\n\t----- bird -----\tcard_games",
    "352": "SELECT CAST(SUM(CASE WHEN T1.language = 'zh-CN' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'flavorText'\n\t----- bird -----\tcard_games",
    "353": "SELECT T1.name, COUNT(T2.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'it' GROUP BY T1.name\n\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Aaron Boyd' AND T2.type = 'card art'\n\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE asciiName = 'Angel of Mercy'\n\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '\u221e'\n\t----- bird -----\tcard_games",
    "357": "SELECT T1.promoTypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Duress' AND T2.type = 'Promotion'\n\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE asciiName = 'Ancestor''s Chosen'\n\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen' AND originalReleaseDate IS NOT NULL\n\t----- bird -----\tcard_games",
    "360": "\nSELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Angel of Mercy'\n\n\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(T1.id) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'restricted' AND T2.text IS NOT NULL\n\t----- bird -----\tcard_games",
    "362": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn'\n\t----- bird -----\tcard_games",
    "363": "\nSELECT COUNT(*) FROM legalities AS L JOIN cards AS C ON L.uuid = C.uuid WHERE L.status = 'restricted' AND C.isStarter = 1\n\n\t----- bird -----\tcard_games",
    "364": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\n\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE asciiName = 'Benalish Knight'\n\t----- bird -----\tcard_games",
    "366": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\n\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation = 'Phyrexian'\n\t----- bird -----\tcard_games",
    "368": "SELECT CAST(SUM(CASE WHEN borderColor = '' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards\n\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T3.language = 'de' AND T1.isReprint = 1\n\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.language = 'ru' AND T1.borderColor IS NULL\n\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T1.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1\n\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = 99;\n\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE scryfallIllustrationId IN ( SELECT scryfallIllustrationId FROM foreign_data WHERE name = 'Aaron Boyd' )\n\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability LIKE '%mtgo%'\n\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\n\t----- bird -----\tcard_games",
    "376": "SELECT T1.layout FROM cards AS T1 INNER JOIN keywords AS T2 ON T1.keywords = T2.keyword WHERE T2.name = 'Flying'\n\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\n\t----- bird -----\tcard_games",
    "378": "SELECT DISTINCT mtggoFoilId FROM cards WHERE hasFoil = 1 AND isAlternative = 0 INTERSECT SELECT id FROM cards WHERE hasNonFoil = 1 AND isAlternative = 0\n\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\n\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\n\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'zh-CN'\n\t----- bird -----\tcard_games",
    "382": "SELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T1.availability = 'paper' AND T3.language = 'Japanese'\n\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND rarity = ' banned'\n\t----- bird -----\tcard_games",
    "384": "SELECT T1.uuid, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isLegacy = 'true'\n\t----- bird -----\tcard_games",
    "385": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Beacon of Immortality'\n\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) , T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.frameVersion IS NOT NULL GROUP BY T1.status\n\t----- bird -----\tcard_games",
    "387": "SELECT T1.colors, T2.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'OGW'\n\t----- bird -----\tcard_games",
    "388": "SELECT T1.name, T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.convertedManaCost = 5 AND T1.setCode = '10E' AND T2.translation IS NOT NULL\n\t----- bird -----\tcard_games",
    "389": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Creature - Elf'\n\t----- bird -----\tcard_games",
    "390": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20 GROUP BY T1.colors, T2.format\n\t----- bird -----\tcard_games",
    "391": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.colorIdentity LIKE '%B' AND T2.type = 'foreign_language_translation'\n\t----- bird -----\tcard_games",
    "392": "SELECT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3; \n\t----- bird -----\tcard_games",
    "393": "\nSELECT COUNT(*) \nFROM cards \nWHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND isNonPowerful = 1\n\n\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IN ( SELECT cardKingdomId FROM cards WHERE cardKingdomId IS NOT NULL )\n\t----- bird -----\tcard_games",
    "395": "\nSELECT COUNT(*) FROM cards AS c JOIN set_translations st ON c.setCode = st.setCode WHERE st.translation = 'UDON' AND c.printingType = 'mtgo' AND c.handSize = '-1'\n\n\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND hasContentWarning = 1 AND availability = 'paper'\n\t----- bird -----\tcard_games",
    "397": "SELECT convertedManaCost FROM cards WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND availability IN ('paper', 'mtgo')\n\t----- bird -----\tcard_games",
    "398": "SELECT SUM(T1.convertedManaCost - T1.manaCost) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Rob Alexander'\n\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.type = 'arena'\n\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT T2.setCode FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN cards AS T3 ON T3.uuid = T1.uuid WHERE T1.language = 'es'\n\t----- bird -----\tcard_games",
    "401": "\nSELECT CAST(SUM(CASE WHEN T1.frameEffects = 'Maximum starting maximum hand size of +3' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.isLegendary = 1 AND T1.frameEffects IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "402": "SELECT CAST(SUM(CASE WHEN T1.isStorySpotlight = 1 AND T2.isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN ( SELECT uuid FROM cards WHERE isTextless = 0 ) AS T2\n\t----- bird -----\tcard_games",
    "403": "SELECT CAST(SUM(CASE WHEN T1.language = 'es' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) , name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid GROUP BY T2.name ORDER BY T2.name\n\t----- bird -----\tcard_games",
    "404": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309 GROUP BY T2.language\n\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT T1.setCode) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode INNER JOIN legalities AS T3 ON T2.setCode = T3.uuid WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brasil)'\n\t----- bird -----\tcard_games",
    "406": "SELECT t1.id, t2.status FROM cards AS t1 INNER JOIN legalities AS t2 ON t1.uuid = t2.uuid WHERE t1.type IN ('Creature') AND t2.status != 'Illegal'\n\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'de'\n\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND type = 'ability'\n\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards AS c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'pre-modern' AND l.status = 'allowed' AND c.faceConvertedManaCost IS NULL AND c.text LIKE '%This is a triggered mana ability%'\n\t----- bird -----\tcard_games",
    "410": "\nSELECT id FROM cards WHERE artist = 'Erica Yang' AND format = 'pauper' AND availability = 'paper'\n\n\t----- bird -----\tcard_games",
    "411": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.text = 'Das perfekte Gegenmittel zu einer dichten Formation'\n\t----- bird -----\tcard_games",
    "412": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Matthew D. Wilson' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.type = 'Creature'\n\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'print' AND T2.date = '2009-10-01'\n\t----- bird -----\tcard_games",
    "414": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ravnica' AND T1.totalSetSize = 180 GROUP BY T2.language\n\t----- bird -----\tcard_games",
    "415": "\nSELECT CAST(SUM(CASE WHEN hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM legalities WHERE format = 'commander' AND status = 'legal'\n\n\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(CASE WHEN T1.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM cards AS T1 LEFT JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'\n\t----- bird -----\tcard_games",
    "417": "SELECT CAST(SUM(CASE WHEN T1.type = 'expansion set' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese'\n\t----- bird -----\tcard_games",
    "418": "SELECT T1.printings FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Daren Bader'\n\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE colorIdentity != '' AND borderColor = '' AND edhrecRank > 12000\n\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 'true' AND isReprint = 'true' AND promoTypes = 'Promo'\n\t----- bird -----\tcard_games",
    "421": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'unknown' AND T1.promoTypes LIKE '%Arena League%' ORDER BY T1.power LIMIT 3;\n\t----- bird -----\tcard_games",
    "422": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.multiverseid = 149934;\n\t----- bird -----\tcard_games",
    "423": "SELECT T1.cardKingdomFoilId, T2.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid ORDER BY T1.cardKingdomFoilId ASC LIMIT 3\n\t----- bird -----\tcard_games",
    "424": "SELECT CAST(SUM(CASE WHEN layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE text IS NOT NULL AND layout != 'textless'\n\t----- bird -----\tcard_games",
    "425": "SELECT number FROM cards WHERE faceConvertedManaCost = 0 AND subtypes LIKE '%Angel Wizard%'\n\t----- bird -----\tcard_games",
    "426": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language != 'en' AND T1.name IN ( SELECT T3.name FROM sets AS T3 INNER JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T4.language = 'en' ) LIMIT 3 ORDER BY T1.name\n\t----- bird -----\tcard_games",
    "427": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Archenemy' AND T1.tcgplayerGroupId = 12345 AND T1.code = 'ARC'\n\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\n\t----- bird -----\tcard_games",
    "429": "SELECT T1.language, T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = 206\n\t----- bird -----\tcard_games",
    "430": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode INNER JOIN foreign_data AS T3 ON T3.uuid = T2.translation WHERE T1.block = 'Shadowmoor' AND T3.language = 'it' ORDER BY T1.name LIMIT 2\n\t----- bird -----\tcard_games",
    "431": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode INNER JOIN legalities AS T3 ON T2.setCode = T3.uuid WHERE T3.status = 'not available outside of United States' AND T1.isFoilOnly = 0 AND T1.name LIKE '%Japanese%'\n\t----- bird -----\tcard_games",
    "432": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'ru' GROUP BY T1.name ORDER BY COUNT(T1.id) DESC LIMIT 1; \n\t----- bird -----\tcard_games",
    "433": "SELECT CAST(SUM(CASE WHEN T1.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'onlineOnly'\n\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT T1.setCode) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isOnlineOnly != 1\n\t----- bird -----\tcard_games",
    "435": "SELECT COUNT(*) , GROUP_CONCAT(id SEPARATOR ',') FROM cards WHERE borderColor = 'black' AND rarity != '' AND colorIdentity LIKE '%B%'; \n\t----- bird -----\tcard_games",
    "436": "\nSELECT id FROM cards WHERE frameEffects = 'extendedart'\n\n\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\n\t----- bird -----\tcard_games",
    "438": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 174\n\t----- bird -----\tcard_games",
    "439": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'en' AND T1.code = 'ALL'\n\t----- bird -----\tcard_games",
    "440": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar' GROUP BY T2.language\n\t----- bird -----\tcard_games",
    "441": "SELECT setCode FROM sets WHERE releaseDate = '2007-07-13'\n\t----- bird -----\tcard_games",
    "442": "SELECT T1.baseSetSize, T1.code FROM sets AS T1 INNER JOIN sets AS T2 ON T1.parentCode = T2.code WHERE T2.block IN ('Masques', 'Mirage') GROUP BY T1.code\n\t----- bird -----\tcard_games",
    "443": "SELECT DISTINCT T1.code FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'en' AND T1.type = 'expansion'\n\t----- bird -----\tcard_games",
    "444": "SELECT T2.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'boros'\n\t----- bird -----\tcard_games",
    "445": "SELECT T2.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\n\t----- bird -----\tcard_games",
    "446": "SELECT CAST(SUM(CASE WHEN convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode = 'Abyssal Horror'\n\t----- bird -----\tcard_games",
    "447": "SELECT T1.code FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T2.status = 'expansion' AND T2.type = 'commander'\n\t----- bird -----\tcard_games",
    "448": "SELECT T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'Abzan'\n\t----- bird -----\tcard_games",
    "449": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.watermark = 'Azorius'\n\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE fd.name = 'Aaron Miller' AND c.isFullArt = 1 OR c.isPromo = 1 OR c.isAlternative = 1 OR c.isStorySpotlight = 1 OR c.isTimeshifted = 1\n\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hasAlternativeDeckLimit > 0\n\t----- bird -----\tcard_games",
    "452": " \n\t----- bird -----\tcard_games",
    "453": "SELECT convertedManaCost FROM cards WHERE asciiName = 'Ancestor''s Chosen' AND isTextless = 0 AND isAlternative = 0 AND isFullArt = 0 AND isOnlineOnly = 0 AND isOversized = 0 AND isReserved = 0 AND isReprint = 0 AND isStarter = 0 AND isStorySpotlight = 0 AND isTimeshifted = 0\n\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NULL\n\t----- bird -----\tcard_games",
    "455": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isPromo = 1 AND T1.faceConvertedManaCost > 0 AND T1.otherFaceIds != ''\n\t----- bird -----\tcard_games",
    "456": "SELECT DISTINCT types FROM cards WHERE asciiName = 'Molimo, Maro-Sorcerer'\n\t----- bird -----\tcard_games",
    "457": "SELECT DISTINCT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\n\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT T1.artist) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.borderColor = 'black' AND T1.printingType IN ('arena', 'mtgo')\n\t----- bird -----\tcard_games",
    "459": "SELECT name FROM cards WHERE convertedManaCost > ( SELECT MIN(convertedManaCost) FROM cards WHERE asciiName = \"Serra Angel\" ) AND asciiName = \"Shrine Keeper\"; \n\t----- bird -----\tcard_games",
    "460": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Battra, Dark Destroyer'\n\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE faceConvertedManaCost = ( SELECT MAX(faceConvertedManaCost) FROM cards ) AND frameVersion = '2003' LIMIT 3; \n\t----- bird -----\tcard_games",
    "462": "SELECT T2.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.faceName = 'Ancestor\\'s Chosen' AND T2.language = 'it'\n\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM set_translations SETS JOIN set_code ON sets.code = set_translations.setCode JOIN cards ON cards.setCode = sets.code WHERE cards.name = 'Angel of Mercy'\n\t----- bird -----\tcard_games",
    "464": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Hauptset Zehnte Edition'\n\t----- bird -----\tcard_games",
    "465": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'ko'\n\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Adam Rex' AND T1.setCode = 'Hauptset Zehnte Edition'; \n\t----- bird -----\tcard_games",
    "467": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Hauptset Zehnte Edition' AND T1.type = 'baseSet'\n\t----- bird -----\tcard_games",
    "468": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'zh-CN'\n\t----- bird -----\tcard_games",
    "469": "SELECT T1.name FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.flavorName = 'Angel of Mercy' AND T1.isOnlineOnly = 1\n\t----- bird -----\tcard_games",
    "470": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Ancestor''s Chosen'\n\t----- bird -----\tcard_games",
    "471": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Hauptset Zehnte Edition'\n\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT T1.setCode) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'it'\n\t----- bird -----\tcard_games",
    "473": "SELECT T1.name FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T1.name = 'Adarkar Valkyrie' AND T2.status = 'outsideUS'\n\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'it' AND T1.baseSetSize < 10\n\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\n\t----- bird -----\tcard_games",
    "476": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1;\n\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\n\t----- bird -----\tcard_games",
    "478": "SELECT name FROM sets WHERE parentCode = 'Coldsnap' LIMIT 1 OFFSET 3 \n\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.convertedManaCost > 5 AND T2.name = 'Coldsnap' AND T1.power IS NULL\n\t----- bird -----\tcard_games",
    "480": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'it'\n\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.type = 'flavor_text'\n\t----- bird -----\tcard_games",
    "482": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'de'\n\t----- bird -----\tcard_games",
    "483": "SELECT T2.text FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode INNER JOIN foreign_data AS T3 ON T3.uuid = T2.translation WHERE T1.name = 'Coldsnap' AND T3.language = 'it'\n\t----- bird -----\tcard_games",
    "484": "SELECT T1.name, T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1\n\t----- bird -----\tcard_games",
    "485": "SELECT date FROM rulings WHERE uuid = ( SELECT uuid FROM cards WHERE asciiName = 'Reminisce' )\n\t----- bird -----\tcard_games",
    "486": "SELECT CAST(SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode = 'Coldsnap' AND convertedManaCost IS NOT NULL\n\t----- bird -----\tcard_games",
    "487": "SELECT CAST(SUM(CASE WHEN T1.name = 'Coldsnap' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN (T2.cardKingdomFoilId IS NOT NULL AND T2.cardKingdomId IS NOT NULL) THEN 1 ELSE 0 END) FROM cards AS T1 LEFT JOIN sets AS T2 ON T1.setCode = T2.code\n\t----- bird -----\tcard_games",
    "488": "SELECT T1.code FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation LIKE '%2017/07/14%'\n\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\n\t----- bird -----\tcard_games",
    "490": "SELECT t.tcgplayerProductId FROM sets t WHERE t.code = 'SS2'\n\t----- bird -----\tcard_games",
    "491": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.releaseDate = '2017-06-09'\n\t----- bird -----\tcard_games",
    "492": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'From the Vault: Lore' AND T2.language = 'en'\n\t----- bird -----\tcard_games",
    "493": "SELECT T1.parentCode FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Commander 2014 Oversized' AND T2.language = 'en'\n\t----- bird -----\tcard_games",
    "494": "SELECT T1.text, CASE WHEN T2.status = 'Missing' THEN 'Yes' ELSE 'No' END AS hasMissingProperties, CASE WHEN T2.status = 'Degraded' THEN 'Yes' ELSE 'No' END AS hasDegradedProperties FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.scryfallIllustrationId IN (SELECT scryfallIllustrationId FROM foreign_data WHERE name = 'Jim Pavelec')\n\t----- bird -----\tcard_games",
    "495": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation'\n\t----- bird -----\tcard_games",
    "496": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Rinascita di Alara'\n\t----- bird -----\tcard_games",
    "497": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Huiti\u00e8me \u00e9dition'\n\t----- bird -----\tcard_games",
    "498": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T2.language = 'fr'\n\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Salvat 2011'\n\t----- bird -----\tcard_games",
    "500": "SELECT T2.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Fellwar Stone' AND T2.language = 'ja'\n\t----- bird -----\tcard_games",
    "501": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Journey into Nyx Hero\\'s Path' ORDER BY T1.convertedManaCost DESC LIMIT 1 \n\t----- bird -----\tcard_games",
    "502": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Ola de fr\u00edo'\n\t----- bird -----\tcard_games",
    "503": "SELECT T1.type FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Samite Pilgrim'\n\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'World Championship Decks 2004' AND T1.convertedManaCost = 3\n\t----- bird -----\tcard_games",
    "505": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'zh-CN'\n\t----- bird -----\tcard_games",
    "506": "SELECT CAST(SUM(CASE WHEN T1.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'ja'\n\t----- bird -----\tcard_games",
    "507": "SELECT CAST(SUM(CASE WHEN T2.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'pt-BR'\n\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT T1.printings FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText LIKE '%Aleksi Briclot%' AND T1.printings NOT IN ('text')\n\t----- bird -----\tcard_games",
    "509": "SELECT T1.id FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode GROUP BY T1.id ORDER BY COUNT(T2.id) DESC LIMIT 1;\n\t----- bird -----\tcard_games",
    "510": "\nSELECT T1.artist FROM cards AS T1 INNER JOIN (\n  SELECT cardKingdomFoilId, MAX(convertedManaCost) as max_cost \n  FROM cards \n  GROUP BY cardKingdomFoilId \n  HAVING COUNT(DISTINCT faceName) = 1 \n) AS T2 ON T1.cardKingdomFoilId = T2.cardKingdomFoilId WHERE T2.max_cost = (SELECT MAX(convertedManaCost) FROM cards)\n\n\t----- bird -----\tcard_games",
    "511": "SELECT T1.frameEffects FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.isFoil = 1 GROUP BY T1.frameEffects ORDER BY COUNT(T1.id) DESC LIMIT 1;\n\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE power = \"Unknown\" AND duelDeck = 'A' AND hasFoil = 0\n\t----- bird -----\tcard_games",
    "513": "SELECT T1.id FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T2.status = 'allowed' AND T1.type = 'commander' GROUP BY T1.id ORDER BY COUNT(T1.id) DESC LIMIT 1;\n\t----- bird -----\tcard_games",
    "514": "SELECT name FROM cards WHERE convertedManaCost = 0 ORDER BY faceConvertedManaCost DESC LIMIT 10;\n\t----- bird -----\tcard_games",
    "515": "SELECT T1.releaseDate, T2.format FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.uuid WHERE T1.name = 'Urza's Saga' AND T2.status = 'Legal' ORDER BY T1.releaseDate LIMIT 1\n\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN scryfallIllustrationId AS T2 ON T1.scryfallIllustrationId = T2.id INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T3.language = 'French' AND T1.artist = 'Volkan Ba\u00c7\u00b5a'\n\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T1.rarity = 'rare' AND T1.type = 'enchantment' AND T1.name = 'Abundance' AND T2.status = 'legal'\n\t----- bird -----\tcard_games",
    "518": "SELECT T1.format, T2.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid GROUP BY T1.format ORDER BY COUNT(T1.id) DESC LIMIT 1\n\t----- bird -----\tcard_games",
    "519": "SELECT T1.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond'\n\t----- bird -----\tcard_games",
    "520": "\nSELECT T1.artist, T2.format \nFROM cards AS T1 \nJOIN legalities AS T2 ON T1.uuid = T2.uuid \nWHERE T1.scryfallIllustrationId IS NOT NULL \nGROUP BY T1.scryfallIllustrationId \nORDER BY COUNT(T1.id) ASC LIMIT 1;\n\t----- bird -----\tcard_games",
    "521": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T1.frameVersion = '1997' AND T3.flavorText LIKE '%Sensitive content%' AND T3.language IN ('en', 'fr')\n\t----- bird -----\tcard_games",
    "522": "SELECT T1.name, T2.bannedPlayFormat FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'banned' AND T1.edhrecRank = 1\n\t----- bird -----\tcard_games",
    "523": "\nSELECT AVG(T1.totalSetSize) AS average_sets, T2.language \nFROM sets AS T1 \nJOIN set_translations AS T2 ON T1.code = T2.setCode \nWHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\nGROUP BY T2.language\n\n\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.borderColor = 'black' AND T1.isOnlineOnly = 1\n\t----- bird -----\tcard_games",
    "525": "SELECT DISTINCT T1.uuid FROM legalities AS T1 INNER JOIN sets AS T2 ON T1.uuid = T2.code WHERE T2.type = 'old_school' AND T1.status IN ('restricted', 'banned')\n\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%Matthew D. Wilson%' AND c.availability = 'paper'\n\t----- bird -----\tcard_games",
    "527": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T2.date DESC\n\t----- bird -----\tcard_games",
    "528": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = 'Hour of Devastation' GROUP BY T1.uuid\n\t----- bird -----\tcard_games",
    "529": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'ko' AND T2.translation IS NULL\n\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT T1.frameEffects, T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText LIKE '%Allen Williams%' AND T1.isFullArt = 0 AND T1.isBanned = 1;\n\t----- bird -----\tcard_games",
    "531": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Harlan' AND T2.Name = 'Reputation' OR T1.DisplayName = 'Jarrod Dixon' AND T2.Name = 'Reputation' ORDER BY T1.Reputation DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "532": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.CreationDate BETWEEN '2014-01-01' AND '2014-12-31'\n\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(DISTINCT T2.Id) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2 CreationDate > '2014-09-01'\n\t----- bird -----\tcodebase_community",
    "534": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId GROUP BY T1.Id ORDER BY COUNT(T2.ViewCount) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(DISTINCT T2.UserId) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 3 AND T2.UpVotes > 100 GROUP BY T2.UserId HAVING COUNT(T2.DownVotes) > 1\n\t----- bird -----\tcodebase_community",
    "536": "\nSELECT COUNT(DISTINCT Id) FROM users WHERE Views > 10 AND CreationDate > '2013-12-31'\n\n\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\n\t----- bird -----\tcodebase_community",
    "538": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\n\t----- bird -----\tcodebase_community",
    "539": "SELECT T1.OwnerDisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\n\t----- bird -----\tcodebase_community",
    "540": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.Score DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "541": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.Score DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(CASE WHEN T2.OwnerDisplayName = 'csgillespie' THEN 1 ELSE 0 END) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN comments AS T3 ON T1.Id = T3.PostId\n\t----- bird -----\tcodebase_community",
    "543": "SELECT T1.AnswerCount FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.AnswerCount DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "544": "SELECT T2.LastEditorDisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\n\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(Id) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND PostTypeId = 2\n\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Score > 50 AND T2.ViewCount > 1000\n\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN ( SELECT Id FROM users WHERE Age > 18 ) AND Score > 19\n\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\n\t----- bird -----\tcodebase_community",
    "549": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'\n\t----- bird -----\tcodebase_community",
    "550": "SELECT T1.Body, T2.TagName FROM tags AS T2 INNER JOIN posts AS T1 ON T2.WikiPostId = T1.Id GROUP BY T2.TagName ORDER BY COUNT(T2.TagName) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\n\t----- bird -----\tcodebase_community",
    "552": "SELECT DISTINCT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\n\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie' AND STRFTIME('%Y', T2.Date) = '2011'\n\t----- bird -----\tcodebase_community",
    "554": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.Id ORDER BY COUNT(T2.Id) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\n\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(T1.Reputation) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Views > 200\n\t----- bird -----\tcodebase_community",
    "557": "SELECT CAST(SUM(CASE WHEN T1.Age > 60 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Score > 20\n\t----- bird -----\tcodebase_community",
    "558": "SELECT SUM(CASE WHEN T1.CreationDate = '2010-07-19' THEN 1 ELSE 0 END) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Id = 58\n\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(T1.Name) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Revival'\n\t----- bird -----\tcodebase_community",
    "561": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId ORDER BY T2.Score DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount = 1910\n\t----- bird -----\tcodebase_community",
    "563": "SELECT T1.FavoriteCount FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 3025 AND T2 CreationDate BETWEEN '2014-04-23' AND '2014-04-23 20:29:39'\n\t----- bird -----\tcodebase_community",
    "564": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ParentId = 107829 LIMIT 1\n\t----- bird -----\tcodebase_community",
    "565": "SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18'\n\t----- bird -----\tcodebase_community",
    "566": "SELECT Reputation FROM users WHERE Id = ( SELECT OwnerUserId FROM posts WHERE Id = 65041 )\n\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini'\n\t----- bird -----\tcodebase_community",
    "568": "SELECT T2.UserDisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 3 AND T1.Id = 6347\n\t----- bird -----\tcodebase_community",
    "569": "SELECT SUM(CASE WHEN T1.Title = 'Data visualization' THEN 1 ELSE 0 END) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId\n\t----- bird -----\tcodebase_community",
    "570": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'DatEpicCoderGuyWhoPrograms'\n\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(DISTINCT PostId) / COUNT(VoteId) FROM votes WHERE UserId = 24\n\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\n\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\n\t----- bird -----\tcodebase_community",
    "574": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.PostId IN ( SELECT Id FROM posts WHERE WebsiteUrl = 'http://stackoverflow.com' )\n\t----- bird -----\tcodebase_community",
    "575": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\n\t----- bird -----\tcodebase_community",
    "576": "SELECT T2.UserDisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text LIKE '%thank you user93%'\n\t----- bird -----\tcodebase_community",
    "577": "SELECT T1.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'A Lion.'\n\t----- bird -----\tcodebase_community",
    "578": "SELECT T1.DisplayName, T2.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'\n\t----- bird -----\tcodebase_community",
    "579": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'How does gentle boosting differ from AdaBoost?'\n\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT T1.UserId FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Necromancer' LIMIT 10 \n\t----- bird -----\tcodebase_community",
    "581": "SELECT T2.LastEditorDisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data.'\n\t----- bird -----\tcodebase_community",
    "582": "\nSELECT DISTINCT T1.Title FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 12345 AND T2.UserDisplayName = 'Vebjorn Ljosa' \n\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(T1.Score) + T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\n\t----- bird -----\tcodebase_community",
    "584": "SELECT T2.Text FROM posthistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND T1.UserId IN ( SELECT UserId FROM users )\n\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(T1.BountyAmount) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%data%'\n\t----- bird -----\tcodebase_community",
    "586": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.PostId IN ( SELECT Id FROM posts WHERE Title LIKE '%variance%' ) AND T2.BountyAmount = 50\n\t----- bird -----\tcodebase_community",
    "587": "\nSELECT T1.Title, AVG(T2.ViewCount) AS AverageViewCount \nFROM posts AS T1 \nJOIN tags AS T2 ON T1.Id = T2.ExcerptPostId \nWHERE T2.TagName = 'humor' \nGROUP BY T1.Title \nORDER BY AverageViewCount DESC; \n\nSELECT PostId, Score, Text, CreationDate, UserDisplayName \nFROM comments \nWHERE PostId IN (SELECT Id FROM posts WHERE Tags LIKE '%humor%'); \n\n\n\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Id = 13\n\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "590": "SELECT OwnerUserId FROM posts ORDER BY ViewCount LIMIT 1\n\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT T2.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND STRFTIME('%Y', T1.Date) = '2011'\n\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name IN ('Gold', 'Silver', 'Copper') AND T1.Date > (SELECT MIN(Date) FROM badges);\n\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'New York' AND T1.Name IN ('Teacher', 'Supporter')\n\t----- bird -----\tcodebase_community",
    "594": "SELECT T1.DisplayName, T2.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 1\n\t----- bird -----\tcodebase_community",
    "595": "\nSELECT DISTINCT u.Id, u.DisplayName \nFROM users u \nJOIN posts p ON u.Id = p.OwnerUserId \nJOIN postHistory ph ON p.Id = ph.PostId \nWHERE ph.RevisionGUID IN (SELECT RevisionGUID FROM postHistory GROUP BY PostId HAVING COUNT(DISTINCT UserId) = 1) AND p.ViewCount >= 1000\n\n\t----- bird -----\tcodebase_community",
    "596": "SELECT DISTINCT u.Id, b.Name FROM users u LEFT JOIN badges b ON u.Id = b.UserId ORDER BY COUNT(u.Id) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'India' AND T1.Name = 'Teacher'\n\t----- bird -----\tcodebase_community",
    "598": "SELECT CAST(SUM(CASE WHEN T2.Name = 'Student' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Name = 'Student' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM badges AS T1 INNER JOIN posts AS T2 ON T1.UserId = T2.OwnerUserId WHERE T1.Date BETWEEN '2010-01-01' AND '2010-12-31' OR T1.Date BETWEEN '2011-01-01' AND '2011-12-31'\n\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT PostHistoryTypeId, COUNT(DISTINCT T2.UserId) FROM posthistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 3720 GROUP BY T1.PostHistoryTypeId\n\t----- bird -----\tcodebase_community",
    "600": "SELECT DISTINCT T1.Title, T2.Score FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.RatedPostId = 61217 UNION SELECT T1.Title, T2.Score FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.RatedPostId WHERE T2.PostId = 61217\n\t----- bird -----\tcodebase_community",
    "601": "SELECT T1.Score, T3.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN postLinks AS T3 ON T1.Id = T3.PostId WHERE T1.Id = 395\n\t----- bird -----\tcodebase_community",
    "602": "SELECT PostId, UserId FROM comments WHERE Score > 60 GROUP BY PostId, UserId\n\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(CASE WHEN T2.UserId = 686 AND T1.CreationDate BETWEEN '2011-01-01' AND '2011-12-31' THEN T1.FavoriteCount ELSE 0 END) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id\n\t----- bird -----\tcodebase_community",
    "604": "SELECT CAST(SUM(v.VoteTypeId) AS REAL)/COUNT(v.Id) , AVG(u.Age) FROM votes v INNER JOIN posts p ON v.PostId = p.Id INNER JOIN users u ON v.UserId = u.Id GROUP BY u.Id HAVING COUNT(p.Id) > 10\n\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Announcer'\n\t----- bird -----\tcodebase_community",
    "606": "SELECT DISTINCT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:39:08'\n\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(T1.Score) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score > 0\n\t----- bird -----\tcodebase_community",
    "608": "SELECT T2.Text FROM votes AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1 CreationDate = '2010-07-19 19:25:47'\n\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(Id) FROM posts WHERE Score = 10\n\t----- bird -----\tcodebase_community",
    "610": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id ORDER BY T2.Reputation DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "611": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08'\n\t----- bird -----\tcodebase_community",
    "612": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\n\t----- bird -----\tcodebase_community",
    "613": "SELECT DISTINCT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'\n\t----- bird -----\tcodebase_community",
    "614": "SELECT CAST(SUM(CASE WHEN T1.Name = 'Teacher' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id\n\t----- bird -----\tcodebase_community",
    "615": "SELECT CAST(SUM(CASE WHEN T1.Age BETWEEN 13 AND 19 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer'\n\t----- bird -----\tcodebase_community",
    "616": "SELECT T2.Score FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate = '2010-07-19 19:56:56'\n\t----- bird -----\tcodebase_community",
    "617": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate = '2010-07-19 19:37:33'\n\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT T1.Age FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Vienna, Austria'\n\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age > 18\n\t----- bird -----\tcodebase_community",
    "620": "SELECT COUNT(T1.ViewCount) FROM posts AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08'\n\t----- bird -----\tcodebase_community",
    "621": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id ORDER BY T2.Reputation LIMIT 1\n\t----- bird -----\tcodebase_community",
    "622": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Sharpie'\n\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Age > 60\n\t----- bird -----\tcodebase_community",
    "624": "SELECT Name FROM badges WHERE UserId = 30;\n\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'New York' AND T2.RatedPostId IS NULL\n\t----- bird -----\tcodebase_community",
    "626": "\nSELECT SUM(CASE WHEN CreationDate BETWEEN '2010-01-01' AND '2010-12-31' THEN 1 ELSE 0 END) FROM votes\n\n\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name IN ('Yearling', 'Newbie')\n\t----- bird -----\tcodebase_community",
    "628": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.ViewCount DESC LIMIT 10 \n\t----- bird -----\tcodebase_community",
    "629": "SELECT SUM(CASE WHEN CreationDate BETWEEN '2010-01-01' AND '2010-12-31' THEN 1 ELSE 0 END) / SUM(CASE WHEN CreationDate BETWEEN '2011-01-01' AND '2011-12-31' THEN 1 ELSE 0 END) FROM votes\n\t----- bird -----\tcodebase_community",
    "630": "SELECT T1.TagName FROM tags AS T1 INNER JOIN posts AS T2 ON T1.WikiPostId = T2.Id WHERE T2.OwnerUserId = 12345\n\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Daniel Vassallo'\n\t----- bird -----\tcodebase_community",
    "632": "SELECT SUM(CASE WHEN T2.DisplayName = 'Harlan' THEN 1 ELSE 0 END) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id\n\t----- bird -----\tcodebase_community",
    "633": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "634": "SELECT PostId FROM posts WHERE OwnerUserId IN ( SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky' ) INTERSECT SELECT PostId FROM posts WHERE OwnerUserId IN ( SELECT Id FROM users WHERE DisplayName = 'Noah Snyder' ) ORDER BY ViewCount DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T3.DisplayName = 'Matt Parker' AND T2.VoteTypeId IN (1, 2, 3) GROUP BY T1.Id HAVING COUNT(T2.Id) > 4\n\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Neil McGuigan' AND T1.Score < 0;\n\t----- bird -----\tcodebase_community",
    "637": "SELECT T1.TagName FROM tags AS T1 INNER JOIN posts AS T2 ON T1.WikiPostId = T2.Id WHERE T2.CommentCount = 0 AND T2.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Mark Meckes') GROUP BY T1.TagName\n\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer'\n\t----- bird -----\tcodebase_community",
    "639": "SELECT CAST(SUM(CASE WHEN T1.TagName = 'R' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Id) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.WikiPostId = T2.Id WHERE T2.OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'Community' )\n\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(CASE WHEN T1.OwnerDisplayName = 'mornington' THEN T2.ViewCount ELSE 0 END) - SUM(CASE WHEN T1.OwnerDisplayName = 'Amos' THEN T2.ViewCount ELSE 0 END) FROM posts AS T1 INNER JOIN ( SELECT PostId, SUM(ViewCount) AS ViewCount FROM votes GROUP BY PostId ) AS T2\n\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN posts AS T2 ON T1.UserId = T2.OwnerUserId WHERE T1.Date BETWEEN '2014-01-01' AND '2014-12-31'\n\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(Id) FROM posts WHERE CreationDate = '2010-07-21'\n\t----- bird -----\tcodebase_community",
    "643": "SELECT T1.DisplayName, T2.Age FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.ViewCount DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\n\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(T1.Score) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score < 0 AND T2.Id = 13\n\t----- bird -----\tcodebase_community",
    "646": "SELECT DISTINCT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 0 GROUP BY T1.Title\n\t----- bird -----\tcodebase_community",
    "647": "SELECT DISTINCT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'North Pole' AND T1.Date BETWEEN '2011-01-01' AND '2011-12-31'\n\t----- bird -----\tcodebase_community",
    "648": "SELECT DISTINCT T1.DisplayName, T2.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150\n\t----- bird -----\tcodebase_community",
    "649": "SELECT T1.LastActivityDate, COUNT(T2.Id) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY T1.Id\n\t----- bird -----\tcodebase_community",
    "650": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'outliers'\n\t----- bird -----\tcodebase_community",
    "651": "SELECT T2.Title FROM postlinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.RatedPostId = ( SELECT PostId FROM posts WHERE Title = 'How to tell if something happened in a data set which monitors a value over time' )\n\t----- bird -----\tcodebase_community",
    "652": "SELECT T1.PostId, T2.Name FROM badges AS T2 INNER JOIN posts AS T1 ON T2.UserId = T1.OwnerUserId WHERE T1.CreationDate BETWEEN '2013-01-01' AND '2013-12-31' AND T2.Name = 'Samuel'\n\t----- bird -----\tcodebase_community",
    "653": "SELECT T1.OwnerDisplayName FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId GROUP BY T1.Id ORDER BY SUM(T2.VoteTypeId) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "654": "SELECT T2.DisplayName, T2.Location FROM tags AS T1 INNER JOIN users AS T2 ON T1.WikiPostId = T2.Id WHERE T1.TagName = 'hypothesis-testing'\n\t----- bird -----\tcodebase_community",
    "655": "SELECT T1.Title, T2.LinkTypeId FROM postlinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'What are principal component scores?'\n\t----- bird -----\tcodebase_community",
    "656": "SELECT T1.OwnerDisplayName FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.VoteTypeId = 3 ORDER BY T2.Score DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "657": "SELECT T2.DisplayName, T1.WebsiteUrl FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.VoteTypeId = 8 ORDER BY T1.BountyAmount DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "658": "SELECT TOP 5 Title FROM posts ORDER BY ViewCount DESC\n\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(T1.Id) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.WikiPostId = T2.Id WHERE T1.Count BETWEEN 5000 AND 7000\n\t----- bird -----\tcodebase_community",
    "660": "SELECT T1.OwnerUserId FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId GROUP BY T1.OwnerUserId ORDER BY SUM(T2.VoteTypeId) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "661": "\nSELECT T1.Reputation, DATEDIFF(CURRENT_DATE, T2.CreationDate) AS Age \nFROM users AS T1 \nJOIN posts AS T2 ON T1.Id = T2.OwnerUserId \nWHERE T2.Score > ( SELECT MAX(Score) FROM posts ) \nGROUP BY T1.Reputation \nORDER BY SUM(T2.Score) DESC \nLIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(T1.PostId) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.VoteTypeId = 50 AND T1.CreationDate BETWEEN '2011-01-01' AND '2011-12-31'\n\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(Id) FROM users\n\t----- bird -----\tcodebase_community",
    "664": "SELECT T1.Score FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.WikiPostId GROUP BY T1.Id ORDER BY COUNT(T2.TagName) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "665": "\nSELECT AVG(CASE WHEN T1.PostId IN ( SELECT PostId FROM posts WHERE AnswerCount <= 2 ) THEN 1 ELSE 0 END) AS AverageLinksPerMonth \nFROM postlinks \nJOIN posts ON postlinks.PostId = posts.Id \nWHERE YEAR(postlinks.CreationDate) = 2010 \nGROUP BY YEAR(postlinks.CreationDate)\n\t----- bird -----\tcodebase_community",
    "666": "\nSELECT PostId FROM votes WHERE UserId = 1465 GROUP BY PostId ORDER BY SUM(BountyAmount) DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "667": "SELECT T1.Title FROM posts AS T1 INNER JOIN postlinks AS T2 ON T1.Id = T2.PostId ORDER BY T2.CreationDate ASC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "668": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.Id ORDER BY COUNT(T2.Id) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "669": "SELECT T1.CreationDate FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'chl' AND T1.VoteTypeId = 3 ORDER BY T1.CreationDate LIMIT 1\n\t----- bird -----\tcodebase_community",
    "670": "\nSELECT MIN(CreationDate) FROM users\nJOIN posts ON users.Id = posts.OwnerUserId\nGROUP BY users.Id\nORDER BY MIN(CreationDate)\nLIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "671": "SELECT T2.UserDisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date ASC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT T1.UserId) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\n\t----- bird -----\tcodebase_community",
    "673": "\nSELECT AVG(CASE WHEN T1.LastAccessDate = ( SELECT MAX(LastAccessDate) FROM users ) THEN 1 ELSE 0 END) AS AveragePostsVotedByOldestUsers \nFROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id\n\t----- bird -----\tcodebase_community",
    "674": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId GROUP BY T1.Id ORDER BY SUM(T2.VoteTypeId) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Reputation > 2000 AND T2.ViewCount > 1000\n\t----- bird -----\tcodebase_community",
    "676": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age > 18\n\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Jay Stevens' AND T1.CreationDate BETWEEN '2010-01-01' AND '2010-12-31'\n\t----- bird -----\tcodebase_community",
    "678": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1 \n\t----- bird -----\tcodebase_community",
    "679": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId GROUP BY T1.Id ORDER BY SUM(T2.VoteTypeId) DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Stephen Turner'\n\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT T2.UserDisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount > 20000 AND T1.CreationDate BETWEEN '2011-01-01' AND '2011-12-31'\n\t----- bird -----\tcodebase_community",
    "682": "SELECT T1.Id, T2.OwnerDisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.CreationDate BETWEEN '2010-01-01' AND '2010-12-31' ORDER BY T1.Score DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "683": "SELECT CAST(SUM(CASE WHEN T2.Reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.CreationDate BETWEEN '2011-01-01' AND '2011-12-31'\n\t----- bird -----\tcodebase_community",
    "684": "SELECT CAST(SUM(CASE WHEN T1.Age >= 13 AND T1.Age <= 19 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId\n\t----- bird -----\tcodebase_community",
    "685": "SELECT SUM(p.ViewCount) , (SELECT t2.LastEditorDisplayName FROM posts AS t1 INNER JOIN users AS t2 ON t1.LastEditorUserId = t2.Id WHERE t1.Title = 'Computer Game Datasets' ORDER BY t1.CreationDate DESC LIMIT 1)\n\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(Id) FROM posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM posts )\n\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id ORDER BY T2.Score DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount > 35000 AND T1.CommentCount = 0\n\t----- bird -----\tcodebase_community",
    "689": "SELECT T2.Location, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183 ORDER BY T1.LastEditDate DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "690": "\nSELECT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.WebsiteUrl LIKE '%adult%' AND T2.UpVotes > 5000\n\t----- bird -----\tcodebase_community",
    "692": "SELECT DATEDIFF(CreationDate, CreationDate) FROM users WHERE DisplayName = 'Zolomon'\n\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(T1.Id) AS PostCount, COUNT(T2.Id) AS CommentCount FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T1.CreationDate DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "694": "SELECT T2.Text, T1.UserDisplayName FROM posthistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostHistoryTypeId = 3 AND T1.PostId IN ( SELECT Id FROM posts WHERE Title = 'Analysing wind data with R' ) ORDER BY T1.CreationDate DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT T1.UserId) FROM badges AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'Citizen Patrol'\n\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(T1.PostId) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.WikiPostId = T2.Id WHERE T1.TagName = 'careers'\n\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, ViewCount FROM users WHERE DisplayName = 'Jarrod Dixon'\n\t----- bird -----\tcodebase_community",
    "698": "SELECT SUM(CASE WHEN T2.Title = 'Clustering 1D data' THEN 1 ELSE 0 END) AS CommentCount, SUM(CASE WHEN T2.Title = 'Clustering 1D data' THEN 1 ELSE 0 END) AS AnswerCount FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId\n\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\n\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(T1.PostId) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.BountyAmount > 30\n\t----- bird -----\tcodebase_community",
    "701": "SELECT CAST(SUM(CASE WHEN T1.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T2.Reputation DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(Id) FROM posts WHERE Score < 20\n\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(T1.Id) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.WikiPostId = T2.Id WHERE T1.TagName IN ( SELECT TagName FROM tags WHERE Id < 15 ) AND T2.ViewCount <= 20\n\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\n\t----- bird -----\tcodebase_community",
    "705": "SELECT T1.Reputation, T2.UpVotes FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN comments AS T3 ON T2.PostId = T3.PostId WHERE T3.Text = 'fine, you win :'\n\t----- bird -----\tcodebase_community",
    "706": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'linear regression'\n\t----- bird -----\tcodebase_community",
    "707": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\n\t----- bird -----\tcodebase_community",
    "708": "SELECT T1.CreationDate, T2.Age FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.PostId IN ( SELECT PostId FROM comments WHERE UserDisplayName = 'Website' )\n\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT T1.PostId) FROM votes AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T2.Score = 0 AND T1.PostId IN ( SELECT PostId FROM posts WHERE ViewCount < 5 )\n\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T1.Score = 0\n\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(T1.UserId) * 40 FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score = 0\n\t----- bird -----\tcodebase_community",
    "712": "SELECT DISTINCT T1.PostId, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\n\t----- bird -----\tcodebase_community",
    "713": "SELECT SUM(CASE WHEN T2.Text = 'R is also lazy evaluated.' THEN 1 ELSE 0 END) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id\n\t----- bird -----\tcodebase_community",
    "714": "SELECT T2.Text FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Harvey Motulsky'\n\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT T2.UserDisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0\n\t----- bird -----\tcodebase_community",
    "716": "\nSELECT CAST(SUM(CASE WHEN T2.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id INNER JOIN comments AS T3 ON T1.PostId = T3.Id WHERE T3.Score BETWEEN 5 AND 10 GROUP BY T1.PostId\n\t----- bird -----\tcodebase_community",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = '3-D Man'\n\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength'\n\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\n\t----- bird -----\tsuperhero",
    "720": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id HAVING COUNT(T2.power_id) > 15\n\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1;\n\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\n\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(*) FROM superhero AS s JOIN hero_power AS h ON s.id = h.hero_id JOIN superpower AS p ON h.power_id = p.id WHERE s.eye_colour_id = 1 AND p.power_name = 'Agility'\n\t----- bird -----\tsuperhero",
    "724": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Blue Eyes' AND T1.hair_colour_id = 1\n\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' )\n\t----- bird -----\tsuperhero",
    "726": "\nSELECT T2.full_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id ORDER BY T2.height_cm DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "727": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'\n\t----- bird -----\tsuperhero",
    "728": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = ( SELECT id FROM colour WHERE colour = 'blue' )\n\t----- bird -----\tsuperhero",
    "729": "\nSELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Marvel Comics';\n\n\t----- bird -----\tsuperhero",
    "730": "SELECT CAST(SUM(CASE WHEN T1.power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id\n\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' )\n\t----- bird -----\tsuperhero",
    "732": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id ORDER BY T1.height_cm LIMIT 1\n\t----- bird -----\tsuperhero",
    "733": "\nSELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold') AND publisher_name = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "734": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'\n\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero WHERE hair_colour_id = ( SELECT id FROM colour WHERE colour = 'blonde' )\n\t----- bird -----\tsuperhero",
    "736": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Dumbness' ORDER BY T2.attribute_value DESC LIMIT 1; \n\t----- bird -----\tsuperhero",
    "737": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\n\t----- bird -----\tsuperhero",
    "738": "SELECT COUNT(*) FROM superhero WHERE attribute_value < 50 AND attribute_id IN ( SELECT id FROM hero_attribute WHERE attribute_name = 'Durability' )\n\t----- bird -----\tsuperhero",
    "739": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\n\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero WHERE gender_id = ( SELECT id FROM gender WHERE gender = 'female' ) AND attribute_value = 100;\n\t----- bird -----\tsuperhero",
    "741": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id ORDER BY COUNT(T2.power_id) DESC LIMIT 1\n\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE alignment_id = ( SELECT id FROM alignment WHERE alignment LIKE '%vampire%' ) AND race_id IN ( SELECT id FROM race WHERE race LIKE '%vampire%' ); \n\t----- bird -----\tsuperhero",
    "743": "SELECT CAST(SUM(CASE WHEN T1.alignment = 'self-interest' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.superhero_name), COUNT(CASE WHEN T3.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM alignment AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.alignment_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id\n\t----- bird -----\tsuperhero",
    "744": "SELECT publisher_name, COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC') MINUS SELECT publisher_name, COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel') \n\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM superhero WHERE publisher_name = 'Star Trek'\n\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id\n\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\n\t----- bird -----\tsuperhero",
    "748": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75;\n\t----- bird -----\tsuperhero",
    "749": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Deathlok'\n\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(T2.weight_kg) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.gender = 'female'\n\t----- bird -----\tsuperhero",
    "751": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.gender = 'male' LIMIT 5;\n\t----- bird -----\tsuperhero",
    "752": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'alien'\n\t----- bird -----\tsuperhero",
    "753": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T2.attribute_value = T3.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T3.colour IS NULL\n\t----- bird -----\tsuperhero",
    "754": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.id = 56;\n\t----- bird -----\tsuperhero",
    "755": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name IN ('Demigod', 'God')\n\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment = 'bad'\n\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169\n\t----- bird -----\tsuperhero",
    "758": "SELECT T2.hair_colour FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm = 185\n\t----- bird -----\tsuperhero",
    "759": "\nSELECT T2.eye_colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id ORDER BY T1.weight_kg DESC LIMIT 1 \n\t----- bird -----\tsuperhero",
    "760": "\nSELECT CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180\n\n\t----- bird -----\tsuperhero",
    "761": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.gender_id IN ( SELECT id FROM gender WHERE gender = 'male' ) AND T1.weight_kg > ( SELECT AVG(weight_kg) * 0.79 FROM superhero )\n\t----- bird -----\tsuperhero",
    "762": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T2.power_id ORDER BY COUNT(T2.power_id) DESC LIMIT 1;\n\t----- bird -----\tsuperhero",
    "763": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Abomination'\n\t----- bird -----\tsuperhero",
    "764": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.id = 1;\n\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'stealth'\n\t----- bird -----\tsuperhero",
    "766": "\nSELECT T2.full_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'strength' ORDER BY T1.attribute_value DESC LIMIT 1 \n\t----- bird -----\tsuperhero",
    "767": "SELECT CAST(COUNT(CASE WHEN skin_colour IS NULL THEN 1 END) AS REAL) / COUNT(*) FROM superhero\n\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics' )\n\t----- bird -----\tsuperhero",
    "769": "\nSELECT T1.superhero_name, T2.attribute_value \nFROM superhero AS T1 \nJOIN hero_attribute AS T2 ON T1.id = T2.hero_id \nJOIN attribute AS T3 ON T2.attribute_id = T3.id \nWHERE T3.attribute_name = 'Durability' AND T3.publisher_name = 'Dark Horse Comics' \nGROUP BY T1.superhero_name \nORDER BY SUM(T2.attribute_value) DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "770": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abraham Sapien'\n\t----- bird -----\tsuperhero",
    "771": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'flight'\n\t----- bird -----\tsuperhero",
    "772": "\nSELECT T1.eye_colour, T1.hair_colour, T1.skin_colour \nFROM superhero AS T1 \nJOIN publisher AS T2 ON T1.publisher_id = T2.id \nWHERE T2.publisher_name = 'Dark Horse Comics' AND T1.gender = 'female'\n\n\t----- bird -----\tsuperhero",
    "773": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN colour AS T4 ON T1.skin_colour_id = T4.id\n\t----- bird -----\tsuperhero",
    "774": "SELECT T1.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'\n\t----- bird -----\tsuperhero",
    "775": "\nSELECT CAST(SUM(CASE WHEN T1.colour = 'blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.gender_id IN (SELECT id FROM gender WHERE gender = 'female') GROUP BY T2.gender_id\n\n\t----- bird -----\tsuperhero",
    "776": "SELECT T1.superhero_name, T3.race FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Charles Chandler'\n\t----- bird -----\tsuperhero",
    "777": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'\n\t----- bird -----\tsuperhero",
    "778": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'adaptation'\n\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(T1.power_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'\n\t----- bird -----\tsuperhero",
    "780": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Hunter Zolomon'\n\t----- bird -----\tsuperhero",
    "781": "SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber')\n\t----- bird -----\tsuperhero",
    "782": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'black' AND T3.colour = 'black'\n\t----- bird -----\tsuperhero",
    "783": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.skin_colour_id = ( SELECT id FROM colour WHERE colour = 'gold' )\n\t----- bird -----\tsuperhero",
    "784": "SELECT T2.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Vampire'\n\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Neutral')\n\t----- bird -----\tsuperhero",
    "786": "\nSELECT COUNT(*) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'strength' ORDER BY T1.attribute_value DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "787": "SELECT T2.race, T2.alignment FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Cameron Hicks'\n\t----- bird -----\tsuperhero",
    "788": "\nSELECT CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.gender_id IN (SELECT id FROM gender WHERE gender = 'female')\n\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(T2.weight_kg) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.race = 'alien'\n\t----- bird -----\tsuperhero",
    "790": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler')\n\t----- bird -----\tsuperhero",
    "791": "SELECT AVG(height_cm) FROM superhero;\n\t----- bird -----\tsuperhero",
    "792": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'\n\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'god/eternal') AND gender_id = 1;\n\t----- bird -----\tsuperhero",
    "794": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'speed' ORDER BY T1.height_cm DESC LIMIT 1\n\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = ( SELECT id FROM alignment WHERE alignment = 'Neutral' );\n\t----- bird -----\tsuperhero",
    "796": "SELECT T1.attribute_name, T2.attribute_value FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id WHERE T2.hero_id IN (SELECT id FROM superhero WHERE full_name = '3-D Man')\n\t----- bird -----\tsuperhero",
    "797": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Blue Eyes' AND T1.hair_colour_id = 4\n\t----- bird -----\tsuperhero",
    "798": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\n\t----- bird -----\tsuperhero",
    "799": "\nSELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL\n\n\t----- bird -----\tsuperhero",
    "800": "SELECT CAST(SUM(CASE WHEN T2.colour = 'blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id\n\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN T1.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.gender = 'Female' THEN 1 ELSE 0 END) FROM superhero AS T1\n\t----- bird -----\tsuperhero",
    "802": "\nSELECT T1.superhero_name, T1.height_cm \nFROM superhero AS T1 \nORDER BY height_cm DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "803": "SELECT power_id FROM superpower WHERE power_name = 'cryokinesis'\n\t----- bird -----\tsuperhero",
    "804": "SELECT full_name FROM superhero WHERE id = 294;\n\t----- bird -----\tsuperhero",
    "805": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value IS NULL\n\t----- bird -----\tsuperhero",
    "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\n\t----- bird -----\tsuperhero",
    "807": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.full_name = 'Helen Parr' GROUP BY T2.power_name\n\t----- bird -----\tsuperhero",
    "808": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188\n\t----- bird -----\tsuperhero",
    "809": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38;\n\t----- bird -----\tsuperhero",
    "810": "SELECT T2.race FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id ORDER BY T1.attribute_value DESC LIMIT 1\n\t----- bird -----\tsuperhero",
    "811": "SELECT alignment, power_name FROM superhero WHERE full_name = 'Atom IV' JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN alignment ON superhero.alignment_id = alignment.id\n\t----- bird -----\tsuperhero",
    "812": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'blue' LIMIT 5 \n\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(ha.attribute_value) FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id JOIN attribute a ON ha.attribute_id = a.id WHERE s.alignment = 'neutral'\n\t----- bird -----\tsuperhero",
    "814": "SELECT T1.skin_colour_id FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = 100\n\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE gender = 'female' AND alignment = 'good'\n\t----- bird -----\tsuperhero",
    "816": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80 GROUP BY T1.superhero_name\n\t----- bird -----\tsuperhero",
    "817": "SELECT T2.race FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T3.id = T1.hair_colour_id WHERE T1.gender = 'male' AND T1.eye_colour = 'blue'\n\t----- bird -----\tsuperhero",
    "818": "SELECT CAST(SUM(IIF(T2.gender = 'Female', 1, 0)) AS REAL) * 100 / COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.alignment = 'Bad'\n\t----- bird -----\tsuperhero",
    "819": "\nSELECT SUM(CASE WHEN weight_kg IS NULL THEN 1 ELSE 0 END) * \n       (SELECT COUNT(*) FROM colour WHERE colour = 'blue') - \n       (SELECT COUNT(*) FROM colour WHERE colour IS NULL)\nFROM superhero; \n\t----- bird -----\tsuperhero",
    "820": "SELECT T2.weight_kg FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Hulk'\n\t----- bird -----\tsuperhero",
    "821": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Ajax'\n\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero WHERE skin_colour_id = ( SELECT id FROM colour WHERE colour = 'green' ) AND alignment_id IN ( SELECT id FROM alignment WHERE alignment LIKE '%villain%' );\n\t----- bird -----\tsuperhero",
    "823": "\nSELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'female');\n\n\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind' ORDER BY T1.superhero_name\n\t----- bird -----\tsuperhero",
    "825": "SELECT T2.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Phoenix Force'\n\t----- bird -----\tsuperhero",
    "826": "\nSELECT T1.superhero_name, T2.weight_kg \nFROM superhero AS T1 \nJOIN hero_attribute AS T2 ON T1.id = T2.hero_id \nWHERE T2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute ) \nAND T1.gender_id IN ( SELECT id FROM gender WHERE gender = 'Male' ) \nAND T1.publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' )\n\n\t----- bird -----\tsuperhero",
    "827": "\nSELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T1.race != 'Human' \n\t----- bird -----\tsuperhero",
    "828": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id ORDER BY T1.height_cm LIMIT 1\n\t----- bird -----\tsuperhero",
    "829": "SELECT COALESCE(SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END), 0) - COALESCE(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END), 0) AS diff FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\n\t----- bird -----\tsuperhero",
    "830": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value LIMIT 1\n\t----- bird -----\tsuperhero",
    "831": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'\n\t----- bird -----\tsuperhero",
    "832": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = ( SELECT MAX(weight_kg) FROM superhero )\n\t----- bird -----\tsuperhero",
    "833": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = ( SELECT attribute_value FROM hero_attribute WHERE attribute_name = 'alias' AND hero_id IN ( SELECT id FROM superhero WHERE full_name = 'Charles Chandler' ) )\n\t----- bird -----\tsuperhero",
    "834": "SELECT CAST(SUM(IIF(T2.gender = 'Female', 1, 0)) AS REAL) * 100 / COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.publisher_name = 'George Lucas Productions'\n\t----- bird -----\tsuperhero",
    "835": "SELECT CAST(SUM(CASE WHEN attribute_name = 'good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM hero_attribute\n\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE '% John%'\n\t----- bird -----\tsuperhero",
    "837": "\nSELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute ); \n\n\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\n\t----- bird -----\tsuperhero",
    "839": "SELECT T2.full_name FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.weight_kg < 100 AND T1.colour = 'brown'\n\t----- bird -----\tsuperhero",
    "840": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Aquababy'\n\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race FROM superhero WHERE id = 40;\n\t----- bird -----\tsuperhero",
    "842": "\nSELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral') \n\n\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM hero_power WHERE power_name = 'Intelligence'\n\t----- bird -----\tsuperhero",
    "844": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\n\t----- bird -----\tsuperhero",
    "845": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm > ( SELECT AVG(height_cm) * 0.8 FROM superhero )\n\t----- bird -----\tsuperhero",
    "846": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.statusId = ( SELECT statusId FROM status WHERE status = 'Eliminated' ) AND T2.raceId = 18;\n\t----- bird -----\tformula_1",
    "847": "SELECT T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.lap = ( SELECT MAX(lap) FROM results WHERE raceId = 19 )\n\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai'\n\t----- bird -----\tformula_1",
    "849": "SELECT T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya'\n\t----- bird -----\tformula_1",
    "850": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Germany'\n\t----- bird -----\tformula_1",
    "851": "SELECT T2.position FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.name = 'Renault' GROUP BY T2.position\n\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId INNER JOIN seasons AS T3 ON T1.year = T3.year WHERE T3.year = 2010 AND T2.location NOT IN ('Asia', 'Europe')\n\t----- bird -----\tformula_1",
    "853": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Spain'\n\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE name = 'Australian Grand Prix'\n\t----- bird -----\tformula_1",
    "855": "SELECT T2.name, T1.year, T1.round, T1.circuitId, T1.date, T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Sepang'\n\t----- bird -----\tformula_1",
    "856": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\n\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\n\t----- bird -----\tformula_1",
    "858": "SELECT T2.country FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 1 AND T1.raceId = 24;\n\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna' )\n\t----- bird -----\tformula_1",
    "860": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:40' AND T2.number = 355\n\t----- bird -----\tformula_1",
    "861": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.q3 = '0:01:54' AND T1.raceId = 903\n\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2007 AND T1.statusId = ( SELECT statusId FROM status WHERE status = 'DNF' )\n\t----- bird -----\tformula_1",
    "863": "SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.name = '901'\n\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29'\n\t----- bird -----\tformula_1",
    "865": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 ORDER BY T1.dob LIMIT 1\n\t----- bird -----\tformula_1",
    "866": "SELECT T1.forename, T1.surname, T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = '0:01:27' AND T2.raceId = 161;\n\t----- bird -----\tformula_1",
    "867": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 933 AND T2.fastestLapSpeed IS NOT NULL\n\t----- bird -----\tformula_1",
    "868": "SELECT T1.location, T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Malaysian Grand Prix'\n\t----- bird -----\tformula_1",
    "869": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = ( SELECT MAX(points) FROM constructorResults ) AND T2.raceId = 9; \n\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi' )\n\t----- bird -----\tformula_1",
    "871": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:15' AND T2.raceId = 347\n\t----- bird -----\tformula_1",
    "872": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 = '0:01:33' AND T2.raceId = 45\n\t----- bird -----\tformula_1",
    "873": "SELECT T2.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 743 AND T2.forename = 'Bruce' AND T2.surname = 'McLaren'\n\t----- bird -----\tformula_1",
    "874": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2006 AND T2.position = 2;\n\t----- bird -----\tformula_1",
    "875": "SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.name = '901'\n\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE STRFTIME('%Y-%m-%d', T2.date) = '2015-11-29'\n\t----- bird -----\tformula_1",
    "877": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 ORDER BY T1.dob LIMIT 1\n\t----- bird -----\tformula_1",
    "878": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 348 ORDER BY T2.milliseconds LIMIT 1\n\t----- bird -----\tformula_1",
    "879": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed IS NOT NULL GROUP BY T1.nationality ORDER BY COUNT(T2.fastestLapSpeed) DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "880": "SELECT CAST(SUM(CASE WHEN position = 1 THEN (position - 853) * 100 ELSE 0 END) AS REAL) / COUNT(*) FROM results WHERE raceId = 853 AND statusId = 2;\n\t----- bird -----\tformula_1",
    "881": "SELECT T1.code, SUM(T2.laps) / COUNT(DISTINCT T2.raceId) AS race_completion_rate FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.year = 1983 AND T2.date = '16/07/83' GROUP BY T1.code\n\t----- bird -----\tformula_1",
    "882": "SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Singapore Grand Prix' ORDER BY T1.year LIMIT 1 \n\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(DISTINCT T1.raceId) FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year = 2005 ORDER BY T1.name DESC\n\t----- bird -----\tformula_1",
    "884": "SELECT T1.name, T2.year, T2.date \nFROM races AS T1 \nJOIN seasons AS T2 ON T1.year = T2.year \nWHERE T1.date BETWEEN (SELECT MIN(date) FROM races) AND (SELECT MAX(date) FROM races) \nORDER BY T1.date\n\t----- bird -----\tformula_1",
    "885": "\nSELECT T1.name, T1.date \nFROM races AS T1 \nJOIN seasons AS T2 ON T1.year = T2.year \nWHERE T1.year = 1999 AND T1.round = ( SELECT MAX(round) FROM races WHERE year = 1999 ) \nORDER BY T1.date DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "886": "SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year GROUP BY T1.year ORDER BY COUNT(T2.raceId) DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND year != 2000;\n\t----- bird -----\tformula_1",
    "888": "SELECT T1.country, T2.name, T2.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = ( SELECT MIN(year) FROM races ) AND T2.name LIKE '%European Grand Prix%'\n\t----- bird -----\tformula_1",
    "889": "SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.circuitId IN ( SELECT circuitId FROM circuits WHERE location = 'Brands Hatch' ) ORDER BY T1.year DESC LIMIT 1 \n\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(T1.year) FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Silverstone Circuit' AND T3.country = 'United Kingdom'\n\t----- bird -----\tformula_1",
    "891": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2010 AND T2.statusId = ( SELECT statusId FROM status ORDER BY position DESC LIMIT 1 )\n\t----- bird -----\tformula_1",
    "892": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "893": "SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2017 AND T2.statusId = ( SELECT statusId FROM status WHERE status = 'Finished' ) LIMIT 3\n\t----- bird -----\tformula_1",
    "894": "SELECT T1.driverRef, T2.name, T3.raceId, T4.time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId ORDER BY T2.milliseconds LIMIT 1\n\t----- bird -----\tformula_1",
    "895": "SELECT AVG(T2.milliseconds) FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.raceId = 2009 AND T1.driverId = ( SELECT driverId FROM drivers WHERE forename = 'Sebastian' AND surname = 'Vettel' )\n\t----- bird -----\tformula_1",
    "896": "SELECT CAST(SUM(CASE WHEN T1.name != ( SELECT name FROM circuits WHERE location = 'Silverstone Circuit' ) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId IN (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\n\t----- bird -----\tformula_1",
    "897": "SELECT T1.forename, T1.nationality, AVG(T3.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN constructorResults AS T3 ON T2.constructorId = T3.constructorId GROUP BY T1.forename, T1.nationality ORDER BY SUM(T3.points) DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "898": "\nSELECT T2.forename, T2.surname, (2022 - YEAR(T1.dob)) AS age \nFROM drivers T1 INNER JOIN nationality ON T1.nationality = nationality.nationality_id INNER JOIN status ON T1.statusId = status.statusId WHERE nationality = 'Japanese' ORDER BY (2022 - YEAR(T1.dob)) LIMIT 1\n\n\t----- bird -----\tformula_1",
    "899": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.name HAVING COUNT(T2.raceId) = 4\n\t----- bird -----\tformula_1",
    "900": "SELECT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'USA' AND T2.year = 2006\n\t----- bird -----\tformula_1",
    "901": "SELECT T1.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.date BETWEEN '2005-09-01' AND '2005-09-30'\n\t----- bird -----\tformula_1",
    "902": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T2.grid < 10\n\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(T1.wins) FROM constructorStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Sepang International Circuit' AND T1.constructorId IN (SELECT constructorId FROM constructors WHERE name = 'Ferrari')\n\t----- bird -----\tformula_1",
    "904": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId IN ( SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher' ) ORDER BY T2.fastestLap DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "905": "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Eddie' AND T1.year = 2000;\n\t----- bird -----\tformula_1",
    "906": "SELECT T1.name, T2.points FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.name = 'Lewis Hamilton' AND T2.raceId IN ( SELECT raceid FROM races WHERE year = ( SELECT MIN(year) FROM seasons ) );\n\t----- bird -----\tformula_1",
    "907": "SELECT T1.name, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2017 ORDER BY T1.date\n\t----- bird -----\tformula_1",
    "908": "SELECT T1.name, T2.year, T3.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId ORDER BY T1.laps DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "909": "SELECT CAST(SUM(CASE WHEN T2.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year IN (SELECT year FROM seasons)\n\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\n\t----- bird -----\tformula_1",
    "911": "SELECT T1.lat FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY T1.lat DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\n\t----- bird -----\tformula_1",
    "913": "SELECT T2.country FROM circuits AS T1 INNER JOIN status AS T2 ON T1.alt = T2.statusId ORDER BY T1.alt DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(driverId) FROM drivers WHERE code IS NULL;\n\t----- bird -----\tformula_1",
    "915": "SELECT T1.country FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.position LIMIT 1\n\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'Italian'\n\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\n\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\n\t----- bird -----\tformula_1",
    "919": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'\n\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT T2.year FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit'\n\t----- bird -----\tformula_1",
    "921": "SELECT r.raceId, r.year, r.name, c.circuitRef, c.lat, c.lng, s.country \nFROM races r \nJOIN circuits c ON r.circuitId = c.circuitId \nJOIN seasons s ON r.year = s.year \nWHERE c.circuitRef = 'Silverstone'\n\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year BETWEEN 2010 AND 2019 AND T2.name = 'Abu Dhabi Circuit'\n\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Italy' AND T1.name = 'Formula_1'\n\t----- bird -----\tformula_1",
    "924": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Barcelona-Catalunya'\n\t----- bird -----\tformula_1",
    "925": "SELECT url FROM circuits WHERE name = 'Spanish Grand Prix' AND year = 2009;\n\t----- bird -----\tformula_1",
    "926": "SELECT T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T2.fastestLap = 1 ORDER BY T2.milliseconds LIMIT 1 \n\t----- bird -----\tformula_1",
    "927": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "928": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2008 AND T2.position = 1;\n\t----- bird -----\tformula_1",
    "929": "SELECT T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\t----- bird -----\tformula_1",
    "930": "SELECT t2.name FROM results AS t1 INNER JOIN circuits AS t2 ON t1.circuitId = t2.circuitId WHERE t1.driverId IN (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') ORDER BY t1.position DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "931": "SELECT T2.fastestLapSpeed FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.raceId = 2009 AND T1.raceId IN ( SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' ) GROUP BY T2.fastestLapSpeed ORDER BY MAX(T2.fastestLapSpeed) LIMIT 1\n\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT T2.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\t----- bird -----\tformula_1",
    "933": "SELECT T2.position FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 2008 AND T1.driverId = 44 ORDER BY T1.laps DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "934": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.grid = 4 AND T2.raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\n\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T1.statusID IN ( SELECT statusID FROM status WHERE status = 'Finished' )\n\t----- bird -----\tformula_1",
    "936": "SELECT T2.lap FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND T1.raceId = 2008\n\t----- bird -----\tformula_1",
    "937": "SELECT T2.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.position = 2;\n\t----- bird -----\tformula_1",
    "938": "SELECT T1.forename, T1.surname, T2.name, T2.country, T2.url FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2008 AND T2.position = 1 AND T2.statusId = (SELECT statusId FROM status WHERE status = 'Champion')\n\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.driverId WHERE T2.year = 2008 AND T1.nationality = 'USA' AND T2.name = 'Australian Grand Prix';\n\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix'\n\t----- bird -----\tformula_1",
    "941": "SELECT SUM(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\t----- bird -----\tformula_1",
    "942": "SELECT AVG(T2.milliseconds / 1000) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\t----- bird -----\tformula_1",
    "943": "SELECT CAST(SUM(CASE WHEN laps = (SELECT MAX(laps) FROM results WHERE raceId = 2008 AND statusId IN (SELECT statusId FROM status WHERE status = 'Finished')) THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT driverId) FROM results WHERE raceId = 2008\n\t----- bird -----\tformula_1",
    "944": "SELECT (t2.position - t1.position) / t1.position * 100 FROM results t1 INNER JOIN results t2 ON t1.raceId = t2.raceId AND t1.driverId = t2.driverId WHERE t1.year = 2008 AND t1.raceId = 1\n\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne, Australia';\n\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng FROM circuits WHERE country = 'United States'\n\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31'\n\t----- bird -----\tformula_1",
    "948": "SELECT AVG(T1.points) FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'GB'\n\t----- bird -----\tformula_1",
    "949": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId GROUP BY T1.name ORDER BY SUM(T2.points) DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "950": "SELECT T2.name FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 0 AND T1.raceId = 291;\n\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Japan' AND T2.points = 0\n\t----- bird -----\tformula_1",
    "952": "SELECT T2.name FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.positionOrder = 1\n\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'France' AND T2.lap > 50\n\t----- bird -----\tformula_1",
    "954": "SELECT CAST(SUM(CASE WHEN T1.nationality = 'Japan' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM races AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.year BETWEEN 2007 AND 2009\n\t----- bird -----\tformula_1",
    "955": "SELECT AVG(T2.time) / 1000 FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.statusId = ( SELECT statusId FROM status WHERE status = 'Champion' ) GROUP BY T2.year\n\t----- bird -----\tformula_1",
    "956": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.positionOrder = 2 AND STRFTIME('%Y', T1.dob) > '1975'\n\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Italy' AND T2.statusID IN ( SELECT statusID FROM status WHERE status = 'Retired' )\n\t----- bird -----\tformula_1",
    "958": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.milliseconds LIMIT 1\n\t----- bird -----\tformula_1",
    "959": "SELECT T2.lap FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.statusId = ( SELECT statusId FROM status WHERE status = 'Champion' ) AND T1.year = 2009 ORDER BY T2.lap LIMIT 1\n\t----- bird -----\tformula_1",
    "960": "SELECT AVG(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\n\t----- bird -----\tformula_1",
    "961": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T2.milliseconds LIMIT 1\n\t----- bird -----\tformula_1",
    "962": "SELECT CAST(SUM(CASE WHEN T1.dob < '1985-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE results.raceId BETWEEN 2000 AND 2005 AND results.lap > 50\n\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'France' AND T2.time < '02:00:00'\n\t----- bird -----\tformula_1",
    "964": "SELECT code FROM drivers WHERE nationality = 'America'\n\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\n\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.raceId = 18;\n\t----- bird -----\tformula_1",
    "967": "SELECT T1.code, COUNT(*) AS youngest_drivers, SUM(CASE WHEN T2.nationality = 'Netherlands' THEN 1 ELSE 0 END) AS netherlandic_drivers FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T1.dob LIMIT 3\n\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\n\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.driverId WHERE T1.dob LIKE '1980%' AND T1.nationality = 'Australia'\n\t----- bird -----\tformula_1",
    "970": "SELECT T1.forename, T1.surname, MIN(T2.lap) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY T1.forename, T1.surname ORDER BY MIN(T2.lap) LIMIT 3\n\t----- bird -----\tformula_1",
    "971": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN nationality AS T2 ON T1.nationality = T2.nationality WHERE T2.name = 'German' ORDER BY T1.dob LIMIT 1\n\t----- bird -----\tformula_1",
    "972": "SELECT T1.code, T2.driverId FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.dob LIKE '1971%' ORDER BY T2.milliseconds LIMIT 1\n\t----- bird -----\tformula_1",
    "973": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND T1.dob < '1982-01-01' ORDER BY T2.lapTime DESC LIMIT 10\n\t----- bird -----\tformula_1",
    "974": "SELECT T1.year FROM seasons AS T1 INNER JOIN results AS T2 ON T1.year = T2.raceId GROUP BY T1.year ORDER BY MIN(T2.milliseconds) LIMIT 1\n\t----- bird -----\tformula_1",
    "975": "SELECT T1.year, AVG(T2.milliseconds / 1000) AS speed FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId GROUP BY T1.year ORDER BY speed LIMIT 1;\n\t----- bird -----\tformula_1",
    "976": "SELECT DISTINCT T1.driverId FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.laps = 1 ORDER BY T2.milliseconds ASC LIMIT 5\n\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.raceId BETWEEN 50 AND 100 AND T2.status = 'DQ'\n\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*) , T1.location , T1.lat , T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name LIKE '%Austria%' GROUP BY T1.location\n\t----- bird -----\tformula_1",
    "979": "SELECT T2.number FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId GROUP BY T2.number ORDER BY COUNT(T1.driverId) DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "980": "SELECT T1.forename, T1.surname, T2.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 IS NOT NULL AND T2.q3 = 'Q2' AND T2.raceId = 23\n\t----- bird -----\tformula_1",
    "981": "SELECT T1.year, T2.forename, T2.surname, T3.name, T3.date, T3.time FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId ORDER BY T3.dob LIMIT 1\n\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T3.status = 'Disqualified' AND T1.nationality = 'USA'\n\t----- bird -----\tformula_1",
    "983": "SELECT T1.name, T2.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.country = 'Italy' ORDER BY T2.points DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "984": "SELECT T2.url FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId GROUP BY T1.constructorId ORDER BY SUM(T1.wins) DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "985": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.driverId INNER JOIN lapTimes AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'French Grand Prix' ORDER BY T3.time LIMIT 1\n\t----- bird -----\tformula_1",
    "986": "\nSELECT T1.time FROM laptimes AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T1.position = 1 ORDER BY T1.milliseconds ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "987": "SELECT AVG(T2.fastestLapTime) FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.raceId = 2006 AND T1.position < 11\n\t----- bird -----\tformula_1",
    "988": "SELECT T1.forename, T1.surname, AVG(T3.duration) AS avg_pit_duration \nFROM drivers AS T1 \nJOIN results AS T2 ON T1.driverId = T2.driverId \nJOIN pitStops AS T3 ON T2.raceId = T3.raceId AND T2.driverId = T3.driverId \nWHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' \nGROUP BY T1.forename, T1.surname \nORDER BY avg_pit_duration ASC LIMIT 5\n\t----- bird -----\tformula_1",
    "989": "SELECT T1.forename, T1.surname, T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 2008 AND T2.position = 1;\n\t----- bird -----\tformula_1",
    "990": "SELECT T1.constructorRef FROM constructorResults AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T1.points = ( SELECT MAX(points) FROM constructorResults )\n\t----- bird -----\tformula_1",
    "991": "SELECT T2.forename, T2.surname, T2.dob FROM drivers AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T2.status = 'Retired' AND T1.nationality = 'Austria' AND STRFTIME('%Y', T1.dob) BETWEEN '1981' AND '1991'\n\t----- bird -----\tformula_1",
    "992": "SELECT T1.forename, T1.surname, T2.url, T1.dob FROM drivers AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1971' AND '1985' ORDER BY T1.dob DESC\n\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\n\t----- bird -----\tformula_1",
    "994": "SELECT T1.points, T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 1980 AND 2010 AND name = 'Monaco Grand Prix') GROUP BY T1.points ORDER BY SUM(T1.points) DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "995": "SELECT AVG(T2.points) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.name = 'Turkish Grand Prix' AND T3.forename = 'Lewis'\n\t----- bird -----\tformula_1",
    "996": "SELECT AVG(T1.year) FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T1.year BETWEEN 2000 AND 2010\n\t----- bird -----\tformula_1",
    "997": "SELECT T2.nationality FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.nationality = T2.nationality GROUP BY T1.nationality ORDER BY COUNT(T1.driverId) DESC LIMIT 1;\n\t----- bird -----\tformula_1",
    "998": "SELECT T1.wins FROM driverStandings AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.positionOrder = 91 ORDER BY T2.points DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "999": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T2.fastestLapSpeed LIMIT 1\n\t----- bird -----\tformula_1",
    "1000": "\nSELECT T2.location, T2.country \nFROM races AS T1 \nJOIN circuits AS T2 ON T1.circuitId = T2.circuitId \nORDER BY T1.date DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "1001": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Marina Bay Street Circuit' AND T3.year = 2008 AND T2.qualifyId = ( SELECT MIN(qualifyid) FROM qualifying WHERE raceid = 2008 AND name = 'Marina Bay Street Circuit' )\n\t----- bird -----\tformula_1",
    "1002": "\nSELECT T1.forename, T1.surname, T2.nationality, T3.name \nFROM drivers AS T1 \nJOIN races AS T2 ON T1.driverId = T2.driverId \nJOIN circuits AS T3 ON T2.circuitId = T3.circuitId \nORDER BY T1.dob LIMIT 1\n\n\t----- bird -----\tformula_1",
    "1003": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM results AS T1 \nJOIN races AS T2 ON T1.raceId = T2.raceId \nJOIN status AS T3 ON T1.statusId = T3.statusId \nWHERE T2.name = 'Canadian Grand Prix' AND T3.status = 'Accident'\nGROUP BY T1.driverId\nORDER BY COUNT(DISTINCT T1.driverId) DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "1004": "SELECT T1.wins, T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.laps DESC LIMIT 1\n\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(T2.duration) FROM races AS T1 INNER JOIN pitstops AS T2 ON T1.raceid = T2.raceid\n\t----- bird -----\tformula_1",
    "1006": "SELECT T2.time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId ORDER BY T1.milliseconds LIMIT 1;\n\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(T2.duration) FROM drivers AS T1 INNER JOIN pitstops AS T2 ON T1.driverid = T2.driverid WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\t----- bird -----\tformula_1",
    "1008": "SELECT T2.lap FROM results AS T1 INNER JOIN pitstops AS T2 ON T1.raceid = T2.raceid AND T1.driverid = T2.driverid WHERE T1.raceid = 2011 AND T1.driverid = ( SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\n\t----- bird -----\tformula_1",
    "1009": "SELECT T2.time FROM pit_stops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2011 AND T1.driverId IN (SELECT driverId FROM drivers)\n\t----- bird -----\tformula_1",
    "1010": "SELECT T2.time FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.driverRef = 'Lewis Hamilton' ORDER BY T2.lap ASC LIMIT 1;\n\t----- bird -----\tformula_1",
    "1011": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.milliseconds LIMIT 1\n\t----- bird -----\tformula_1",
    "1012": "SELECT T2.position FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.driverId IN ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\n\t----- bird -----\tformula_1",
    "1013": "SELECT T2.time FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T1.name = 'Austrian Grand Prix Circuit' ORDER BY T2.lap LIMIT 1\n\t----- bird -----\tformula_1",
    "1014": "SELECT T2.time FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Italy' ) ORDER BY T2.lap ASC LIMIT 1;\n\t----- bird -----\tformula_1",
    "1015": "SELECT T1.name, T2.lap FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.circuitId IN ( SELECT circuitId FROM circuits WHERE location = 'Austria' ) ORDER BY T2.milliseconds LIMIT 1;\n\t----- bird -----\tformula_1",
    "1016": "SELECT T2.duration FROM pit_stops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Austrian Grand Prix Circuit' AND T1.driverId IN ( SELECT driverid FROM laptimes WHERE raceid = T2.raceid )\n\t----- bird -----\tformula_1",
    "1017": "SELECT lat, lng FROM circuits WHERE time = '1:29.488'\n\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(T2.milliseconds) FROM drivers AS T1 INNER JOIN pitstops AS T2 ON T1.driverid = T2.driverid WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(T2.milliseconds) FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T1.country = 'Italy'\n\t----- bird -----\tformula_1",
    "1020": "SELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 1;\n\t----- bird -----\teuropean_football_2",
    "1021": "SELECT T1.height, T2.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1022": "SELECT T2.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = ( SELECT MIN(potential) FROM Player_Attributes )\n\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Team_Attributes AS T2 ON T1.player_fifa_api_id = T2.team_fifa_api_id WHERE T1.overall_rating BETWEEN 60 AND 65 AND T2.chanceCreationPositioningClass = 'Attack'\n\t----- bird -----\teuropean_football_2",
    "1024": "SELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Match AS T2 ON T1.player_fifa_api_id = T2.home_player_X1 OR T1.player_fifa_api_id = T2.home_player_X2 OR T1.player_fifa_api_id = T2.home_player_X3 OR T1.player_fifa_api_id = T2.home_player_X4 OR T1.player_fifa_api_id = T2.home_player_X5 OR T1.player_fifa_api_id = T2.home_player_X6 OR T1.player_fifa_api_id = T2.home_player_X7 OR T1.player_fifa_api_id = T2.home_player_X8 OR T1.player_fifa_api_id = T2.home_player_X9 OR T1.player_fifa_api_id = T2.home_player_X10 OR T1.player_fifa_api_id = T2.home_player_X11 INNER JOIN Player AS T3 ON T1.player_api_id = T3.id ORDER BY T1.crossing DESC LIMIT 5\n\t----- bird -----\teuropean_football_2",
    "1025": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.country_id WHERE SUBSTR(T2.season, 1, 4) = '2016' GROUP BY T1.id ORDER BY SUM(T2.goal) DESC LIMIT 1;\n\t----- bird -----\teuropean_football_2",
    "1026": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.id = T2.home_team_api_id WHERE T2.season = '2016' GROUP BY T1.team_short_name ORDER BY COUNT(T2.id) LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1027": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_api_id ORDER BY COUNT(T2.penalties) DESC LIMIT 10\n\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.away_team_api_id FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.country_id = 257 AND T1.season = '2010' GROUP BY T2.away_team_api_id ORDER BY COUNT(T1.id) DESC LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1029": "SELECT T2.buildUpPlaySpeed FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id ORDER BY T2.buildUpPlaySpeed DESC LIMIT 4;\n\t----- bird -----\teuropean_football_2",
    "1030": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.country_id WHERE SUBSTR(T2.season, 1, 4) = '2016' AND T2.goal = 'draw' GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1031": "SELECT T1.player_name, (strftime('%J', T2.date) - strftime('%J', '2013-01-01')) / 365 AS age FROM Player AS T1 INNER JOIN Match AS T2 ON T1.player_api_id = T2.home_player_X1 OR T1.player_api_id = T2.home_player_X2 OR T1.player_api_id = T2.home_player_X3 OR T1.player_api_id = T2.home_player_X4 OR T1.player_api_id = T2.home_player_X5 OR T1.player_api_id = T2.home_player_X6 OR T1.player_api_id = T2.home_player_X7 OR T1.player_api_id = T2.home_player_X8 OR T1.player_api_id = T2.home_player_X9 OR T1.player_api_id = T2.home_player_X10 OR T1.player_api_id = T2.home_player_X11 OR T1.player_api_id = T2.away_player_X1 OR T1.player_api_id = T2.away_player_X2 OR T1.player_api_id = T2.away_player_X3 OR T1.player_api_id = T2.away_player_X4 OR T1.player_api_id = T2.away_player_X5 OR T1.player_api_id = T2.away_player_X6 OR T1.player_api_id = T2.away_player_X7 OR T1.player_api_id = T2.away_player_X8 OR T1.player_api_id = T2.away_player_X9 OR T1.player_api_id = T2.away_player_X10 OR T1.player_api_id = T2.away_player_X11 WHERE T2.sprint_speed >= 97 AND strftime('%Y', T2.date) BETWEEN '2013' AND '2015'\n\t----- bird -----\teuropean_football_2",
    "1032": "SELECT T1.name, COUNT(T2.id) FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.country_id GROUP BY T1.id ORDER BY COUNT(T2.id) DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(T1.height) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE SUBSTR(T2.date, 1, 4) BETWEEN '1990' AND '1995'\n\t----- bird -----\teuropean_football_2",
    "1034": "SELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE STRFTIME('%Y', T1.date) = '2010' GROUP BY T1.player_api_id ORDER BY AVG(T1.overall_rating) DESC LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 50 AND 59\n\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_fifa_api_id WHERE T2.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes ) AND T2.date LIKE '%2012%'\n\t----- bird -----\teuropean_football_2",
    "1037": "SELECT CAST(SUM(CASE WHEN T1.preferred_foot = 'Left foot' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.id WHERE SUBSTR(T2.birthday, -4) BETWEEN '1987' AND '1992'\n\t----- bird -----\teuropean_football_2",
    "1038": "SELECT T2.name, SUM(T1.goal) FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id GROUP BY T2.name ORDER LIMIT 5;\n\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\n\t----- bird -----\teuropean_football_2",
    "1040": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10; \n\t----- bird -----\teuropean_football_2",
    "1041": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_fifa_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.chanceCreationPassing < ( SELECT AVG(chanceCreationPassing) FROM Team_Attributes ) ORDER BY chanceCreationPassing DESC\n\t----- bird -----\teuropean_football_2",
    "1042": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id WHERE T1.season = '2009/2010' AND (T1.home_goal - T1.away_goal) / 90 > 0 AND T1.stage = 1\n\t----- bird -----\teuropean_football_2",
    "1043": "SELECT T2.team_short_name FROM Team AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id WHERE T1.team_long_name = 'Queens Park Rangers'\n\t----- bird -----\teuropean_football_2",
    "1044": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE STRFTIME('%Y-%m', T1.birthday) = '1970-10'\n\t----- bird -----\teuropean_football_2",
    "1045": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = 12345;\n\t----- bird -----\teuropean_football_2",
    "1046": "SELECT T2.defenceTeamWidthClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'ADO Den Haag' AND T2.defenceTeamWidth BETWEEN 0.33 AND 0.66\n\t----- bird -----\teuropean_football_2",
    "1047": "SELECT T1.finishing FROM Player_Attributes AS T1 INNER JOIN Match AS T2 ON T1.player_api_id = T2.home_player_X1 WHERE T1.date = '18/09/2014' AND T1.player_name = 'Francois Affolter'\n\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE date LIKE '%2011%' AND player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas' )\n\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id IN ( SELECT id FROM League WHERE country_id = 257 )\n\t----- bird -----\teuropean_football_2",
    "1050": "SELECT T1.preferred_foot FROM Player AS T1 INNER JOIN Match AS T2 ON T1.player_api_id = T2.home_player_X1 OR T1.player_api_id = T2.home_player_X2 OR T1.player_api_id = T2.home_player_X3 OR T1.player_api_id = T2.home_player_X4 OR T1.player_api_id = T2.home_player_X5 OR T1.player_api_id = T2.home_player_X6 OR T1.player_api_id = T2.home_player_X7 OR T1.player_api_id = T2.home_player_X8 OR T1.player_api_id = T2.home_player_X9 OR T1.player_api_id = T2.home_player_X10 OR T1.player_api_id = T2.home_player_X11 ORDER BY T1.birthday LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1051": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.potential DESC LIMIT 1;\n\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'left' AND T2.weight < 130\n\t----- bird -----\teuropean_football_2",
    "1053": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_fifa_api_id WHERE T2.chanceCreationPassingClass = 'Risky'\n\t----- bird -----\teuropean_football_2",
    "1054": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson'\n\t----- bird -----\teuropean_football_2",
    "1055": "SELECT T2.birthday FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'\n\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(T2.home_team_goal) FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Poland' AND T2.season = '2010/11'\n\t----- bird -----\teuropean_football_2",
    "1058": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE (T1.height = ( SELECT MIN(height) FROM Player ) OR T1.height = ( SELECT MAX(height) FROM Player )) AND T2.finishing > ( SELECT AVG(finishing) FROM Player_Attributes )\n\t----- bird -----\teuropean_football_2",
    "1059": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180\n\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE SUBSTR(birthday, -4) > '1990'\n\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.player_name LIKE '% Adam%' AND weight > 170 \n\t----- bird -----\teuropean_football_2",
    "1062": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date BETWEEN '2008-01-01' AND '2010-12-31' AND T2.overall_rating > 80\n\t----- bird -----\teuropean_football_2",
    "1063": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\n\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_name FROM Player_Attributes WHERE preferred_foot = 'Left'\n\t----- bird -----\teuropean_football_2",
    "1065": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.buildUpPlaySpeedClass = 'fast' GROUP BY T2.team_long_name\n\t----- bird -----\teuropean_football_2",
    "1066": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_short_name = 'CLB'\n\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.buildUpPlayPassing > 70\n\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(T2.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date BETWEEN '2010-01-01' AND '2015-12-31' AND T2.weight > 170\n\t----- bird -----\teuropean_football_2",
    "1069": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player )\n\t----- bird -----\teuropean_football_2",
    "1070": "SELECT T2.country_id FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A'\n\t----- bird -----\teuropean_football_2",
    "1071": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribblingClass = '53' AND T1.buildUpPlayPassing = 32\n\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran'\n\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id INNER JOIN Country AS T3 ON T2.country_id = T3.id WHERE T3.name = 'Germany' AND T2.name = '1. Bundesliga' AND T1.season = '2008-09' AND T1.stage BETWEEN 1 AND 4\n\t----- bird -----\teuropean_football_2",
    "1074": "SELECT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_player_X10 = 10\n\t----- bird -----\teuropean_football_2",
    "1075": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.balance = ( SELECT MAX(balance) FROM Player_Attributes ) AND T2.potential = 61; \n\t----- bird -----\teuropean_football_2",
    "1076": "SELECT (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = 12345) - (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = 67890)\n\t----- bird -----\teuropean_football_2",
    "1077": "SELECT T2.team_long_name FROM Team AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id WHERE T1.team_short_name = 'GEN'\n\t----- bird -----\teuropean_football_2",
    "1078": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY T2.date LIMIT 1;\n\t----- bird -----\teuropean_football_2",
    "1079": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height = ( SELECT MAX(height) FROM Player )\n\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Team_Attributes AS T2 ON T1.player_fifa_api_id = T2.team_fifa_api_id WHERE T1.preferred_foot = 'Left' AND T2.defenceTeamWidthClass = 'Medium'\n\t----- bird -----\teuropean_football_2",
    "1081": "SELECT T2.country_id FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Belgium Jupiler League'\n\t----- bird -----\teuropean_football_2",
    "1082": "SELECT name FROM League WHERE country_id IN (SELECT id FROM Country WHERE name = 'Germany')\n\t----- bird -----\teuropean_football_2",
    "1083": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.strength = ( SELECT MAX(strength) FROM Player_Attributes )\n\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Team_Attributes AS T2 ON T1.player_fifa_api_id = T2.team_fifa_api_id WHERE T1.date > '1985-12-31' AND T2.defencePressureClass = 'High'\n\t----- bird -----\teuropean_football_2",
    "1085": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing = ( SELECT MAX(crossing) FROM Player_Attributes ) AND T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\n\t----- bird -----\teuropean_football_2",
    "1086": "SELECT T2.heading_accuracy FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ariel Borysiuk'\n\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.volley > 70 AND T2.height > 180\n\t----- bird -----\teuropean_football_2",
    "1088": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volley > 70 AND T2.dribbling > 70\n\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE season = '2008/09' AND country_id IN (SELECT id FROM Country WHERE name = 'Belgium')\n\t----- bird -----\teuropean_football_2",
    "1090": "SELECT T1.long_passing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.height DESC LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id INNER JOIN Team AS T3 ON T1.home_team_api_id = T3.team_api_id WHERE T2.name = 'Belgium Jupiler League' AND T1.season = '2008-09'\n\t----- bird -----\teuropean_football_2",
    "1092": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id WHERE T1.season = '2008/2009' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1;\n\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE STRFTIME('%Y', T2.birthday) < '1986'\n\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (overall_rating - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = 123456)) * 100 / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = 123456) AS difference FROM Player_Attributes WHERE player_api_id = 123456\n\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(T1.buildUpPlaySpeed) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_short_name = 'Heart of Midlothian'\n\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\n\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(T1.crossing) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox'\n\t----- bird -----\teuropean_football_2",
    "1098": "SELECT T1.chanceCreationPassing, T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_short_name = 'Ajax' ORDER BY T1.chanceCreationPassing DESC LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1099": "SELECT T2.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Abdou Diallo'\n\t----- bird -----\teuropean_football_2",
    "1100": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon' ORDER BY T1.overall_rating DESC LIMIT 1;\n\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(T1.goal) FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Parma' AND T1.country_id = 274\n\t----- bird -----\teuropean_football_2",
    "1102": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date = '2016-06-23' AND T2.overall_rating = 77 ORDER BY T1.birthday LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1103": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date = '2016/02/04'\n\t----- bird -----\teuropean_football_2",
    "1104": "SELECT T1.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Parravicini' AND T1.date = '2010/8/30'\n\t----- bird -----\teuropean_football_2",
    "1105": "SELECT T2.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date = '2015/05/01' AND T2.player_name = 'Francesco Migliore'\n\t----- bird -----\teuropean_football_2",
    "1106": "SELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013/02/22'\n\t----- bird -----\teuropean_football_2",
    "1107": "SELECT T1.date FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' ORDER BY T1.crossing DESC LIMIT 1 \n\t----- bird -----\teuropean_football_2",
    "1108": "SELECT T3.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Match AS T2 ON T1.id = T2.home_team_api_id INNER JOIN Team_Attributes AS T3 ON T1.id = T3.team_fifa_api_id WHERE T2.date = '2011/02/22' AND T1.team_long_name = 'Willem II'\n\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T2.buildUpPlayDribblingClass FROM Match AS T1 INNER JOIN Team_Attributes AS T2 ON T1.home_team_api_id = T2.team_fifa_api_id WHERE T1.date LIKE '2015-09-10%' AND T1.league_id = 1\n\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'FC Lorient' AND T1.date = '2010-02-22'\n\t----- bird -----\teuropean_football_2",
    "1111": "SELECT T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.date = '2013/9/20'\n\t----- bird -----\teuropean_football_2",
    "1112": "SELECT T1.chanceCreationCrossingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'Hull City' AND T1.date = '2010/02/22'\n\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015/9/10'\n\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(T2.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date BETWEEN '2007-02-22' AND '2016-04-21' AND T2.player_name = 'Marko Arnautovic';\n\t----- bird -----\teuropean_football_2",
    "1115": "SELECT CAST(SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) - SUM(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player_Attributes AS T1 INNER JOIN Match AS T2 ON T1.player_api_id = T2.home_player_X1 OR T1.player_api_id = T2.home_player_X2 OR T1.player_api_id = T2.home_player_X3 OR T1.player_api_id = T2.home_player_X4 OR T1.player_api_id = T2.home_player_X5 OR T1.player_api_id = T2.home_player_X6 OR T1.player_api_id = T2.home_player_X7 OR T1.player_api_id = T2.home_player_X8 OR T1.player_api_id = T2.home_player_X9 OR T1.player_api_id = T2.home_player_X10 OR T1.player_api_id = T2.home_player_X11 OR T1.player_api_id = T2.away_player_X1 OR T1.player_api_id = T2.away_player_X2 OR T1.player_api_id = T2.away_player_X3 OR T1.player_api_id = T2.away_player_X4 OR T1.player_api_id = T2.away_player_X5 OR T1.player_api_id = T2.away_player_X6 OR T1.player_api_id = T2.away_player_X7 OR T1.player_api_id = T2.away_player_X8 OR T1.player_api_id = T2.away_player_X9 OR T1.player_api_id = T2.away_player_X10 OR T1.player_api_id = T2.away_player_X11 FROM Match WHERE date = '2013-07-12'\n\t----- bird -----\teuropean_football_2",
    "1116": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height = ( SELECT MAX(height) FROM Player ) LIMIT 5 \n\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player WHERE weight = ( SELECT MAX(weight) FROM Player ) LIMIT 10;\n\t----- bird -----\teuropean_football_2",
    "1118": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date > '2018-01-01' AND T1.height < 180 AND T1.weight >= 70 AND strftime('%Y', T2.date) >= '2015'\n\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(T1.home_team_goal) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.home_player_X1 = T2.player_api_id WHERE T2.player_name = 'Aaron Lennon'\n\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(CASE WHEN T2.away_player_X11 = 1 THEN home_team_goal ELSE NULL END) + SUM(CASE WHEN T2.away_player_X11 = 2 THEN home_team_goal ELSE NULL END) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.away_player_X11 = T2.player_api_id WHERE T2.player_name IN ('Daan Smith', 'Filipe Ferreira')\n\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(T1.home_player_10) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.home_player_X10 = T2.player_api_id WHERE T2.birthday LIKE '%/%/30'\n\t----- bird -----\teuropean_football_2",
    "1122": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.stamina DESC LIMIT 10 \n\t----- bird -----\teuropean_football_2",
    "1123": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = ( SELECT MAX(potential) FROM Player_Attributes )\n\t----- bird -----\teuropean_football_2",
    "1124": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.player_api_id = T2.home_player_X1 OR T1.player_api_id = T2.home_player_X2 OR T1.player_api_id = T2.home_player_X3 OR T1.player_api_id = T2.home_player_X4 OR T1.player_api_id = T2.home_player_X5 OR T1.player_api_id = T2.home_player_X6 OR T1.player_api_id = T2.home_player_X7 OR T1.player_api_id = T2.home_player_X8 OR T1.player_api_id = T2.home_player_X9 OR T1.player_api_id = T2.home_player_X10 OR T1.player_api_id = T2.home_player_X11 INNER JOIN Player_Attributes AS T3 ON T1.player_api_id = T3.player_api_id WHERE T3.attacking_work_rate = 'High'\n\t----- bird -----\teuropean_football_2",
    "1125": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.finishing = 1 ORDER BY T1.birthday LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1126": "SELECT T2.player_name FROM League AS T1 INNER JOIN Player AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Belgium'\n\t----- bird -----\teuropean_football_2",
    "1127": "SELECT T2.country_id, T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.vision >= 90\n\t----- bird -----\teuropean_football_2",
    "1128": "SELECT T1.name, AVG(T2.weight) FROM Country AS T1 INNER JOIN Player AS T2 ON T1.id = T2.country_id GROUP BY T1.name ORDER BY AVG(T2.weight) DESC LIMIT 1;\n\t----- bird -----\teuropean_football_2",
    "1129": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.buildUpPlaySpeedClass = 'Slow'\n\t----- bird -----\teuropean_football_2",
    "1130": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.chanceCreationPassingClass = 'Safe'\n\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(T1.height) FROM Player AS T1 INNER JOIN League AS T2 ON T1.player_api_id = T2.country_id WHERE T2.name = 'Italy'\n\t----- bird -----\teuropean_football_2",
    "1132": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 ORDER BY T1.player_name LIMIT 3;\n\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE STRFTIME('%Y', P.birthday) > '1990' AND P.player_name = 'Aaron'\n\t----- bird -----\teuropean_football_2",
    "1134": "SELECT T1.jumping - T2.jumping FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.id = 6 AND T2.id = 23;\n\t----- bird -----\teuropean_football_2",
    "1135": "SELECT T1.id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = ( SELECT MIN(potential) FROM Player_Attributes ) AND T1.preferred_foot = 'Right' LIMIT 3\n\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.id WHERE T1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes ) AND T1.preferred_foot = 'Left'\n\t----- bird -----\teuropean_football_2",
    "1137": "SELECT CAST(COUNT(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM Player_Attributes\n\t----- bird -----\teuropean_football_2",
    "1138": "SELECT T2.country_id FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Poland Ekstraklasa'\n\t----- bird -----\teuropean_football_2",
    "1139": "SELECT T1.home_goal, T1.away_goal FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id INNER JOIN League AS T3 ON T3.id = T2.country_id WHERE T1.date LIKE '2008-09-24' AND T3.name = 'Belgian Jupiler League'\n\t----- bird -----\teuropean_football_2",
    "1140": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Alexis Blin'\n\t----- bird -----\teuropean_football_2",
    "1141": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_short_name = 'KSV Cercle Brugge'\n\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE league_id = ( SELECT id FROM League WHERE name = 'Serie A' AND season = '2015-2016' )\n\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(T1.home_team_goal) FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands' AND T1.league_id = 1\n\t----- bird -----\teuropean_football_2",
    "1144": "SELECT T2.finishing, T2.curve FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight = ( SELECT MAX(weight) FROM Player )\n\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.country_id = T2.id WHERE T1.season = '2015\u20132016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1;\n\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id GROUP BY T2.team_api_id ORDER BY COUNT(T1.home_player_X11) DESC LIMIT 1\n\t----- bird -----\teuropean_football_2",
    "1147": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.strength = ( SELECT MAX(strength) FROM Player_Attributes )\n\t----- bird -----\teuropean_football_2",
    "1148": "SELECT CAST(COUNT(CASE WHEN T1.height < 180 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.strength > 70\n\t----- bird -----\teuropean_football_2",
    "1149": "\nSELECT \n    CASE \n        WHEN T1.Diagnosis = 'In-patient' THEN 1\n        ELSE 0\n    END AS Inpatient,\n    CASE \n        WHEN T2.Diagnosis = 'Out-patient' THEN 1\n        ELSE 0\n    END AS Outpatient,\n    (SUM(CASE WHEN T1.Diagnosis = 'In-patient' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Diagnosis = 'Out-patient' THEN 1 ELSE 0 END)) / (SELECT COUNT(*) FROM Patient) * 100 AS Deviation\nFROM \n    Examination T1\nJOIN \n    Patient T2 ON T1.ID = T2.ID\nWHERE \n    T2.SEX = 'Male'\nGROUP BY \n    CASE \n        WHEN T1.Diagnosis = 'In-patient' THEN 1\n        ELSE 0\n    END,\n    CASE \n        WHEN T2.Diagnosis = 'Out-patient' THEN 1\n        ELSE 0\n    END\n\n\t----- bird -----\tthrombosis_prediction",
    "1150": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'Female' AND T2.Birthday > '1930-12-31' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID\n\t----- bird -----\tthrombosis_prediction",
    "1151": "\nSELECT CAST(SUM(CASE WHEN Admission = 'Inpatient' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31'\n\n\t----- bird -----\tthrombosis_prediction",
    "1152": "\nSELECT T1.Diagnosis, COUNT(T2.ID) AS outpatient, COUNT(T3.ID) AS inpatient \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nJOIN Laboratory AS T3 ON T2.ID = T3.ID \nWHERE T1.Diagnosis = 'SLE' AND T2.Admission != 'Admitted'\nGROUP BY T1.Diagnosis\n\n\t----- bird -----\tthrombosis_prediction",
    "1153": "\nSELECT T1.Diagnosis, T2.Date \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.ID = 30609;\n\n\t----- bird -----\tthrombosis_prediction",
    "1154": "\nSELECT T1.SEX, T2.Birthday, T3.ExaminationDate, T3.Symptoms \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nJOIN Laboratory AS T3 ON T1.ID = T3.ID \nWHERE T1.ID = 163109\n\n\t----- bird -----\tthrombosis_prediction",
    "1155": "\nSELECT T1.ID, T1.SEX, T1.Birthday \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.LDH > (SELECT AVG(LDH) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1156": "\nSELECT T1.ID, TIMESTAMPDIFF(YEAR, T2.Birthday, CURDATE()) AS Age \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE (T2.TAT > 0 OR T2.TAT2 > 0) AND (T2.APTT > 0 OR T2.PT > 0)\n\n\t----- bird -----\tthrombosis_prediction",
    "1157": "\nSELECT T1.ID, T1.SEX, T2.Diagnosis \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T2.Thrombosis > 4;\n\n\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT T1.ID, T2.T-CHO FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1937' AND T2.T-CHO > ( SELECT AVG(T2.T-CHO) FROM Laboratory AS T2 INNER JOIN Patient AS T1 ON T2.ID = T1.ID WHERE STRFTIME('%Y', T1.Birthday) = '1937' )\n\t----- bird -----\tthrombosis_prediction",
    "1159": "\nSELECT P.ID, P.SEX, P.Diagnosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.ALB < 3.5\n\n\t----- bird -----\tthrombosis_prediction",
    "1160": "\nSELECT CAST(SUM(CASE WHEN TP < (4.5 * 100) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE SEX = 'Female'\n\n\t----- bird -----\tthrombosis_prediction",
    "1161": "\nSELECT AVG(aCL IgG) FROM Examination WHERE Diagnosis = 'In-patient' AND EXTRACT(YEAR FROM Birthday) >= 50\n\n\t----- bird -----\tthrombosis_prediction",
    "1162": "\nSELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.SEX = 'Female' AND P.Description >= '1997-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1163": "\nSELECT MIN(T1.Birthday) - 365 AS Age \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T2.Diagnosis != '' AND T1.FirstDate IS NOT NULL \nGROUP BY T1.ID \nORDER BY Age ASC LIMIT 1 \n\n\t----- bird -----\tthrombosis_prediction",
    "1164": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ExaminationDate BETWEEN '1997-01-01' AND '1997-12-31' AND T2.SEX = 'Female' GROUP BY T1.ID ORDER BY T1.Thrombosis DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1165": "\nSELECT MIN(T1.Birthday) - MAX(T2.Birthday) AS age_gap \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.TG > 0;\n\n\t----- bird -----\tthrombosis_prediction",
    "1166": "\nSELECT T1.Symptoms, T2.Diagnosis \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T2.Birthday = ( SELECT MIN(Birthday) FROM Patient );\n\n\t----- bird -----\tthrombosis_prediction",
    "1167": "\nSELECT AVG(CASE WHEN T1.SEX = 'Male' THEN 1 ELSE 0 END) AS avg_male \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.Date BETWEEN '1998-01-01' AND '1999-12-31'\nGROUP BY MONTH(T2.Date)\n\n\t----- bird -----\tthrombosis_prediction",
    "1168": "\nSELECT T2.Date, (T1.Birthday - CURDATE()) AS Age \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T1.Diagnosis = 'SJS' \nORDER BY T1.Birthday DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1169": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'Male' THEN 1 ELSE 0 END) AS REAL) / \n       SUM(CASE WHEN T1.SEX = 'Female' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA > 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1170": "\nSELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.FirstDate < E.ExaminationDate AND (E.Diagnosis IS NULL OR E.Diagnosis != 'Done') \nAND EXTRACT(YEAR FROM AGE(CURRENT_DATE, P.FirstDate)) >= 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1171": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T2.Birthday < '1990-01-01' AND T2.Description BETWEEN '1990-01-01' AND '1993-12-31'\n\n\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL > 0 AND T1.SEX = 'Male'\n\t----- bird -----\tthrombosis_prediction",
    "1173": "\nSELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.Diagnosis ORDER BY COUNT(T1.ID) DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1174": "\nSELECT T2.Birthday, AVG(T1.TP) \nFROM Laboratory AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE STRFTIME('%Y-%m', T1.Date) = '1991-10' \nGROUP BY T2.Birthday \n\n\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT T1.HGB, T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID ORDER BY T1.HGB DESC LIMIT 1\n\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT aCL IgG FROM Examination WHERE ID = 3605340 AND Examination Date = '1996-12-02' AND Diagnosis != '' \n\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT T1.T-CHO FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date = '1995-09-04' AND T2.ID = 2927464 AND T1.T-CHO BETWEEN 150 AND 300\n\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'AORTITIS' LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1179": "\nSELECT aCL IgG, aCL IgM FROM Examination WHERE Diagnosis = 'SLE' AND Examination Date = '1994-02-19' AND ID IN (SELECT Patient.ID FROM Patient WHERE Description = '1993/11/12') \n\t----- bird -----\tthrombosis_prediction",
    "1180": "\nSELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12'\n\n\t----- bird -----\tthrombosis_prediction",
    "1181": "\nSELECT T1.Birthday, (T2.Date - T1.Birthday) AS Age \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.GLU = 8.4 AND T2.Date = '1991-10-21' \n\n\t----- bird -----\tthrombosis_prediction",
    "1182": "\nSELECT COUNT(*) FROM Laboratory AS L1 INNER JOIN Patient AS P ON L1.ID = P.ID WHERE P.FirstDate = '1991-06-13' AND L1.Date BETWEEN '1995-01-01' AND '1995-12-31'\nAND P.Diagnosis = 'SJS'\n\n\t----- bird -----\tthrombosis_prediction",
    "1183": "\nSELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Description = '1997/1/27' AND T2.Diagnosis = 'SLE'\n\n\t----- bird -----\tthrombosis_prediction",
    "1184": "\nSELECT Symptoms \nFROM Examination \nWHERE ID = (SELECT ID FROM Patient WHERE Birthday = '1959-03-01') AND Examination Date = '1993-09-27'\n\n\t----- bird -----\tthrombosis_prediction",
    "1185": "\nSELECT T2.T-CHO - T1.T-CHO FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1981-11-01' AND '1981-12-31' AND T2.Birthday = '1959-02-18'\n\n\t----- bird -----\tthrombosis_prediction",
    "1186": "\nSELECT P.ID, P.Description, E.Diagnosis \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.ExaminationDate BETWEEN '1970-01-01' AND '1997-12-31' AND E.Diagnosis = 'Behcet's'\n\n\t----- bird -----\tthrombosis_prediction",
    "1187": "\nSELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4 GROUP BY T1.ID\n\n\t----- bird -----\tthrombosis_prediction",
    "1188": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient P \nWHERE P.SEX = 'Female' AND P.Birthday LIKE '%1964%' \nORDER BY P.ID;\n\n\t----- bird -----\tthrombosis_prediction",
    "1189": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T1.Diagnosis = 'Thrombosis' AND T1.RVVT = 'Level 2' AND T1.ANA_Pattern = 'S' AND (T1.aCL_IgM - (SELECT AVG(aCL_IgM) FROM Examination)) * 100 > 20\n\n\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT CAST(SUM(CASE WHEN UA > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Laboratory WHERE UA BETWEEN 0 AND 2\n\t----- bird -----\tthrombosis_prediction",
    "1191": "\nSELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID)\nFROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID\nWHERE T1.FirstDate = '1981-01-01' AND T1.SEX = 'Male'\n\n\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1991-10-01' AND '1991-10-31' AND T2.T-BIL BETWEEN 0 AND 1.1\n\t----- bird -----\tthrombosis_prediction",
    "1193": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T2.ANA > 0 AND T1.SEX = 'F' AND T1.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\n\n\t----- bird -----\tthrombosis_prediction",
    "1194": "\nSELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1 AND T3.LDH = 123\n\n\t----- bird -----\tthrombosis_prediction",
    "1195": "\nSELECT AVG(ALB) FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'Female' AND PLT > 400 AND Diagnosis = 'SLE'\n\n\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' GROUP BY T1.Symptoms ORDER BY COUNT(T1.Symptoms) DESC LIMIT 1;\n\t----- bird -----\tthrombosis_prediction",
    "1197": "\nSELECT T1.First Date, T2.Diagnosis \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T1.ID = 48473 \nORDER BY T1.First Date ASC LIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Female' AND T2.Diagnosis = 'APS'\n\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1997-01-01' AND '1997-12-31' AND (T2.GLU > 100 OR T2.GLU < 60)\n\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis > 0\n\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1980-01-01' AND T1.Diagnosis = 'RA'\n\t----- bird -----\tthrombosis_prediction",
    "1202": "\nSELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.SEX = 'Male' AND E.ExaminationDate BETWEEN '1995-01-01' AND '1997-12-31' AND E.Diagnosis = 'BEHCET disease'\nAND P.Description != 'Hospital Admission'\n\n\t----- bird -----\tthrombosis_prediction",
    "1203": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.SEX = 'Female' AND T2.WBC < 3.5\n\n\t----- bird -----\tthrombosis_prediction",
    "1204": "\nSELECT DATEDIFF(Description, First Date) FROM Patient WHERE ID = 821298\n\n\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT T1.GLU FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 57266 AND T1.GLU BETWEEN 0.5 AND 1.5\n\t----- bird -----\tthrombosis_prediction",
    "1206": "\nSELECT T1.Date, T2.GOT \nFROM Laboratory AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T1.ID = 48473 AND T1.GPT > (SELECT AVG(GPT) FROM Laboratory WHERE ID = 48473)\n\n\t----- bird -----\tthrombosis_prediction",
    "1207": "\nSELECT T1.SEX, T1.Birthday \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.GOT BETWEEN 0 AND 100 AND T2.Date BETWEEN '1994-01-01' AND '1994-12-31'\n\n\t----- bird -----\tthrombosis_prediction",
    "1208": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > ( SELECT AVG(GOT) FROM Laboratory ) AND T1.SEX = 'Male'\n\t----- bird -----\tthrombosis_prediction",
    "1209": "\nSELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > (SELECT AVG(LDH) FROM Laboratory) ORDER BY T1.Birthday ASC\n\n\t----- bird -----\tthrombosis_prediction",
    "1210": "\nSELECT AVG(LDH) FROM Laboratory WHERE LDH BETWEEN 0 AND 400\n\n\t----- bird -----\tthrombosis_prediction",
    "1211": "\nSELECT P.ID, DATEDIFF(P.Birthday, '1970-01-01') AS Age \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.LDH BETWEEN 100 AND 300 \nAND L.LDH > (SELECT AVG(LDH) FROM Laboratory);\n\n\t----- bird -----\tthrombosis_prediction",
    "1212": "\nSELECT T1.Diagnosis, T2.Admission \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T1.LDH BETWEEN 0 AND 200 AND T1.ALB > 3.5\n\n\t----- bird -----\tthrombosis_prediction",
    "1213": "\nSELECT T1.ID, T2.ALB \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.Birthday = '1982-04-01' AND T2.ALB BETWEEN 0 AND 100\n\n\t----- bird -----\tthrombosis_prediction",
    "1214": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TP < (SELECT MIN(TP) FROM Laboratory);\n\n\t----- bird -----\tthrombosis_prediction",
    "1215": "\nSELECT T1.TP - (T2.normal_index) AS deviation \nFROM Laboratory T1 \nJOIN Examination T2 ON T1.ID = T2.ID \nWHERE T1.SEX = 'F' AND T1.TP > T2.normal_index \nGROUP BY T1.ID, T2.normal_index \n\n\t----- bird -----\tthrombosis_prediction",
    "1216": "\nSELECT P.ID, P.Birthday\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'Male' AND L.ALB < (L.ALB * 0.9) OR L.ALB > (L.ALB * 1.1)\nORDER BY P.Birthday DESC\n\n\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT T1.ALB FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday LIKE '1982%' AND T1.ALB BETWEEN 3.5 AND 5.5\n\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT CAST(SUM(CASE WHEN UA > (SELECT AVG(UA) FROM Laboratory)) AS REAL) * 100 / COUNT(*) FROM Patient WHERE SEX = 'Female'\n\t----- bird -----\tthrombosis_prediction",
    "1219": "\nSELECT AVG(TA) FROM Laboratory WHERE UA > 0 AND ID IN (SELECT ID FROM Patient)\n\n\t----- bird -----\tthrombosis_prediction",
    "1220": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.UN BETWEEN 5 AND 15;\n\n\t----- bird -----\tthrombosis_prediction",
    "1221": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.Diagnosis = 'RA' AND L.UN > 0 \n\n\t----- bird -----\tthrombosis_prediction",
    "1222": "\nSELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.SEX = 'Male' AND L.GLU > 1.2 OR L.GLU < 0.8\n\n\t----- bird -----\tthrombosis_prediction",
    "1223": "\nSELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'Male' THEN 1 ELSE 0 END) > \n             SUM(CASE WHEN T2.SEX = 'Female' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS result\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.GLU < (SELECT AVG(GLU) FROM Laboratory)\nGROUP BY T1.SEX;\n\n\t----- bird -----\tthrombosis_prediction",
    "1224": "\nSELECT T1.ID, T1.SEX, T1.Birthday, T2.T-BIL \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nGROUP BY T1.ID, T1.SEX, T1.Birthday \nORDER BY SUM(T2.T-BIL) DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT T1.SEX, COUNT(*) AS Total FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL > 0 OR T2.T-BIL < 0 GROUP BY T1.SEX\n\t----- bird -----\tthrombosis_prediction",
    "1226": "\nSELECT P.ID, T.T-CHO \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.Birthday = ( SELECT MIN(Birthday) FROM Patient ) \nORDER BY T.T-CHO DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Male' AND T2.GLU > 100\n\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 100 AND T2.TG < 150\n\t----- bird -----\tthrombosis_prediction",
    "1229": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.TG > (SELECT AVG(TG) FROM Laboratory) AND T1.Birthday > '1950-12-31'\n\n\t----- bird -----\tthrombosis_prediction",
    "1230": "\nSELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK BETWEEN 0 AND 150 \n\t----- bird -----\tthrombosis_prediction",
    "1231": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.SEX = 'Male' AND T2.CPK > (SELECT AVG(CPK) FROM Laboratory)\nAND T1.Birthday BETWEEN '1936-01-01' AND '1956-12-31'\n\n\t----- bird -----\tthrombosis_prediction",
    "1232": "\nSELECT P.ID, P.SEX, DATEDIFF(P.Birthday, '1970-01-01') AS Age \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.GLU < (SELECT AVG(GLU) FROM Laboratory) AND L.TCHO <= (SELECT AVG(TCHO) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1233": "\nSELECT T2.ID, T1.GLU \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.Description >= '1991-01-01' AND T1.Description < '1992-01-01' AND T1.GLU BETWEEN 70 AND 110\n\n\t----- bird -----\tthrombosis_prediction",
    "1234": "\nSELECT P.ID, P.SEX, D.Birthday \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.WBC > 0 \nGROUP BY P.SEX, P.ID \nORDER BY P.SEX, P.Birthday ASC \n\n\t----- bird -----\tthrombosis_prediction",
    "1235": "\nSELECT P.ID, DATEDIFF(P.Birthday, '1970-01-01') AS Age \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.RBC < (SELECT AVG(RBC) FROM Laboratory) \nGROUP BY P.ID \nHAVING COUNT(DISTINCT E.Diagnosis) > 1 \nORDER BY RBC ASC\n\n\t----- bird -----\tthrombosis_prediction",
    "1236": "\nSELECT P.ID, P.Description, L.RBC \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.SEX = 'Female' AND P.Birthday > '1950-01-01' AND L.RBC < (SELECT AVG(RBC) FROM Laboratory WHERE RBC IS NOT NULL)\nAND P.Admission != '' \n\n\t----- bird -----\tthrombosis_prediction",
    "1237": "\nSELECT P.ID, P.SEX FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.Diagnosis != 'Inpatient' AND P.HGB < 13.5\n\n\t----- bird -----\tthrombosis_prediction",
    "1238": "\nSELECT P.ID, P.SEX FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.Diagnosis = 'SLE' AND P.HGB > 0 AND P.HGB = ( SELECT MAX(HGB) FROM Patient WHERE Diagnosis = 'SLE' ) \n\n\t----- bird -----\tthrombosis_prediction",
    "1239": "\nSELECT P.ID, DATEDIFF(P.Birthday, (SELECT MIN(Birthday) FROM Patient)) AS Age \nFROM Patient P \nJOIN Laboratory L1 ON P.ID = L1.ID \nJOIN Laboratory L2 ON P.ID = L2.ID \nWHERE L1.HCT > 40 AND L2.HCT > 40\nGROUP BY P.ID \nHAVING COUNT(DISTINCT L1.ID) >= 2 OR COUNT(DISTINCT L2.ID) >= 2\n\n\t----- bird -----\tthrombosis_prediction",
    "1240": "\nSELECT AVG(HCT) FROM Laboratory WHERE Date BETWEEN '1991-01-01' AND '1991-12-31' AND HCT < (SELECT AVG(TG) FROM Laboratory WHERE Date BETWEEN '1991-01-01' AND '1991-12-31') \n\t----- bird -----\tthrombosis_prediction",
    "1241": "\nSELECT COUNT(CASE WHEN PLT < (SELECT AVG(PLT) FROM Laboratory)) THEN 1 END) - \n       COUNT(CASE WHEN PLT > (SELECT AVG(PLT) FROM Laboratory) THEN 1 END) AS lower_than_normal,\n       COUNT(CASE WHEN PLT > (SELECT AVG(PLT) FROM Laboratory) THEN 1 END) - \n       COUNT(CASE WHEN PLT < (SELECT AVG(PLT) FROM Laboratory) THEN 1 END) AS higher_than_normal\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\n\t----- bird -----\tthrombosis_prediction",
    "1242": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nJOIN Laboratory L ON P.ID = L.ID \nWHERE E.ExaminationDate LIKE '1984%' AND P.Birthday < '50 years old' AND L.PLT = 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1243": "\nSELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND T2.PT > 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1958-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1244": "\nSELECT P.ID, P.Description, L.Date, L.TP \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.FirstDate > '1992-12-31' AND L.TP BETWEEN 0.5 AND 1.5 \n\n\t----- bird -----\tthrombosis_prediction",
    "1245": "\nSELECT COUNT(*) FROM Examination WHERE ExaminationDate > '1997-01-01' AND APTT = 'inactivated partial prothrombin time'\n\n\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.RVVT != 'Normal' AND T1.Thrombosis = 0\n\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Male' AND T2.WBC > 0 AND T2.FG < 0 OR T2.FG IS NULL\n\t----- bird -----\tthrombosis_prediction",
    "1248": "\nSELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TG > 5 AND P.Birthday > '1980-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN > 3.5\n\t----- bird -----\tthrombosis_prediction",
    "1250": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM = 'Normal' AND T1.Diagnosis = 'SLE'\n\n\t----- bird -----\tthrombosis_prediction",
    "1251": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.aCL_IgG < 0.4 AND T1.Symptoms LIKE '%abortion%' \n\n\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.aCL_IgG > 0 AND T1.Symptoms != ''\n\t----- bird -----\tthrombosis_prediction",
    "1253": "\nSELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGA BETWEEN 0 AND 40 ORDER BY T1.IGA DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1254": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IgA > 0 AND T1.FirstDate > '1990-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1255": "\nSELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM > 0 GROUP BY T1.Diagnosis ORDER BY COUNT(T1.ID) DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1256": "\nSELECT COUNT(DISTINCT ID) FROM Laboratory WHERE CRP = '' AND U-PRO IS NULL\n\n\t----- bird -----\tthrombosis_prediction",
    "1257": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.CRP != '' AND T1.Birthday < '1996-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1258": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.RF = 'Normal' AND T2.APTT > 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday > '1995-01-01' AND T2.RF = 'Normal'\n\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF = 'Normal' AND T1.Birthday > '1963-12-31'\n\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF = 'Normal' AND T1.Thrombosis = 0\n\t----- bird -----\tthrombosis_prediction",
    "1262": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ANA_Pattern = 'P' AND T2.C3 > 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1263": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT < (SELECT AVG(HCT) FROM Laboratory) AND T2.aCL IgG = (SELECT MAX(aCL IgG) FROM Examination)\n\n\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'Thrombosis' AND T2.C4 > 0\n\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'Normal' AND T1.Admission IS NOT NULL\n\t----- bird -----\tthrombosis_prediction",
    "1266": "\nSELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP IS NOT NULL ORDER BY T1.Birthday LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1267": "\nSELECT T1.ID, T2.Thrombosis \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T1.RF = 'Negative' AND T2.Thrombosis = ( SELECT MAX(Thrombosis) FROM Examination ) \nGROUP BY T1.ID\n\n\t----- bird -----\tthrombosis_prediction",
    "1268": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM = 'Abnormal' ORDER BY T1.Birthday LIMIT 3\n\n\t----- bird -----\tthrombosis_prediction",
    "1269": "\nSELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ExaminationDate > '1997-01-01' AND T2.RNP = 'Negative'\n\n\t----- bird -----\tthrombosis_prediction",
    "1270": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nJOIN Laboratory AS T3 ON T1.ID = T3.ID \nWHERE T3.RF = 'Negative' AND T1.SEX = 'Male' AND T2.Symptoms LIKE '%Vertigo%' \n\n\t----- bird -----\tthrombosis_prediction",
    "1271": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA = 'Normal' AND T1.Description < '1990-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1272": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA = 'Abnormal' ORDER BY T1.FirstDate LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.SSA = 'Normal'\n\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA = 'Normal' AND T1.Symptoms != ''\n\t----- bird -----\tthrombosis_prediction",
    "1275": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Male' AND T2.CENTROMEA = 0 AND T2.SSA = 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA-II > 0\n\t----- bird -----\tthrombosis_prediction",
    "1277": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA > 0 AND T2.DNA < 'normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA-II > 0 AND T1.Admission != ''\n\t----- bird -----\tthrombosis_prediction",
    "1279": "\nSELECT CAST(SUM(CASE WHEN Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT ID) FROM Laboratory WHERE GLU > 150 AND U-PRO LIKE '%Abnormal%' \n\t----- bird -----\tthrombosis_prediction",
    "1280": "\nSELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.SEX = 'Male' AND L.GPT BETWEEN 0 AND 100\n\n\t----- bird -----\tthrombosis_prediction",
    "1281": "\nSELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1282": "\nSELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU BETWEEN 0 AND 100 ORDER BY T2.GLU DESC LIMIT 3\n\n\t----- bird -----\tthrombosis_prediction",
    "1283": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU = 0 AND T1.SEX = 'Male'\n\n\t----- bird -----\tthrombosis_prediction",
    "1284": "\nSELECT T1.FirstDate FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 0 AND 400 ORDER BY T2.LDH DESC LIMIT 1 \n\t----- bird -----\tthrombosis_prediction",
    "1285": "\nSELECT T2.Description \nFROM Laboratory AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T1.LDH > 0 AND T1.Date = ( SELECT MAX(Date) FROM Laboratory );\n\n\t----- bird -----\tthrombosis_prediction",
    "1286": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1287": "\nSELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT > 0 AND T1.GPT < 150 \n\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.5\n\t----- bird -----\tthrombosis_prediction",
    "1289": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.TP > 0 \n\t----- bird -----\tthrombosis_prediction",
    "1290": "\nSELECT T1.ExaminationDate FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB BETWEEN 3.5 AND 5.4 ORDER BY T2.ALB DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1291": "\nSELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.SEX = 'Male' AND L.TP > 0 AND L.ALB > 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1292": "\nSELECT T1.aCL IgG FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU BETWEEN 0 AND 5 ORDER BY T2.GLU DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination WHERE CRP = '' AND ID IN ( SELECT ID FROM Laboratory WHERE CRP = '' )\n\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE = 0 AND T2.TAT = ( SELECT MAX(TAT) FROM Laboratory )\n\t----- bird -----\tthrombosis_prediction",
    "1295": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.T-BIL > 0 AND T1.ANA_Pattern = 'Peripheral'\n\n\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT T1.TAT2 FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.T-BIL BETWEEN 0 AND 1.2 ORDER BY T1.T-BIL DESC LIMIT 1\n\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-CHO > 150 AND T1.RVVT = 'Negative'\n\t----- bird -----\tthrombosis_prediction",
    "1298": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-CHO BETWEEN 150 AND 300 AND T1.ANA_Pattern = 'P'\n\n\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 0 AND T1.Symptoms != ''\n\t----- bird -----\tthrombosis_prediction",
    "1300": "\nSELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG BETWEEN 0 AND 100 ORDER BY T2.TG DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 0 AND T2.CPK > 0 \n\t----- bird -----\tthrombosis_prediction",
    "1302": "\nSELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK BETWEEN 0 AND 150 AND T1.Diagnosis IN ('Thrombosis', 'Coagulation Disorder')\n\t----- bird -----\tthrombosis_prediction",
    "1303": "\nSELECT T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GLU > 0 ORDER BY T2.Birthday DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1304": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.GLU = 0 AND T2.Thrombosis = 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1305": "\nSELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC > 0 AND T2.WBC < 10 \n\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T1.WBC > 0 \n\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 4.5 AND T1.Description LIKE '%Outpatient Clinic%'\n\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.RBC > 0 AND T2.PLT = 0\n\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT T1.PLT FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'MCTD' AND T1.PLT BETWEEN 150000 AND 450000\n\t----- bird -----\tthrombosis_prediction",
    "1310": "\nSELECT AVG (PT) FROM Patient WHERE SEX = 'Male' AND PT > 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1311": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T1.Thrombosis > 4 AND T1.PT < 13;\n\n\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\n\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\n\t----- bird -----\tstudent_club",
    "1314": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design' AND T1.position = 'Student_Club'\n\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer' AND T1.link_to_member LIKE '%Student_Club%'\n\t----- bird -----\tstudent_club",
    "1316": "SELECT T1.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer'\n\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium'\n\t----- bird -----\tstudent_club",
    "1318": "\nSELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Student_Club' GROUP BY T1.event_name ORDER BY COUNT(T2.link_to_member) DESC LIMIT 1\n\n\t----- bird -----\tstudent_club",
    "1319": "SELECT T2.college FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Student_Club' AND T2.link_to_member = ( SELECT member_id FROM member WHERE position = 'Vice President' )\n\t----- bird -----\tstudent_club",
    "1320": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T2.link_to_member = 'Maya Mclean'\n\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Student_Club' AND T2.link_to_member = 'Sacha Harrison' AND STRFTIME('%Y', T1.event_date) = '2019';\n\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(event_id) FROM event WHERE type = 'meeting' AND link_to_event IN ( SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 10 ); \n\t----- bird -----\tstudent_club",
    "1323": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T2.link_to_member IN ( SELECT member_id FROM member WHERE position = 'Student_Club' GROUP BY link_to_member HAVING COUNT(link_to_member) > 20 )\n\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(T1.attendance) FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE SUBSTR(T2.event_date, 1, 4) = '2020'\n\t----- bird -----\tstudent_club",
    "1325": "\nSELECT T1.expense_description, T2.cost \nFROM expense AS T1 \nJOIN budget AS T2 ON T1.link_to_budget = T2.budget_id \nWHERE T2.event_status = 'Approved' AND T1.expense_date LIKE '%/%/%' GROUP BY T1.expense_description ORDER BY SUM(T2.cost) DESC LIMIT 1\n\n\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering' AND T1.position = 'Student_Club'\n\t----- bird -----\tstudent_club",
    "1327": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_event = 'Laugh Out Loud' AND T1.position = 'Student_Club'\n\t----- bird -----\tstudent_club",
    "1328": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\n\t----- bird -----\tstudent_club",
    "1329": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\n\t----- bird -----\tstudent_club",
    "1330": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\n\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\n\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN attendance AS T3 ON T2.link_to_event = T3.link_to_event WHERE T3.link_to_member IN (SELECT member_id FROM member WHERE position = 'Student_Club') AND T2.event_status = 'Approved' AND T1.expense_date LIKE '%September%'\n\t----- bird -----\tstudent_club",
    "1333": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President' AND T1.major_name = 'Student_Club'\n\t----- bird -----\tstudent_club",
    "1334": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'IL' AND T1.position = 'Student_Club'\n\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Meeting' AND T1.category = 'Advertisement'\n\t----- bird -----\tstudent_club",
    "1336": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Pierce' AND T1.last_name = 'Guidi' GROUP BY T2.department\n\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Speaker'\n\t----- bird -----\tstudent_club",
    "1338": "SELECT T1.approved FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date = 'October 8, 2019' AND T1.expense_date LIKE '%October%'\n\t----- bird -----\tstudent_club",
    "1339": "\nSELECT T1.expense_date, (T2.cost + T3.cost) / 2 AS average_cost \nFROM expense AS T1 \nJOIN budget AS T2 ON T1.link_to_budget = T2.budget_id \nJOIN event AS T3 ON T2.link_to_event = T3.event_id \nWHERE T1.approved = 'yes' AND T3.event_date BETWEEN '2023-09-01' AND '2023-10-31' AND T1.link_to_member = 'Elijah Allen'\n\n\t----- bird -----\tstudent_club",
    "1340": "\nSELECT SUM(CASE WHEN T1.event_date LIKE '%2019%' THEN T2.spent ELSE 0 END) - \n       SUM(CASE WHEN T1.event_date LIKE '%2020%' THEN T2.spent ELSE 0 END) AS difference\nFROM event AS T1\nJOIN budget AS T2 ON T1.event_id = T2.link_to_event\nWHERE T1.type = 'Student_Club'\n\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = \"Spring Budget Review\"\n\t----- bird -----\tstudent_club",
    "1342": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_date = '2019/9/4' AND T1.expense_description = 'Posters'\n\t----- bird -----\tstudent_club",
    "1343": "SELECT T2.remaining FROM budget AS T1 INNER JOIN expense AS T2 ON T1.link_to_budget = T2.link_to_budget WHERE T1.category = 'Food' ORDER BY T1.spent DESC LIMIT 1;\n\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE event_date = \"2019/9/14\" AND type = \"fundraising\"\n\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(major_name) FROM major WHERE college = \"College of Humanities and Social Sciences\"\n\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE last_name = \"Jacobs\" AND first_name = \"Carlo\";\n\t----- bird -----\tstudent_club",
    "1347": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O\\'Gallagher'\n\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(budget_id) FROM budget WHERE event_status = 'Exceeded' AND link_to_event = 'November Meeting'\n\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'\n\t----- bird -----\tstudent_club",
    "1350": "SELECT T1.status FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Post Cards, Posters' AND T2.event_status = 'bought' AND T2.date = '2019/8/20'\n\t----- bird -----\tstudent_club",
    "1351": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\n\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Human Development and Family Studies' AND T1.t_shirt_size = 'Large'\n\t----- bird -----\tstudent_club",
    "1353": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\n\t----- bird -----\tstudent_club",
    "1354": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\n\t----- bird -----\tstudent_club",
    "1355": "SELECT T1.short_state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison'\n\t----- bird -----\tstudent_club",
    "1356": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\n\t----- bird -----\tstudent_club",
    "1357": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton'\n\t----- bird -----\tstudent_club",
    "1358": "\nSELECT T1.first_name, T1.last_name \nFROM member AS T1 \nJOIN income AS T2 ON T1.member_id = T2.link_to_member \nWHERE T2.date_received = ( SELECT MIN(date_received) FROM income ) \nAND T2.amount > 0 \n\n\t----- bird -----\tstudent_club",
    "1359": "\nSELECT COUNT(DISTINCT T1.event_id) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'Yearly Kickoff' AND T2.event_date > 'October Meeting'\nUNION\nSELECT COUNT(DISTINCT T1.event_id) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.event_name = 'Yearly Kickoff' AND T2.event_date < 'October Meeting'\n\n\t----- bird -----\tstudent_club",
    "1360": "SELECT CAST(SUM(CASE WHEN T1.category = 'Parking' THEN T2.amount ELSE 0 END) AS REAL) * 100 / SUM(T2.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Speaker'\n\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.category = 'Pizzas'\n\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(T1.city) FROM zip_code AS T1 INNER JOIN county AS T2 ON T1.county = T2.county WHERE T2.county = 'Orange' AND T1.state = 'VA';\n\t----- bird -----\tstudent_club",
    "1363": "SELECT T2.department FROM major AS T1 INNER JOIN event AS T2 ON T1.link_to_major = T2.event_id WHERE T1.college = 'College of Humanities and Social Sciences' GROUP BY T2.department\n\t----- bird -----\tstudent_club",
    "1364": "SELECT T2.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'\n\t----- bird -----\tstudent_club",
    "1365": "SELECT T1.expense_description, T2.remaining FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id ORDER BY T2.remaining LIMIT 1\n\t----- bird -----\tstudent_club",
    "1366": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_event = 'October Meeting'\n\t----- bird -----\tstudent_club",
    "1367": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id GROUP BY T2.college ORDER BY COUNT(T1.member_id) DESC LIMIT 1;\n\t----- bird -----\tstudent_club",
    "1368": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.phone = '809-555-3360'\n\t----- bird -----\tstudent_club",
    "1369": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event ORDER BY T2.spent DESC LIMIT 1;\n\t----- bird -----\tstudent_club",
    "1370": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\n\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\n\t----- bird -----\tstudent_club",
    "1372": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\n\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(T1.zip_code) FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T1.state = 'MD'\n\t----- bird -----\tstudent_club",
    "1374": "\nSELECT COUNT(T1.event_id) FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240'\n\n\t----- bird -----\tstudent_club",
    "1375": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\n\t----- bird -----\tstudent_club",
    "1376": "\nSELECT T1.event_name, T2.spent / T2.remaining \nFROM event AS T1 \nJOIN budget AS T2 ON T1.event_id = T2.link_to_event \nWHERE T1.status = 'closed' \nGROUP BY T1.event_name \nORDER BY spend-to-budget_ratio DESC LIMIT 1\n\n\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(member_id) FROM member WHERE position = \"president\"\n\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(amount) FROM budget WHERE event_status = 'Approved'\n\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE SUBSTR(event_date, 1, 4) = '2020' AND type = 'meeting'\n\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.category = 'Food'\n\t----- bird -----\tstudent_club",
    "1381": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.event_id) > 7\n\t----- bird -----\tstudent_club",
    "1382": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T3.major_name = 'Interior Design' AND T2.event_id = 'Community Theater'\n\t----- bird -----\tstudent_club",
    "1383": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'SC'\n\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(T1.income_id) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Grant' AND T2.last_name = 'Gilmour'\n\t----- bird -----\tstudent_club",
    "1385": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40\n\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.event_status = 'Approved' AND T1.expense_date LIKE '%/%/%'\n\t----- bird -----\tstudent_club",
    "1387": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\n\t----- bird -----\tstudent_club",
    "1388": "\nSELECT T1.first_name, T1.last_name, T2.source \nFROM member AS T1 \nJOIN income AS T2 ON T1.member_id = T2.link_to_member \nGROUP BY T1.first_name, T1.last_name, T2.source \nORDER BY SUM(T2.amount) DESC LIMIT 1\n\n\t----- bird -----\tstudent_club",
    "1389": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event ORDER BY T2.spent LIMIT 1;\n\t----- bird -----\tstudent_club",
    "1390": "SELECT CAST(SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN cost ELSE 0 END) AS REAL) * 100 / SUM(cost) FROM expense\n\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) FROM member\n\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received LIKE '%2019-09%' ORDER BY amount DESC LIMIT 1;\n\t----- bird -----\tstudent_club",
    "1393": "SELECT T1.first_name, T1.last_name, T1.email FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_event = 'Student_Club' AND T1.position = 'Secretary'\n\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching' AND T1.position = 'Student_Club'\n\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND SUBSTR(T2.event_date, 1, 4) = '2019'; \n\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(T1.event_id) ,  T2.major_name FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi' GROUP BY T2.major_name\n\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'food' AND T1.status = 'paid'\n\t----- bird -----\tstudent_club",
    "1398": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1;\n\t----- bird -----\tstudent_club",
    "1399": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.first_name = 'Maya' AND T1.last_name = 'Mclean'\n\t----- bird -----\tstudent_club",
    "1400": "\nSELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM event WHERE SUBSTR(event_date, -4) = '2019'\n\n\t----- bird -----\tstudent_club",
    "1401": "SELECT T1.cost FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker' AND T1.expense_description = 'Posters'\n\t----- bird -----\tstudent_club",
    "1402": "SELECT T1.t_shirt_size FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.t_shirt_size ORDER BY COUNT(T1.member_id) DESC LIMIT 1;\n\t----- bird -----\tstudent_club",
    "1403": "\nSELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'closed' AND T2.spent > ( SELECT MAX(T3.spent) FROM budget AS T3 INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T4.status = 'closed' )\n\t----- bird -----\tstudent_club",
    "1404": "SELECT T1.expense_description, SUM(T2.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.approved = 'true' AND T2.link_to_event = 'October Meeting' GROUP BY T1.expense_description\n\t----- bird -----\tstudent_club",
    "1405": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' ORDER BY T1.amount ASC\n\t----- bird -----\tstudent_club",
    "1406": "SELECT T1.link_to_event FROM budget AS T1 INNER JOIN category AS T2 ON T1.category = T2.category WHERE T2.category = 'Food' ORDER BY T1.amount DESC LIMIT 1;\n\t----- bird -----\tstudent_club",
    "1407": "\nSELECT T1.link_to_event, SUM(T2.amount) AS total_budget \nFROM budget AS T1 \nJOIN event AS T2 ON T1.link_to_event = T2.event_id \nWHERE T1.category = 'Advertising' \nGROUP BY T1.link_to_event \nORDER BY total_budget DESC LIMIT 3\n\n\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.category = 'Parking'\n\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T2.event_status = 'Approved' AND T1.expense_date = '2019-08-20'\n\t----- bird -----\tstudent_club",
    "1410": "SELECT T1.first_name, T1.last_name, SUM(T3.cost) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN expense AS T3 ON T2.link_to_member = T3.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name\n\t----- bird -----\tstudent_club",
    "1411": "SELECT DISTINCT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison'\n\t----- bird -----\tstudent_club",
    "1412": "\nSELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.t_shirt_size = 'X-Large' GROUP BY T1.expense_description\n\n\t----- bird -----\tstudent_club",
    "1413": "SELECT T1.zip_code FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.expense_date IS NOT NULL AND T2.cost < 50\n\t----- bird -----\tstudent_club",
    "1414": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen'\n\t----- bird -----\tstudent_club",
    "1415": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Business'\n\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.t_shirt_size = 'Medium' AND T2.major_name = 'Business'\n\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30\n\t----- bird -----\tstudent_club",
    "1418": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' GROUP BY T1.category\n\t----- bird -----\tstudent_club",
    "1419": "SELECT DISTINCT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_date = '2020-03-24T12:00:00'\n\t----- bird -----\tstudent_club",
    "1420": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'\n\t----- bird -----\tstudent_club",
    "1421": "SELECT CAST(SUM(CASE WHEN T1.major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major\n\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215'\n\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(income_id) FROM income WHERE amount = 50;\n\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(member_id) FROM member WHERE t_shirt_size = 'Extra Large'\n\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(T1.major_id) FROM major AS T1 INNER JOIN department AS T2 ON T1.department = T2.department_name WHERE T2.department_name = 'School of Applied Sciences, Technology and Education' AND T1.college = 'College of Agriculture and Applied Sciences'\n\t----- bird -----\tstudent_club",
    "1426": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'\n\t----- bird -----\tstudent_club",
    "1427": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T1.spent = 0 AND T1.event_status = 'guest speaker'\n\t----- bird -----\tstudent_club",
    "1428": "SELECT T2.city, T2.state FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.department = 'Electrical and Computer Engineering'\n\t----- bird -----\tstudent_club",
    "1429": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.position = 'vice president' AND T1.type = 'social' AND T2.link_to_member IN (SELECT link_to_major FROM major WHERE major_name = 'Student_Club') AND T1.location = '900 E. Washington St.'\n\t----- bird -----\tstudent_club",
    "1430": "SELECT T1.last_name, T1.position FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_date = '09/10/2019' AND T2.expense_description = 'Pizza'\n\t----- bird -----\tstudent_club",
    "1431": "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_event = 'women\\'s soccer event' GROUP BY T1.last_name ORDER BY COUNT(T1.last_name) DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1432": "\nSELECT SUM(CASE WHEN T1.first_name = 'Student_Club' THEN amount ELSE 0 END) / \n       SUM(CASE WHEN T2.t_shirt_size = 'Medium' THEN amount ELSE 0 END) * 100 FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id\n\t----- bird -----\tstudent_club",
    "1433": "SELECT T1.state FROM zip_code AS T1 INNER JOIN major AS T2 ON T1.zip_code = T2.major_id WHERE T1.type = 'post office box' GROUP BY T1.state\n\t----- bird -----\tstudent_club",
    "1434": "SELECT T1.zip_code FROM zip_code AS T1 INNER JOIN event AS T2 ON T1.zip_code = T2.location WHERE T2.event_name = 'San Juan Municipio' AND T1.state = 'Puerto Rico' AND T1.type = 'Post Office Box'\n\t----- bird -----\tstudent_club",
    "1435": "\nSELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'closed' AND T2.link_to_event = 'game' AND T2.link_to_member IN ( SELECT link_to_event FROM budget WHERE event_status = 'closed' AND date BETWEEN '2019-03-15' AND '2020-03-20' )\n\t----- bird -----\tstudent_club",
    "1436": "\nSELECT T2.link_to_event FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.zip > 50 AND T2.spent > 50 \n\t----- bird -----\tstudent_club",
    "1437": "\nSELECT T1.first_name, T1.last_name, T2.link_to_event \nFROM member AS T1 \nJOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nWHERE T2.expense_date BETWEEN '2019-01-10' AND '2019-11-19' AND T2.approved = 'true'\n\n\t----- bird -----\tstudent_club",
    "1438": "\nSELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T2.major_name = 'rec1N0upiVLy5esTO'\n\n\t----- bird -----\tstudent_club",
    "1439": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'\n\t----- bird -----\tstudent_club",
    "1440": "\nSELECT T1.email FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 20 AND T2.date_received BETWEEN '2019-09-10' AND '2019-11-19'\n\n\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Education' AND T2.college = 'College of Education & Human Services'\n\t----- bird -----\tstudent_club",
    "1442": "SELECT CAST(SUM(CASE WHEN T1.spent > T2.amount THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.event_id) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.event_status = 'Over Budget'\n\t----- bird -----\tstudent_club",
    "1443": "\nSELECT event_id, location, status FROM event WHERE SUBSTR(event_date, 1, 7) BETWEEN '2019-11-01' AND '2020-03-31'\n\n\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense GROUP BY expense_date HAVING AVG(cost) > 50\n\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = \"Extra Large\"\n\t----- bird -----\tstudent_club",
    "1446": "SELECT CAST(SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM zip_code\n\t----- bird -----\tstudent_club",
    "1447": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining < (T2.amount / 100) AND T2.event_status = 'Underspent'\n\t----- bird -----\tstudent_club",
    "1448": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.expense_description = 'pizza' AND T2.cost BETWEEN 50 AND 100\n\t----- bird -----\tstudent_club",
    "1449": "SELECT T1.first_name, T1.last_name, T2.major_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_event = T3.link_to_event WHERE T3.spent > 100\n\t----- bird -----\tstudent_club",
    "1450": "SELECT T1.city, T1.county FROM zip_code AS T1 INNER JOIN event AS T2 ON T1.zip_code = SUBSTR(T2.location, INSTR(T2.location, ',') + 1) WHERE T2.event_date IN ( SELECT T3.date_received FROM income AS T3 GROUP BY T3.date_received HAVING COUNT(T3.date_received) > 40 )\n\t----- bird -----\tstudent_club",
    "1451": "\nSELECT T1.first_name, T1.last_name, SUM(T3.cost) AS total_expense \nFROM member AS T1 \nJOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nJOIN expense AS T3 ON T2.link_to_member = T3.link_to_member \nGROUP BY T1.member_id \nHAVING COUNT(DISTINCT T3.expense_id) > 1 \nORDER BY total_expense DESC LIMIT 1\n\n\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(T1.amount) FROM budget AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'member'\n\t----- bird -----\tstudent_club",
    "1453": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.amount / T2.spent < ( SELECT AVG(amount) FROM budget ) GROUP BY T1.event_name HAVING COUNT(T1.event_id) > 1\n\t----- bird -----\tstudent_club",
    "1454": "SELECT SUM(CASE WHEN type = 'game' THEN cost ELSE 0 END) / SUM(cost) * 100 FROM expense\n\t----- bird -----\tstudent_club",
    "1455": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.link_to_budget = T2.link_to_budget WHERE T2.expense_description IN ('water', 'chips', 'cookies') ORDER BY T1.spent DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1456": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_event = T3.link_to_event ORDER BY T3.spent DESC LIMIT 5\n\t----- bird -----\tstudent_club",
    "1457": "SELECT T1.first_name, T1.last_name, T2.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T2.link_to_member HAVING AVG(T2.cost) > ( SELECT AVG(cost) FROM expense )\n\t----- bird -----\tstudent_club",
    "1458": "SELECT ROUND((SUM(CASE WHEN state = 'ME' THEN 1 ELSE 0 END) / SUM(CASE WHEN state = 'VT' THEN 1 ELSE 0 END)) * 100,2) - ROUND((SUM(CASE WHEN state = 'ME' THEN 1 ELSE 0 END) / (SELECT COUNT(*) FROM zip_code)) * 100,2) AS diff FROM member\n\t----- bird -----\tstudent_club",
    "1459": "SELECT T1.major_name, T2.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke'\n\t----- bird -----\tstudent_club",
    "1460": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY T1.first_name, T1.last_name ORDER BY SUM(T2.cost) DESC LIMIT 1 \n\t----- bird -----\tstudent_club",
    "1461": "\nSELECT T1.last_name, T2.phone \nFROM member AS T1 \nJOIN major AS T2 ON T1.link_to_major = T2.major_id \nWHERE T2.major_name = 'Elementary Education' \nAND T1.position = 'Student'; \n\n\t----- bird -----\tstudent_club",
    "1462": "SELECT T1.category, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'January Speaker'\n\t----- bird -----\tstudent_club",
    "1463": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food'\n\t----- bird -----\tstudent_club",
    "1464": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\n\t----- bird -----\tstudent_club",
    "1465": "SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.link_to_budget = T2.link_to_budget WHERE T2.expense_description = 'Posters'\n\t----- bird -----\tstudent_club",
    "1466": "SELECT T1.first_name, T1.last_name, T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Secretary'\n\t----- bird -----\tstudent_club",
    "1467": "SELECT T1.event_name, SUM(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event WHERE T2.expense_description LIKE '%speaker gift%' GROUP BY T1.event_name\n\t----- bird -----\tstudent_club",
    "1468": "SELECT T1.city FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Girke'\n\t----- bird -----\tstudent_club",
    "1469": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'NC' AND T2.short_state = 'NC' AND T2.county = 'Cabarrus' AND T2.zip_code = 28092\n\t----- bird -----\tstudent_club",
    "1470": "\nSELECT COUNT(T1.GasStationID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE' AND T2.ProductID IN ( SELECT ProductID FROM products WHERE Description = 'Premium gas' )\n\t----- bird -----\tdebit_card_specializing",
    "1471": "\nSELECT SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) / \n       SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS ratio\nFROM customers;\n\n\t----- bird -----\tdebit_card_specializing",
    "1472": "\nSELECT t1.CustomerID, SUM(t2.Consumption) AS Consumption \nFROM customers t1 \nJOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID \nWHERE STRFTIME('%Y', t2.Date) = '2012' AND t2.Country = 'LAM' \nGROUP BY t1.CustomerID \nORDER BY Consumption ASC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1473": "\nSELECT AVG(T1.Consumption) \nFROM yearmonth AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Segment = 'SME' AND STRFTIME('%Y', T1.Date) = '2013'\n\n\t----- bird -----\tdebit_card_specializing",
    "1474": "\nSELECT c.CustomerID, SUM(ym.Consumption) AS Consumption \nFROM customers c \nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID \nWHERE c.Currency = 'CZK' AND YEAR(ym.Date) = 2011 \nGROUP BY c.CustomerID \nORDER BY Consumption DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1475": "\nSELECT COUNT(DISTINCT T1.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date LIKE '2012%' AND T1.Consumption < 30000 AND T2.Segment = 'KAM'\n\t----- bird -----\tdebit_card_specializing",
    "1476": "\nSELECT SUM(CASE WHEN Currency = 'CZK' THEN Consumption ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN Consumption ELSE 0 END) AS Difference \nFROM yearmonth \nWHERE Date LIKE '%2012%' \nGROUP BY CustomerID; \n\n\t----- bird -----\tdebit_card_specializing",
    "1477": "\nSELECT T1.Date, SUM(T2.Consumption) AS Consumption \nFROM yearmonth T1 \nJOIN transactions_1k T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Amount = 100 AND T2.Price = 1.00 \nGROUP BY T1.Date \nORDER BY Consumption DESC \nLIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1478": "\nSELECT Segment FROM yearmonth GROUP BY Segment ORDER BY SUM(Consumption) LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1479": "\nSELECT T1.Date, SUM(T2.Consumption) AS Consumption \nFROM yearmonth T1 \nJOIN transactions_1k T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Amount = 100 AND T2.Price = 32.00 \nGROUP BY T1.Date \nORDER BY Consumption DESC \nLIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1480": "\nSELECT T1.Date, SUM(T2.Consumption) as Consumption \nFROM yearmonth AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Segment = 'SME' AND STRFTIME('%Y', T1.Date) = '2013' \nGROUP BY T1.Date \nORDER BY Consumption DESC \nLIMIT 1 \n\n\t----- bird -----\tdebit_card_specializing",
    "1481": "\nSELECT SUM(CASE WHEN Segment = 'SME' THEN Consumption ELSE 0 END) / COUNT(*) AS avg_sm,\n       SUM(CASE WHEN Segment = 'LAM' THEN Consumption ELSE 0 END) / COUNT(*) AS avg_lam,\n       SUM(CASE WHEN Segment = 'KAM' THEN Consumption ELSE 0 END) / COUNT(*) AS avg_kam\nFROM yearmonth\nWHERE Date LIKE '%2013%' AND Currency = 'CZK'\nGROUP BY Segment\n\n\t----- bird -----\tdebit_card_specializing",
    "1482": "\nSELECT T1.Segment, (T2.Consumption - LAG(T2.Consumption) OVER (PARTITION BY T1.Segment ORDER BY Date)) / LAG(T2.Consumption) OVER (PARTITION BY T1.Segment ORDER BY Date) * 100 AS percentage_increase \nFROM yearmonth T1\nJOIN customers T2 ON T1.CustomerID = T2.CustomerID\nWHERE T2.Currency = 'EUR' AND T1.Date BETWEEN '2012-01-01' AND '2013-12-31'\nGROUP BY T1.Segment\nORDER BY Segment, percentage_increase DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1483": "\nSELECT SUM(T1.Consumption) \nFROM yearmonth AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.Date BETWEEN '2013-08-01' AND '2013-11-30' AND T2.CustomerID = 6 \n\n\t----- bird -----\tdebit_card_specializing",
    "1484": "\nSELECT SUM(CASE WHEN T2.Country = 'Czech Republic' THEN 1 ELSE 0 END) - \n       SUM(CASE WHEN T2.Country = 'Slovakia' THEN 1 ELSE 0 END) AS diff\nFROM gasstations AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'discount'\n\n\t----- bird -----\tdebit_card_specializing",
    "1485": "\nSELECT SUM(CASE WHEN T1.Date LIKE '%2013-04%' THEN T2.Consumption ELSE 0 END) - \n       SUM(CASE WHEN T1.CustomerID = 5 AND T1.Date LIKE '%2013-04%' THEN T2.Consumption ELSE 0 END) AS diff\nFROM yearmonth T1\nJOIN customers T2 ON T1.CustomerID = T2.CustomerID\nWHERE T1.CustomerID = 7\n\t----- bird -----\tdebit_card_specializing",
    "1486": "\nSELECT SUM(CASE WHEN Currency = 'Czech koruna' THEN 1 ELSE 0 END) - SUM(CASE WHEN Currency = 'Euros' THEN 1 ELSE 0 END) AS difference \nFROM transactions_1k\nWHERE Currency IN ('Czech koruna', 'Euros')\n\n\t----- bird -----\tdebit_card_specializing",
    "1487": "\nSELECT T1.CustomerID, T2.Consumption \nFROM customers AS T1 \nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.Currency = 'Euro' AND T2.Date LIKE '%2013-10%' \nORDER BY T2.Consumption DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1488": "\nSELECT c.CustomerID, SUM(ym.Consumption) AS Consumption \nFROM customers c \nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID \nGROUP BY c.CustomerID \nORDER BY Consumption DESC LIMIT 1 \n\n\t----- bird -----\tdebit_card_specializing",
    "1489": "\nSELECT SUM(T1.Consumption) \nFROM yearmonth AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Segment = 'KAM' AND STRFTIME('%Y-%m', T1.Date) = '2013-05'\n\n\t----- bird -----\tdebit_card_specializing",
    "1490": "\nSELECT SUM(CASE WHEN Consumption > 46.73 THEN Consumption ELSE 0 END) / \n       ( SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 1 ) * 100 AS percent_consumed\nFROM yearmonth\nWHERE CustomerID = 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1491": "\nSELECT T1.Country, COUNT(T2.GasStationID) \nFROM gasstations AS T1 \nJOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.Amount / T2.Price > 1 \nGROUP BY T1.Country \n\n\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customers WHERE Segment = 'KAM'\n\t----- bird -----\tdebit_card_specializing",
    "1493": "\nSELECT SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) * 100 / COUNT(*) FROM yearmonth WHERE Date LIKE '%2012-02%' \n\n\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT CAST(SUM(CASE WHEN T2.Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.GasStationID) FROM gasstations AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Country = 'Slovakia'\n\t----- bird -----\tdebit_card_specializing",
    "1495": "\nSELECT CustomerID, SUM(Consumption) as TotalConsumption \nFROM yearmonth \nWHERE Date LIKE '%09-2013%' \nGROUP BY CustomerID \nORDER BY TotalConsumption DESC \nLIMIT 1 \n\n\t----- bird -----\tdebit_card_specializing",
    "1496": "\nSELECT t1.CustomerID, t2.Consumption \nFROM yearmonth t1 \nJOIN customers t2 ON t1.CustomerID = t2.CustomerID \nWHERE STRFTIME('%Y-%m', t1.Date) = '2013-09' \nORDER BY t2.Consumption ASC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1497": "\nSELECT T1.CustomerID, SUM(T2.Consumption) AS Consumption \nFROM customers AS T1 \nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Date LIKE '%2012-06%' \nGROUP BY T1.CustomerID \nORDER BY Consumption ASC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1498": "\nSELECT MAX(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T1.Date) = '2012'\n\n\t----- bird -----\tdebit_card_specializing",
    "1499": "\nSELECT MAX(T1.Consumption) \nFROM yearmonth AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Currency = 'Euro' \nGROUP BY T1.CustomerID; \n\n\t----- bird -----\tdebit_card_specializing",
    "1500": "\nSELECT T1.Description FROM products AS T1 INNER JOIN yearmonth AS T2 ON T1.ProductID = T2.CustomerID WHERE T2.Date LIKE '%2013-09%' AND T2.Consumption > 0\n\n\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE STRFTIME('%Y-%m', T1.Date) = '2013-06'\n\t----- bird -----\tdebit_card_specializing",
    "1502": "\nSELECT DISTINCT T1.ChainID \nFROM gasstations AS T1 \nJOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.Amount = 100 AND T2.Price = 1.00 AND T2.Currency = 'EUR' \n\n\t----- bird -----\tdebit_card_specializing",
    "1503": "\nSELECT T1.Description \nFROM products AS T1 \nJOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID \nWHERE T2.Amount > 0 AND T2.Price < 1.00 \n\n\t----- bird -----\tdebit_card_specializing",
    "1504": "\nSELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y-%m', T1.Date) = '2012-01' AND T2.Date = 'January 2012'\n\n\t----- bird -----\tdebit_card_specializing",
    "1505": "\nSELECT COUNT(DISTINCT c.CustomerID) \nFROM customers c \nJOIN yearmonth y ON c.CustomerID = y.CustomerID \nWHERE y.Consumption > 1000 AND c.Currency = 'euro' \n\n\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T3.Country = 'Czech Republic'\n\t----- bird -----\tdebit_card_specializing",
    "1507": "\nSELECT DISTINCT Time \nFROM transactions_1k \nWHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11)\n\n\t----- bird -----\tdebit_card_specializing",
    "1508": "\nSELECT COUNT(T1.GasStationID) \nFROM transactions_1k AS T1 \nJOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.Country = 'Czech Republic' AND T1.Price > 1000\n\n\t----- bird -----\tdebit_card_specializing",
    "1509": "\nSELECT COUNT(T2.TransactionID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'Czech Republic' AND STRFTIME('%Y-%m-%d', T2.Date) > '2012-01-01'\n\n\t----- bird -----\tdebit_card_specializing",
    "1510": "\nSELECT AVG(T1.Price * T2.Amount) \nFROM transactions_1k AS T1 \nJOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.Country = 'Czech Republic' \nGROUP BY T2.GasStationID\n\t----- bird -----\tdebit_card_specializing",
    "1511": "\nSELECT AVG(T2.Price * 1.18) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Amount = 'euro' GROUP BY T1.CustomerID\n\n\t----- bird -----\tdebit_card_specializing",
    "1512": "\nSELECT T1.CustomerID, T2.Amount \nFROM customers AS T1 \nJOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE STRFTIME('%Y-%m-%d', T2.Date) = '2012-08-25' \nORDER BY T2.Amount DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1513": "\nSELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date LIKE '2012-08-25%' AND T1.Amount > 0 ORDER BY T1.TransactionID LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT Currency FROM transactions_1k WHERE Date = '2012-08-24' AND Time = '16:25:00'\n\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012/08/23' AND T2.Time = '21:20:00'\n\t----- bird -----\tdebit_card_specializing",
    "1516": "\nSELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-26' AND T1.Time LIKE '%morning%' AND T1.Currency = 'EUR'\n\n\t----- bird -----\tdebit_card_specializing",
    "1517": "\nSELECT T1.Segment \nFROM customers AS T1 \nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID \nORDER BY T2.Date ASC \nLIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\n\t----- bird -----\tdebit_card_specializing",
    "1519": "\nSELECT ProductID FROM transactions_1k WHERE Date = '2012/8/23' AND Time = '21:20:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1520": "\nSELECT SUM(T1.Amount), T2.Date, T1.Consumption \nFROM yearmonth AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.Date LIKE '2012-01%' AND T1.Consumption = ( SELECT SUM(T3.Amount) FROM transactions_1k AS T3 JOIN customers AS T4 ON T3.CustomerID = T4.CustomerID WHERE T4.CustomerID = T2.CustomerID AND T3.Date LIKE '2012-08-24' ) \n\n\t----- bird -----\tdebit_card_specializing",
    "1521": "\nSELECT COUNT(T1.GasStationID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE STRFTIME('%Y-%m-%d', T1.Date) = '2012-08-26' AND STRFTIME('%H:%M', T1.Time) BETWEEN '08:00' AND '09:00' AND T2.Country = 'CZE'\n\n\t----- bird -----\tdebit_card_specializing",
    "1522": "\nSELECT Currency FROM customers WHERE CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date = '2013-06-01' AND Consumption = 214582.17 ) \n\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467\n\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date LIKE '2012-08-24' AND T2.Amount = 548.4\n\t----- bird -----\tdebit_card_specializing",
    "1525": "\nSELECT SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) / COUNT(DISTINCT CustomerID) * 100 FROM yearmonth WHERE Date LIKE '%2012-08-25%' \n\n\t----- bird -----\tdebit_card_specializing",
    "1526": "\nSELECT \n    ym1.Consumption - ym2.Consumption AS consumption_decrease_rate,\n    (ym1.Consumption - ym2.Consumption) / ym1.Consumption * 100 AS consumption_decrease_rate_percentage\nFROM yearmonth ym1\nJOIN yearmonth ym2 ON ym1.CustomerID = ym2.CustomerID AND ym1.Date LIKE '2012-08%' AND ym2.Date LIKE '2013-08%'\nWHERE ym1.Consumption > 0 AND ym2.Consumption > 0\n\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT T1.GasStationID, SUM(T2.Amount) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID GROUP BY T1.GasStationID ORDER BY SUM(T2.Amount) DESC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT CAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT Segment) FROM customers WHERE Segment = 'SVK'\n\t----- bird -----\tdebit_card_specializing",
    "1529": "\nSELECT SUM(T1.Amount) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = 38508 AND T1.Date BETWEEN '2012-01-01' AND '2012-12-31'\nUNION ALL\nSELECT SUM(T1.Amount) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '%/%/2012' AND T1.CustomerID = 38508\n\n\t----- bird -----\tdebit_card_specializing",
    "1530": "\nSELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.Description ORDER BY SUM(T2.Amount) DESC LIMIT 5\n\n\t----- bird -----\tdebit_card_specializing",
    "1531": "\nSELECT c.CustomerID, c.Currency, AVG(t.Amount / t.Price) AS average_price, \n       ( SELECT CustomerID FROM customers WHERE Currency = ( SELECT Currency FROM transactions_1k GROUP BY CustomerID ORDER BY SUM(Amount) DESC LIMIT 1 ) ) AS top_spending_customer\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nJOIN transactions_1k t ON y.CustomerID = t.CustomerID AND y.Date = t.Date\nGROUP BY c.CustomerID, c.Currency\n\n\t----- bird -----\tdebit_card_specializing",
    "1532": "\nSELECT T1.Country, T2.Amount \nFROM gasstations AS T1 \nJOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.ProductID = 2 AND T2.Amount = 1 \nGROUP BY T1.Country \nORDER BY SUM(T2.Amount) DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1533": "\nSELECT T1.Consumption \nFROM yearmonth AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.Date LIKE '2012-08%' AND T1.Consumption * ( SELECT Price FROM transactions_1k WHERE ProductID = 5 AND Amount > 29.00 ) > 0\n\n\t----- bird -----\tdebit_card_specializing"
}