{
    "0": "\nSELECT MAX(Percent(% Eligible Free (K-12))) AS HighestEligibleFreeRate\nFROM frpm\nWHERE County = 'Alameda';\n\n\n\t----- bird -----\tcalifornia_schools",
    "1": "\nSELECT DISTINCT T1.Percent (%) Eligible Free (Ages 5-17) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.School Type = 'Continuation School' AND T1.Percent (%) Eligible Free (Ages 5-17) < 100 \nORDER BY T1.Percent (%) Eligible Free (Ages 5-17) ASC \nLIMIT 3;\n\n\n\t----- bird -----\tcalifornia_schools",
    "2": "\nSELECT T1.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Fresno County Office of Education' AND T2.Charter = 1 \n\n\t----- bird -----\tcalifornia_schools",
    "3": "\nSELECT T3.MailStreet, T3.MailStrAbr, T3.MailCity, T3.MailZip, T3.MailState FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.cds WHERE T1.Educational Option Type = 'K-12' ORDER BY T1.FRPM Count (K-12) DESC LIMIT 1 \n\n\t----- bird -----\tcalifornia_schools",
    "4": "\nSELECT T2.Phone FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CharterSchool = 'Y' AND T1.OpenDate > '2000-01-01';\n\n\n\t----- bird -----\tcalifornia_schools",
    "5": "\nSELECT COUNT(*) FROM schools AS s \nJOIN satscores AS sc ON s.CDSCode = sc.cds \nWHERE sc.AvgScrMath < 400 AND s.Virtual = 'Y' \nAND NOT EXISTS (\n    SELECT 1 \n    FROM frpm AS f \n    WHERE f.CDSCode = s.CDSCode\n);\n\n\n\t----- bird -----\tcalifornia_schools",
    "6": "\nSELECT DISTINCT T1.school FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.cdscode = T2.cds WHERE T2.numtsttakr > 500 AND (T1.magnet = 'Y' OR EXISTS (SELECT 1 FROM frpm AS T3 WHERE T3.school_code = T1.cdscode AND T3.district_type = 'Magnet'));\n\n\n\t----- bird -----\tcalifornia_schools",
    "7": "\nSELECT T2.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 > 1500 ORDER BY T2.NumTstTakr DESC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "8": "\nSELECT COUNT(T2.NumTstTakr) AS TotalSATTestTakers\nFROM frpm AS T1\nJOIN satscores AS T2 ON T1.CDSCode = T2.cds\nWHERE T1.Educational Option Type = 'K-12'\nGROUP BY T1.CDSCode\nORDER BY TotalSATTestTakers DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "9": "\nSELECT COUNT(T1.CDSCode) \nFROM schools AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.AvgScrMath > 560 AND T1.Charter = 1 \nAND T1.StatusType IN ('Active', 'Pending');\n\n\n\t----- bird -----\tcalifornia_schools",
    "10": "\nSELECT T2.FRPM_Count_Ages_5_17 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.School = ( SELECT School FROM schools ORDER BY AVGScrRead DESC LIMIT 1 ) \n\n\t----- bird -----\tcalifornia_schools",
    "11": "\nSELECT DISTINCT T1.CDSCode FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Enrollment (K-12) > 500 \n\n\t----- bird -----\tcalifornia_schools",
    "12": "\nSELECT MAX(T2.Percent) AS HighestEligibleFreeRate\nFROM frpm AS T1\nJOIN satscores AS T2 ON T1.CDSCode = T2.cds\nWHERE T1.Educational Option Type = 'SAT Excellence'\nAND T2.AvgScrRead > 0.3 AND T2.AvgScrMath > 0.3 AND T2.AvgScrWrite > 0.3;\n\n\n\t----- bird -----\tcalifornia_schools",
    "13": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrRead DESC LIMIT 3; \n\n\t----- bird -----\tcalifornia_schools",
    "14": "\nSELECT T1.NCESSchool FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.Enrollment_Ages_5_17 DESC LIMIT 5; \n\n\t----- bird -----\tcalifornia_schools",
    "15": "\nSELECT T2.District FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.StatusType = 'Active' GROUP BY T2.District ORDER BY AVG(T1.AvgScrRead) DESC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "16": "\nSELECT COUNT(*) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Merged Alameda' AND T2.NumTstTakr < 100;\n\n\n\t----- bird -----\tcalifornia_schools",
    "17": "\nSELECT CharterNum FROM schools WHERE CDSCode IN (SELECT cds FROM satscores WHERE AvgScrWrite = 499) \n\n\t----- bird -----\tcalifornia_schools",
    "18": "\nSELECT COUNT(*) \nFROM schools \nWHERE Charter = 1 AND NumTstTakr <= 250;\n\n\n\t----- bird -----\tcalifornia_schools",
    "19": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores );\n\n\n\t----- bird -----\tcalifornia_schools",
    "20": "\nSELECT COUNT(*) FROM frpm WHERE County = 'Amador' AND Low Grade = 9 AND High Grade = 12 \n\n\t----- bird -----\tcalifornia_schools",
    "21": "\nSELECT COUNT(*) \nFROM frpm \nWHERE County = 'Los Angeles' AND FreeMealCountK12 BETWEEN 500 AND 700;\n\n\n\t----- bird -----\tcalifornia_schools",
    "22": "\nSELECT T1.school FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.NumTstTakr DESC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "23": "\nSELECT T1.school, T2.street FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T1.enrollment_k-12 - T1.enrollment_5-17) > 30 GROUP BY T1.school HAVING COUNT(*) > 1 \n\n\t----- bird -----\tcalifornia_schools",
    "24": "\nSELECT T2.school FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Percent (%) Eligible Free (K-12) > 0.1 AND EXISTS (SELECT 1 FROM satscores AS T3 WHERE T3.cds = T1.CDSCode AND T3.NumTstTakr >= 1500);\n\n\n\t----- bird -----\tcalifornia_schools",
    "25": "\nSELECT T1.school, T2.fundingtype FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.cdscode = T2.cds WHERE T1.county = 'Riverside' AND AVG(T2.avgscrmath) > 400 GROUP BY T1.school;\n\n\n\t----- bird -----\tcalifornia_schools",
    "26": "\nSELECT T2.school, T1.street, T1.streetabr, T1.city, T1.zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.school LIKE 'Monterey' AND T1.Free Meal Count (Ages 5-17) > 800 GROUP BY T2.school ORDER BY COUNT(T1.CDSCode) DESC LIMIT 1\n\n\n\t----- bird -----\tcalifornia_schools",
    "27": "\nSELECT s.school, AVG(satscores.AvgScrWrite) AS AvgScrWrite, s.CharterNum FROM schools s JOIN satscores ON s.CDSCode = satscores.cds WHERE s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01' GROUP BY s.school, s.CharterNum \n\n\t----- bird -----\tcalifornia_schools",
    "28": "\nSELECT T1.school, T2.doctype FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.cdscode = T2.cdscode WHERE T1.educational_option_type = 'Local' AND T1.enrollment_k-12 - T1.enrollment_ages_5-17 > (SELECT AVG(enrollment_k-12 - enrollment_ages_5-17) FROM frpm WHERE educational_option_type = 'Local') \n\n\t----- bird -----\tcalifornia_schools",
    "29": "\nSELECT T1.OpenDate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.Enrollment DESC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "30": "\nSELECT DISTINCT T1.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Grade BETWEEN '1' AND '12' ORDER BY T1.Enrollment ASC LIMIT 5; \n\n\t----- bird -----\tcalifornia_schools",
    "31": "\nSELECT T1.Enrollment, T2.Percent (%) Eligible Free (K-12) \nFROM frpm AS T1 \nJOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T1.District IN (\n    SELECT District \n    FROM schools \n    WHERE School IN (\n        SELECT School \n        FROM frpm \n        ORDER BY Enrollment DESC \n        LIMIT 10, 1\n    )\n) \nAND T1.Enrollment >= 5000 \nORDER BY T2.Percent (%) Eligible Free (K-12) DESC \nLIMIT 2;\n\n\n\t----- bird -----\tcalifornia_schools",
    "32": "\nSELECT T1.FreeMealCount, T2.SchoolName\nFROM frpm AS T1\nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T2.CharterNum = '66'\nORDER BY T1.FreeMealCount DESC\nLIMIT 5;\n\n\n\t----- bird -----\tcalifornia_schools",
    "33": "\nSELECT T1.Website, T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.FreeMealCount_Ages_5_17 BETWEEN 1900 AND 2000; \n\n\t----- bird -----\tcalifornia_schools",
    "34": "\nSELECT AVG(FreeMealCount(Ages 5-17)) AS FreeRate FROM frpm WHERE School = 'Kacey Gibson';\n\n\n\t----- bird -----\tcalifornia_schools",
    "35": "\nSELECT T3.admemail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.cdscode = T2.cdscode INNER JOIN satscores AS T3 ON T1.cdscode = T3.cds WHERE T2.charter = 1 ORDER BY T1.enrollment DESC LIMIT 1 \n\n\t----- bird -----\tcalifornia_schools",
    "36": "\nSELECT T1.School, T2.AdmFName1, T2.AdmLName1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr >= 1500 ORDER BY T2.NumTstTakr DESC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "37": "\nSELECT T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.Educational_Option_Type ASC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "38": "\nSELECT DISTINCT T1.Website FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr BETWEEN 2000 AND 3000;\n\n\n\t----- bird -----\tcalifornia_schools",
    "39": "\nSELECT AVG(NumTstTakr) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE County = 'Fresno' AND OpenDate BETWEEN '1980-01-01' AND '1980-12-31') \n\n\t----- bird -----\tcalifornia_schools",
    "40": "\nSELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno Unified' AND T2.AvgScrRead IS NOT NULL ORDER BY T2.AvgScrRead ASC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "41": "\nSELECT T1.School, AVG(T2.AvgScrRead) AS AvgReadingScore\nFROM schools AS T1\nJOIN satscores AS T2 ON T1.CDSCode = T2.cds\nWHERE T1.Virtual = 1\nGROUP BY T1.School\nORDER BY AvgReadingScore DESC\nLIMIT 5;\n\n\n\t----- bird -----\tcalifornia_schools",
    "42": "\nSELECT DISTINCT T1.Educational Option Type FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores );\n\n\n\t----- bird -----\tcalifornia_schools",
    "43": "\nSELECT AVG(AvgScrMath) AS AverageMathScore, County FROM schools ORDER BY AvgScrMath ASC LIMIT 1 \n\n\t----- bird -----\tcalifornia_schools",
    "44": "\nSELECT T2.City, AVG(T1.AvgScrWrite) AS AverageWritingScore\nFROM satscores AS T1\nJOIN schools AS T2 ON T1.cds = T2.CDSCode\nWHERE T1.NumTstTakr >= 1500\nGROUP BY T2.City\nORDER BY AverageWritingScore DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "45": "\nSELECT s.school, AVG(satscores.AvgScrWrite) as AverageWritingScore\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.CharterSchool = 'Y' AND f.EducationalOptionType = 'Ricci Ulrich'\nGROUP BY s.school;\n\n\n\t----- bird -----\tcalifornia_schools",
    "46": "\nSELECT T1.State FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SchoolType LIKE 'Special' AND T1.Enrollment BETWEEN 0 AND 10000 ORDER BY T1.Enrollment DESC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "47": "\nSELECT AVG(CASE WHEN T1.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' THEN 1 ELSE NULL END) AS MonthlyAverageSchools\nFROM frpm AS T1\nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T2.County = 'Alameda'\nAND T2.DistrictType = 'Elementary School District';\n\n\n\t----- bird -----\tcalifornia_schools",
    "48": "\nSELECT SUM(CASE WHEN T1.District = 'Orange County' THEN 1 ELSE 0 END) AS OrangeCountyUnifiedSchools,\n       SUM(CASE WHEN T2.District = 'Orange County' THEN 1 ELSE 0 END) AS OrangeCountyElementarySchools,\n       CAST(SUM(CASE WHEN T1.District = 'Orange County' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.District = 'Orange County' THEN 1 ELSE 0 END) * 100 AS Ratio\nFROM frpm AS T1\nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T1.County = 'Orange County';\n\n\n\t----- bird -----\tcalifornia_schools",
    "49": "\nSELECT T1.County, T2.School, T2.ClosedDate\nFROM frpm AS T1\nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T2.ClosedDate IS NOT NULL\nGROUP BY T1.County\nORDER BY COUNT(T2.CDSCode) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "50": "\nSELECT T2.Street, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 6 \n\n\t----- bird -----\tcalifornia_schools",
    "51": "\nSELECT T2.MailingStreet, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY AVGScrRead ASC LIMIT 1 \n\n\t----- bird -----\tcalifornia_schools",
    "52": "\nSELECT COUNT(*) FROM schools AS s JOIN satscores AS sc ON s.CDSCode = sc.cds WHERE s.MailingCity = 'Lakeport' AND sc.NumGE1500 >= 1500 \n\n\t----- bird -----\tcalifornia_schools",
    "53": "\nSELECT COUNT(T1.NumTstTakr) AS TotalTestTakers\nFROM schools AS T1\nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T1.MailCity = 'Fresno';\n\n\n\t----- bird -----\tcalifornia_schools",
    "54": "\nSELECT DISTINCT T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.CharterSchool = 'Y' AND T2.AdmFName1 LIKE 'Avetik Atoian' OR T2.AdmLName1 LIKE 'Avetik Atoian';\n\n\n\t----- bird -----\tcalifornia_schools",
    "55": "\nSELECT COUNT(CASE WHEN T1.County = 'Colusa' THEN 1 END) / COUNT(CASE WHEN T2.County = 'Humboldt' THEN 1 END) AS Ratio FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.MailState = 'CA';\n\n\n\t----- bird -----\tcalifornia_schools",
    "56": "\nSELECT COUNT(*) \nFROM schools \nWHERE MailState = 'CA' AND StatusType = 'Active' AND County = 'San Joaquin';\n\n\n\t----- bird -----\tcalifornia_schools",
    "57": "\nSELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrWrite DESC LIMIT 333 \n\n\t----- bird -----\tcalifornia_schools",
    "58": "\nSELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Zip = '95203-3704' \n\n\t----- bird -----\tcalifornia_schools",
    "59": "\nSELECT T1.Website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Mike' AND T2.AdmLName1 = 'Larson' OR T2.AdmFName1 = 'Dante' AND T2.AdmLName1 = 'Alvarez';\n\n\n\t----- bird -----\tcalifornia_schools",
    "60": "\nSELECT DISTINCT T1.Website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Virtual = 'Y' AND T2.CharterSchool = 'Y' AND T1.County = 'San Joaquin';\n\n\n\t----- bird -----\tcalifornia_schools",
    "61": "\nSELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.City = 'Hickman' AND T1.CharterSchool = 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "62": "\nSELECT COUNT(*) AS NonCharteredSchoolCount\nFROM frpm\nWHERE County = 'Los Angeles'\n  AND Percent(%) Eligible Free (K-12) < 0.18%\n  AND Charter School (Y/N) = 0;\n\n\n\t----- bird -----\tcalifornia_schools",
    "63": "\nSELECT DISTINCT T1.school, T2.city FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CharterSchoolNumber = '00D2' \n\n\t----- bird -----\tcalifornia_schools",
    "64": "\nSELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\n\n\n\t----- bird -----\tcalifornia_schools",
    "65": "\nSELECT CAST(SUM(CASE WHEN CharterFundingType = 'Local' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM frpm WHERE CountyName = 'Santa Clara';\n\n\n\t----- bird -----\tcalifornia_schools",
    "66": "\nSELECT COUNT(T1.CDSCode) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.County = 'Stanislaus' AND T1.OpenDate BETWEEN '2000-01-01' AND '2005-12-31';\n\n\n\t----- bird -----\tcalifornia_schools",
    "67": "\nSELECT SUM(CASE WHEN ClosedDate = '1989-01-01' THEN 1 ELSE 0 END) AS TotalClosure FROM schools WHERE City = 'San Francisco';\n\n\n\t----- bird -----\tcalifornia_schools",
    "68": "\nSELECT T1.County FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.StatusType = 'Y' AND T2.EducationalOptionType = 'Youth Authority Facilities (CEA)' AND T1.ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY T1.County ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "69": "\nSELECT DISTINCT T1.NCESDist FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SchoolOwnershipCode IN ('State Special Schools');\n\n\n\t----- bird -----\tcalifornia_schools",
    "70": "\nSELECT COUNT(CASE WHEN StatusType = 'Active' THEN CDSCode END) AS ActiveDistricts, \n       COUNT(CASE WHEN ClosedDate IS NOT NULL THEN CDSCode END) AS ClosedDistricts\nFROM schools\nWHERE County = 'Alpine';\n\n\n\t----- bird -----\tcalifornia_schools",
    "71": "\nSELECT DISTINCT T2.DistrictCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.City = 'Fresno' AND T1.Magnet = 0;\n\n\n\t----- bird -----\tcalifornia_schools",
    "72": "\nSELECT COUNT(T1.Enrollment) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.School = 'State Special School' AND T1.District = 'Fremont' AND T1.Academic Year = '2014-2015';\n\n\n\t----- bird -----\tcalifornia_schools",
    "73": "\nSELECT T2.FreeMealCount FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.MailingStreet = 'PO Box 1040' AND T2.SchoolType = 'Youth Authority School';\n\n\n\t----- bird -----\tcalifornia_schools",
    "74": "\nSELECT MIN(T1.LowGrade) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.NCESDist = '613360' AND T2.SchoolType = 'District Special Education Consortia School';\n\n\n\t----- bird -----\tcalifornia_schools",
    "75": "\nSELECT T2.Educational Option Type FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County Code = '37' AND T1.Breakfast Provision Status = '2';\n\n\n\t----- bird -----\tcalifornia_schools",
    "76": "\nSELECT T1.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.LunchProvisionStatus = '2' AND T1.LowGrade = 9 AND T1.HighGrade = 12 AND T2.County = 'Merced';\n\n\n\t----- bird -----\tcalifornia_schools",
    "77": "\nSELECT T2.School, T1.Percent (%) Eligible FRPM (Ages 5-17) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.County = 'Los Angeles' AND T1.Educational Option Type LIKE '%Kindergarten to 9th grade%' \nAND T1.Percent (%) Eligible FRPM (Ages 5-17) IS NOT NULL;\n\n\n\t----- bird -----\tcalifornia_schools",
    "78": "\nSELECT T1.GradeSpan FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.City = 'Adelanto' GROUP BY T1.GradeSpan ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tcalifornia_schools",
    "79": "\nSELECT T1.County, COUNT(T2.CDSCode) AS NumSchools\nFROM frpm AS T1\nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T1.County IN ('San Diego', 'Santa Barbara')\nAND T2.Virtual = 0\nGROUP BY T1.County\nORDER BY NumSchools DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "80": "\nSELECT T1.SchoolType, T2.Latitude\nFROM frpm AS T1\nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nORDER BY T2.Latitude DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "81": "\nSELECT T1.City, T2.SchoolName, MIN(T1.Latitude) AS LowestLatitude, MIN(T2.LowGrade) AS LowestGrade\nFROM frpm AS T1\nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T2.State = 'CA'\nGROUP BY T2.City;\n\n\n\t----- bird -----\tcalifornia_schools",
    "82": "\nSELECT MAX(Longitude) AS HighestLongitude, MIN(Longitude) AS LowestLongitude FROM schools;\n\n\n\t----- bird -----\tcalifornia_schools",
    "83": "\nSELECT COUNT(DISTINCT T1.City) AS CityCount, COUNT(T2.CDSCode) AS SchoolCount\nFROM schools AS T1\nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T1.Magnet = 1 AND T2.Educational Option Type IN ('Multiple Provision Types', 'Other')\nGROUP BY T1.City;\n\n\n\t----- bird -----\tcalifornia_schools",
    "84": "\nSELECT T1.District, T2.AdmFName1 AS First_Name FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY COUNT(T2.AdmFName1) DESC LIMIT 2; \n\n\t----- bird -----\tcalifornia_schools",
    "85": "\nSELECT DISTINCT T2.DistrictCode, T1.Percent (%) Eligible Free (K-12) \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.AdmFName1 = 'Alusine' \nAND T2.StatusType = 'Active';\n\n\n\t----- bird -----\tcalifornia_schools",
    "86": "\nSELECT T1.AdmLName2, T2.District, T2.County, T3.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN districts AS T3 ON T2.District Code = T3.District Code WHERE T1.CharterNum = '40';\n\n\n\t----- bird -----\tcalifornia_schools",
    "87": "\nSELECT DISTINCT T1.AdmEmail1 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'San Bernardino' AND T1.District = 'San Bernardino City Unified' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND T2.School Type IN ('Public Intermediate/Middle Schools', 'Unified Scools');\n\n\n\t----- bird -----\tcalifornia_schools",
    "88": "\nSELECT T1.school, T2.admemail1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.cdscode = T2.cds WHERE T2.numge1500 >= 1500 ORDER BY T2.numtsttakr DESC LIMIT 1\n\n\n\t----- bird -----\tcalifornia_schools",
    "89": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN trans AS T2 ON T1.account_id = T2.account_id \nWHERE T2.type = 'issuance' AND T1.district_id IN (SELECT district_id FROM district WHERE A2 = 'East Bohemia');\n\n\n\t----- bird -----\tfinancial",
    "90": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN district AS T2 ON T1.district_id = T2.district_id \nWHERE T2.A2 = 'Prague';\n\n\n\t----- bird -----\tfinancial",
    "91": "\nSELECT AVG(CASE WHEN YEAR(date) = 1995 THEN unemployment_ratio ELSE NULL END) AS avg_unemployment_1995,\n       AVG(CASE WHEN YEAR(date) = 1996 THEN unemployment_ratio ELSE NULL END) AS avg_unemployment_1996\nFROM district\nWHERE year(date) IN (1995, 1996)\nGROUP BY district_id;\n\n\n\t----- bird -----\tfinancial",
    "92": "\nSELECT COUNT(DISTINCT T1.district_id) \nFROM district AS T1 \nJOIN client AS T2 ON T1.district_id = T2.district_id \nWHERE T2.gender = 'Female' AND T2.salary BETWEEN 6000 AND 10000;\n\n\n\t----- bird -----\tfinancial",
    "93": "\nSELECT COUNT(client_id) FROM client WHERE gender = 'M' AND district_id IN (SELECT district_id FROM district WHERE A2 LIKE 'North Bohemia') AND AVG(salary) > 8000 \n\n\t----- bird -----\tfinancial",
    "94": "\nSELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC LIMIT 1;\nWITH avg_salaries AS (\n    SELECT AVG(salary) as avg_salary FROM client\n),\nmin_avg AS (\n    SELECT MIN(avg_salary) as min_avg FROM avg_salaries\n),\nmax_avg AS (\n    SELECT MAX(avg_salary) as max_avg FROM avg_salaries\n)\nSELECT max_avg.max_avg - min_avg.min_avg AS gap FROM max_avg, min_avg;\n\n\n\t----- bird -----\tfinancial",
    "95": "\nSELECT T1.account_id FROM client AS T1 JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T1.birth_date = ( SELECT MIN(birth_date) FROM client ) GROUP BY T1.client_id ORDER BY AVG(T2.salary) DESC LIMIT 1 \n\n\t----- bird -----\tfinancial",
    "96": "\nSELECT COUNT(DISTINCT T1.client_id) \nFROM account AS T1 \nJOIN disp AS T2 ON T1.account_id = T2.account_id \nWHERE T2.type = 'Owner' AND T1.frequency = 'Weekly';\n\n\n\t----- bird -----\tfinancial",
    "97": "\nSELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'Disponent' AND EXISTS (SELECT 1 FROM trans AS T3 WHERE T3.account_id = T2.account_id AND T3.type = 'Statement of Issuance');\n\n\n\t----- bird -----\tfinancial",
    "98": "\nSELECT T1.account_id, T2.amount \nFROM account AS T1 \nJOIN loan AS T2 ON T1.account_id = T2.account_id \nWHERE T2.date LIKE '1997%' \nORDER BY T2.amount ASC \nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "99": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 12 AND T1.date BETWEEN '1993-01-01' AND '1994-01-01' ORDER BY T2.amount DESC LIMIT 1\n\n\n\t----- bird -----\tfinancial",
    "100": "\nSELECT COUNT(DISTINCT T1.client_id) \nFROM account AS T1 \nJOIN client AS T2 ON T1.district_id = T2.district_id \nWHERE T2.gender = 'F' AND T2.birth_date < '1950-01-01' AND T1.district_id = 1;\n\n\n\t----- bird -----\tfinancial",
    "101": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1995-01-01' AND '1995-12-31' ORDER BY T2.date ASC LIMIT 1\n\n\n\t----- bird -----\tfinancial",
    "102": "\nSELECT DISTINCT a.account_id \nFROM account a \nJOIN loan l ON a.account_id = l.account_id \nWHERE a.date < '1997-01-01' AND l.amount > 3000;\n\n\n\t----- bird -----\tfinancial",
    "103": "\nSELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.issued LIKE '1994/03/03' \n\n\t----- bird -----\tfinancial",
    "104": "\nSELECT T1.date FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount = 840 AND T1.date = '1998-10-14';\n\n\n\t----- bird -----\tfinancial",
    "105": "\nSELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25' \n\n\t----- bird -----\tfinancial",
    "106": "\nSELECT MAX(amount) AS biggest_amount \nFROM trans \nWHERE account_id IN (\n    SELECT account_id \n    FROM card \n    WHERE issued = '1996-10-21'\n);\n\n\n\t----- bird -----\tfinancial",
    "107": "\nSELECT T1.gender FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T2.district_id IN (SELECT district_id FROM district ORDER BY AVG(salary) DESC LIMIT 1) ORDER BY T1.birth_date ASC LIMIT 1 \n\n\t----- bird -----\tfinancial",
    "108": "\nSELECT T1.amount FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = (SELECT client_id FROM loan ORDER BY amount DESC LIMIT 1) ORDER BY T1.date ASC LIMIT 1; \n\n\t----- bird -----\tfinancial",
    "109": "\nSELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM disp WHERE type = 'Jesenik') AND gender = 'Female' \n\n\t----- bird -----\tfinancial",
    "110": "\nSELECT T1.disp_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.gender = 'M' AND T2.birth_date LIKE '1998-09-02' AND T1.amount = 5100;\n\n\n\t----- bird -----\tfinancial",
    "111": "\nSELECT COUNT(account_id) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Litomerice' AND YEAR(date) = 1996 ) \n\n\t----- bird -----\tfinancial",
    "112": "\nSELECT T1.district_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'female' AND T1.birth_date = '1976-01-29'\n\n\n\t----- bird -----\tfinancial",
    "113": "\nSELECT T1.birth_date FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03' \n\n\t----- bird -----\tfinancial",
    "114": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.district_id IN (SELECT district_id FROM district WHERE A2 = 'Prague') ORDER BY T2.birth_date ASC LIMIT 1; \n\n\t----- bird -----\tfinancial",
    "115": "\nSELECT \n    (SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) * 100 / COUNT(T1.client_id)) AS male_percentage\nFROM \n    client AS T1\nJOIN \n    district AS T2 ON T1.district_id = T2.district_id\nWHERE \n    T2.A2 LIKE '%South Bohemia%'\nGROUP BY \n    T2.district_id\nORDER BY \n    COUNT(T1.client_id) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "116": "\nSELECT (t1.balance - t2.balance) / (t2.balance * 365) AS increase_rate\nFROM trans t1\nJOIN trans t2 ON t1.account_id = t2.account_id AND t2.date BETWEEN '1993-07-05' AND '1998-12-27'\nWHERE t1.date = (SELECT MIN(date) FROM trans WHERE account_id IN (SELECT client_id FROM loan WHERE date = '1993-03-22'));\n\n\n\t----- bird -----\tfinancial",
    "117": "\nSELECT CAST(SUM(CASE WHEN status = 'Fully Paid' THEN amount ELSE 0 END) AS REAL) * 100 / SUM(amount) FROM loan WHERE status = 'Fully Paid';\n\n\n\t----- bird -----\tfinancial",
    "118": "\nSELECT COUNT(DISTINCT T1.account_id) * 100 / COUNT(T2.account_id) AS percentage FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount < 100000 AND T1.status = 'running' \n\n\t----- bird -----\tfinancial",
    "119": "\nSELECT a.account_id, d.district_name, d.region FROM account a \nJOIN district d ON a.district_id = d.district_id \nWHERE a.date LIKE '1993%' AND EXISTS (\n    SELECT 1 FROM trans t WHERE t.account_id = a.account_id AND t.type = 'statement' AND t.date > a.date\n) \n\n\t----- bird -----\tfinancial",
    "120": "\nSELECT T1.account_id, T2.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 LIKE 'east Bohemia' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31'\n\n\n\t----- bird -----\tfinancial",
    "121": "\nSELECT account_id, date FROM account WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'Prachatice')\n\n\n\t----- bird -----\tfinancial",
    "122": "\nSELECT T1.A2, T1.A3 FROM district AS T1 INNER JOIN loan AS T2 ON T1.district_id = T2.account_id WHERE T2.loan_id = 4990 \n\n\t----- bird -----\tfinancial",
    "123": "\nSELECT T1.account_id, T2.district_id, T3.region FROM loan AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN region AS T3 ON T2.region_id = T3.region_id WHERE T1.amount > 300000\n\n\n\t----- bird -----\tfinancial",
    "124": "\nSELECT loan_id, district_id, AVG(salary) AS average_salary \nFROM account \nJOIN loan ON account.account_id = loan.account_id \nWHERE duration = 60 \nGROUP BY loan_id, district_id;\n\n\n\t----- bird -----\tfinancial",
    "125": "\nSELECT T1.district_id, T2.A5 AS state, \n       (T3.A16 - T3.A15) * 100 / T3.A15 AS unemployment_rate_increase\nFROM loan AS T1\nJOIN district AS T2 ON T1.district_id = T2.district_id\nJOIN account AS T3 ON T1.account_id = T3.account_id\nWHERE T1.status = 'running'\nAND T3.gender = 'debt';\n\n\n\t----- bird -----\tfinancial",
    "126": "\nSELECT CAST(SUM(CASE WHEN T1.district_id = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin' AND T1.date LIKE '1993%'\n\n\n\t----- bird -----\tfinancial",
    "127": "\nSELECT account_id FROM card WHERE issued BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();\n\n\n\t----- bird -----\tfinancial",
    "128": "\nSELECT T1.district_id, COUNT(T2.client_id) AS female_account_holders\nFROM district AS T1\nJOIN client AS T2 ON T1.district_id = T2.district_id\nWHERE T2.gender = 'F'\nGROUP BY T1.district_id\nORDER BY female_account_holders DESC\nLIMIT 10;\n\n\n\t----- bird -----\tfinancial",
    "129": "\nSELECT T1.district_name, SUM(T2.amount) AS total_withdrawals\nFROM trans AS T1\nJOIN card AS T2 ON T1.account_id = T2.card_id\nWHERE T1.type = 'withdrawal' AND T2.type != 'credit_card'\nAND T1.date BETWEEN '1996-01-01' AND '1996-01-31'\nGROUP BY T1.district_name\nORDER BY total_withdrawals DESC\nLIMIT 10;\n\n\n\t----- bird -----\tfinancial",
    "130": "\nSELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'South Bohemia') AND card_id IS NULL \n\n\t----- bird -----\tfinancial",
    "131": "\nSELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id GROUP BY T1.district_id ORDER BY SUM(T2.amount) DESC LIMIT 1 \n\n\t----- bird -----\tfinancial",
    "132": "\nSELECT AVG(amount) AS average_loan_amount FROM loan WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'Male') \n\n\t----- bird -----\tfinancial",
    "133": "\nSELECT T1.district_id, T2.branch_location, T1.district_name \nFROM district AS T1 \nJOIN disp AS T2 ON T1.district_id = T2.district_id \nWHERE T1.year = 1996 \nORDER BY T1.unemployment_rate DESC \nLIMIT 5;\n\n\n\t----- bird -----\tfinancial",
    "134": "\nSELECT COUNT(T1.account_id) \nFROM account AS T1 \nJOIN disp AS T2 ON T1.account_id = T2.account_id \nWHERE T2.type = 'branch' AND YEAR(T1.date) = 1996 \nGROUP BY T2.district_id \nORDER BY COUNT(T1.account_id) DESC \nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "135": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM trans AS T1 \nJOIN card AS T2 ON T1.disp_id = T2.card_id \nWHERE T2.type = 'credit' AND T1.operation = 'withdrawal' AND T1.balance < 0 \nAND T2.issued LIKE '%monthly%';\n\n\n\t----- bird -----\tfinancial",
    "136": "\nSELECT COUNT(T1.account_id) \nFROM loan AS T1 \nJOIN account AS T2 ON T1.account_id = T2.account_id \nWHERE T1.amount >= 250000 AND T1.frequency = 'monthly' AND T1.status = 'approved' AND T1.date BETWEEN '1995-01-01' AND '1997-12-31';\n\n\n\t----- bird -----\tfinancial",
    "137": "\nSELECT COUNT(account_id) FROM account WHERE district_id = 1 AND frequency = 'running';\n\n\n\t----- bird -----\tfinancial",
    "138": "\nSELECT COUNT(T1.client_id) \nFROM client AS T1 \nJOIN disp AS T2 ON T1.client_id = T2.client_id \nWHERE T2.type = 'branch' AND T2.account_id IN (\n    SELECT account_id \n    FROM loan \n    WHERE date BETWEEN '1995-01-01' AND '1995-12-31'\n) \nAND T1.gender = 'male' \nGROUP BY T1.client_id \nORDER BY COUNT(T1.client_id) DESC \nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "139": "\nSELECT COUNT(DISTINCT T1.card_id) \nFROM card AS T1 \nJOIN disp AS T2 ON T1.disp_id = T2.disp_id \nWHERE T2.type = 'disponent';\n\n\n\t----- bird -----\tfinancial",
    "140": "\nSELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek');\n\n\n\t----- bird -----\tfinancial",
    "141": "\nSELECT T2.district_id FROM trans AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.client_id WHERE T1.amount > 10000 AND YEAR(T1.date) = 1997 GROUP BY T2.district_id HAVING COUNT(*) > 0\n\n\n\t----- bird -----\tfinancial",
    "142": "\nSELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.bank_to LIKE 'Pisek' AND T2.k_symbol LIKE 'household payment';\n\n\n\t----- bird -----\tfinancial",
    "143": "\nSELECT DISTINCT a.account_id \nFROM account a \nJOIN card c1 ON a.account_id = c1.account_id \nJOIN card c2 ON a.account_id = c2.account_id \nWHERE c1.type = 'Gold' AND c2.type = 'Junior';\n\n\n\t----- bird -----\tfinancial",
    "144": "\nSELECT AVG(amount) AS average_amount\nFROM trans\nWHERE type = 'credit card'\nAND date BETWEEN '2021-01-01' AND '2021-12-31';\n\n\n\t----- bird -----\tfinancial",
    "145": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN card AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'credit' AND T1.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY T1.account_id HAVING SUM(T2.amount) / COUNT(*) < (SELECT AVG(SUM(amount)) FROM loan WHERE date BETWEEN '1998-01-01' AND '1998-12-31');\n\n\n\t----- bird -----\tfinancial",
    "146": "\nSELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN card AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T1.client_id = T3.account_id WHERE T1.gender = 'female' AND T2.type = 'credit card' AND T3.status = 'active';\n\n\n\t----- bird -----\tfinancial",
    "147": "\nSELECT COUNT(DISTINCT T1.client_id) \nFROM client AS T1 \nJOIN district AS T2 ON T1.district_id = T2.district_id \nWHERE T2.A2 LIKE 'South Bohemia' AND T1.gender = 'Female';\n\n\n\t----- bird -----\tfinancial",
    "148": "\nSELECT DISTINCT a.account_id FROM account a \nJOIN disp d ON a.account_id = d.account_id \nWHERE d.district_id = 'Tabor' AND a.status = 'Eligible';\n\n\n\t----- bird -----\tfinancial",
    "149": "\nSELECT T1.type FROM account AS T1 \nWHERE T1.account_id NOT IN (SELECT account_id FROM loan) \nAND EXISTS (\n    SELECT 1 FROM district AS T2 \n    WHERE T2.district_id = T1.district_id \n    AND T2.A16 > 8000 AND T2.A16 <= 9000\n);\n\n\n\t----- bird -----\tfinancial",
    "150": "\nSELECT COUNT(T1.account_id) \nFROM account AS T1 \nJOIN trans AS T2 ON T1.account_id = T2.account_id \nWHERE T2.bank = 'AB' AND T1.district_id IN (SELECT district_id FROM district WHERE A2 = 'North Bohemia');\n\n\n\t----- bird -----\tfinancial",
    "151": "\nSELECT T1.A2 FROM district AS T1 INNER JOIN trans AS T2 ON T1.district_id = T2.account_id WHERE T2.type = 'withdrawal' GROUP BY T1.district_id \n\n\t----- bird -----\tfinancial",
    "152": "\nSELECT AVG(crimes) AS average_crimes FROM (\n    SELECT COUNT(*) AS crimes, district_id \n    FROM loan \n    WHERE date >= '1995-01-01' AND date < '2000-01-01'\n      AND account_id IN (\n          SELECT account_id \n          FROM disp \n          WHERE client_id IN (\n              SELECT client_id \n              FROM account \n              WHERE district_id IN (\n                  SELECT district_id \n                  FROM district \n                  WHERE A8 > 4000\n              )\n          )\n      )\n    GROUP BY district_id\n) AS subquery;\n\n\n\t----- bird -----\tfinancial",
    "153": "\nSELECT COUNT(T1.card_id) \nFROM card AS T1 \nJOIN disp AS T2 ON T1.disp_id = T2.disp_id \nWHERE T2.type = 'classic';\n\n\n\t----- bird -----\tfinancial",
    "154": "\nSELECT COUNT(client_id) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha') AND gender = 'M';\n\n\n\t----- bird -----\tfinancial",
    "155": "\nSELECT CAST(SUM(CASE WHEN T1.type = 'Gold' AND T2.issued < '1998-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.client_id IS NOT NULL AND T2.account_id IS NOT NULL;\n\n\n\t----- bird -----\tfinancial",
    "156": "\nSELECT T1.client_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id ORDER BY T2.amount DESC LIMIT 1; \n\n\t----- bird -----\tfinancial",
    "157": "\nSELECT COUNT(*) FROM loan WHERE date LIKE '1995%' AND account_id = 532;\n\n\n\t----- bird -----\tfinancial",
    "158": "\nSELECT T1.district_id FROM account AS T1 INNER JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333 \n\n\t----- bird -----\tfinancial",
    "159": "\nSELECT T1.amount FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 3356 AND T1.type = 'cash';\n\n\n\t----- bird -----\tfinancial",
    "160": "\nSELECT COUNT(T1.account_id) \nFROM account AS T1 \nJOIN loan AS T2 ON T1.account_id = T2.account_id \nWHERE T2.amount < 200000 AND T1.frequency = 'weekly';\n\n\n\t----- bird -----\tfinancial",
    "161": "\nSELECT type FROM card WHERE disp_id IN (SELECT client_id FROM client WHERE client_id = 13539) \n\n\t----- bird -----\tfinancial",
    "162": "\nSELECT T2.A2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.client_id = 3541 \n\n\t----- bird -----\tfinancial",
    "163": "\nSELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status = 'Finished' GROUP BY T1.district_id ORDER BY COUNT(*) DESC LIMIT 1 \n\n\t----- bird -----\tfinancial",
    "164": "\nSELECT T1.account_id FROM account AS T1 INNER JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 32423 \n\n\t----- bird -----\tfinancial",
    "165": "\nSELECT T1.account_id, T2.type, T2.operation, T2.amount, T2.balance, T2.k_symbol, T2.bank, T2.account FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.district_id = 5 ORDER BY T1.date;\n\n\n\t----- bird -----\tfinancial",
    "166": "\nSELECT COUNT(account_id) FROM account WHERE district_id = 10;\n\n\n\t----- bird -----\tfinancial",
    "167": "\nSELECT DISTINCT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'junior' AND T3.issued > '1996-01-01';\n\n\n\t----- bird -----\tfinancial",
    "168": "\nSELECT CAST(COUNT(CASE WHEN T1.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A16 > 10000 GROUP BY T1.gender;\n\n\n\t----- bird -----\tfinancial",
    "169": "\nSELECT \n    (SUM(CASE WHEN T1.gender = 'M' THEN T2.amount ELSE 0 END) - SUM(CASE WHEN T1.gender = 'M' THEN T3.amount ELSE 0 END)) / SUM(CASE WHEN T1.gender = 'M' THEN T2.amount ELSE 0 END) * 100 AS growth_rate\nFROM \n    account AS T1\nJOIN \n    loan AS T2 ON T1.account_id = T2.account_id\nJOIN \n    loan AS T3 ON T1.account_id = T3.account_id\nWHERE \n    T1.birth_date BETWEEN '1996-01-01' AND '1997-12-31'\nGROUP BY \n    T1.gender;\n\n\n\t----- bird -----\tfinancial",
    "170": "\nSELECT COUNT(*) FROM trans WHERE type = 'credit card withdrawal' AND date > '1995-01-01';\n\n\n\t----- bird -----\tfinancial",
    "171": "\nSELECT SUM(CASE WHEN T1.district_id IN (SELECT district_id FROM district WHERE A2 = 'East Bohemia') THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.district_id IN (SELECT district_id FROM district WHERE A2 = 'North Bohemia') THEN 1 ELSE 0 END) AS difference\nFROM account AS T1\nJOIN loan AS T2 ON T1.account_id = T2.account_id\nWHERE T2.date BETWEEN '1996-01-01' AND '1996-12-31'\nGROUP BY T1.district_id;\n\n\n\t----- bird -----\tfinancial",
    "172": "\nSELECT COUNT(DISTINCT T1.disp_id) AS owner_dispositions, COUNT(DISTINCT T2.disp_id) AS disponent_dispositions\nFROM account AS T1\nJOIN disp AS T2 ON T1.account_id = T2.account_id\nWHERE T1.account_id BETWEEN 1 AND 10;\n\n\n\t----- bird -----\tfinancial",
    "173": "\nSELECT COUNT(*) AS frequency, SUM(amount) AS total_debit FROM trans WHERE account_id = 3 AND type = 'account_statement_release' GROUP BY date;\n\n\n\t----- bird -----\tfinancial",
    "174": "\nSELECT T2.birth_date FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T1.client_id = 130;\n\n\n\t----- bird -----\tfinancial",
    "175": "\nSELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nJOIN disp AS T2 ON T1.account_id = T2.account_id \nWHERE T2.type = 'owner disposition' AND T2.request_statement = 'yes';\n\n\n\t----- bird -----\tfinancial",
    "176": "\nSELECT \n    T1.amount AS debt,\n    CASE \n        WHEN T2.status = 'Paid' THEN 'Paid'\n        ELSE 'Pending'\n    END AS payment_status\nFROM \n    account AS T1\nJOIN \n    loan AS T2 ON T1.account_id = T2.account_id\nWHERE \n    T1.client_id = 992;\n\n\n\t----- bird -----\tfinancial",
    "177": "\nSELECT SUM(trans.amount) AS total_amount, client.gender FROM trans \nJOIN account ON trans.account_id = account.account_id \nJOIN client ON account.client_id = client.client_id \nWHERE client.client_id = 4 AND trans.trans_id = 851 \nGROUP BY client.gender;\n\n\n\t----- bird -----\tfinancial",
    "178": "\nSELECT type FROM card WHERE client_id = 9;\n\n\n\t----- bird -----\tfinancial",
    "179": "\nSELECT SUM(trans.amount) AS total_paid FROM trans WHERE trans.account_id IN (SELECT account_id FROM client WHERE client_id = 617 AND date >= '1998-01-01' AND date <= '1998-12-31') \n\n\t----- bird -----\tfinancial",
    "180": "\nSELECT DISTINCT T1.client_id, T1.client_id AS client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND T2.type LIKE 'East Bohemia';\n\n\n\t----- bird -----\tfinancial",
    "181": "\nSELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'F' ORDER BY T2.amount DESC LIMIT 3; \n\n\t----- bird -----\tfinancial",
    "182": "\nSELECT COUNT(DISTINCT T1.client_id) \nFROM client AS T1 \nJOIN disp AS T2 ON T1.client_id = T2.client_id \nJOIN account AS T3 ON T2.account_id = T3.account_id \nWHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' \nAND EXISTS (\n    SELECT 1 \n    FROM loan AS T4 \n    WHERE T4.account_id = T3.account_id \n      AND T4.amount > 4000\n);\n\n\n\t----- bird -----\tfinancial",
    "183": "\nSELECT COUNT(account_id) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'Beroun') AND date > '1996-01-01' \n\n\t----- bird -----\tfinancial",
    "184": "\nSELECT COUNT(DISTINCT T1.client_id) \nFROM client AS T1 \nJOIN card AS T2 ON T1.client_id = T2.client_id \nWHERE T2.type = 'junior' AND T1.gender = 'female';\n\n\n\t----- bird -----\tfinancial",
    "185": "\nSELECT COUNT(CASE WHEN T1.gender = 'F' THEN 1 END) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T2.district_id IN (SELECT district_id FROM district WHERE A2 = 'Prague');\n\n\n\t----- bird -----\tfinancial",
    "186": "\nSELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T2.type = 'weekly statement' GROUP BY T1.client_id;\n\n\n\t----- bird -----\tfinancial",
    "187": "\nSELECT COUNT(DISTINCT T1.client_id) \nFROM client AS T1 \nJOIN disp AS T2 ON T1.client_id = T2.client_id \nWHERE T2.type = 'User' AND T2.disp_id IN (SELECT disp_id FROM card WHERE type = 'Statement of Weekly Issuance');\n\n\n\t----- bird -----\tfinancial",
    "188": "\nSELECT a.account_id \nFROM account a \nJOIN loan l ON a.account_id = l.account_id \nWHERE l.duration > 24 AND a.date < '1997-01-01' \nORDER BY l.amount ASC \nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "189": "\nSELECT T1.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC LIMIT 1;\n\n\t----- bird -----\tfinancial",
    "190": "\nSELECT COUNT(client_id) FROM client WHERE birth_date BETWEEN '1920-01-01' AND '1920-12-31' AND district_id IN (SELECT district_id FROM district WHERE A2 = 'East Bohemia');\n\n\n\t----- bird -----\tfinancial",
    "191": "\nSELECT COUNT(T1.account_id) \nFROM loan AS T1 \nJOIN account AS T2 ON T1.account_id = T2.account_id \nWHERE T1.duration = 24 AND T1.frequency = 'weekly';\n\n\n\t----- bird -----\tfinancial",
    "192": "\nSELECT AVG(l.amount) AS average_amount\nFROM loan l\nJOIN trans t ON l.account_id = t.account_id\nWHERE t.type = 'statement issuance'\nAND l.status = 'running contract';\n\n\n\t----- bird -----\tfinancial",
    "193": "\nSELECT DISTINCT T1.client_id, T2.district_id \nFROM client AS T1 \nJOIN disp AS T2 ON T1.client_id = T2.client_id \nWHERE T1.gender = 'M' AND (T2.type = 'Permanent Order' OR T2.type = 'Loan');\n\n\n\t----- bird -----\tfinancial",
    "194": "\nSELECT client_id, age FROM client WHERE gender = 'M' AND birth_date < NOW() - INTERVAL 30 YEAR AND EXISTS (\n    SELECT 1 FROM card WHERE disp_id IN (\n        SELECT disp_id FROM loan WHERE account_id IN (\n            SELECT account_id FROM trans WHERE type = 'credit'\n        )\n    )\n) \n\n\t----- bird -----\tfinancial",
    "195": "\nSELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\ttoxicology",
    "196": "\nSELECT COUNT(atom_id) FROM atom WHERE element = 'Cl' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%cancer%');\n\n\n\t----- bird -----\ttoxicology",
    "197": "\nSELECT AVG(CASE WHEN bond_type = 'SINGLE' THEN 1 ELSE 0 END) AS avg_oxygen_atoms FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'O';\n\n\n\t----- bird -----\ttoxicology",
    "198": "\nSELECT AVG(CASE WHEN COUNT(bond_id) = 1 THEN 1 ELSE 0 END) AS avg_single_bonded FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond GROUP BY molecule_id HAVING COUNT(*) = 1);\n\n\n\t----- bird -----\ttoxicology",
    "199": "\nSELECT COUNT(atom_id) FROM atom WHERE element = 'Na' AND NOT EXISTS (\n    SELECT 1 FROM connected AS c JOIN bond AS b ON c.bond_id = b.bond_id WHERE c.atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'C')\n);\n\n\n\t----- bird -----\ttoxicology",
    "200": "\nSELECT DISTINCT m.label FROM molecule m \nJOIN connected c ON m.molecule_id = c.molecule_id \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_type = 'triple' AND EXISTS (\n    SELECT 1 FROM atom a WHERE a.atom_id IN (c.atom_id, c.atom_id2) AND a.element = 'C'\n);\n\n\n\t----- bird -----\ttoxicology",
    "201": "\nSELECT CAST(SUM(CASE WHEN T1.element = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'double' GROUP BY T1.molecule_id;\n\n\n\t----- bird -----\ttoxicology",
    "202": "\nSELECT COUNT(*) FROM bond WHERE bond_type = 'triple';\n\n\n\t----- bird -----\ttoxicology",
    "203": "\nSELECT COUNT(atom_id) FROM atom WHERE element != 'Br'\n\n\n\t----- bird -----\ttoxicology",
    "204": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label LIKE 'Carcinogenic%' LIMIT 100; \n\n\t----- bird -----\ttoxicology",
    "205": "\nSELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.element = 'Si' \n\n\t----- bird -----\ttoxicology",
    "206": "\nSELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR004_8_9');\n\n\n\t----- bird -----\ttoxicology",
    "207": "\nSELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'double' \n\n\t----- bird -----\ttoxicology",
    "208": "\nSELECT label FROM atom WHERE element = 'H' GROUP BY label ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\ttoxicology",
    "209": "\nSELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'Te' \n\n\t----- bird -----\ttoxicology",
    "210": "\nSELECT DISTINCT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single';\n\n\n\t----- bird -----\ttoxicology",
    "211": "\nSELECT DISTINCT a.atom_id FROM atom a \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE m.label NOT LIKE 'Carcinogenic' \nAND b.bond_type != 'Carcinogenic';\n\n\n\t----- bird -----\ttoxicology",
    "212": "\nSELECT element FROM atom WHERE molecule_id NOT IN (SELECT molecule_id FROM bond WHERE bond_type = 'cancer') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1; \n\n\t----- bird -----\ttoxicology",
    "213": "\nSELECT bond_type FROM bond WHERE atom_id = 'TR004_8' AND atom_id2 = 'TR004_20';\n\n\n\t----- bird -----\ttoxicology",
    "214": "\nSELECT label FROM molecule WHERE molecule_id NOT IN (SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'Tin' )\n\n\n\t----- bird -----\ttoxicology",
    "215": "\nSELECT COUNT(atom_id) FROM atom WHERE element = 'I' AND bond_type = 'SINGLE' AND EXISTS (SELECT 1 FROM connected WHERE atom_id = atom.atom_id AND atom_id2 = atom.atom_id2 AND bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'SINGLE'));\n\n\n\t----- bird -----\ttoxicology",
    "216": "\nSELECT DISTINCT T1.atom_id, T2.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'triple' \n\n\t----- bird -----\ttoxicology",
    "217": "\nSELECT DISTINCT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR181') \n\n\t----- bird -----\ttoxicology",
    "218": "\nSELECT CAST(COUNT(CASE WHEN element = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'Carcinogenic') \n\n\t----- bird -----\ttoxicology",
    "219": "\nSELECT CAST(COUNT(CASE WHEN bond_type = 'triple' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element LIKE '%C%' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic%')) \n\n\t----- bird -----\ttoxicology",
    "220": "\nSELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3;\n\n\n\t----- bird -----\ttoxicology",
    "221": "\nSELECT DISTINCT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR001' AND b.bond_type = 'TR001_2_6' AND a.molecule_id = 'TR001';\n\n\n\t----- bird -----\ttoxicology",
    "222": "\nSELECT COUNT(CASE WHEN carcinogenic = 'Yes' THEN molecule_id ELSE NULL END) AS carcinogenic_count, \n       COUNT(CASE WHEN carcinogenic = 'No' THEN molecule_id ELSE NULL END) AS non_carcinogenic_count\nFROM molecule;\n\n\n\t----- bird -----\ttoxicology",
    "223": "\nSELECT atom_id FROM connected WHERE bond_id = 'TR_000_2_5';\n\n\n\t----- bird -----\ttoxicology",
    "224": "\nSELECT bond_id FROM connected WHERE atom_id2 = ( SELECT atom_id FROM atom WHERE label = 'TR000_2' ) \n\n\t----- bird -----\ttoxicology",
    "225": "\nSELECT label FROM molecule WHERE molecule_id IN (\n    SELECT DISTINCT T1.molecule_id \n    FROM atom AS T1 \n    JOIN connected AS T2 ON T1.atom_id = T2.atom_id \n    JOIN bond AS T3 ON T2.bond_id = T3.bond_id \n    WHERE T3.bond_type = 'double'\n) ORDER BY label LIMIT 5\n\n\n\t----- bird -----\ttoxicology",
    "226": "\nSELECT CAST(COUNT(CASE WHEN bond_type = 'double' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR008') AND atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR008');\n\n\n\t----- bird -----\ttoxicology",
    "227": "\nSELECT CAST(COUNT(CASE WHEN carcinogenic THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM molecule WHERE carcinogenic = TRUE;\n\n\n\t----- bird -----\ttoxicology",
    "228": "\nSELECT CAST(SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM atom WHERE molecule_id = 'TR206';\n\n\n\t----- bird -----\ttoxicology",
    "229": "\nSELECT bond_type FROM bond WHERE molecule_id = 'TR000' GROUP BY bond_type;\n\n\n\t----- bird -----\ttoxicology",
    "230": "\nSELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TOXICOLGY' AND T2.molecule_id = 'TR060';\n\n\n\t----- bird -----\ttoxicology",
    "231": "\nSELECT bond_type, COUNT(*) as total_bonds\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE molecule_id = 'TR018'\nGROUP BY bond_type\nORDER BY total_bonds DESC\nLIMIT 1;\n\n\n\t----- bird -----\ttoxicology",
    "232": "\nSELECT T1.label FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = 'single' AND T1.label NOT IN (SELECT label FROM molecule WHERE carcinogenic = 'yes') ORDER BY T1.label LIMIT 3;\n\n\n\t----- bird -----\ttoxicology",
    "233": "\nSELECT bond_id, bond_type FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_type ASC LIMIT 2; \n\n\t----- bird -----\ttoxicology",
    "234": "\nSELECT COUNT(bond_id) FROM bond WHERE atom_id = '12' AND molecule_id = 'TR009';\n\n\n\t----- bird -----\ttoxicology",
    "235": "\nSELECT COUNT(molecule_id) FROM atom WHERE element = 'Br' AND molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'Br'))\n\n\n\t----- bird -----\ttoxicology",
    "236": "\nSELECT bond_type, atom_id, atom_id2 FROM connected WHERE bond_id = 'TR001_6_9';\n\n\n\t----- bird -----\ttoxicology",
    "237": "\nSELECT T2.label, CASE WHEN EXISTS (SELECT 1 FROM connected AS T3 WHERE T3.atom_id = 'TR001_10' AND T3.bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = T2.molecule_id)) THEN 'Yes' ELSE 'No' END AS carcinogenic\nFROM atom AS T1\nJOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id\nWHERE T1.atom_id = 'TR001_10';\n\n\n\t----- bird -----\ttoxicology",
    "238": "\nSELECT COUNT(DISTINCT T1.molecule_id) \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.atom_id = T2.atom_id \nJOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T3.bond_type = 'triple';\n\n\n\t----- bird -----\ttoxicology",
    "239": "\nSELECT COUNT(*) FROM connected WHERE atom_id = '19';\n\n\n\t----- bird -----\ttoxicology",
    "240": "\nSELECT DISTINCT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR004' AND b.bond_type = 'TOXIC';\n\n\n\t----- bird -----\ttoxicology",
    "241": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label NOT LIKE '%cancer%'\n\n\n\t----- bird -----\ttoxicology",
    "242": "\nSELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN molecule AS T2 ON T3.molecule_id = T2.molecule_id WHERE T1.element IN ('C', 'H', 'N', 'O', 'P') AND T1.atom_id BETWEEN 21 AND 25 AND EXISTS (SELECT 1 FROM bond AS T4 WHERE T4.bond_type = 'carcinogenic' AND T4.molecule_id = T2.molecule_id) \n\n\t----- bird -----\ttoxicology",
    "243": "\nSELECT b.bond_id, b.molecule_id, b.bond_type \nFROM bond b \nJOIN atom a ON b.atom_id = a.atom_id \nWHERE a.element IN ('P', 'N') \nAND b.molecule_id IN (SELECT molecule_id FROM molecule WHERE label LIKE '%Phosphorus%' OR label LIKE '%Nitrogen%');\n\n\n\t----- bird -----\ttoxicology",
    "244": "\nSELECT label FROM molecule WHERE molecule_id IN (\n    SELECT molecule_id FROM bond WHERE bond_type = 'double'\n) ORDER BY COUNT(*) DESC LIMIT 1\n\n\n\t----- bird -----\ttoxicology",
    "245": "\nSELECT AVG(bond_count) AS average_bonds FROM (\n    SELECT atom_id, COUNT(*) AS bond_count\n    FROM connected\n    JOIN atom ON connected.atom_id = atom.atom_id\n    WHERE atom.element = 'I'\n    GROUP BY atom_id\n) AS subquery;\n\n\n\t----- bird -----\ttoxicology",
    "246": "\nSELECT bond_type, bond_id FROM bond WHERE atom_id = '45';\n\n\n\t----- bird -----\ttoxicology",
    "247": " \n\t----- bird -----\ttoxicology",
    "248": "\nSELECT DISTINCT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR447' AND b.bond_type = 'triple';\n\n\n\t----- bird -----\ttoxicology",
    "249": "\nSELECT DISTINCT T2.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR144_8_19' \n\n\t----- bird -----\ttoxicology",
    "250": "\nSELECT T1.label FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'double' GROUP BY T1.label ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\ttoxicology",
    "251": "\nSELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'carcinogenic') GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1; \n\n\t----- bird -----\ttoxicology",
    "252": "\nSELECT DISTINCT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'lead') AND c.bond_type != 'single' \n\n\t----- bird -----\ttoxicology",
    "253": "\nSELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'triple';\n\n\n\t----- bird -----\ttoxicology",
    "254": "\nSELECT CAST(COUNT(bond_id) AS REAL) * 100 / COUNT(atom_id) FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id GROUP BY element ORDER BY COUNT(element) DESC LIMIT 1;\n\n\n\t----- bird -----\ttoxicology",
    "255": "\nSELECT COUNT(CASE WHEN bond_type = 'single' THEN 1 END) * 100 / COUNT(*) AS proportion FROM bond WHERE molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'C');\n\n\n\t----- bird -----\ttoxicology",
    "256": "\nSELECT COUNT(atom_id) FROM atom WHERE element IN ('C', 'H') GROUP BY molecule_id;\n\n\n\t----- bird -----\ttoxicology",
    "257": "\nSELECT DISTINCT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'S' \n\n\t----- bird -----\ttoxicology",
    "258": "\nSELECT bond_type FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'Tin') \n\n\t----- bird -----\ttoxicology",
    "259": "\nSELECT COUNT(DISTINCT T1.element) \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.atom_id = T2.atom_id \nJOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T3.bond_type = 'single';\n\n\n\t----- bird -----\ttoxicology",
    "260": "\nSELECT COUNT(atom_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'triple') AND element IN ('P', 'Br');\n\n\n\t----- bird -----\ttoxicology",
    "261": "\nSELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'C') AND atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'C');\n\n\n\t----- bird -----\ttoxicology",
    "262": "\nSELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_type = 'single' AND T1.element NOT IN ('C', 'H') \n\n\t----- bird -----\ttoxicology",
    "263": "\nSELECT \n    (SUM(CASE WHEN bond_type = 'single' THEN 1 ELSE 0 END) * 100 / COUNT(bond_id)) AS percentage\nFROM \n    atom\nJOIN \n    connected ON atom.atom_id = connected.atom_id\nJOIN \n    bond ON connected.bond_id = bond.bond_id\nWHERE \n    atom.element = 'Cl'\nGROUP BY \n    molecule_id;\n\n\n\t----- bird -----\ttoxicology",
    "264": "\nSELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\n\n\n\t----- bird -----\ttoxicology",
    "265": "\nSELECT molecule_id FROM molecule WHERE label NOT LIKE '%cancer%'\n\n\n\t----- bird -----\ttoxicology",
    "266": "\nSELECT COUNT(T1.molecule_id) AS total_carcinogenic_molecules\nFROM atom AS T1\nJOIN connected AS T2 ON T1.atom_id = T2.atom_id\nJOIN bond AS T3 ON T2.bond_id = T3.bond_id\nWHERE T3.molecule_id BETWEEN 'TR000' AND 'TR030'\nGROUP BY T3.molecule_id;\n\n\n\t----- bird -----\ttoxicology",
    "267": "\nSELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050';\n\n\n\t----- bird -----\ttoxicology",
    "268": "\nSELECT T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11' \n\n\t----- bird -----\ttoxicology",
    "269": "\nSELECT COUNT(bond_id) FROM bond WHERE element = 'Iodine'\n\n\n\t----- bird -----\ttoxicology",
    "270": "\nSELECT CASE \n           WHEN EXISTS (SELECT 1 FROM atom WHERE element = 'Ca' AND molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'Ca'))) THEN 'Carcinogenic'\n           ELSE 'Non carcinogenic'\n       END AS carcinogenicity\nFROM molecule\nWHERE element = 'Ca';\n\n\n\t----- bird -----\ttoxicology",
    "271": "\nSELECT EXISTS (\n    SELECT 1 \n    FROM atom \n    WHERE bond_id = 'TR001_1_8' AND element IN ('Cl', 'C')\n) AS has_both_elements;\n\n\n\t----- bird -----\ttoxicology",
    "272": "\nSELECT DISTINCT T1.molecule_id \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.atom_id = T2.atom_id \nJOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T3.bond_type = 'triple' AND T1.element = 'C' AND T3.molecule_id NOT IN (\n    SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic%'\n) \nAND T3.molecule_id NOT IN (\n    SELECT molecule_id FROM molecule WHERE label LIKE '%poisonous%'\n);\n\n\n\t----- bird -----\ttoxicology",
    "273": "\nSELECT CAST(COUNT(CASE WHEN element = 'Cl' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'Carcinogenic');\n\n\n\t----- bird -----\ttoxicology",
    "274": "\nSELECT DISTINCT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id2 WHERE c.bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR001') AND a.element IN ('Toxicology');\n\n\n\t----- bird -----\ttoxicology",
    "275": "\nSELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'double' \n\n\t----- bird -----\ttoxicology",
    "276": "\nSELECT DISTINCT T1.atom_id, T2.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id1 WHERE T2.bond_type = 'triple' ORDER BY T1.molecule_id LIMIT 2; \n\n\t----- bird -----\ttoxicology",
    "277": "\nSELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR005_16_26' \n\n\t----- bird -----\ttoxicology",
    "278": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label NOT LIKE '%cancer%' AND bond_type = 'single';\n\n\n\t----- bird -----\ttoxicology",
    "279": "\nSELECT T2.label FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_10_11' \n\n\t----- bird -----\ttoxicology",
    "280": "\nSELECT bond_id, CASE WHEN EXISTS (SELECT 1 FROM connected AS c WHERE c.bond_id = b.bond_id AND c.atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'C')) THEN 'Yes' ELSE 'No' END AS carcinogenic FROM bond AS b WHERE bond_type = 'Triple';\n\n\n\t----- bird -----\ttoxicology",
    "281": "\nSELECT T2.element, COUNT(*) AS toxicology_count\nFROM atom AS T1\nJOIN connected AS T2 ON T1.atom_id = T2.atom_id\nWHERE T1.molecule_id IN (\n    SELECT molecule_id FROM molecule WHERE label LIKE 'carcinogenic'\n)\nGROUP BY T2.element;\n\n\n\t----- bird -----\ttoxicology",
    "282": "\nSELECT T1.label, COUNT(T2.atom_id) / COUNT(T3.atom_id) AS hydrogen_ratio\nFROM atom AS T1\nJOIN connected AS T2 ON T1.atom_id = T2.atom_id\nJOIN bond AS T3 ON T2.bond_id = T3.bond_id\nWHERE T3.element = 'H'\nAND T1.molecule_id = 'TR006'\nGROUP BY T1.label;\n\n\n\t----- bird -----\ttoxicology",
    "283": "\nSELECT CASE \n    WHEN EXISTS (\n        SELECT 1 \n        FROM atom a \n        JOIN connected c ON a.atom_id = c.atom_id \n        JOIN bond b ON c.bond_id = b.bond_id \n        JOIN molecule m ON b.molecule_id = m.molecule_id \n        WHERE a.element = 'Ca' AND m.label LIKE '%Carcinogenic%'\n    ) THEN 'Yes'\n    ELSE 'No'\nEND AS is_carcinogenic\nFROM atom;\n\n\n\t----- bird -----\ttoxicology",
    "284": "\nSELECT bond_type FROM bond WHERE molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'Tellurium') \n\n\t----- bird -----\ttoxicology",
    "285": "\nSELECT DISTINCT T2.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11' \n\n\t----- bird -----\ttoxicology",
    "286": "\nSELECT CAST(COUNT(CASE WHEN bond_type = 'triple' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM bond WHERE molecule_id IN (SELECT molecule_id FROM atom);\n\n\n\t----- bird -----\ttoxicology",
    "287": "\nSELECT CAST(COUNT(CASE WHEN bond_type = 'double-bond' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule_id = 'TR047';\n\n\n\t----- bird -----\ttoxicology",
    "288": "\nSELECT CASE WHEN EXISTS (\n    SELECT 1 \n    FROM connected c \n    JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = TR001_1 \n    WHERE EXISTS (\n        SELECT 1 \n        FROM bond b \n        JOIN molecule m ON b.molecule_id = m.molecule_id \n        WHERE m.label LIKE 'Carcinogenic'\n    )\n) THEN 'Yes' ELSE 'No' END AS is_carcinogenic\nFROM atom\nWHERE atom_id = TR001_1;\n\n\n\t----- bird -----\ttoxicology",
    "289": "\nSELECT CASE WHEN EXISTS (\n    SELECT 1 \n    FROM connected c \n    JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id \n    WHERE a.element = 'C' AND c.bond_type = 'C'\n) THEN 'Yes' ELSE 'No' END AS carcinogenic\nFROM molecule m\nWHERE m.label = 'TR151';\n\n\n\t----- bird -----\ttoxicology",
    "290": "\nSELECT T2.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 = 'TR151' AND T1.element IN ('H', 'C', 'N', 'O', 'P', 'S', 'Cl', 'Br', 'I');\n\n\n\t----- bird -----\ttoxicology",
    "291": "\nSELECT COUNT(DISTINCT T1.molecule_id) \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.atom_id = T2.atom_id \nJOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T3.bond_type = 'carcinogenic';\n\n\n\t----- bird -----\ttoxicology",
    "292": "\nSELECT a.atom_id, a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE m.label BETWEEN 'TR010' AND 'TR050' AND a.element = 'C'\n\n\n\t----- bird -----\ttoxicology",
    "293": "\nSELECT COUNT(atom_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic compounds%') \n\n\t----- bird -----\ttoxicology",
    "294": "\nSELECT DISTINCT b.bond_id FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a ON c.atom_id = a.atom_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label LIKE 'Carcinogenic compound' AND b.bond_type = 'double';\n\n\n\t----- bird -----\ttoxicology",
    "295": "\nSELECT COUNT(atom_id) FROM atom WHERE element = 'H' AND label LIKE '%carcinogenic compound%';\n\n\n\t----- bird -----\ttoxicology",
    "296": "\nSELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'TR00_1' AND T2.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'TR00_1');\n\n\n\t----- bird -----\ttoxicology",
    "297": "\nSELECT a.atom_id FROM atom a \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE a.element = 'C' AND m.label NOT IN ('Carcinogenic compound')\n\n\n\t----- bird -----\ttoxicology",
    "298": "\nSELECT CAST(COUNT(CASE WHEN T1.element = 'H' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'carcinogenic' GROUP BY T2.molecule_id;\n\n\n\t----- bird -----\ttoxicology",
    "299": "\nSELECT CASE WHEN EXISTS (\n    SELECT 1 \n    FROM connected c \n    JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id \n    WHERE a.element = 'C' AND c.bond_type = 'C'\n) THEN 'Yes' ELSE 'No' END AS carcinogenic\nFROM molecule m\nWHERE m.label = 'TR124';\n\n\n\t----- bird -----\ttoxicology",
    "300": "\nSELECT DISTINCT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id WHERE c.atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR186') \n\n\t----- bird -----\ttoxicology",
    "301": "\nSELECT bond_type FROM bond WHERE molecule_id = 'TR007_4_19';\n\n\n\t----- bird -----\ttoxicology",
    "302": "\nSELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4' \n\n\t----- bird -----\ttoxicology",
    "303": "\nSELECT COUNT(bond_id) AS double_bonds, EXISTS(SELECT 1 FROM atom WHERE element = 'C' AND molecule_id = 'TR006') AS carcinogenic \nFROM bond \nWHERE bond_type = 'double';\n\n\n\t----- bird -----\ttoxicology",
    "304": "\nSELECT T1.label, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element IN ('C', 'H', 'O', 'N', 'P', 'S', 'Cl', 'Br', 'I');\n\n\n\t----- bird -----\ttoxicology",
    "305": "\nSELECT b.bond_id, a1.element AS atom1_element, a2.element AS atom2_element\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'single'\nAND EXISTS (\n    SELECT 1\n    FROM molecule m\n    WHERE m.molecule_id = b.molecule_id\n);\n\n\n\t----- bird -----\ttoxicology",
    "306": "\nSELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'triple' GROUP BY T1.element;\n\n\n\t----- bird -----\ttoxicology",
    "307": "\nSELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_2_3' \n\n\t----- bird -----\ttoxicology",
    "308": "\nSELECT COUNT(bond_id) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'Cl') AND atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'Cl');\n\n\n\t----- bird -----\ttoxicology",
    "309": "\nSELECT atom_id, COUNT(DISTINCT bond_type) AS num_bond_types\nFROM connected\nJOIN atom ON connected.atom_id = atom.atom_id\nWHERE molecule_id = 'TR346'\nGROUP BY atom_id;\n\n\n\t----- bird -----\ttoxicology",
    "310": "\nSELECT COUNT(DISTINCT T1.molecule_id) AS double_bonded_carcinogenic_molecules\nFROM atom AS T1\nJOIN connected AS T2 ON T1.atom_id = T2.atom_id\nJOIN bond AS T3 ON T2.bond_id = T3.bond_id\nWHERE T3.bond_type = 'double'\nAND EXISTS (\n    SELECT 1\n    FROM molecule AS T4\n    WHERE T4.molecule_id = T3.molecule_id\n      AND T4.label LIKE '%carcinogenic%'\n);\n\n\n\t----- bird -----\ttoxicology",
    "311": "\nSELECT COUNT(molecule_id) FROM molecule WHERE element != 'S' AND bond_type != 'double'\n\n\n\t----- bird -----\ttoxicology",
    "312": "\nSELECT label FROM molecule WHERE molecule_id = (SELECT molecule_id FROM connected WHERE bond_id = 'TR001_2_4') \n\n\t----- bird -----\ttoxicology",
    "313": "\nSELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR005';\n\n\n\t----- bird -----\ttoxicology",
    "314": "\nSELECT COUNT(bond_id) FROM bond WHERE bond_type = 'SINGLE';\n\n\n\t----- bird -----\ttoxicology",
    "315": "\nSELECT DISTINCT T1.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.element = 'cl' AND EXISTS (SELECT 1 FROM molecule AS T4 WHERE T4.molecule_id = T3.molecule_id AND T4.label LIKE '%carcinogenic%')\n\n\n\t----- bird -----\ttoxicology",
    "316": "\nSELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element LIKE '%c%' AND T1.label NOT IN (SELECT label FROM carcinogenic_molecules)\n\n\n\t----- bird -----\ttoxicology",
    "317": "\nSELECT CAST(COUNT(CASE WHEN element = 'Cl' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'C') \n\n\t----- bird -----\ttoxicology",
    "318": "\nSELECT T2.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_1_7' \n\n\t----- bird -----\ttoxicology",
    "319": "\nSELECT COUNT(DISTINCT T1.element) \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.atom_id = T2.atom_id \nWHERE T2.bond_id = 'TR001_3_4';\n\n\n\t----- bird -----\ttoxicology",
    "320": "\nSELECT bond_type FROM connected WHERE atom_id = 'TR000_1' AND atom_id2 = 'TR000_2';\n\n\n\t----- bird -----\ttoxicology",
    "321": "\nSELECT T1.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 = 'TR000_4' AND T2.bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR000_2') \n\n\t----- bird -----\ttoxicology",
    "322": "\nSELECT T2.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.atom_id = 'TR000_1' \n\n\t----- bird -----\ttoxicology",
    "323": "\nSELECT CASE WHEN EXISTS (\n    SELECT 1 \n    FROM connected c \n    JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id \n    WHERE a.element = 'C' AND c.bond_type = 'C'\n) THEN 'Yes' ELSE 'No' END AS carcinogenic\nFROM molecule m\nWHERE m.label = 'TR000';\n\n\n\t----- bird -----\ttoxicology",
    "324": "\nSELECT CAST(COUNT(CASE WHEN bond_type = 'SINGLE' THEN atom_id END) AS REAL) * 100 / COUNT(atom_id) FROM connected;\n\n\n\t----- bird -----\ttoxicology",
    "325": "\nSELECT COUNT(molecule_id) FROM atom WHERE element = 'N' AND molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'N'))\n\n\n\t----- bird -----\ttoxicology",
    "326": "\nSELECT T1.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'S' AND T3.bond_type = 'double'\n\n\n\t----- bird -----\ttoxicology",
    "327": "\nSELECT label FROM molecule WHERE molecule_id IN (\n    SELECT molecule_id FROM atom GROUP BY molecule_id HAVING COUNT(atom_id) > 5\n)\nAND NOT EXISTS (\n    SELECT 1 FROM connected WHERE molecule_id = m.molecule_id AND element LIKE 'C'\n);\n\n\n\t----- bird -----\ttoxicology",
    "328": "\nSELECT DISTINCT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double' AND m.molecule_id = 'TR024'\nWHERE m.label = 'TR024'\n\n\n\t----- bird -----\ttoxicology",
    "329": "\nSELECT m.label, COUNT(a.atom_id) as atom_count\nFROM molecule m\nJOIN connected c ON m.molecule_id = c.molecule_id\nJOIN atom a ON c.atom_id = a.atom_id\nGROUP BY m.label\nORDER BY atom_count DESC\nLIMIT 1;\n\n\n\t----- bird -----\ttoxicology",
    "330": "\nSELECT CAST(COUNT(CASE WHEN bond_type = 'Triple' AND element = 'H' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'H'));\n\n\n\t----- bird -----\ttoxicology",
    "331": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label LIKE '%cancer%';\n\n\n\t----- bird -----\ttoxicology",
    "332": "\nSELECT COUNT(DISTINCT T1.molecule_id) \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.atom_id = T2.atom_id \nJOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T3.bond_type = 'S' AND T1.molecule_id BETWEEN 'TR004' AND 'TR010';\n\n\n\t----- bird -----\ttoxicology",
    "333": "\nSELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR008' AND element = 'C';\n\n\n\t----- bird -----\ttoxicology",
    "334": "\nSELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND NOT EXISTS (SELECT 1 FROM carcinogenicity WHERE molecule_id = T2.molecule_id);\n\n\n\t----- bird -----\ttoxicology",
    "335": "\nSELECT COUNT(DISTINCT T1.molecule_id) \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.atom_id = T2.atom_id \nJOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T3.bond_type = 'double' AND T3.element = 'O';\n\n\n\t----- bird -----\ttoxicology",
    "336": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label NOT IN (SELECT label FROM atom WHERE element = 'C') AND bond_type = 'triple' \n\n\t----- bird -----\ttoxicology",
    "337": "\nSELECT T2.element, T1.bond_type FROM bond AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR016' \n\n\t----- bird -----\ttoxicology",
    "338": "\nSELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_type = 'double' AND T1.molecule_id = 'TR012';\n\n\n\t----- bird -----\ttoxicology",
    "339": "\nSELECT DISTINCT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'O') AND EXISTS (SELECT 1 FROM molecule AS T3 WHERE T3.molecule_id = T1.molecule_id) \n\n\t----- bird -----\ttoxicology",
    "340": "\nSELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Commander' AND T2.status = 'Legal' AND T1.hasFoil = 1 ORDER BY T1.power DESC LIMIT 10;\n\n\n\t----- bird -----\tcard_games",
    "341": "\nSELECT DISTINCT c.id, c.name \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE l.format = 'standard' AND l.status = 'legal' AND c.borderColor IS NULL AND c.hasFoil = 0 \nAND c.power IS NOT NULL \nORDER BY c.name;\n\n\n\t----- bird -----\tcard_games",
    "342": "\nSELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'legal' AND T1.faceConvertedManaCost > 0 ORDER BY T1.faceConvertedManaCost DESC;\n\n\n\t----- bird -----\tcard_games",
    "343": "\nSELECT DISTINCT c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'EDHRec' AND l.ranking < 100 AND c.frameVersion LIKE '%2015%' ORDER BY c.name;\n\n\n\t----- bird -----\tcard_games",
    "344": "\nSELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Gladiator' AND T2.status = 'Banned' AND T1.rarity = 'Mythic';\n\n\n\t----- bird -----\tcard_games",
    "345": "\nSELECT T1.type, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'artifact' AND T1.multiface = 0 AND T2.format = 'Vintage';\n\n\n\t----- bird -----\tcard_games",
    "346": "\nSELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T1.power IS NULL AND T2.status = 'legal';\n\n\n\t----- bird -----\tcard_games",
    "347": "\nSELECT c.*, r.text AS ruling_text, \n       CASE WHEN c.hasFoil = 0 THEN 'No foil' ELSE 'Has foil' END AS foil_status,\n       CASE WHEN c.hasNonFoil = 0 THEN 'No non-foil' ELSE 'Has non-foil' END AS non_foil_status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'Commander'\nAND l.status = 'Legal'\nAND c.artist LIKE '%Stephen Daniel%'\nJOIN rulings r ON c.uuid = r.uuid\nORDER BY c.name;\n\n\n\t----- bird -----\tcard_games",
    "348": "\nSELECT r.date, r.text FROM rulings AS r JOIN cards AS c ON r.uuid = c.uuid WHERE c.name = 'Sublime Epiphany' AND c.number = '74s';\n\n\n\t----- bird -----\tcard_games",
    "349": "\nSELECT c.name, c.artist, COUNT(r.uuid) AS ruling_count, CASE WHEN r.isPromo THEN 'Yes' ELSE 'No' END AS is_promo\nFROM cards c\nLEFT JOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.name, c.artist\nORDER BY ruling_count DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcard_games",
    "350": "\nSELECT DISTINCT T1.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.name = 'Annul' AND T1.number = '29';\n\n\n\t----- bird -----\tcard_games",
    "351": "\nSELECT name FROM cards WHERE language = 'Japanese'\n\n\n\t----- bird -----\tcard_games",
    "352": "\nSELECT CAST(SUM(CASE WHEN availability = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE availability = 'Chinese Simplified';\n\n\n\t----- bird -----\tcard_games",
    "353": "\nSELECT s.code, COUNT(c.id) AS total_cards \nFROM sets s \nJOIN set_translations st ON s.code = st.setCode \nWHERE st.language = 'Italian' \nGROUP BY s.code;\n\n\n\t----- bird -----\tcard_games",
    "354": "\nSELECT COUNT(DISTINCT T1.type) \nFROM cards AS T1 \nJOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid \nWHERE T2.artist = 'Aaron Boyd';\n\n\n\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy' LIMIT 1;\n\n\t----- bird -----\tcard_games",
    "356": "\nSELECT COUNT(*) FROM cards WHERE power = 'Infinite'\n\n\n\t----- bird -----\tcard_games",
    "357": "\nSELECT promoTypes FROM cards WHERE name = 'Duress'\n\n\n\t----- bird -----\tcard_games",
    "358": "\nSELECT borderColor FROM cards WHERE name = 'Ancestor\\'s Chosen';\n\n\n\t----- bird -----\tcard_games",
    "359": "\nSELECT T1.type FROM cards AS T1 INNER JOIN printings AS T2 ON T1.id = T2.card_id WHERE T2.name = 'Ancestor\\'s Chosen' AND T2.original_release_date IS NOT NULL \n\n\t----- bird -----\tcard_games",
    "360": "\nSELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN set AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\n\n\n\t----- bird -----\tcard_games",
    "361": "\nSELECT COUNT(*) FROM legalities WHERE status = 'restricted' AND text IS NOT NULL;\n\n\n\t----- bird -----\tcard_games",
    "362": "\nSELECT T2.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Condemn' \n\n\t----- bird -----\tcard_games",
    "363": "\nSELECT COUNT(*) FROM legalities WHERE status = 'restricted' AND isStarter = 1;\n\n\n\t----- bird -----\tcard_games",
    "364": "\nSELECT status FROM cards WHERE name = 'Cloudchaser Eagle'\n\n\n\t----- bird -----\tcard_games",
    "365": "\nSELECT type FROM cards WHERE name = 'Benalish Knight'\n\n\n\t----- bird -----\tcard_games",
    "366": "\nSELECT T1.rule FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight' AND T2.format = 'Standard';\n\n\n\t----- bird -----\tcard_games",
    "367": "\nSELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T2.language = 'English' AND T2.name LIKE 'Phyrexian';\n\n\n\t----- bird -----\tcard_games",
    "368": "\nSELECT CAST(SUM(CASE WHEN borderColor = '' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE borderColor = '';\n\n\n\t----- bird -----\tcard_games",
    "369": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallIllustrationId = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1 \n\n\t----- bird -----\tcard_games",
    "370": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND language = 'Russian'\n\n\n\t----- bird -----\tcard_games",
    "371": "\nSELECT CAST(COUNT(CASE WHEN T1.language = 'French' THEN 1 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation LIKE '%Story Spotlight%' AND T1.language = 'French';\n\n\n\t----- bird -----\tcard_games",
    "372": "\nSELECT COUNT(*) FROM cards WHERE toughness = 99;\n\n\n\t----- bird -----\tcard_games",
    "373": "\nSELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallillustrationid = T2.uuid WHERE T2.author = 'Aaron Boyd' \n\n\t----- bird -----\tcard_games",
    "374": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'Black' AND availability = 'MTGO';\n\n\n\t----- bird -----\tcard_games",
    "375": "\nSELECT id FROM cards WHERE convertedManaCost = 0; \n\n\t----- bird -----\tcard_games",
    "376": "\nSELECT DISTINCT T1.layout FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.keyword LIKE '%flying%' \n\n\t----- bird -----\tcard_games",
    "377": "\nSELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND SUBTYPE != 'Angel'\n\n\n\t----- bird -----\tcard_games",
    "378": "\nSELECT DISTINCT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Commander' AND T2.status = 'Legal' AND T1.isFoil = 1 AND EXISTS (SELECT 1 FROM legalities AS T3 WHERE T3.uuid = T1.uuid AND T3.format = 'Standard' AND T3.status = 'Legal') ORDER BY T1.power DESC, T1.toughness DESC;\n\n\n\t----- bird -----\tcard_games",
    "379": "\nSELECT DISTINCT T1.id FROM cards AS T1 INNER JOIN duel_deck AS T2 ON T1.uuid = T2.card_id WHERE T2.name = 'Duel Deck a' ORDER BY T1.id;\n\n\n\t----- bird -----\tcard_games",
    "380": "\nSELECT edhrecRank FROM cards WHERE frameVersion = '2015'\n\n\n\t----- bird -----\tcard_games",
    "381": "\nSELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'zh-CN' AND T2.format = 'standard';\n\n\n\t----- bird -----\tcard_games",
    "382": "\nSELECT DISTINCT c.*\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'paper'\n  AND l.language = 'Japanese';\n\n\n\t----- bird -----\tcard_games",
    "383": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'White'\nAND availability = 'Banned'\nAND type IN ('Basic Land', 'Planeswalker')\nAND colorIdentity LIKE '%W%'\nAND cardKingdomFoilId IS NOT NULL\nAND cardKingdomId IS NOT NULL\nAND faceConvertedManaCost > 0\nAND faceName IS NOT NULL\nAND flavorText IS NOT NULL\nAND frameEffects IS NOT NULL\nAND frameVersion IS NOT NULL\nAND hand IS NOT NULL\nAND hasAlternativeDeckLimit = 1\nAND hasContentWarning = 0\nAND hasFoil = 1\nAND hasNonFoil = 1\nAND isAlternative = 0\nAND isFullArt = 0\nAND isOnlineOnly = 0\nAND isOversized = 0\nAND isPromo = 0\nAND isReprint = 0\nAND isReserved = 0\nAND isStarter = 0\nAND isStorySpotlight = 0\nAND isTextless = 0\nAND isTimeshifted = 0\nAND keywords LIKE '%W%'\nAND layout IN ('Normal', 'Split')\nAND leadershipSkills IS NOT NULL\nAND life IS NOT NULL\nAND loyalty IS NOT NULL\nAND manaCost IS NOT NULL\nAND mcmId IS NOT NULL\nAND mcmMetaId IS NOT NULL\nAND mtgArenaId IS NOT NULL\nAND mtgjsonV4Id IS NOT NULL\nAND mtgoFoilId IS NOT NULL\nAND mtgoId IS NOT NULL\nAND multiverseId IS NOT NULL\nAND name IS NOT NULL\nAND number IS NOT NULL\nAND originalReleaseDate IS NOT NULL\nAND originalText IS NOT NULL\nAND originalType IS NOT NULL\nAND otherFaceIds IS NOT NULL\nAND power IS NOT NULL\nAND printings LIKE '%Basic Land%'\nAND promoTypes LIKE '%Banned%'\nAND purchaseUrls IS NOT NULL\nAND rarity IN ('Common', 'Uncommon', 'Rare', 'Mythic Rare')\nAND scryfallId IS NOT NULL\nAND scryfallIllustrationId IS NOT NULL\nAND scryfallOracleId IS NOT NULL\nAND setCode IS NOT NULL\nAND side IN ('Front', 'Back')\nAND subtypes LIKE '%W%'\nAND supertypes LIKE '%Basic Land%'\nAND tcgplayerProductId IS NOT NULL\nAND text IS NOT NULL\nAND toughness IS NOT NULL\nAND type IN ('Basic Land', 'Planeswalker')\nAND types LIKE '%W%'\nAND uuid IS NOT NULL\nAND variations IS NOT NULL\nAND watermark IS NOT NULL\n\n\n\t----- bird -----\tcard_games",
    "384": "\nSELECT T1.uuid, T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.multiverseid WHERE T1.type = 'Legacy';\n\n\n\t----- bird -----\tcard_games",
    "385": "\nSELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Beacon of Immortality' AND T1.date = ( SELECT MAX(date) FROM rulings WHERE uuid = T2.uuid );\n\n\n\t----- bird -----\tcard_games",
    "386": "\nSELECT COUNT(*) AS total_cards, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion LIKE 'Future' GROUP BY T2.status;\n\n\n\t----- bird -----\tcard_games",
    "387": "\nSELECT T1.name, T2.colorIdentity FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'OGW' GROUP BY T1.name, T2.colorIdentity;\n\n\n\t----- bird -----\tcard_games",
    "388": "\nSELECT T1.name, T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.uuid = T2.uuid WHERE T1.set_code = '10E' AND T1.converted_mana_cost = 5 GROUP BY T1.name, T2.language;\n\n\n\t----- bird -----\tcard_games",
    "389": "\nSELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature' AND T1.subtypes LIKE '%Elf%' ORDER BY T2.date DESC;\n\n\n\t----- bird -----\tcard_games",
    "390": "\nSELECT DISTINCT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20;\n\n\n\t----- bird -----\tcard_games",
    "391": "\nSELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.colorIdentity LIKE '%black%' AND T2.language != 'English' \n\n\t----- bird -----\tcard_games",
    "392": "\nSELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'Uncommon' ORDER BY r.date ASC LIMIT 3;\n\n\n\t----- bird -----\tcard_games",
    "393": "\nSELECT COUNT(*) \nFROM cards \nWHERE artist = 'John Avon' AND cardKingdomId IS NOT NULL AND cardKingdomFoildId IS NOT NULL;\n\n\n\t----- bird -----\tcard_games",
    "394": "\nSELECT COUNT(*) \nFROM cards \nWHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\n\n\n\t----- bird -----\tcard_games",
    "395": "\nSELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo print type' AND hand = -1;\n\n\n\t----- bird -----\tcard_games",
    "396": "\nSELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\n\n\n\t----- bird -----\tcard_games",
    "397": "\nSELECT T1.manaCost FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.layout = 'normal' AND T1.frameVersion = 2003 AND T1.borderColor = 'black' AND (T1.availability LIKE 'paper' OR T1.availability LIKE 'mtgo; frameVersion = 2003') \n\n\t----- bird -----\tcard_games",
    "398": "\nSELECT SUM(T1.convertedManaCost) AS totalUnconvertedMana FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.artist = 'Rob Alexander' GROUP BY T1.uuid;\n\n\n\t----- bird -----\tcard_games",
    "399": "\nSELECT DISTINCT type FROM cards WHERE type LIKE 'Arena';\n\n\n\t----- bird -----\tcard_games",
    "400": "\nSELECT DISTINCT T1.code FROM set_translations AS T1 INNER JOIN cards AS T2 ON T1.setCode = T2.set_code WHERE T1.language = 'es';\n\n\n\t----- bird -----\tcard_games",
    "401": "\nSELECT CAST(SUM(CASE WHEN frameEffects LIKE '%maxStartingMaximunHand+3%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE type = 'Legendary Frame Effect';\n\n\n\t----- bird -----\tcard_games",
    "402": "\nSELECT \n    COUNT(CASE WHEN isStorylight = 1 AND isTextless = 0 THEN id END) AS storyspot_no_text,\n    COUNT(CASE WHEN isStorylight = 1 AND isTextless = 1 THEN id END) AS storyspot_with_text,\n    (COUNT(CASE WHEN isStorylight = 1 AND isTextless = 0 THEN id END) / SUM(COUNT(id))) * 100 AS percentage\nFROM \n    cards;\n\n\n\t----- bird -----\tcard_games",
    "403": "\nSELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM cards WHERE language = 'Spanish') AS percentage, name \nFROM cards \nWHERE language = 'Spanish' \nORDER BY name;\n\n\n\t----- bird -----\tcard_games",
    "404": "\nSELECT DISTINCT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309;\n\n\n\t----- bird -----\tcard_games",
    "405": "\nSELECT COUNT(*) FROM sets WHERE block = 'Commander' AND language = 'Portuguese (Brasil)';\n\n\n\t----- bird -----\tcard_games",
    "406": "\nSELECT DISTINCT c.id, c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.type = 'Creature' AND l.status = 'Legal';\n\n\n\t----- bird -----\tcard_games",
    "407": "\nSELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'de';\n\n\n\t----- bird -----\tcard_games",
    "408": "\nSELECT COUNT(*) FROM cards WHERE power IS NULL AND EXISTS (SELECT 1 FROM legalities WHERE uuid = cards.uuid AND format = 'triggered');\n\n\n\t----- bird -----\tcard_games",
    "409": "\nSELECT COUNT(*) FROM cards WHERE format = 'pre-modern' AND rulingText LIKE '%This is a triggered mana ability%' AND NOT EXISTS (SELECT 1 FROM set_translations WHERE setCode = cards.setCode);\n\n\n\t----- bird -----\tcard_games",
    "410": "\nSELECT DISTINCT c.id FROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.artist = 'Erica Yang' AND l.format = 'Pauper' AND c.availability = 'Paper';\n\n\n\t----- bird -----\tcard_games",
    "411": "\nSELECT T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.text LIKE '%Das perfekte Gegenmittel zu einer dichten Formation%';\n\n\n\t----- bird -----\tcard_games",
    "412": "\nSELECT T1.flavorName FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Matthew D. Wilson' AND T1.type = 'Creature' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T2.format = 'any' \n\n\t----- bird -----\tcard_games",
    "413": "\nSELECT COUNT(*) FROM cards WHERE print rarity = 'ruling' AND rulings.date = '2009-10-01';\n\n\n\t----- bird -----\tcard_games",
    "414": "\nSELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ravnica' AND T1.totalSetSize = 180 GROUP BY T2.language;\n\n\n\t----- bird -----\tcard_games",
    "415": "\nSELECT \n    CAST(COUNT(CASE WHEN hasContentWarning = 0 AND format = 'commander' AND status = 'legal' THEN id END) AS REAL) * 100 / COUNT(id) AS percentage\nFROM \n    cards;\n\n\n\t----- bird -----\tcard_games",
    "416": "\nSELECT \n    CAST(COUNT(CASE WHEN language = 'French' AND power IS NULL OR power = '*' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(power IS NULL OR power = '*') AS percentage\nFROM \n    cards\nWHERE \n    language = 'French';\n\n\n\t----- bird -----\tcard_games",
    "417": "\nSELECT CAST(COUNT(T1.code) AS REAL) * 100 / COUNT(T2.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.type = 'expansion';\n\n\n\t----- bird -----\tcard_games",
    "418": "\nSELECT DISTINCT T1.printings FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.artist = 'Daren Bader' AND T2.language = 'English';\n\n\n\t----- bird -----\tcard_games",
    "419": "\nSELECT COUNT(*) FROM cards WHERE availability = 'EDHRec' AND borderColor IS NULL AND edhrecRank > 12000 \n\n\t----- bird -----\tcard_games",
    "420": "\nSELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND promoTypes LIKE '%Promotion%';\n\n\n\t----- bird -----\tcard_games",
    "421": "\nSELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'arena league' AND T1.power IS NULL ORDER BY T1.name LIMIT 3;\n\n\n\t----- bird -----\tcard_games",
    "422": "\nSELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.multiverseId = '149934' \n\n\t----- bird -----\tcard_games",
    "423": "\nSELECT T1.id, T2.id FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.borderColor = 'Kingdom Foil' ORDER BY T1.id ASC LIMIT 3; \n\n\t----- bird -----\tcard_games",
    "424": "\nSELECT COUNT(CASE WHEN layout = 'normal' THEN 1 ELSE NULL END) * 100 / COUNT(*) AS proportion FROM cards WHERE layout != 'normal';\n\n\n\t----- bird -----\tcard_games",
    "425": " \n\t----- bird -----\tcard_games",
    "426": "\nSELECT name FROM sets WHERE id NOT IN (SELECT setCode FROM set_translations WHERE language = 'en' AND translation LIKE '%Magic: The Gathering Online%') ORDER BY name ASC LIMIT 3;\n\n\n\t----- bird -----\tcard_games",
    "427": "\nSELECT DISTINCT T1.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.set_code = T2.set_code WHERE T2.translation = 'Archenemy' AND T1.code = 'ARC'\n\n\n\t----- bird -----\tcard_games",
    "428": "\nSELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.number = '5' AND T2.language = 'en';\n\n\n\t----- bird -----\tcard_games",
    "429": "\nSELECT T1.language, T2.expansion_type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.number = '206';\n\n\n\t----- bird -----\tcard_games",
    "430": "\nSELECT T1.code, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.name LIMIT 2;\n\n\n\t----- bird -----\tcard_games",
    "431": "\nSELECT DISTINCT s.id FROM sets s \nJOIN cards c ON s.code = c.set_code \nWHERE c.availability != 'US' AND c.borderColor LIKE '%Japanese%' AND c.hasFoil = 1;\n\n\n\t----- bird -----\tcard_games",
    "432": "\nSELECT s.code FROM sets s JOIN cards c ON s.id = c.set_code WHERE s.language = 'Russian' GROUP BY s.code ORDER BY COUNT(c.id) DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "433": "\nSELECT CAST(COUNT(CASE WHEN T1.language = 'zh-Hans' AND T2.availability = 'Online' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Online' GROUP BY T1.language;\n\n\n\t----- bird -----\tcard_games",
    "434": "\nSELECT COUNT(*) FROM sets WHERE language = 'Japanese' AND NOT isOnlineOnly = 1;\n\n\n\t----- bird -----\tcard_games",
    "435": "\nSELECT COUNT(id) AS border_count, id FROM cards WHERE borderColor = 'black' GROUP BY id; \n\n\n\t----- bird -----\tcard_games",
    "436": "\nSELECT id FROM cards WHERE frameEffects = 'extendedart'\n\n\n\t----- bird -----\tcard_games",
    "437": "\nSELECT T1.name FROM cards AS T1 INNER JOIN borders AS T2 ON T1.borderColor = T2.color WHERE T2.fullArt = 'Yes' AND T1.colorIdentity LIKE '%Black%' \n\n\t----- bird -----\tcard_games",
    "438": "\nSELECT T2.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = 174 \n\n\t----- bird -----\tcard_games",
    "439": "\nSELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'en' AND T2.translation = 'ALL'\n\n\n\t----- bird -----\tcard_games",
    "440": "\nSELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.name = 'A Pedra Fellwar';\n\n\n\t----- bird -----\tcard_games",
    "441": "\nSELECT code FROM sets WHERE releaseDate = '2007-07-13';\n\n\n\t----- bird -----\tcard_games",
    "442": "\nSELECT baseSetSize, code FROM sets WHERE block = 'Masques' AND block = 'Mirage'\n\n\n\t----- bird -----\tcard_games",
    "443": "\nSELECT code FROM sets WHERE expansion = 'expansion'\n\n\n\t----- bird -----\tcard_games",
    "444": "\nSELECT T1.flavorName, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'Boros'\n\n\n\t----- bird -----\tcard_games",
    "445": "\nSELECT T1.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.watermark = 'colorpie';\n\n\n\t----- bird -----\tcard_games",
    "446": "\nSELECT CAST(COUNT(CASE WHEN convertedManaCost = 10 THEN id END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode = 'ABYSSAL HORROR' \n\n\t----- bird -----\tcard_games",
    "447": "\nSELECT code FROM sets WHERE type = 'expansion commander'\n\n\n\t----- bird -----\tcard_games",
    "448": "\nSELECT T1.flavorName, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'Abzan';\n\n\n\t----- bird -----\tcard_games",
    "449": "\nSELECT T1.language, T2.type FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.set_code = T2.set_code WHERE T1.watermark = 'Azorius'\n\n\n\t----- bird -----\tcard_games",
    "450": "\nSELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND type LIKE '%Incredible Power%' \n\n\t----- bird -----\tcard_games",
    "451": "\nSELECT COUNT(*) FROM cards WHERE availability = 'Paper' AND hand > 0;\n\n\n\t----- bird -----\tcard_games",
    "452": "\nSELECT name FROM cards WHERE text IS NOT NULL;\n\n\n\t----- bird -----\tcard_games",
    "453": "\nSELECT convertedManaCost FROM cards WHERE name = 'Ancestor\\'s Chosen';\n\n\n\t----- bird -----\tcard_games",
    "454": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NULL; \n\n\t----- bird -----\tcard_games",
    "455": "\nSELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.isPromo AND T1.hasAlternativeDeckLimit > 0 GROUP BY T1.name HAVING COUNT(T1.id) > 1 \n\n\t----- bird -----\tcard_games",
    "456": "\nSELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Molimo, Maro-Sorcerer' \n\n\t----- bird -----\tcard_games",
    "457": "\nSELECT purchaseUrls FROM cards WHERE promoTypes LIKE '%bundle%' AND availability = 'Promo'\n\n\n\t----- bird -----\tcard_games",
    "458": "\nSELECT COUNT(DISTINCT T1.artist) \nFROM cards AS T1 \nJOIN legalities AS T2 ON T1.uuid = T2.uuid \nWHERE T1.borderColor = 'black' AND T2.format IN ('arena', 'mtgo');\n\n\n\t----- bird -----\tcard_games",
    "459": "\nSELECT T1.name, T2.convertedManaCost FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name IN ('Serra Angel', 'Shrine Keeper') ORDER BY T2.convertedManaCost DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "460": "\nSELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Promo' AND T1.promotionalName = 'Battra, Dark Destroyer';\n\n\n\t----- bird -----\tcard_games",
    "461": "\nSELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.set_code = T2.set_code WHERE T2.language = 'en' AND T1.frame_version LIKE '%2003%' ORDER BY T1.converted_mana_cost DESC LIMIT 3;\n\n\n\t----- bird -----\tcard_games",
    "462": "\nSELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.name LIKE '%Ancestor\\'s Chosen%';\n\n\n\t----- bird -----\tcard_games",
    "463": "\nSELECT COUNT(T1.id) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name LIKE '%Angel of Mercy%';\n\n\n\t----- bird -----\tcard_games",
    "464": "\nSELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.code = 'Hauptset Zehnte Edition' \n\n\t----- bird -----\tcard_games",
    "465": "\nSELECT EXISTS (\n    SELECT 1 \n    FROM set_translations \n    WHERE language = 'ko' AND setCode IN (\n        SELECT code \n        FROM sets \n        WHERE name LIKE '%Ancestor\\'s Chosen%'\n    )\n) AS has_korean_version;\n\n\n\t----- bird -----\tcard_games",
    "466": "\nSELECT COUNT(*) FROM cards WHERE setCode = 'Hauptset Zehnte Edition' AND artist = 'Adam Rex';\n\n\n\t----- bird -----\tcard_games",
    "467": "\nSELECT COUNT(*) FROM cards WHERE setCode = 'Hauptset Zehnte Edition'\n\n\n\t----- bird -----\tcard_games",
    "468": "\nSELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'zh-CN'\n\n\n\t----- bird -----\tcard_games",
    "469": "\nSELECT DISTINCT T1.isOnlineOnly FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name LIKE '%Angel of Mercy%';\n\n\n\t----- bird -----\tcard_games",
    "470": "\nSELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name LIKE 'Ancestor''s Chosen' \n\n\t----- bird -----\tcard_games",
    "471": "\nSELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition' AND T1.type = 'expansion';\n\n\n\t----- bird -----\tcard_games",
    "472": "\nSELECT COUNT(*) FROM sets WHERE block = 'Ice Age' AND translation IN (SELECT translation FROM set_translations WHERE language = 'Italian');\n\n\n\t----- bird -----\tcard_games",
    "473": "\nSELECT EXISTS (\n    SELECT 1 \n    FROM legalities \n    WHERE format = 'standard' AND status = 'legal' AND uuid IN (\n        SELECT id \n        FROM cards \n        WHERE name = 'Adarkar Valkyrie'\n    )\n) AS is_available_outside_usa;\n\n\n\t----- bird -----\tcard_games",
    "474": "\nSELECT COUNT(T2.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 10 \n\n\t----- bird -----\tcard_games",
    "475": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'Black' AND setCode = 'Coldsnap';\n\n\n\t----- bird -----\tcard_games",
    "476": "\nSELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.code = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "477": "\nSELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format IN ('Coldsnap', 'Jeremy Jarvis', 'Aaron Miller', 'Chippy') GROUP BY T1.artist;\n\n\n\t----- bird -----\tcard_games",
    "478": "\nSELECT number FROM cards WHERE setCode = 'Coldsnap' AND id = 4; \n\n\t----- bird -----\tcard_games",
    "479": "\nSELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND power = 'Unknown' AND setCode = 'Coldsnap';\n\n\n\t----- bird -----\tcard_games",
    "480": "\nSELECT T1.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'Italian';\n\n\n\t----- bird -----\tcard_games",
    "481": "\nSELECT DISTINCT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.flavorText IS NOT NULL;\n\n\n\t----- bird -----\tcard_games",
    "482": "\nSELECT T1.type FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'German';\n\n\n\t----- bird -----\tcard_games",
    "483": "\nSELECT T1.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = 'Coldsnap' AND T2.language = 'Italian';\n\n\n\t----- bird -----\tcard_games",
    "484": "\nSELECT T1.name FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.set_code = T2.set_code WHERE T2.language = 'Italian' AND T1.code = 'Coldsnap' ORDER BY T1.converted_mana_cost DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "485": "\nSELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce' ORDER BY T1.date DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "486": "\nSELECT CAST(COUNT(CASE WHEN convertedManaCost = 7 THEN id END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode = 'Coldsnap' \n\n\t----- bird -----\tcard_games",
    "487": "\nSELECT \n    CAST(SUM(CASE WHEN cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(name) AS percentage_incredibly_powerful\nFROM \n    cards\nWHERE \n    name = 'Coldsnap'\n\n\n\t----- bird -----\tcard_games",
    "488": "\nSELECT code FROM sets WHERE releaseDate = '2017-07-14'\n\n\n\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC' \n\n\t----- bird -----\tcard_games",
    "490": "\nSELECT mcmId FROM sets WHERE code = 'SS2'\n\n\n\t----- bird -----\tcard_games",
    "491": "\nSELECT T1.name FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.releaseDate = '2017-06-09' \n\n\t----- bird -----\tcard_games",
    "492": "\nSELECT T2.expansionType FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'From the Vault: Lore';\n\n\n\t----- bird -----\tcard_games",
    "493": "\nSELECT parentCode FROM sets WHERE code = 'Commander 2014 Oversized'\n\n\n\t----- bird -----\tcard_games",
    "494": "\nSELECT c.name, r.text, c.hasMissingProperties, c.hasDegradedValues \nFROM cards c \nJOIN rulings r ON c.uuid = r.uuid \nWHERE c.artist = 'Jim Pavelec';\n\n\n\t----- bird -----\tcard_games",
    "495": "\nSELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.id = T2.setCode WHERE T2.name = 'Evacuation';\n\n\n\t----- bird -----\tcard_games",
    "496": "\nSELECT COUNT(*) FROM cards WHERE setCode = 'Rinascita di Alara'\n\n\n\t----- bird -----\tcard_games",
    "497": "\nSELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00e8me \u00e9dition' AND T1.type = 'expansion';\n\n\n\t----- bird -----\tcard_games",
    "498": "\nSELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'fr' AND T1.name LIKE '%Tendo Ice Bridge%';\n\n\n\t----- bird -----\tcard_games",
    "499": "\nSELECT COUNT(T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Salvat 2011'\n\n\n\t----- bird -----\tcard_games",
    "500": "\nSELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Fellwar Stone' \n\n\t----- bird -----\tcard_games",
    "501": "\nSELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.code = 'Journey into Nyx Hero\\'s Path' ORDER BY T1.convertedManaCost DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "502": "\nSELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo'\n\n\n\t----- bird -----\tcard_games",
    "503": "\nSELECT T1.setCode FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim' \n\n\t----- bird -----\tcard_games",
    "504": "\nSELECT COUNT(*) FROM cards WHERE setCode = 'WC2004' AND convertedManaCost = 3 \n\n\t----- bird -----\tcard_games",
    "505": "\nSELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Mirrodin' AND T2.language = 'zh-CN'\n\n\n\t----- bird -----\tcard_games",
    "506": "\nSELECT CAST(COUNT(CASE WHEN availability = 'Non-Foil' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM cards WHERE set_translations.language = 'Japanese';\n\n\n\t----- bird -----\tcard_games",
    "507": "\nSELECT CAST(SUM(CASE WHEN availability = 'Online Only' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE multiverseid IN (SELECT multiverseid FROM set_translations WHERE language = 'Brazil Portuguese');\n\n\n\t----- bird -----\tcard_games",
    "508": "\nSELECT DISTINCT T1.printings FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'Commander' AND T2.status = 'Legal' AND T1.text IS NOT NULL AND T1.text LIKE '%Aleksi Briclot%' AND T1.printings NOT IN (SELECT DISTINCT T3.printings FROM cards AS T3 INNER JOIN legalities AS T4 ON T3.uuid = T4.uuid WHERE T4.format = 'Commander' AND T4.status = 'Legal' AND T3.text LIKE '%Aleksi Briclot%')\n\n\n\t----- bird -----\tcard_games",
    "509": "\nSELECT T1.id FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.set_code ORDER BY COUNT(T2.id) DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "510": "\nSELECT T1.name, T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.multiverseId NOT IN (SELECT multiverseId FROM cards WHERE multiverseId LIKE '%/%') ORDER BY T1.convertedManaCost DESC LIMIT 1\n\n\n\t----- bird -----\tcard_games",
    "511": "\nSELECT frameEffects FROM cards WHERE availability = 'Incredible Power Foil' GROUP BY frameEffects ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "512": "\nSELECT COUNT(*) FROM cards WHERE power = 'Unknown' AND availability != 'Foil' AND duelDeck = 'A';\n\n\n\t----- bird -----\tcard_games",
    "513": "\nSELECT s.id FROM sets s JOIN legalities l ON s.uuid = l.uuid WHERE l.format = 'Commander' AND s.totalSetSize > 0 AND NOT EXISTS (SELECT 1 FROM cards c WHERE c.setCode = s.code AND c.name LIKE '%Alchemy%') ORDER BY s.totalSetSize DESC LIMIT 1\n\n\n\t----- bird -----\tcard_games",
    "514": "\nSELECT name, unconvertedManaCost \nFROM cards \nWHERE availability = 'duelDeck' \nORDER BY unconvertedManaCost DESC \nLIMIT 10;\n\n\n\t----- bird -----\tcard_games",
    "515": "\nSELECT T1.originalReleaseDate, GROUP_CONCAT(T2.format SEPARATOR ', ') AS legalPlayFormats\nFROM cards AS T1\nJOIN legalities AS T2 ON T1.uuid = T2.uuid\nWHERE T1.type = 'Mythic'\nORDER BY T1.originalReleaseDate ASC\nLIMIT 1;\n\n\n\t----- bird -----\tcard_games",
    "516": "\nSELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallIllustrationId = T2.uuid WHERE T2.language = 'French' AND T1.artist = 'Volkan Ba\u00c7\u00b5a';\n\n\n\t----- bird -----\tcard_games",
    "517": "\nSELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND type = 'enchantment' AND legalities.status IN ('legal', 'partial_preview') GROUP BY name;\n\n\n\t----- bird -----\tcard_games",
    "518": "\nSELECT T1.format, T2.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'banned' GROUP BY T1.format ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tcard_games",
    "519": "\nSELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Battlebond';\n\n\n\t----- bird -----\tcard_games",
    "520": "\nSELECT T1.flavorText, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid ORDER BY COUNT(*) ASC LIMIT 1\n\n\n\t----- bird -----\tcard_games",
    "521": "\nSELECT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = '1997' AND T2.format = 'legacy' AND (T1.hasContentWarning = 1 OR T1.mtgoFoilId LIKE '%Wizards of the Coast%') \n\n\t----- bird -----\tcard_games",
    "522": "\nSELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.edhrecRank = 1;\n\n\n\t----- bird -----\tcard_games",
    "523": "\nSELECT AVG(T1.totalSetSize) AS average_sets, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T2.language;\n\n\n\t----- bird -----\tcard_games",
    "524": "\nSELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.scryfallId = T2.uuid WHERE T1.borderColor = 'black' AND T1.availability = 'arena';\n\n\n\t----- bird -----\tcard_games",
    "525": "\nSELECT DISTINCT T1.uuid FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'old school' AND (T2.status = 'restricted' OR T2.status = 'banned');\n\n\n\t----- bird -----\tcard_games",
    "526": "\nSELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'Paper';\n\n\n\t----- bird -----\tcard_games",
    "527": "\nSELECT r.text FROM rulings AS r \nJOIN cards AS c ON r.uuid = c.uuid \nWHERE c.artist = 'Kev Walker' AND c.asciiName = 'Kev Walker' \nORDER BY r.date DESC;\n\n\n\t----- bird -----\tcard_games",
    "528": "\nSELECT DISTINCT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = 'Hour of Devastation' GROUP BY T1.name;\n\n\n\t----- bird -----\tcard_games",
    "529": "\nSELECT DISTINCT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'ja' AND T2.translation IS NULL INTERSECT SELECT DISTINCT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'ko';\n\n\n\t----- bird -----\tcard_games",
    "530": "\nSELECT DISTINCT T1.frameStyle, T2.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND T2.status = 'banned';\n\n\n\t----- bird -----\tcard_games",
    "531": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN (\n    SELECT UserId, Reputation FROM users WHERE DisplayName = 'Harlan Dixon'\n) AS T2 ON T1.Id = T2.UserId ORDER BY T1.Reputation DESC LIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "532": "\nSELECT T2.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE YEAR(T1.CreationDate) = 2014 \n\n\t----- bird -----\tcodebase_community",
    "533": "\nSELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN visits AS T2 ON T1.Id = T2.UserId WHERE T2.LastAccessDate > '2014-09-01' GROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "534": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.Views DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "535": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.VoteTypeId = 1 AND T1.UpVotes > 100 INTERSECT SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.VoteTypeId = -1 AND T1.DownVotes > 100 \n\n\t----- bird -----\tcodebase_community",
    "536": "\nSELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Views > 10 AND T1.CreationDate >= '2013-01-01' GROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "537": "\nSELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\n\n\n\t----- bird -----\tcodebase_community",
    "538": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' \n\n\t----- bird -----\tcodebase_community",
    "539": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Eliciting priors from experts';\n\n\n\t----- bird -----\tcodebase_community",
    "540": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.ViewCount DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "541": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.Score DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "542": "\nSELECT SUM(CASE WHEN T1.UserId = 2 THEN 1 ELSE 0 END) AS TotalComments FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\n\n\n\t----- bird -----\tcodebase_community",
    "543": "\nSELECT COUNT(T1.AcceptedAnswerId) AS AnswerCount \nFROM posts AS T1 \nJOIN votes AS T2 ON T1.Id = T2.PostId \nWHERE T2.UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') \nAND T1.PostTypeId = 2 \nGROUP BY T1.Id \nORDER BY AnswerCount DESC \nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "544": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Examples for teaching: Correlation does not mean causation' ORDER BY T2.LastEditDate DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "545": "\nSELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND PostTypeId = 1 \n\n\t----- bird -----\tcodebase_community",
    "546": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Score >= 50 AND T2.ClosedDate IS NULL;\n\n\n\t----- bird -----\tcodebase_community",
    "547": "\nSELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Age > 30 AND T2.Score > 19 \n\n\t----- bird -----\tcodebase_community",
    "548": "\nSELECT T1.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts';\n\n\n\t----- bird -----\tcodebase_community",
    "549": "\nSELECT T1.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\n\n\n\t----- bird -----\tcodebase_community",
    "550": "\nSELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id ORDER BY COUNT(T1.Id) DESC LIMIT 1 \n\n\t----- bird -----\tcodebase_community",
    "551": "\nSELECT COUNT(Id) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\n\n\n\t----- bird -----\tcodebase_community",
    "552": "\nSELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\n\n\n\t----- bird -----\tcodebase_community",
    "553": "\nSELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND YEAR(Date) = 2011 \n\n\t----- bird -----\tcodebase_community",
    "554": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId ORDER BY COUNT(T2.Name) DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "555": "\nSELECT AVG(T1.Score) AS AverageScore\nFROM posts AS T1\nJOIN users AS T2 ON T1.OwnerUserId = T2.Id\nWHERE T2.DisplayName = 'csgillespie'\nGROUP BY T1.OwnerUserId;\n\n\n\t----- bird -----\tcodebase_community",
    "556": "\nSELECT AVG(badges.Id) AS AverageBadges FROM badges \nJOIN users ON badges.UserId = users.Id \nWHERE users.Views > 200 \nGROUP BY users.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "557": "\nSELECT CAST(COUNT(CASE WHEN T1.OwnerUserId IN (SELECT Id FROM users WHERE Age > 60) THEN T1.Id ELSE NULL END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 20 \n\n\t----- bird -----\tcodebase_community",
    "558": "\nSELECT COUNT(*) AS TotalVotes FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\n\n\n\t----- bird -----\tcodebase_community",
    "559": "\nSELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "560": "\nSELECT COUNT(*) FROM badges WHERE Name = 'Revival'\n\n\n\t----- bird -----\tcodebase_community",
    "561": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId ORDER BY T2.Score DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "562": "\nSELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount = 1910 \n\n\t----- bird -----\tcodebase_community",
    "563": "\nSELECT COUNT(T2.FavoriteCount) \nFROM posts AS T1 \nJOIN votes AS T2 ON T1.Id = T2.PostId \nWHERE T1.OwnerUserId = 3025 AND T2.VoteTypeId = 2 AND T1.CreationDate = '2014-04-23 20:29:39';\n\n\n\t----- bird -----\tcodebase_community",
    "564": "\nSELECT T1.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ParentId = 107829 LIMIT 1\n\n\n\t----- bird -----\tcodebase_community",
    "565": "\nSELECT CASE WHEN p.Score >= 5 THEN 'Yes' ELSE 'No' END AS WellFinished\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18'\nAND p.AcceptedAnswerId IS NULL;\n\n\n\t----- bird -----\tcodebase_community",
    "566": "\nSELECT Reputation FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Id = 65041)\n\n\n\t----- bird -----\tcodebase_community",
    "567": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Tiago Pasqualini' \n\n\t----- bird -----\tcodebase_community",
    "568": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.Id = 6347 \n\n\t----- bird -----\tcodebase_community",
    "569": "\nSELECT COUNT(*) AS VoteCount FROM votes WHERE PostId = (SELECT Id FROM posts WHERE Title LIKE '%data visualization%');\n\n\n\t----- bird -----\tcodebase_community",
    "570": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'DatEpicCoderGuyWhoPrograms' \n\n\t----- bird -----\tcodebase_community",
    "571": "\nSELECT COUNT(T1.PostId) AS PostCount, SUM(T2.BountyAmount) AS VoteCount\nFROM posts AS T1\nLEFT JOIN votes AS T2 ON T1.Id = T2.PostId\nWHERE T1.OwnerUserId = 24\nGROUP BY T1.OwnerUserId;\n\n\n\t----- bird -----\tcodebase_community",
    "572": "\nSELECT p.ViewCount FROM posts AS p WHERE p.Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\n\n\n\t----- bird -----\tcodebase_community",
    "573": "\nSELECT * FROM comments WHERE Score = 17; \n\n\n\t----- bird -----\tcodebase_community",
    "574": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.WebsiteUrl LIKE 'http://stackoverflow.com'\n\n\n\t----- bird -----\tcodebase_community",
    "575": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'SilentGhost'\n\n\n\t----- bird -----\tcodebase_community",
    "576": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%thank you user93!%';\n\n\n\t----- bird -----\tcodebase_community",
    "577": "\nSELECT T2.Text FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'A Lion' \n\n\t----- bird -----\tcodebase_community",
    "578": "\nSELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Understanding what Dassault iSight is doing?'\n\n\n\t----- bird -----\tcodebase_community",
    "579": "\nSELECT c.Text FROM comments AS c \nJOIN posts AS p ON c.PostId = p.Id \nWHERE p.Title = 'How does gentle boosting differ from AdaBoost?';\n\n\n\t----- bird -----\tcodebase_community",
    "580": "\nSELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Necromancer' ORDER BY u.Reputation DESC LIMIT 10;\n\n\n\t----- bird -----\tcodebase_community",
    "581": "\nSELECT T1.UserDisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Open source tools for visualizing multi-dimensional data?'\n\n\n\t----- bird -----\tcodebase_community",
    "582": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = (SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa') \n\n\t----- bird -----\tcodebase_community",
    "583": "\nSELECT p.Score, u.WebsiteUrl \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'Yevgeny' \nAND EXISTS (\n    SELECT 1 \n    FROM votes v \n    WHERE v.PostId = p.Id AND v.VoteTypeId = 2\n);\n\n\n\t----- bird -----\tcodebase_community",
    "584": "\nSELECT DISTINCT c.Text FROM comments AS c \nJOIN posthistory AS ph ON c.Id = ph.CommentId \nWHERE ph.PostId IN (\n    SELECT Id FROM posts WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\n) AND ph.UserDisplayName IS NOT NULL;\n\n\n\t----- bird -----\tcodebase_community",
    "585": "\nSELECT SUM(bountyAmount) AS TotalBountyAmount \nFROM votes \nWHERE PostId IN (\n    SELECT Id FROM posts WHERE Title = 'data'\n);\n\n\n\t----- bird -----\tcodebase_community",
    "586": "\nSELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.BountyAmount = 50 AND EXISTS (SELECT 1 FROM posts p WHERE p.Title LIKE '%variance%' AND p.OwnerUserId = v.UserId) \n\n\t----- bird -----\tcodebase_community",
    "587": "\nSELECT AVG(p.ViewCount) AS AverageViewCount, p.Title, c.Text, c.Score \nFROM posts p \nJOIN tags t ON p.Id = t.ExcerptPostId \nWHERE t.TagName = 'humor' \nORDER BY p.ViewCount DESC;\n\n\n\t----- bird -----\tcodebase_community",
    "588": "\nSELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.Id = 13 \n\n\t----- bird -----\tcodebase_community",
    "589": "\nSELECT UserId FROM users ORDER BY Reputation DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "590": "\nSELECT UserId FROM posts ORDER BY ViewCount ASC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "591": "\nSELECT COUNT(DISTINCT T1.UserId) \nFROM badges AS T1 \nJOIN users AS T2 ON T1.UserId = T2.Id \nWHERE T2.DisplayName LIKE 'Supporter' AND YEAR(T1.Date) = 2011;\n\n\n\t----- bird -----\tcodebase_community",
    "592": "\nSELECT COUNT(DISTINCT T1.UserId) \nFROM badges AS T1 \nJOIN users AS T2 ON T1.UserId = T2.Id \nGROUP BY T1.UserId \nHAVING COUNT(T1.Name) > 5;\n\n\n\t----- bird -----\tcodebase_community",
    "593": "\nSELECT COUNT(DISTINCT T1.Id) \nFROM users AS T1 \nJOIN badges AS T2 ON T1.Id = T2.UserId \nWHERE T2.Name IN ('Teacher', 'Supporter') AND T1.Location = 'New York';\n\n\n\t----- bird -----\tcodebase_community",
    "594": "\nSELECT T1.DisplayName, T2.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 1 \n\n\t----- bird -----\tcodebase_community",
    "595": "\nSELECT u.DisplayName\nFROM users u\nJOIN (\n    SELECT p.OwnerUserId, COUNT(*) AS post_count\n    FROM posts p\n    GROUP BY p.OwnerUserId\n) user_posts ON u.Id = user_posts.OwnerUserId\nWHERE user_posts.post_count = 1 AND u.Views >= 1000\n\n\n\t----- bird -----\tcodebase_community",
    "596": "\nSELECT u.DisplayName, b.Name\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nGROUP BY u.DisplayName, b.Name\nORDER BY COUNT(c.Id) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "597": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Teacher' AND T1.Location LIKE '%India%';\n\n\n\t----- bird -----\tcodebase_community",
    "598": "\nSELECT \n    (CAST(SUM(CASE WHEN T1.Name = 'Student' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.Id)) * 100 AS PercentageDifference\nFROM \n    badges AS T1\nJOIN \n    users AS T2 ON T1.UserId = T2.Id\nWHERE \n    YEAR(T1.Date) IN (2010, 2011)\nGROUP BY \n    YEAR(T1.Date);\n\n\n\t----- bird -----\tcodebase_community",
    "599": "\nSELECT DISTINCT T2.VoteTypeId FROM postHistory AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.PostId = 3720 GROUP BY T2.VoteTypeId;\n\n\n\t----- bird -----\tcodebase_community",
    "600": "\nSELECT p.Id, p.Title, COUNT(p.Id) AS Popularity\nFROM posts p\nJOIN postLinks pl ON p.Id = pl.PostId\nWHERE pl.RelatedPostId = 61217\nGROUP BY p.Id, p.Title;\n\n\n\t----- bird -----\tcodebase_community",
    "601": "\nSELECT Score, LinkTypeId FROM postLinks WHERE PostId = 395; \n\n\t----- bird -----\tcodebase_community",
    "602": "\nSELECT p.Id, u.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 60 \n\n\t----- bird -----\tcodebase_community",
    "603": "\nSELECT SUM(T2.FavoriteCount) \nFROM users AS T1 \nJOIN votes AS T2 ON T1.Id = T2.UserId \nWHERE T1.Id = 686 AND YEAR(T2.CreationDate) = 2011 \nAND T2.VoteTypeId = 3;\n\n\n\t----- bird -----\tcodebase_community",
    "604": "\nSELECT AVG(T1.UpVotes) AS AverageUpVotes, AVG(T2.Age) AS AverageUserAge\nFROM users AS T1\nJOIN (\n    SELECT UserId, COUNT(*) AS PostCount\n    FROM posts\n    GROUP BY UserId\n    HAVING PostCount > 10\n) AS T2 ON T1.Id = T2.UserId\n\n\n\t----- bird -----\tcodebase_community",
    "605": "\nSELECT COUNT(DISTINCT T1.UserId) \nFROM badges AS T1 \nJOIN users AS T2 ON T1.UserId = T2.Id \nWHERE T1.Name = 'Announcer';\n\n\n\t----- bird -----\tcodebase_community",
    "606": "\nSELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.LastAccessDate = '2010-07-19 07:39:08' \n\n\t----- bird -----\tcodebase_community",
    "607": "\nSELECT COUNT(*) FROM comments WHERE Score > 0;\n\n\n\t----- bird -----\tcodebase_community",
    "608": "\nSELECT T2.Text FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.CreationDate = '2010-07-19 19:25:47';\n\n\n\t----- bird -----\tcodebase_community",
    "609": "\nSELECT COUNT(*) FROM posts WHERE Score = 10;\n\n\n\t----- bird -----\tcodebase_community",
    "610": "\nSELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id ORDER BY u.Reputation DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "611": "\nSELECT u.Reputation FROM users u \nJOIN badges b ON u.Id = b.UserId \nWHERE b.Date = '2010-07-19 07:39:08';\n\n\n\t----- bird -----\tcodebase_community",
    "612": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'\n\n\n\t----- bird -----\tcodebase_community",
    "613": "\nSELECT DISTINCT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location LIKE 'Rochester, NY' \n\n\t----- bird -----\tcodebase_community",
    "614": "\nSELECT CAST(COUNT(T1.Id) AS REAL) * 100 / COUNT(T2.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Teacher' \n\n\t----- bird -----\tcodebase_community",
    "615": "\nSELECT CAST(COUNT(T1.Id) AS REAL) * 100 / COUNT(T2.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer' AND T2.Age BETWEEN 13 AND 19;\n\n\n\t----- bird -----\tcodebase_community",
    "616": "\nSELECT c.Score FROM comments AS c WHERE c.CreationDate = '2010-07-19 07:19:56 PM' \n\n\t----- bird -----\tcodebase_community",
    "617": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreationDate = '2010-07-19 19:37:33' \n\n\t----- bird -----\tcodebase_community",
    "618": "\nSELECT u.Age FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location = 'Vienna, Austria' AND b.Name = 'Badge Name';\n\n\n\t----- bird -----\tcodebase_community",
    "619": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Supporter' AND T2.Gender = 'Adult';\n\n\n\t----- bird -----\tcodebase_community",
    "620": "\nSELECT COUNT(T1.Views) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 07:39:08' GROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "621": "\nSELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id ORDER BY u.Reputation ASC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "622": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Sharpie'\n\n\n\t----- bird -----\tcodebase_community",
    "623": "\nSELECT COUNT(b.Id) FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Name = 'Supporter' AND u.Elder = 1;\n\n\n\t----- bird -----\tcodebase_community",
    "624": "\nSELECT DisplayName FROM users WHERE Id = 30; \n\n\t----- bird -----\tcodebase_community",
    "625": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN locations AS T2 ON T1.Location = T2.Name WHERE T2.Country = 'New York'\n\n\n\t----- bird -----\tcodebase_community",
    "626": "\nSELECT COUNT(*) FROM votes WHERE CreationDate LIKE '2010-%';\n\n\n\t----- bird -----\tcodebase_community",
    "627": "\nSELECT COUNT(*) FROM users WHERE Age > 18;\n\n\n\t----- bird -----\tcodebase_community",
    "628": "\nSELECT u.DisplayName, SUM(p.ViewCount) as TotalViews\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nGROUP BY u.DisplayName\nORDER BY TotalViews DESC\nLIMIT 10;\n\n\n\t----- bird -----\tcodebase_community",
    "629": "\nSELECT CAST(SUM(CASE WHEN YEAR(T1.CreationDate) = 2010 THEN T2.VoteTypeId ELSE 0 END) AS REAL) / SUM(CASE WHEN YEAR(T1.CreationDate) = 2011 THEN T2.VoteTypeId ELSE 0 END) AS VoteRatio\nFROM votes AS T1\nJOIN posts AS T2 ON T1.PostId = T2.Id\nWHERE YEAR(T1.CreationDate) IN (2010, 2011)\nGROUP BY YEAR(T1.CreationDate);\n\n\n\t----- bird -----\tcodebase_community",
    "630": "\nSELECT T2.TagName FROM users AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'John Stauffer' \n\n\t----- bird -----\tcodebase_community",
    "631": "\nSELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo');\n\n\n\t----- bird -----\tcodebase_community",
    "632": "\nSELECT COUNT(*) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan');\n\n\n\t----- bird -----\tcodebase_community",
    "633": "\nSELECT p.Id FROM posts p JOIN answers a ON p.Id = a.PostId WHERE p.OwnerDisplayName = 'slashnick' ORDER BY a.AnswerCount DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "634": "\nSELECT p.Id, p.Title, p.Score \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') \nORDER BY p.Score DESC \nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "635": "\nSELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker') AND VoteTypeId IN (1, 2) AND VoteCount > 4 \n\n\t----- bird -----\tcodebase_community",
    "636": "\nSELECT COUNT(T2.Id) AS NegativeCommentsCount\nFROM users AS T1\nJOIN posts AS T2 ON T1.Id = T2.OwnerUserId\nWHERE T1.DisplayName = 'Neil McGuigan'\nAND EXISTS (\n    SELECT 1\n    FROM comments AS T3\n    WHERE T3.UserId = T1.Id\n      AND T3.Score < 0\n);\n\n\n\t----- bird -----\tcodebase_community",
    "637": "\nSELECT DISTINCT T1.TagName FROM tags AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.Tags WHERE T2.OwnerDisplayName = 'Mark Meckes' AND T2.CommentCount = 0 \n\n\t----- bird -----\tcodebase_community",
    "638": "\nSELECT DISTINCT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Organizer';\n\n\n\t----- bird -----\tcodebase_community",
    "639": "\nSELECT CAST(COUNT(CASE WHEN T1.Body LIKE '%R%' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.AccountId IN (SELECT Id FROM users WHERE DisplayName LIKE 'Community') \n\n\t----- bird -----\tcodebase_community",
    "640": "\nSELECT p1.ViewCount - p2.ViewCount AS ViewCountDifference\nFROM posts p1\nJOIN posts p2 ON p1.OwnerUserId = p2.OwnerUserId AND p1.CreationDate < p2.CreationDate\nWHERE p1.OwnerDisplayName = 'Mornington' AND p2.OwnerDisplayName = 'Amos';\n\n\n\t----- bird -----\tcodebase_community",
    "641": "\nSELECT COUNT(DISTINCT T1.UserId) \nFROM badges AS T1 \nJOIN users AS T2 ON T1.UserId = T2.Id \nWHERE T2.DisplayName LIKE 'Commentator' AND YEAR(T1.Date) = 2014;\n\n\n\t----- bird -----\tcodebase_community",
    "642": "\nSELECT COUNT(*) FROM posts WHERE CreationDate = '2010-07-21';\n\n\n\t----- bird -----\tcodebase_community",
    "643": "\nSELECT T1.DisplayName, T2.Age FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.ViewCount DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "644": "\nSELECT T1.LastEditDate, T2.UserId FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Detecting a given face in a database of facial images';\n\n\n\t----- bird -----\tcodebase_community",
    "645": "\nSELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 0; \n\n\t----- bird -----\tcodebase_community",
    "646": "\nSELECT p.Title, u.DisplayName FROM posts p \nJOIN comments c ON p.Id = c.PostId \nWHERE c.Score > 0 \nORDER BY c.CreationDate DESC;\n\n\n\t----- bird -----\tcodebase_community",
    "647": "\nSELECT b.Name FROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.Location = 'North Pole'\nAND YEAR(b.Date) = 2011;\n\n\n\t----- bird -----\tcodebase_community",
    "648": "\nSELECT T2.DisplayName, T1.WebsiteUrl \nFROM users AS T1 \nJOIN posts AS T2 ON T1.Id = T2.OwnerUserId \nWHERE T2.FavoriteCount > 150;\n\n\n\t----- bird -----\tcodebase_community",
    "649": "\nSELECT \n    ph.PostHistoryTypeId, \n    ph.Text AS PostHistoryText, \n    ph.CreationDate, \n    u.DisplayName AS LastEditorDisplayName\nFROM \n    postHistory ph\nJOIN \n    posts p ON ph.PostId = p.Id\nJOIN \n    users u ON ph.UserId = u.Id\nWHERE \n    p.Title = 'What is the best introductory Bayesian statistics textbook?'\nORDER BY \n    ph.CreationDate DESC;\n\n\n\t----- bird -----\tcodebase_community",
    "650": "\nSELECT T1.LastAccessDate, T2.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Outliers' ORDER BY T1.LastAccessDate DESC LIMIT 5;\n\n\n\t----- bird -----\tcodebase_community",
    "651": "\nSELECT T2.Title FROM posts AS T1 INNER JOIN post_links AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%How to tell if something happened in a data set which monitors a value over time%';\n\n\n\t----- bird -----\tcodebase_community",
    "652": "\nSELECT p.Id, b.Name FROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nJOIN badges b ON p.BadgeId = b.Id \nWHERE u.DisplayName = 'Samuel' AND YEAR(p.CreationDate) = 2013 \nORDER BY p.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "653": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.ViewCount DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "654": "\nSELECT T1.DisplayName, T2.Location FROM users AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.TagName = 'hypothesis-testing' \n\n\t----- bird -----\tcodebase_community",
    "655": "\nSELECT T2.Title, T3.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN postHistory AS T3 ON T2.RelatedPostId = T3.PostId WHERE T1.Title = 'What are principal component scores?'\n\n\n\t----- bird -----\tcodebase_community",
    "656": "\nSELECT T1.DisplayName FROM posts AS T1 INNER JOIN (\n    SELECT PostId, MAX(Score) AS MaxScore FROM comments GROUP BY PostId\n) AS T2 ON T1.Id = T2.PostId \n\n\t----- bird -----\tcodebase_community",
    "657": "\nSELECT T1.DisplayName, T2.WebsiteUrl \nFROM votes AS T1 \nJOIN users AS T2 ON T1.UserId = T2.Id \nWHERE T1.VoteTypeId = 8 \nORDER BY T1.BountyAmount DESC \nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "658": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId ORDER BY T2.VoteTypeId DESC LIMIT 5;\n\n\n\t----- bird -----\tcodebase_community",
    "659": "\nSELECT COUNT(T1.Id) AS TagCount \nFROM tags AS T1 \nJOIN posts AS T2 ON T1.ExcerptPostId = T2.Id \nWHERE T2.PostCount BETWEEN 5000 AND 7000 \nGROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "660": "\nSELECT T1.OwnerUserId FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId ORDER BY T2.BountyAmount DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "661": "\nSELECT DATEDIFF(CURDATE(), CreationDate) AS Age FROM users ORDER BY Reputation DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "662": "\nSELECT COUNT(T1.Id) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate LIKE '2011%' AND T1.BountyAmount = 50 \n\n\t----- bird -----\tcodebase_community",
    "663": "\nSELECT Id FROM users ORDER BY CreationDate ASC LIMIT 1\n\n\n\t----- bird -----\tcodebase_community",
    "664": "\nSELECT T2.Score FROM tags AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.TagsId ORDER BY T1.Count DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "665": "\nSELECT AVG(CASE WHEN COUNT(T2.Id) <= 2 THEN 1 ELSE 0 END) * 30 / 12 AS AverageMonthlyLinks\nFROM posts AS T1\nLEFT JOIN postLinks AS T2 ON T1.Id = T2.PostId\nWHERE YEAR(T1.CreationDate) = 2010\nGROUP BY YEAR(T1.CreationDate)\nHAVING COUNT(T2.Id) <= 2;\n\n\n\t----- bird -----\tcodebase_community",
    "666": "\nSELECT p.Id FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.UserId = 1465 ORDER BY v.VoteTypeId DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "667": "\nSELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId ORDER BY T2.CreationDate ASC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "668": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId ORDER BY T2.Score DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "669": "\nSELECT T1.CreationDate FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.OwnerDisplayName = 'chl' ORDER BY T1.CreationDate ASC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "670": "\nSELECT MIN(CreationDate) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users ORDER BY Age ASC LIMIT 1)\n\n\n\t----- bird -----\tcodebase_community",
    "671": "\nSELECT T1.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date ASC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "672": "\nSELECT COUNT(DISTINCT u.Id) \nFROM users u \nJOIN posts p ON u.Id = p.OwnerUserId \nWHERE u.Location = 'United Kingdom' AND SUM(v.FavoriteCount) >= 4;\n\n\n\t----- bird -----\tcodebase_community",
    "673": "\nSELECT AVG(T2.VoteCount) \nFROM users AS T1 \nJOIN votes AS T2 ON T1.Id = T2.UserId \nWHERE T1.LastAccessDate = (SELECT MIN(LastAccessDate) FROM users);\n\n\n\t----- bird -----\tcodebase_community",
    "674": "\nSELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "675": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Reputation > 2000 AND T2.Views > 1000 \n\n\t----- bird -----\tcodebase_community",
    "676": "\nSELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Age > 18 ORDER BY T1.DisplayName;\n\n\n\t----- bird -----\tcodebase_community",
    "677": "\nSELECT COUNT(T1.Id) AS PostCount \nFROM posts AS T1 \nJOIN users AS T2 ON T1.OwnerUserId = T2.Id \nWHERE T2.DisplayName = 'Jay Stevens' AND YEAR(T1.CreationDate) = 2010;\n\n\n\t----- bird -----\tcodebase_community",
    "678": "\nSELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "679": "\nSELECT p.Id, p.Title FROM posts p WHERE p.Score = ( SELECT MAX(Score) FROM posts );\n\n\n\t----- bird -----\tcodebase_community",
    "680": "\nSELECT AVG(T2.Score) AS AverageScore\nFROM users AS T1\nJOIN posts AS T2 ON T1.Id = T2.OwnerUserId\nWHERE T1.DisplayName = 'Stephen Turner'\nGROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "681": "\nSELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount > 20000 AND YEAR(T1.CreationDate) = 2011 \n\n\t----- bird -----\tcodebase_community",
    "682": "\nSELECT p.Id, u.DisplayName FROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE YEAR(p.CreationDate) = 2010 ORDER BY p.Score DESC LIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "683": "\nSELECT CAST(SUM(CASE WHEN T1.Reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE YEAR(T2.CreationDate) = 2011 GROUP BY T1.Reputation;\n\n\n\t----- bird -----\tcodebase_community",
    "684": "\nSELECT CAST(COUNT(T1.Id) AS REAL) * 100 / COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Age BETWEEN 13 AND 19 GROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "685": "\nSELECT p.Views, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Computer Game Datasets' ORDER BY p.LastActivityDate DESC LIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "686": "\nSELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\n\n\n\t----- bird -----\tcodebase_community",
    "687": "\nSELECT COUNT(*) FROM comments WHERE PostId = ( SELECT Id FROM posts ORDER BY Score DESC LIMIT 1 );\n\n\n\t----- bird -----\tcodebase_community",
    "688": "\nSELECT COUNT(T1.Id) AS ViewCount FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount > 35000 AND T2.UserId != T1.OwnerUserId \n\n\t----- bird -----\tcodebase_community",
    "689": "\nSELECT T2.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 183 ORDER BY T2.LastEditDate DESC LIMIT 1 \n\n\t----- bird -----\tcodebase_community",
    "690": "\nSELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "691": "\nSELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.VoteTypeId = 3 AND T1.UpVotes > 5000 GROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "692": "\nSELECT DATEDIFF(CURRENT_DATE, T1.CreationDate) AS DaysToBadge FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Zolomon' AND T2.Name = 'Your Badge Name';\n\n\n\t----- bird -----\tcodebase_community",
    "693": "\nSELECT COUNT(T1.Id) AS PostCount, COUNT(T2.Id) AS CommentCount \nFROM users AS T1 \nJOIN posts AS T3 ON T1.Id = T3.OwnerUserId \nJOIN comments AS T2 ON T3.Id = T2.UserId \nWHERE T1.Id = (SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1)\n\n\n\t----- bird -----\tcodebase_community",
    "694": "\nSELECT T2.Text, T1.DisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Analysing wind data with R' ORDER BY T2.CreationDate DESC LIMIT 1; \n\n\t----- bird -----\tcodebase_community",
    "695": "\nSELECT COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Citizen Patrol'\n\n\n\t----- bird -----\tcodebase_community",
    "696": "\nSELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Tags LIKE '%' || T2.TagName || '%' WHERE T2.TagName = 'careers' \n\n\t----- bird -----\tcodebase_community",
    "697": "\nSELECT Reputation, ViewCount FROM users WHERE DisplayName = 'Jarrod Dixon'\n\n\n\t----- bird -----\tcodebase_community",
    "698": "\nSELECT COUNT(CASE WHEN T1.PostId = 1 THEN T2.Id ELSE NULL END) AS TotalComments, \n       COUNT(CASE WHEN T1.PostId = 1 THEN T3.Id ELSE NULL END) AS TotalAnswers\nFROM posts AS T1\nJOIN comments AS T2 ON T1.Id = T2.PostId\nJOIN answers AS T3 ON T1.Id = T3.PostId\nWHERE T1.Title = 'Clustering 1D data'\nGROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "699": "\nSELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\n\n\n\t----- bird -----\tcodebase_community",
    "700": "\nSELECT COUNT(*) FROM votes WHERE BountyAmount > 30;\n\n\n\t----- bird -----\tcodebase_community",
    "701": "\nSELECT CAST(COUNT(T1.Id) AS REAL) * 100 / COUNT(T2.UserId) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 50 GROUP BY T2.DisplayName ORDER BY COUNT(T1.Id) DESC LIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "702": "\nSELECT COUNT(*) FROM posts WHERE Score < 20; \n\n\t----- bird -----\tcodebase_community",
    "703": "\nSELECT COUNT(T1.Id) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.TagsId WHERE T1.Count >= 20 AND T1.Id < 15 \n\n\t----- bird -----\tcodebase_community",
    "704": "\nSELECT T1.ExcerptPostId, T2.WikiPostId FROM tags AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.Tags WHERE T1.TagName = 'sample'\n\n\n\t----- bird -----\tcodebase_community",
    "705": "\nSELECT u.Reputation, v.UpVotes \nFROM users u \nJOIN votes v ON u.Id = v.UserId \nWHERE v.Text LIKE '%fine, you win :)%';\n\n\n\t----- bird -----\tcodebase_community",
    "706": "\nSELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%linear regression%' AND T2.Comment LIKE '%commented on%'\n\n\n\t----- bird -----\tcodebase_community",
    "707": "\nSELECT c.*\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1\n\n\n\t----- bird -----\tcodebase_community",
    "708": "\nSELECT T1.CreationDate, T2.Age FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Body LIKE '%webiste%' GROUP BY T1.Id;\n\n\n\t----- bird -----\tcodebase_community",
    "709": "\nSELECT COUNT(T1.Id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5 \n\n\t----- bird -----\tcodebase_community",
    "710": "\nSELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CommentCount = 1 AND T2.Score = 0 \n\n\t----- bird -----\tcodebase_community",
    "711": "\nSELECT COUNT(T1.Id) \nFROM users AS T1 \nJOIN comments AS T2 ON T1.Id = T2.UserId \nWHERE T2.Score = 0 AND T1.Age = 40;\n\n\n\t----- bird -----\tcodebase_community",
    "712": "\nSELECT p.Id, c.Text FROM posts p \nJOIN comments c ON p.Id = c.PostId \nWHERE p.Title = 'Group differences on a five point Likert item' \nORDER BY c.CreationDate DESC;\n\n\n\t----- bird -----\tcodebase_community",
    "713": "\nSELECT SUM(T1.UpVotes) AS UpVoteNumber \nFROM users AS T1 \nJOIN votes AS T2 ON T1.Id = T2.UserId \nWHERE T2.Text LIKE '%R is also lazy evaluated.%';\n\n\n\t----- bird -----\tcodebase_community",
    "714": "\nSELECT T2.Text FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Harvey Motulsky' \n\n\t----- bird -----\tcodebase_community",
    "715": "\nSELECT T2.DisplayName FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 1 AND 5 AND T1.DownVotes = 0 \n\n\t----- bird -----\tcodebase_community",
    "716": "\nSELECT CAST(SUM(CASE WHEN T1.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Id) FROM votes AS T1 INNER JOIN comments AS T2 ON T1.UserId = T2.UserId WHERE T2.Score BETWEEN 5 AND 10 GROUP BY T1.UserId\n\n\n\t----- bird -----\tcodebase_community",
    "717": "\nSELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = '3-D Man';\n\n\n\t----- bird -----\tsuperhero",
    "718": "\nSELECT COUNT(s.id) FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' \n\n\t----- bird -----\tsuperhero",
    "719": "\nSELECT COUNT(s.id) FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND s.height_cm > 200; \n\n\t----- bird -----\tsuperhero",
    "720": "\nSELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id HAVING COUNT(T2.power_id) > 15 \n\n\t----- bird -----\tsuperhero",
    "721": "\nSELECT COUNT(s.id) FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'blue eyes' \n\n\t----- bird -----\tsuperhero",
    "722": "\nSELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse';\n\n\n\t----- bird -----\tsuperhero",
    "723": "\nSELECT COUNT(s.id) FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Blue Eyes' AND a.attribute_value = 1 AND s.superpower_id IN (SELECT id FROM superpower WHERE power_name = 'Agility')\n\n\n\t----- bird -----\tsuperhero",
    "724": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'eye_colour' AND T3.colour = 'blue' AND T3.attribute_name = 'hair_colour' AND T3.colour = 'blond';\n\n\n\t----- bird -----\tsuperhero",
    "725": "\nSELECT COUNT(s.id) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics';\n\n\n\t----- bird -----\tsuperhero",
    "726": "\nSELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "727": "\nSELECT publisher_name FROM publisher WHERE superhero_name = 'Sauron'\n\n\n\t----- bird -----\tsuperhero",
    "728": "\nSELECT COUNT(s.id) FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'blue eyes' AND s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\n\n\n\t----- bird -----\tsuperhero",
    "729": "\nSELECT AVG(height_cm) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\n\n\n\t----- bird -----\tsuperhero",
    "730": "\nSELECT CAST(SUM(CASE WHEN T2.power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') \n\n\t----- bird -----\tsuperhero",
    "731": "\nSELECT COUNT(DISTINCT publisher_id) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics');\n\n\n\t----- bird -----\tsuperhero",
    "732": "\nSELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id ORDER BY T1.height_cm ASC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "733": "\nSELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'Gold' AND T1.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\n\n\n\t----- bird -----\tsuperhero",
    "734": "\nSELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II';\n\n\n\t----- bird -----\tsuperhero",
    "735": "\nSELECT COUNT(*) FROM superhero WHERE hair_colour_id = ( SELECT id FROM colour WHERE colour = 'blonde' )\n\n\n\t----- bird -----\tsuperhero",
    "736": "\nSELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value < 50 ORDER BY ha.attribute_value ASC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "737": "\nSELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat';\n\n\n\t----- bird -----\tsuperhero",
    "738": "\nSELECT COUNT(*) FROM superhero WHERE hero_power.power_id = ( SELECT id FROM superpower WHERE power_name = 'Durability' ) AND hero_power.attribute_value < 50; \n\n\t----- bird -----\tsuperhero",
    "739": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch' \n\n\t----- bird -----\tsuperhero",
    "740": "\nSELECT COUNT(s.id) FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_name = 'strength' AND ha.attribute_value = 100 AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female');\n\n\n\t----- bird -----\tsuperhero",
    "741": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id ORDER BY COUNT(T2.power_id) DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "742": "\nSELECT COUNT(s.id) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.attribute_name = 'vampire';\n\n\n\t----- bird -----\tsuperhero",
    "743": "\nSELECT \n    SUM(CASE WHEN T1.alignment_id = 2 THEN 1 ELSE 0 END) * 100 / COUNT(T1.id) AS percentage_self_interest,\n    COUNT(T2.hero_id) AS superheroes_marvel\nFROM \n    superhero AS T1\nJOIN \n    hero_attribute AS T2 ON T1.id = T2.hero_id\nWHERE \n    T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\nGROUP BY \n    T1.alignment_id;\n\n\n\t----- bird -----\tsuperhero",
    "744": "\nSELECT publisher_name, COUNT(*) AS total_superheroes\nFROM superhero\nWHERE publisher_id IN (\n    SELECT id FROM publisher WHERE publisher_name IN ('DC Comics', 'Marvel Comics')\n)\nGROUP BY publisher_name\nHAVING COUNT(*) > (\n    SELECT COUNT(*)\n    FROM superhero\n    WHERE publisher_id NOT IN (\n        SELECT id FROM publisher WHERE publisher_name IN ('DC Comics', 'Marvel Comics')\n    )\n);\n\n\n\t----- bird -----\tsuperhero",
    "745": "\nSELECT publisher_id FROM superhero WHERE superhero_name = 'Star Trek';\n\n\n\t----- bird -----\tsuperhero",
    "746": "\nSELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute;\n\n\n\t----- bird -----\tsuperhero",
    "747": "\nSELECT COUNT(*) FROM superhero WHERE full_name IS NULL; \n\n\n\t----- bird -----\tsuperhero",
    "748": "\nSELECT eye_colour_id FROM superhero WHERE id = 75;\n\n\n\t----- bird -----\tsuperhero",
    "749": "\nSELECT sp.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Deathlok' \n\n\t----- bird -----\tsuperhero",
    "750": "\nSELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')\n\n\n\t----- bird -----\tsuperhero",
    "751": "\nSELECT sp.power_name FROM superhero AS sh \nJOIN hero_power AS hp ON sh.id = hp.hero_id \nJOIN superpower AS sp ON hp.power_id = sp.id \nWHERE sh.gender_id IN (SELECT id FROM gender WHERE gender = 'Male') \nORDER BY sp.power_name LIMIT 5;\n\n\n\t----- bird -----\tsuperhero",
    "752": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'Alien';\n\n\n\t----- bird -----\tsuperhero",
    "753": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.attribute_id NOT IN (SELECT id FROM attribute WHERE attribute_name = 'eye_color') \n\n\t----- bird -----\tsuperhero",
    "754": "\nSELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.id = 56 \n\n\t----- bird -----\tsuperhero",
    "755": "\nSELECT full_name FROM superhero WHERE gender_id = ( SELECT id FROM gender WHERE gender = 'Male' ) AND race_id = ( SELECT id FROM race WHERE race = 'Demi-God' );\n\n\n\t----- bird -----\tsuperhero",
    "756": "\nSELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE attribute_name = 'bad');\n\n\n\t----- bird -----\tsuperhero",
    "757": "\nSELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169; \n\n\t----- bird -----\tsuperhero",
    "758": "\nSELECT T2.hair_colour FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm = 185 AND T2.attribute_name = 'hair_colour';\n\n\n\t----- bird -----\tsuperhero",
    "759": "\nSELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id ORDER BY T1.weight_kg DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "760": "\nSELECT CAST(COUNT(DISTINCT CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180 \n\n\t----- bird -----\tsuperhero",
    "761": "\nSELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\n\n\n\t----- bird -----\tsuperhero",
    "762": "\nSELECT sp.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id GROUP BY sp.power_name ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "763": "\nSELECT attribute_value FROM hero_attribute WHERE superhero_name = 'Abomination';\n\n\n\t----- bird -----\tsuperhero",
    "764": "\nSELECT sp.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sh.id = 1 \n\n\t----- bird -----\tsuperhero",
    "765": "\nSELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Stealth';\n\n\n\t----- bird -----\tsuperhero",
    "766": "\nSELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute ) \n\n\t----- bird -----\tsuperhero",
    "767": "\nSELECT AVG(weight_kg) FROM superhero WHERE skin_colour_id IS NULL; \n\n\t----- bird -----\tsuperhero",
    "768": "\nSELECT COUNT(DISTINCT T1.publisher_id) \nFROM superhero AS T1 \nJOIN publisher AS T2 ON T1.publisher_id = T2.id \nWHERE T2.publisher_name = 'Dark Horse Comics';\n\n\n\t----- bird -----\tsuperhero",
    "769": "\nSELECT s.superhero_name FROM superhero s \nJOIN publisher p ON s.publisher_id = p.id \nWHERE p.publisher_name = 'Dark Horse Comics' \nORDER BY COUNT(hp.power_id) DESC \nLIMIT 1;\n\n\n\t----- bird -----\tsuperhero",
    "770": "\nSELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abraham Sapien';\n\n\n\t----- bird -----\tsuperhero",
    "771": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight';\n\n\n\t----- bird -----\tsuperhero",
    "772": "\nSELECT DISTINCT T1.eye_colour_id, T2.hair_colour_id, T3.skin_colour_id \nFROM superhero AS T1 \nJOIN hero_attribute AS T2 ON T1.id = T2.hero_id \nJOIN attribute AS T3 ON T2.attribute_id = T3.id \nWHERE T1.gender_id = (SELECT id FROM gender WHERE gender_name = 'Female') \nAND T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\n\n\n\t----- bird -----\tsuperhero",
    "773": "\nSELECT s.superhero_name, p.publisher_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name IN ('eye_colour', 'hair_colour', 'skin_colour') \nGROUP BY s.id, p.publisher_name \nHAVING COUNT(DISTINCT a.attribute_value) = 3;\n\n\n\t----- bird -----\tsuperhero",
    "774": "\nSELECT T1.race_id FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb';\n\n\n\t----- bird -----\tsuperhero",
    "775": "\nSELECT CAST(COUNT(CASE WHEN T1.gender = 'Female' AND T2.colour = 'Blue' THEN 1 END) AS REAL) * 100 / COUNT(T1.gender) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.gender = 'Female';\n\n\n\t----- bird -----\tsuperhero",
    "776": "\nSELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler';\n\n\n\t----- bird -----\tsuperhero",
    "777": "\nSELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13';\n\n\n\t----- bird -----\tsuperhero",
    "778": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T2.power_id = (SELECT id FROM superpower WHERE power_name = 'Adaptation');\n\n\n\t----- bird -----\tsuperhero",
    "779": "\nSELECT COUNT(DISTINCT T2.power_id) \nFROM superhero AS T1 \nJOIN hero_power AS T2 ON T1.id = T2.hero_id \nWHERE T1.superhero_name = 'Amazo';\n\n\n\t----- bird -----\tsuperhero",
    "780": "\nSELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Hunter Zolomon';\n\n\n\t----- bird -----\tsuperhero",
    "781": "\nSELECT T1.height_cm FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'eye_colour' AND T2.attribute_value = 3;\n\n\n\t----- bird -----\tsuperhero",
    "782": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = 0 AND T2.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'black') \n\n\t----- bird -----\tsuperhero",
    "783": "\nSELECT DISTINCT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'Gold'\n\n\n\t----- bird -----\tsuperhero",
    "784": "\nSELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'vampire');\n\n\n\t----- bird -----\tsuperhero",
    "785": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.attribute_value = 0;\n\n\n\t----- bird -----\tsuperhero",
    "786": "\nSELECT COUNT(s.id) FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_name = 'strength' ORDER BY ha.attribute_value DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "787": "\nSELECT T2.race, T1.alignment FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Cameron Hicks';\n\n\n\t----- bird -----\tsuperhero",
    "788": "\nSELECT CAST(SUM(CASE WHEN T2.gender_id = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') \n\n\t----- bird -----\tsuperhero",
    "789": "\nSELECT AVG(weight_kg) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race_name = 'Alien') \n\n\t----- bird -----\tsuperhero",
    "790": "\nSELECT ABS(SUM(CASE WHEN superhero_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) - SUM(CASE WHEN superhero_name = 'Charles Chandler' THEN weight_kg ELSE 0 END)) AS weight_difference\nFROM superhero;\n\n\n\t----- bird -----\tsuperhero",
    "791": "\nSELECT s.superhero_name, AVG(s.height_cm) as average_height\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nGROUP BY s.superhero_name;\n\n\n\t----- bird -----\tsuperhero",
    "792": "\nSELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination';\n\n\n\t----- bird -----\tsuperhero",
    "793": "\nSELECT COUNT(s.id) FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race_name = 'god/eternal' AND s.gender_id = 1 \n\n\t----- bird -----\tsuperhero",
    "794": "\nSELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "795": "\nSELECT COUNT(id) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE attribute_name = 'neutral');\n\n\n\t----- bird -----\tsuperhero",
    "796": "\nSELECT a.attribute_name, ha.attribute_value \nFROM attribute AS a \nJOIN hero_attribute AS ha ON a.id = ha.attribute_id \nWHERE ha.hero_id = (SELECT id FROM superhero WHERE superhero_name = '3-D Man');\n\n\n\t----- bird -----\tsuperhero",
    "797": "\nSELECT s.superhero_name FROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'blue eyes' AND a.attribute_value = 1 \nAND s.gender_id IN (SELECT id FROM gender WHERE gender = 'brown hair') \nAND s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'X-Men');\n\n\n\t----- bird -----\tsuperhero",
    "798": "\nSELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\n\n\n\t----- bird -----\tsuperhero",
    "799": "\nSELECT COUNT(id) FROM superhero WHERE publisher_id IS NULL; \n\n\t----- bird -----\tsuperhero",
    "800": "\nSELECT CAST(COUNT(CASE WHEN eye_colour_id = 1 THEN superhero_name END) AS REAL) * 100 / COUNT(superhero_name) FROM superhero WHERE eye_colour_id = 1;\n\n\n\t----- bird -----\tsuperhero",
    "801": "\nSELECT CAST(SUM(CASE WHEN T1.gender_id = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' UNION SELECT CAST(SUM(CASE WHEN T1.gender_id = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\n\n\n\t----- bird -----\tsuperhero",
    "802": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id ORDER BY T2.attribute_value DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "803": "\nSELECT power_id FROM superpower WHERE power_name = 'cryokinesis'\n\n\n\t----- bird -----\tsuperhero",
    "804": "\nSELECT superhero_name FROM superhero WHERE id = 294; \n\n\t----- bird -----\tsuperhero",
    "805": "\nSELECT T1.full_name FROM superhero AS T1 LEFT JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value IS NULL \n\n\t----- bird -----\tsuperhero",
    "806": "\nSELECT T2.eye_colour_id FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.full_name = 'Karen Beecher-Duncan' \n\n\t----- bird -----\tsuperhero",
    "807": "\nSELECT DISTINCT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Helen Parr';\n\n\n\t----- bird -----\tsuperhero",
    "808": "\nSELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188 \n\n\t----- bird -----\tsuperhero",
    "809": "\nSELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38; \n\n\t----- bird -----\tsuperhero",
    "810": "\nSELECT T2.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id ORDER BY T2.attribute_value DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "811": "\nSELECT T1.alignment, T2.power_name \nFROM superhero AS T1 \nJOIN hero_power AS T2 ON T1.id = T2.hero_id \nWHERE T1.superhero_name = 'Atom IV';\n\n\n\t----- bird -----\tsuperhero",
    "812": "\nSELECT full_name FROM superhero WHERE eye_colour_id = ( SELECT id FROM colour WHERE colour = 'blue' )\nORDER BY full_name LIMIT 5;\n\n\n\t----- bird -----\tsuperhero",
    "813": "\nSELECT AVG(attribute_value) AS average_attribute_value \nFROM hero_attribute \nJOIN superhero ON hero_attribute.hero_id = superhero.id \nWHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'Neutral');\n\n\n\t----- bird -----\tsuperhero",
    "814": "\nSELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.attribute_value = 100 GROUP BY T2.colour ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "815": "\nSELECT COUNT(s.id) FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' AND s.alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'Good');\n\n\n\t----- bird -----\tsuperhero",
    "816": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80 \n\n\t----- bird -----\tsuperhero",
    "817": "\nSELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Male') AND T1.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blue');\n\n\n\t----- bird -----\tsuperhero",
    "818": "\nSELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.alignment_id IN (SELECT id FROM alignment WHERE attribute_name = 'Bad');\n\n\n\t----- bird -----\tsuperhero",
    "819": "\nSELECT SUM(CASE WHEN T1.eye_colour_id = 2 THEN 1 ELSE 0 END) - COUNT(T1.id) AS difference FROM superhero AS T1 LEFT JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'weight_kg' AND T2.attribute_value IS NULL;\n\n\n\t----- bird -----\tsuperhero",
    "820": "\nSELECT T1.weight_kg FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'strength' AND T2.attribute_value = 900;\n\n\n\t----- bird -----\tsuperhero",
    "821": "\nSELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Ajax';\n\n\n\t----- bird -----\tsuperhero",
    "822": "\nSELECT COUNT(s.id) FROM superhero s JOIN colour c ON s.skin_colour_id = c.id WHERE c.colour = 'green' AND s.alignment_id IN (SELECT id FROM alignment WHERE alignment_name = 'villain');\n\n\n\t----- bird -----\tsuperhero",
    "823": "\nSELECT COUNT(s.id) FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' AND s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\n\n\n\t----- bird -----\tsuperhero",
    "824": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value = 1 AND T2.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'control wind') ORDER BY T1.superhero_name ASC; \n\n\t----- bird -----\tsuperhero",
    "825": "\nSELECT T1.gender FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_name = 'Phoenix Force' GROUP BY T1.gender;\n\n\n\t----- bird -----\tsuperhero",
    "826": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ORDER BY T1.weight_kg DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "827": "\nSELECT AVG(s.height_cm) AS average_height FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.race_id != 1;\n\n\n\t----- bird -----\tsuperhero",
    "828": "\nSELECT COUNT(*) FROM superhero WHERE height_cm = ( SELECT MAX(height_cm) FROM superhero );\n\n\n\t----- bird -----\tsuperhero",
    "829": "\nSELECT publisher_name, COUNT(*) AS superhero_count\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nGROUP BY publisher_name\nORDER BY superhero_count DESC\nLIMIT 1;\n\n\n\t----- bird -----\tsuperhero",
    "830": "\nSELECT T2.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value ASC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "831": "\nSELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination';\n\n\n\t----- bird -----\tsuperhero",
    "832": "\nSELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id ORDER BY T2.attribute_value DESC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "833": "\nSELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\n\n\n\t----- bird -----\tsuperhero",
    "834": "\nSELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.publisher_name = 'George Lucas';\n\n\n\t----- bird -----\tsuperhero",
    "835": "\nSELECT CAST(SUM(CASE WHEN alignment_id = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\n\n\n\t----- bird -----\tsuperhero",
    "836": "\nSELECT COUNT(*) FROM superhero WHERE full_name LIKE '%John%';\n\n\n\t----- bird -----\tsuperhero",
    "837": "\nSELECT hero_id FROM superhero ORDER BY attribute_value ASC LIMIT 1; \n\n\t----- bird -----\tsuperhero",
    "838": "\nSELECT full_name FROM superhero WHERE superhero_name = 'Alien'\n\n\n\t----- bird -----\tsuperhero",
    "839": "\nSELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.weight_kg < 100 AND T2.attribute_value = 3;\n\n\n\t----- bird -----\tsuperhero",
    "840": "\nSELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy' \n\n\t----- bird -----\tsuperhero",
    "841": "\nSELECT weight_kg, race FROM superhero WHERE id = 40; \n\n\t----- bird -----\tsuperhero",
    "842": "\nSELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE attribute_name = 'neutral');\n\n\n\t----- bird -----\tsuperhero",
    "843": "\nSELECT T1.id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'intellegence' \n\n\t----- bird -----\tsuperhero",
    "844": "\nSELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf';\n\n\n\t----- bird -----\tsuperhero",
    "845": "\nSELECT sp.power_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE s.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero);\n\n\n\t----- bird -----\tsuperhero",
    "846": "\nSELECT DISTINCT T2.constructorRef FROM races AS T1 INNER JOIN constructorResults AS T2 ON T1.raceId = T2.raceId WHERE T1.round = 18 AND T2.status = 'Q' ORDER BY T2.position;\n\n\n\t----- bird -----\tformula_1",
    "847": "\nSELECT T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 19 AND T1.position = ( SELECT MIN(T3.position) FROM results AS T3 WHERE T3.raceId = 19 ) ORDER BY T1.time ASC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "848": "\nSELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Shanghai' \n\n\t----- bird -----\tformula_1",
    "849": "\nSELECT T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Circuit de Barcelona-Catalunya';\n\n\n\t----- bird -----\tformula_1",
    "850": "\nSELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Germany' \n\n\t----- bird -----\tformula_1",
    "851": "\nSELECT T1.position FROM circuits AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Renault' ORDER BY T1.position;\n\n\n\t----- bird -----\tformula_1",
    "852": "\nSELECT COUNT(raceId) \nFROM races \nWHERE YEAR = 2010 AND circuitId IN (\n    SELECT circuitId \n    FROM circuits \n    WHERE country NOT IN ('Asia', 'Europe')\n);\n\n\n\t----- bird -----\tformula_1",
    "853": "\nSELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Spain' \n\n\t----- bird -----\tformula_1",
    "854": "\nSELECT location FROM circuits WHERE name = 'Australian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "855": "\nSELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.date LIKE '2023-09-%';\n\n\n\t----- bird -----\tformula_1",
    "856": "\nSELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit';\n\n\n\t----- bird -----\tformula_1",
    "857": "\nSELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "858": "\nSELECT T1.country FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = 1 AND T2.raceId = (SELECT raceId FROM races WHERE round = 24) \n\n\t----- bird -----\tformula_1",
    "859": "\nSELECT T1.q1 FROM qualifying AS T1 INNER JOIN results AS T2 ON T1.qualifyId = T2.qualifyId WHERE T2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna') AND T2.raceId = 354\n\n\n\t----- bird -----\tformula_1",
    "860": "\nSELECT T2.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:40' AND T2.raceId = 355 \n\n\t----- bird -----\tformula_1",
    "861": "\nSELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 = '0:01:54' AND T2.raceId = 903 GROUP BY T1.driverId HAVING COUNT(*) = 1 \n\n\t----- bird -----\tformula_1",
    "862": "\nSELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND position IS NULL;\n\n\n\t----- bird -----\tformula_1",
    "863": "\nSELECT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901 \n\n\t----- bird -----\tformula_1",
    "864": "\nSELECT COUNT(DISTINCT T1.driverId) AS driver_count\nFROM results AS T1\nJOIN races AS T2 ON T1.raceId = T2.raceId\nWHERE T2.date = '2015-11-29';\n\n\n\t----- bird -----\tformula_1",
    "865": "\nSELECT T1.forename, T1.surname, T2.dob FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 ORDER BY T2.position ASC LIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "866": "\nSELECT T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = '0:01:27' AND T2.raceId = 161 \n\n\t----- bird -----\tformula_1",
    "867": "\nSELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 933 ORDER BY T2.fastestLapSpeed DESC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "868": "\nSELECT T1.location, T2.lat, T2.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Malaysian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "869": "\nSELECT T2.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = ( SELECT raceId FROM races WHERE round = 9 ) ORDER BY T2.points DESC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "870": "\nSELECT T1.q1 FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.round = 345 AND T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'Di Grassi');\n\n\n\t----- bird -----\tformula_1",
    "871": "\nSELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q2 = '0:01:15' AND T2.raceId = 347 \n\n\t----- bird -----\tformula_1",
    "872": "\nSELECT T1.code FROM results AS T1 INNER JOIN qualifying AS T2 ON T1.resultId = T2.resultId WHERE T2.q3 = '0:01:33' AND T1.raceId = 45;\n\n\n\t----- bird -----\tformula_1",
    "873": "\nSELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.round = 743 AND T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruce' AND surname = 'McLaren');\n\n\n\t----- bird -----\tformula_1",
    "874": "\nSELECT T2.name FROM races AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.circuitId IN (SELECT circuitId FROM circuits WHERE name = 'San Marino Grand Prix' AND year = 2006) ORDER BY T2.position ASC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "875": "\nSELECT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceId = 901 \n\n\t----- bird -----\tformula_1",
    "876": "\nSELECT COUNT(DISTINCT T1.driverId) AS driver_count\nFROM races AS T1\nJOIN results AS T2 ON T1.raceId = T2.raceId\nWHERE T1.date = '2015-11-29';\n\n\n\t----- bird -----\tformula_1",
    "877": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 ORDER BY T1.dob ASC LIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "878": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 348 ORDER BY T2.time ASC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "879": "\nSELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed IS NOT NULL GROUP BY T1.driverId ORDER BY COUNT(T2.fastestLapSpeed) DESC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "880": "\nSELECT \n    (T2.time - T1.time) * 100 / T1.time AS percent_faster\nFROM \n    results AS T1\nJOIN \n    lapTimes AS T2 ON T1.resultId = T2.resultId\nWHERE \n    T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'Di Resta')\n    AND T1.number = 853;\n\n\n\t----- bird -----\tformula_1",
    "881": "\nSELECT COUNT(DISTINCT T1.driverId) / COUNT(T2.raceId) AS race_completion_rate\nFROM results AS T1\nJOIN races AS T2 ON T1.raceId = T2.raceId\nWHERE T2.date = '1983-07-16';\n\n\n\t----- bird -----\tformula_1",
    "882": "\nSELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Singapore Grand Prix' ORDER BY T1.year ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "883": "\nSELECT COUNT(*) AS total_races, name FROM races WHERE YEAR = 2005 ORDER BY name DESC \n\n\t----- bird -----\tformula_1",
    "884": "\nSELECT T1.name FROM races AS T1 INNER JOIN races AS T2 ON T1.year = T2.year AND T1.round = T2.round WHERE T1.raceId <> T2.raceId ORDER BY T1.date LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "885": "\nSELECT T1.name, T2.date FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year = 1999 ORDER BY T1.round DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "886": "\nSELECT year FROM races GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "887": "\nSELECT T1.name FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year != 2000 AND T1.year = 2017 \n\n\t----- bird -----\tformula_1",
    "888": "\nSELECT T1.country, T2.name, T2.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = ( SELECT MIN(year) FROM races ) AND T2.round = 1 GROUP BY T1.country, T2.name, T2.location;\n\n\n\t----- bird -----\tformula_1",
    "889": "\nSELECT T1.year FROM races AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'Brands Hatch' ORDER BY T1.year DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "890": "\nSELECT COUNT(T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Silverstone Circuit' AND T1.name LIKE '%United Kindom Grand Prix%';\n\n\n\t----- bird -----\tformula_1",
    "891": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId IN (SELECT raceId FROM races WHERE year = 2010 AND name = 'Singapore Grand Prix') ORDER BY T2.position;\n\n\n\t----- bird -----\tformula_1",
    "892": "\nSELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId ORDER BY r.points DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "893": "\nSELECT d.forename, d.surname, cr.points \nFROM drivers d \nJOIN constructor_results cr ON d.driverid = cr.driverid \nWHERE cr.raceid IN (\n    SELECT raceid FROM races WHERE year = 2017 AND name LIKE 'Chinese Grand Prix'\n) \nORDER BY cr.points DESC \nLIMIT 3;\n\n\n\t----- bird -----\tformula_1",
    "894": "\nSELECT T1.driverId, T2.name, T3.raceId, T3.name AS raceName, T3.date, T3.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId ORDER BY T2.laps ASC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "895": "\nSELECT AVG(T1.time) AS average_lap_time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Sebastian' AND T2.surname = 'Vettel' AND T1.raceId IN (SELECT raceId FROM races WHERE year = 2009 AND name LIKE 'Chinese Grand Prix');\n\n\n\t----- bird -----\tformula_1",
    "896": "\nSELECT CAST(SUM(CASE WHEN T1.position = 1 THEN 0 ELSE 1 END) AS REAL) * 100 / COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.driverId WHERE T2.year >= 2010 AND T1.forename = 'Lewis' AND T1.surname = 'Hamilton';\n\n\n\t----- bird -----\tformula_1",
    "897": "\nSELECT d.forename, d.surname, AVG(r.points) AS average_points\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.status LIKE 'WIN'\nGROUP BY d.driverId\nORDER BY average_points DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "898": "\nSELECT T2.forename, T2.surname, 2022 - EXTRACT(YEAR FROM T1.dob) + 1 AS age\nFROM drivers AS T1\nJOIN constructors AS T2 ON T1.constructorId = T2.constructorId\nWHERE T2.nationality = 'Japanese'\nORDER BY age ASC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "899": "\nSELECT DISTINCT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitRef HAVING COUNT(T2.raceId) = 4 \n\n\t----- bird -----\tformula_1",
    "900": "\nSELECT c.name, c.location, r.name FROM circuits AS c \nJOIN races AS r ON c.circuitId = r.circuitId \nWHERE c.country = 'USA' AND r.year = 2006;\n\n\n\t----- bird -----\tformula_1",
    "901": "\nSELECT races.name, circuits.name AS circuit_name, circuits.location FROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE races.year = 2005 AND MONTH(races.date) = 9;\n\n\n\t----- bird -----\tformula_1",
    "902": "\nSELECT T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 10 ORDER BY T2.raceId LIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "903": "\nSELECT COUNT(T1.raceId) \nFROM results AS T1 \nJOIN constructors AS T2 ON T1.constructorId = T2.constructorId \nWHERE T2.name = 'Michael Schumacher' AND T1.raceId IN (\n    SELECT raceId FROM races WHERE circuitId IN (\n        SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit'\n    )\n);\n\n\n\t----- bird -----\tformula_1",
    "904": "\nSELECT T1.name AS race_name, T2.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') ORDER BY T2.fastestLap DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "905": "\nSELECT AVG(points) AS average_points FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Eddie' AND surname = 'Irvine') AND YEAR(raceId) = 2000 \n\n\t----- bird -----\tformula_1",
    "906": "\nSELECT T1.name, T2.points FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T2.raceId ASC LIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "907": "\nSELECT races.name, circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date;\n\n\n\t----- bird -----\tformula_1",
    "908": "\nSELECT races.name, races.year, circuits.location \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE races.raceId IN (\n    SELECT raceId \n    FROM results \n    GROUP BY raceId \n    ORDER BY COUNT(*) DESC \n    LIMIT 1\n) \n\n\n\t----- bird -----\tformula_1",
    "909": "\nSELECT CAST(COUNT(CASE WHEN T1.country = 'Germany' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Europe';\n\n\n\t----- bird -----\tformula_1",
    "910": "\nSELECT location FROM circuits WHERE name = 'Silverstone Circuit';\n\n\n\t----- bird -----\tformula_1",
    "911": "\nSELECT name FROM circuits WHERE lat > ( SELECT MAX(lat) FROM circuits WHERE name = 'Silverstone Circuit' ) OR lat > ( SELECT MAX(lat) FROM circuits WHERE name = 'Hockenheimring' ) OR lat > ( SELECT MAX(lat) FROM circuits WHERE name = 'Hungaroring' );\n\n\n\t----- bird -----\tformula_1",
    "912": "\nSELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\n\n\n\t----- bird -----\tformula_1",
    "913": "\nSELECT country FROM circuits ORDER BY alt DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "914": "\nSELECT COUNT(driverId) FROM drivers WHERE code IS NULL; \n\n\n\t----- bird -----\tformula_1",
    "915": "\nSELECT T1.country FROM drivers AS T1 INNER JOIN constructor_results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "916": "\nSELECT T2.surname FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.country = 'Italy' \n\n\t----- bird -----\tformula_1",
    "917": "\nSELECT url FROM constructors WHERE name = 'Anthony Davidson'\n\n\n\t----- bird -----\tformula_1",
    "918": "\nSELECT T1.driverRef FROM drivers AS T1 INNER JOIN constructor_results AS T2 ON T1.driverId = T2.driverId WHERE T2.constructorId = (SELECT constructorId FROM constructors WHERE name = 'Lewis Hamilton') \n\n\t----- bird -----\tformula_1",
    "919": "\nSELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2009 AND T1.country = 'Spain';\n\n\n\t----- bird -----\tformula_1",
    "920": "\nSELECT DISTINCT T2.year FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit'\n\n\n\t----- bird -----\tformula_1",
    "921": "\nSELECT DISTINCT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Silverstone Circuit';\n\n\n\t----- bird -----\tformula_1",
    "922": "\nSELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.name = 'Abu Dhabi Circuit';\n\n\n\t----- bird -----\tformula_1",
    "923": "\nSELECT COUNT(T1.raceId) \nFROM races AS T1 \nJOIN circuits AS T2 ON T1.circuitId = T2.circuitId \nWHERE T2.country = 'Italy';\n\n\n\t----- bird -----\tformula_1",
    "924": "\nSELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Barcelona-Catalunya';\n\n\n\t----- bird -----\tformula_1",
    "925": "\nSELECT url FROM circuits WHERE name = 'Spanish Grand Prix' AND year = 2009;\n\n\n\t----- bird -----\tformula_1",
    "926": "\nSELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' ORDER BY T1.fastestLapTime ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "927": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "928": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId IN (SELECT raceId FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Australian Grand Prix' AND year = 2008)) ORDER BY T2.position ASC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "929": "\nSELECT DISTINCT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\n\n\n\t----- bird -----\tformula_1",
    "930": "\nSELECT T1.raceId, T2.name FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') ORDER BY T1.position DESC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "931": "\nSELECT fastestLapSpeed FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2009 Spanish Grand Prix' AND country = 'Spain' ) ORDER BY fastestLapSpeed DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "932": "\nSELECT DISTINCT T2.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\n\n\t----- bird -----\tformula_1",
    "933": "\nSELECT T2.position FROM results AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = ( SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008 ) ORDER BY T1.points DESC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "934": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.grid = 4 AND T2.raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix');\n\n\n\t----- bird -----\tformula_1",
    "935": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM results AS T1 \nJOIN races AS T2 ON T1.raceId = T2.raceId \nWHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "936": "\nSELECT T1.time FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.resultId = T2.resultId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND T1.year = 2008 ORDER BY T2.milliseconds ASC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "937": "\nSELECT T2.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId IN (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') ORDER BY T1.position ASC LIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "938": "\nSELECT T1.driverId, T2.name FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.name = 'McLaren' AND T1.number = 1;\n\n\n\t----- bird -----\tformula_1",
    "939": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM drivers AS T1 \nJOIN results AS T2 ON T1.driverId = T2.driverId \nWHERE T2.raceId IN (\n    SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'\n);\n\n\n\t----- bird -----\tformula_1",
    "940": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM results AS T1 \nJOIN races AS T2 ON T1.raceId = T2.raceId \nWHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "941": "\nSELECT SUM(points) AS total_points FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\n\n\n\t----- bird -----\tformula_1",
    "942": "\nSELECT AVG(T2.time) / 1000 AS average_fastest_lap_time FROM results AS T1 INNER JOIN lap_times AS T2 ON T1.resultId = T2.resultId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') GROUP BY T1.raceId;\n\n\n\t----- bird -----\tformula_1",
    "943": "\nSELECT AVG(CASE WHEN T1.lap = 0 THEN 1 ELSE 0 END) * 100 / COUNT(T1.raceId) AS completion_rate\nFROM lapTimes AS T1\nJOIN races AS T2 ON T1.raceId = T2.raceId\nWHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix'\nGROUP BY T2.year, T2.name;\n\n\n\t----- bird -----\tformula_1",
    "944": "\nSELECT (T2.points - T1.points) * 100 / T1.points AS percentage_difference\nFROM results AS T1\nJOIN drivers AS T2 ON T1.driverId = T2.driverId\nWHERE T1.raceId IN (\n    SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'\n) AND T2.position = (SELECT MIN(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'));\n\n\n\t----- bird -----\tformula_1",
    "945": "\nSELECT COUNT(*) FROM circuits WHERE location = 'Melbourne, Australia';\n\n\n\t----- bird -----\tformula_1",
    "946": "\nSELECT location FROM circuits WHERE country = 'USA';\n\n\n\t----- bird -----\tformula_1",
    "947": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM drivers AS T1 \nJOIN constructors AS T2 ON T1.constructorId = T2.constructorId \nWHERE T2.nationality = 'British' AND T1.dob > '1980-01-01';\n\n\n\t----- bird -----\tformula_1",
    "948": "\nSELECT AVG(points) AS average_points FROM constructorStandings WHERE constructorId IN (SELECT constructorId FROM constructors WHERE nationality = 'British');\n\n\n\t----- bird -----\tformula_1",
    "949": "\nSELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId ORDER BY T2.points DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "950": "\nSELECT T3.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.raceId = 291 AND T2.points = 0 \n\n\t----- bird -----\tformula_1",
    "951": "\nSELECT COUNT(DISTINCT T1.constructorId) \nFROM constructors AS T1 \nJOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId \nWHERE T2.points = 0 AND T2.raceId IN (SELECT raceId FROM races WHERE year = 2023);\n\n\n\t----- bird -----\tformula_1",
    "952": "\nSELECT DISTINCT c.name FROM constructors AS c JOIN constructorStandings AS cs ON c.constructorId = cs.constructorId WHERE cs.position = 1 \n\n\t----- bird -----\tformula_1",
    "953": "\nSELECT COUNT(DISTINCT T1.constructorId) \nFROM constructors AS T1 \nJOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId \nWHERE T2.lap > 50 AND T1.nationality = 'France';\n\n\n\t----- bird -----\tformula_1",
    "954": "\nSELECT \n    (SUM(CASE WHEN T1.driverId IN (SELECT driverId FROM drivers WHERE nationality = 'Japan') THEN 1 ELSE 0 END) * 100 / COUNT(T1.driverId)) AS race_completion_percentage\nFROM \n    results AS T1\nJOIN \n    races AS T2 ON T1.raceId = T2.raceId\nWHERE \n    T2.year BETWEEN 2007 AND 2009;\n\n\n\t----- bird -----\tformula_1",
    "955": "\nSELECT YEAR, AVG(T1.time) / 1000 AS average_time_seconds\nFROM results AS T1\nJOIN races AS T2 ON T1.raceId = T2.raceId\nWHERE T1.driverId IN (\n    SELECT driverId\n    FROM constructorResults\n    WHERE points = (\n        SELECT MAX(points)\n        FROM constructorResults\n    )\n)\nGROUP BY YEAR;\n\n\n\t----- bird -----\tformula_1",
    "956": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob > '1975-01-01' AND T2.position = 2 ORDER BY T1.forename, T1.surname;\n\n\n\t----- bird -----\tformula_1",
    "957": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM drivers AS T1 \nLEFT JOIN results AS T2 ON T1.driverId = T2.driverId \nWHERE T2.position IS NULL AND T1.nationality = 'Italy';\n\n\n\t----- bird -----\tformula_1",
    "958": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapTime ASC LIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "959": "\nSELECT T2.number FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId IN (SELECT raceId FROM constructorResults WHERE points = (SELECT MAX(points) FROM constructorResults WHERE constructorId = (SELECT constructorId FROM constructors WHERE name = 'McLaren') AND year = 2009)) ORDER BY T1.lap ASC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "960": "\nSELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = '2009 Spanish Grand Prix' AND country = 'Spain');\n\n\n\t----- bird -----\tformula_1",
    "961": "\nSELECT T1.name, T2.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId ORDER BY T1.time ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "962": "\nSELECT CAST(COUNT(DISTINCT T1.driverId) AS REAL) * 100 / COUNT(T2.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob < '1985-01-01' AND T2.lap > 50 GROUP BY T1.driverId, T2.raceId;\n\n\n\t----- bird -----\tformula_1",
    "963": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM drivers AS T1 \nJOIN lapTimes AS T2 ON T1.driverId = T2.driverId \nWHERE T2.time < '02:00:00' AND T1.nationality = 'France';\n\n\n\t----- bird -----\tformula_1",
    "964": "\nSELECT DISTINCT T1.code FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'America' \n\n\t----- bird -----\tformula_1",
    "965": "\nSELECT raceId FROM races WHERE YEAR = 2009;\n\n\n\t----- bird -----\tformula_1",
    "966": "\nSELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.raceId = 18 \n\n\t----- bird -----\tformula_1",
    "967": "\nSELECT T1.code FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Netherlands' ORDER BY T1.dob ASC LIMIT 3 \n\n\t----- bird -----\tformula_1",
    "968": "\nSELECT T1.name FROM constructors AS T1 INNER JOIN drivers AS T2 ON T1.constructorId = T2.constructorId WHERE T2.forename = 'Robert' AND T2.surname = 'Kubica';\n\n\n\t----- bird -----\tformula_1",
    "969": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM drivers AS T1 \nJOIN constructors AS T2 ON T1.constructorId = T2.constructorId \nWHERE T2.nationality = 'Australia' AND T1.dob LIKE '1980-%';\n\n\n\t----- bird -----\tformula_1",
    "970": "\nSELECT d.forename, d.surname, l.time \nFROM drivers d \nJOIN lap_times l ON d.driverid = l.driverid \nWHERE d.nationality = 'Germany' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' \nORDER BY l.time ASC \nLIMIT 3;\n\n\n\t----- bird -----\tformula_1",
    "971": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN constructor_results AS T2 ON T1.driverid = T2.driverid WHERE T2.constructorid IN (SELECT constructorid FROM constructors WHERE country = 'Germany') ORDER BY T2.points DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "972": "\nSELECT DISTINCT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob LIKE '1971%' ORDER BY T2.fastestLap DESC LIMIT 10;\n\n\n\t----- bird -----\tformula_1",
    "973": "\nSELECT d.forename, d.surname, l.time \nFROM drivers d \nJOIN lap_times l ON d.driverid = l.driverid \nWHERE d.nationality = 'Spain' AND d.dob < '1982-01-01' \nORDER BY l.milliseconds DESC \nLIMIT 10;\n\n\n\t----- bird -----\tformula_1",
    "974": "\nSELECT T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId ORDER BY T2.time ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "975": "\nSELECT T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId ORDER BY T2.milliseconds ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "976": "\nSELECT T1.driverId FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.resultId = T2.resultId WHERE T2.lap = 1 ORDER BY T2.time ASC LIMIT 5; \n\n\t----- bird -----\tformula_1",
    "977": "\nSELECT COUNT(DISTINCT T1.driverId) AS disqualified_finishers\nFROM results AS T1\nJOIN races AS T2 ON T1.raceId = T2.raceId\nWHERE T2.round BETWEEN 50 AND 100 AND T1.statusID = (SELECT statusId FROM status WHERE status = 'DQ');\n\n\n\t----- bird -----\tformula_1",
    "978": "\nSELECT COUNT(*) AS circuit_count, location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng \n\n\t----- bird -----\tformula_1",
    "979": "\nSELECT T2.round FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId GROUP BY T2.round ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "980": "\nSELECT T1.forename, T1.surname, T2.nationality, T2.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.round = 2 AND T2.q2 IS NOT NULL ORDER BY T2.position;\n\n\n\t----- bird -----\tformula_1",
    "981": "\nSELECT T1.year, T2.name, T3.date, T3.time FROM races AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.dob = ( SELECT MIN(dob) FROM drivers ) ORDER BY T1.raceId LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "982": "\nSELECT COUNT(DISTINCT T1.driverId) \nFROM drivers AS T1 \nJOIN results AS T2 ON T1.driverId = T2.driverId \nWHERE T2.status LIKE 'DQ' AND T1.nationality = 'USA';\n\n\n\t----- bird -----\tformula_1",
    "983": "\nSELECT T1.name, T2.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.country = 'Italy' ORDER BY T2.points DESC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "984": "\nSELECT T2.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId ORDER BY SUM(T2.wins) DESC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "985": "\nSELECT T1.driverId, T2.name, T3.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN lapTimes AS T3 ON T2.resultId = T3.resultId WHERE T2.raceId IN (SELECT raceId FROM races WHERE name LIKE 'French Grand Prix') AND T3.lap = 3 ORDER BY T3.time ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "986": "\nSELECT T1.time FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.resultId = T2.resultId WHERE T1.position = 1 ORDER BY T2.milliseconds ASC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "987": "\nSELECT AVG(T1.time) AS average_fastest_lap_time\nFROM results AS T1\nJOIN drivers AS T2 ON T1.driverId = T2.driverId\nWHERE T2.nationality = 'United States' AND T1.year = 2006\nORDER BY T1.position ASC\nLIMIT 10;\n\n\n\t----- bird -----\tformula_1",
    "988": "\nSELECT d.forename, d.surname, AVG(p.stop_duration) AS avg_pit_stop_duration\nFROM drivers d\nJOIN pit_stops p ON d.driverid = p.driverid\nWHERE d.nationality = 'Germany'\nAND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.forename, d.surname\nORDER BY avg_pit_stop_duration ASC\nLIMIT 5;\n\n\n\t----- bird -----\tformula_1",
    "989": "\nSELECT T1.driverId, T2.name, T3.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2008 AND T3.circuitRef = 'CAN' ORDER BY T2.position ASC LIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "990": "\nSELECT T2.constructorRef, T2.url FROM races AS T1 INNER JOIN constructorResults AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2009 AND T1.name = 'Singapore Grand Prix' ORDER BY T2.points DESC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "991": "\nSELECT d.forename, d.surname, d.dob FROM drivers AS d WHERE d.nationality = 'Austria' AND d.dob BETWEEN '1981-01-01' AND '1991-12-31' ORDER BY d.forename, d.surname;\n\n\n\t----- bird -----\tformula_1",
    "992": "\nSELECT d.forename, d.surname, c.url FROM drivers d JOIN constructors c ON d.constructorId = c.constructorId WHERE c.nationality = 'Germany' AND d.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY d.dob DESC\n\n\n\t----- bird -----\tformula_1",
    "993": "\nSELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring';\n\n\n\t----- bird -----\tformula_1",
    "994": "\nSELECT c.name, c.nationality, SUM(r.points) AS total_points\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN results r ON cr.resultId = r.resultId\nWHERE r.raceId IN (\n    SELECT raceId FROM races WHERE year BETWEEN 1980 AND 2010 AND circuitRef = 'Monaco Grand Prix'\n)\nGROUP BY c.name, c.nationality\nORDER BY total_points DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "995": "\nSELECT AVG(points) AS average_score FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Turkey');\n\n\n\t----- bird -----\tformula_1",
    "996": "\nSELECT AVG(T2.round) AS avg_races FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year BETWEEN 2001 AND 2010 GROUP BY T2.year LIMIT 10;\n\n\n\t----- bird -----\tformula_1",
    "997": "\nSELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "998": "\nSELECT COUNT(T1.wins) AS victories FROM results AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.position = 91 AND T1.statusId = (SELECT statusId FROM status WHERE status = 'WIN') \n\n\t----- bird -----\tformula_1",
    "999": "\nSELECT T2.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime = ( SELECT MIN(fastestLapTime) FROM results )\n\n\n\t----- bird -----\tformula_1",
    "1000": "\nSELECT T1.location, T1.country FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId ORDER BY T2.date DESC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "1001": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId IN (SELECT raceId FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit') AND year = 2008) ORDER BY T2.position ASC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "1002": "\nSELECT d.forename, d.surname, c.name AS race_name\nFROM drivers d\nJOIN races r ON d.driverId = r.driverId\nWHERE d.dob = (\n    SELECT MIN(dob)\n    FROM drivers\n);\n\n\n\t----- bird -----\tformula_1",
    "1003": "\nSELECT COUNT(T1.driverId) AS num_accidents\nFROM results AS T1\nJOIN status AS T2 ON T1.statusId = T2.statusId\nWHERE T2.status = 'Accident'\nAND T1.raceId IN (\n    SELECT raceId FROM races WHERE name = 'Canadian Grand Prix'\n);\n\n\n\t----- bird -----\tformula_1",
    "1004": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN constructor_results AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 ORDER BY T1.dob ASC LIMIT 1 \n\n\t----- bird -----\tformula_1",
    "1005": "\nSELECT MAX(T1.time) AS longest_time FROM pit_stops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId;\n\n\n\t----- bird -----\tformula_1",
    "1006": "\nSELECT T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId ORDER BY T1.milliseconds ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "1007": "\nSELECT MAX(T1.time) AS longest_time FROM pit_stops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton';\n\n\n\t----- bird -----\tformula_1",
    "1008": "\nSELECT T2.lap FROM results AS T1 INNER JOIN pitStops AS T2 ON T1.resultId = T2.resultId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND T1.raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2011) ORDER BY T2.lap ASC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "1009": "\nSELECT T1.time FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "1010": "\nSELECT T2.lap FROM results AS T1 INNER JOIN lapTimes AS T2 ON T1.resultId = T2.resultId WHERE T1.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') ORDER BY T2.milliseconds ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "1011": "\nSELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.time ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "1012": "\nSELECT T2.position FROM results AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) ORDER BY T1.fastestLap DESC LIMIT 1\n\n\n\t----- bird -----\tformula_1",
    "1013": "\nSELECT T1.lap FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Austrian Grand Prix Circuit' ORDER BY T2.time ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "1014": "\nSELECT T1.name, T2.time FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Italy' ORDER BY T2.lap;\n\n\n\t----- bird -----\tformula_1",
    "1015": "\nSELECT T1.name FROM races AS T1 INNER JOIN lap_times AS T2 ON T1.raceId = T2.raceId WHERE T1.circuitRef = 'AUS' ORDER BY T2.time ASC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "1016": "\nSELECT T2.time FROM races AS T1 INNER JOIN pitStops AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Austrian Grand Prix Circuit' AND T2.driverId = (SELECT driverId FROM results WHERE raceId = T1.raceId ORDER BY time ASC LIMIT 1);\n\n\n\t----- bird -----\tformula_1",
    "1017": "\nSELECT T1.location FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.circuitId WHERE T2.time LIKE '1:29.488' \n\n\t----- bird -----\tformula_1",
    "1018": "\nSELECT AVG(milliseconds) AS average_time FROM pit_stops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\n\n\n\t----- bird -----\tformula_1",
    "1019": "\nSELECT AVG(milliseconds) AS average_lap_time FROM lap_times WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Italy');\n\n\n\t----- bird -----\tformula_1",
    "1020": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1021": "\nSELECT T1.height, T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1022": "\nSELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.potential ASC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1023": "\nSELECT COUNT(T1.id) AS count_players\nFROM Player_Attributes T1\nJOIN Player T2 ON T1.player_api_id = T2.player_api_id\nWHERE T1.overall_rating BETWEEN 60 AND 65\nAND T1.preferred_foot = 'left'\nAND T1.attacking_work_rate IN ('high', 'medium')\nAND T1.defensive_work_rate NOT IN ('high', 'medium');\n\n\n\t----- bird -----\teuropean_football_2",
    "1024": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.crossing DESC LIMIT 5; \n\n\t----- bird -----\teuropean_football_2",
    "1025": "\nSELECT T2.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2016' GROUP BY T2.league_id ORDER BY SUM(T2.home_team_goal + T2.away_team_goal) DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1026": "\nSELECT T2.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.id = T2.home_team_api_id WHERE T2.season = '2016' GROUP BY T2.home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1027": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.penalties > 0 ORDER BY T2.penalties DESC LIMIT 10; \n\n\t----- bird -----\teuropean_football_2",
    "1028": "\nSELECT T2.team_short_name AS Away_Team, COUNT(*) AS Wins\nFROM Match AS T1\nJOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id\nWHERE T1.season = '2010' AND T1.country_id IN (SELECT id FROM Country WHERE name = 'Scotland')\nGROUP BY T2.team_short_name\nORDER BY Wins DESC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1029": "\nSELECT T2.buildUpPlaySpeed FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id ORDER BY T1.buildUpPlaySpeed DESC LIMIT 4 \n\n\t----- bird -----\teuropean_football_2",
    "1030": "\nSELECT T2.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2016' AND T2.away_team_goal = T2.home_team_goal GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1 \n\n\t----- bird -----\teuropean_football_2",
    "1031": "\nSELECT T2.player_name, T1.sprint_speed\nFROM Player_Attributes AS T1\nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T1.date BETWEEN '2013-01-01' AND '2015-12-31'\nAND T1.sprint_speed >= 97;\n\n\n\t----- bird -----\teuropean_football_2",
    "1032": "\nSELECT T1.name, COUNT(T2.id) AS total_matches\nFROM League AS T1\nJOIN Match AS T2 ON T1.id = T2.league_id\nGROUP BY T1.name\nORDER BY total_matches DESC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1033": "\nSELECT AVG(height) AS average_height FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31';\n\n\n\t----- bird -----\teuropean_football_2",
    "1034": "\nSELECT T2.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date LIKE '2010%' GROUP BY T1.player_api_id ORDER BY AVG(T1.overall_rating) DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1035": "\nSELECT T2.team_fifa_api_id \nFROM Team_Attributes AS T1 \nJOIN Team AS T2 ON T1.team_api_id = T2.id \nWHERE T1.buildUpPlaySpeed > 50 AND T1.buildUpPlaySpeed < 60 \nGROUP BY T2.team_fifa_api_id \nHAVING COUNT(T1.id) > 5;\n\n\n\t----- bird -----\teuropean_football_2",
    "1036": "\nSELECT T.team_long_name FROM Team AS T JOIN Team_Attributes AS TA ON T.id = TA.team_api_id WHERE TA.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE season = '2012') \n\n\t----- bird -----\teuropean_football_2",
    "1037": "\nSELECT CAST(COUNT(T1.id) AS REAL) * 100 / COUNT(T2.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'Left' AND T2.birthday BETWEEN '1987-01-01' AND '1992-12-31' \n\n\t----- bird -----\teuropean_football_2",
    "1038": "\nSELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.name ORDER BY SUM(CASE WHEN T2.home_team_goal > 0 THEN 1 ELSE 0 END) + SUM(CASE WHEN T2.away_team_goal > 0 THEN 1 ELSE 0 END) DESC LIMIT 5\n\n\n\t----- bird -----\teuropean_football_2",
    "1039": "\nSELECT AVG(T1.long_shots) AS average_long_shots FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag';\n\n\n\t----- bird -----\teuropean_football_2",
    "1040": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 180 GROUP BY T2.player_api_id ORDER BY AVG(T1.heading_accuracy) DESC LIMIT 10; \n\n\t----- bird -----\teuropean_football_2",
    "1041": "\nSELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.season = '2014' ORDER BY T1.chanceCreationPassing ASC LIMIT 10\n\n\n\t----- bird -----\teuropean_football_2",
    "1042": "\nSELECT T2.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2009/2010' AND AVG(T2.home_team_goal) > AVG(T2.away_team_goal)\n\n\n\t----- bird -----\teuropean_football_2",
    "1043": "\nSELECT T2.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T1.team_long_name = 'Queens Park Rangers';\n\n\n\t----- bird -----\teuropean_football_2",
    "1044": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday LIKE '1970-10-%';\n\n\n\t----- bird -----\teuropean_football_2",
    "1045": "\nSELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Franco Zennaro';\n\n\n\t----- bird -----\teuropean_football_2",
    "1046": "\nSELECT T2.buildUpPlaySpeed, T2.buildUpPlayDribbling, T2.buildUpPlayPassing FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.name = 'ADO Den Haag' AND T1.date BETWEEN '2023-04-01' AND '2023-06-30';\n\n\n\t----- bird -----\teuropean_football_2",
    "1047": "\nSELECT T2.finishing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date = '2014-09-18' AND T2.player_name = 'Francois Affolter';\n\n\n\t----- bird -----\teuropean_football_2",
    "1048": "\nSELECT T2.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND T1.date LIKE '2011%'\n\n\n\t----- bird -----\teuropean_football_2",
    "1049": "\nSELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM League WHERE name = 'Scottish Premier League');\n\n\n\t----- bird -----\teuropean_football_2",
    "1050": "\nSELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday ASC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1051": "\nSELECT T1.player_name, T2.potential \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nORDER BY T2.potential DESC \nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1052": "\nSELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.weight < 130 AND T1.preferred_foot = 'left' \n\n\t----- bird -----\teuropean_football_2",
    "1053": "\nSELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.chanceCreationPassingClass = 'Risky' \n\n\t----- bird -----\teuropean_football_2",
    "1054": "\nSELECT T2.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'David Wilson' \n\n\t----- bird -----\teuropean_football_2",
    "1055": "\nSELECT T1.birthday FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1056": "\nSELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands' \n\n\t----- bird -----\teuropean_football_2",
    "1057": "\nSELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE season = '2010/2011' AND country_id IN (SELECT id FROM Country WHERE name = 'Poland');\n\n\n\t----- bird -----\teuropean_football_2",
    "1058": "\nSELECT AVG(T2.finishing) AS average_finishing_rate\nFROM Player_Attributes AS T1\nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.height IN (\n    SELECT MIN(height)\n    FROM Player\n),\nT3 = (\n    SELECT MAX(height)\n    FROM Player\n);\n\n\n\t----- bird -----\teuropean_football_2",
    "1059": "\nSELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 ORDER BY T1.overall_rating DESC;\n\n\n\t----- bird -----\teuropean_football_2",
    "1060": "\nSELECT COUNT(*) FROM Player WHERE birthday > '1990-01-01';\n\n\n\t----- bird -----\teuropean_football_2",
    "1061": "\nSELECT COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.first_name = 'Adam' AND T2.weight > 170 \n\n\t----- bird -----\teuropean_football_2",
    "1062": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND T1.date BETWEEN '2008-01-01' AND '2010-12-31';\n\n\n\t----- bird -----\teuropean_football_2",
    "1063": "\nSELECT T1.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran';\n\n\n\t----- bird -----\teuropean_football_2",
    "1064": "\nSELECT player_name FROM Player WHERE preferred_foot = 'left'\n\n\n\t----- bird -----\teuropean_football_2",
    "1065": "\nSELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.buildUpPlaySpeedClass = 'Fast';\n\n\n\t----- bird -----\teuropean_football_2",
    "1066": "\nSELECT T2.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'CLB';\n\n\n\t----- bird -----\teuropean_football_2",
    "1067": "\nSELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.buildUpPlayPassing > 70 GROUP BY T2.team_short_name;\n\n\n\t----- bird -----\teuropean_football_2",
    "1068": "\nSELECT AVG(T1.overall_rating) \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.height > 170 AND T1.date BETWEEN '2010-01-01' AND '2015-12-31';\n\n\n\t----- bird -----\teuropean_football_2",
    "1069": "\nSELECT player_name FROM Player ORDER BY height ASC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1070": "\nSELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A' \n\n\t----- bird -----\teuropean_football_2",
    "1071": "\nSELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32 \n\n\t----- bird -----\teuropean_football_2",
    "1072": "\nSELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\n\n\n\t----- bird -----\teuropean_football_2",
    "1073": "\nSELECT COUNT(*) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Germany 1. Bundesliga') AND date BETWEEN '2008-08-01' AND '2008-10-31';\n\n\n\t----- bird -----\teuropean_football_2",
    "1074": "\nSELECT T2.team_short_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.id = T2.home_team_api_id WHERE T2.home_team_goal = 10 \n\n\t----- bird -----\teuropean_football_2",
    "1075": "\nSELECT T2.player_name, T1.balance, T1.potential \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T1.balance = ( SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61 ) \nAND T1.potential = 61 \nORDER BY T1.balance DESC;\n\n\n\t----- bird -----\teuropean_football_2",
    "1076": "\nSELECT AVG(T2.ball_control) - AVG(T1.ball_control) AS difference FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo' AND T2.player_name = 'Aaron Appindangoye';\n\n\n\t----- bird -----\teuropean_football_2",
    "1077": "SELECT T2.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T1.team_short_name = 'GEN' \n\n\t----- bird -----\teuropean_football_2",
    "1078": "\nSELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE date = ( SELECT MAX(date) FROM Player_Attributes ) AND player_fifa_api_id IN ( 10275, 34896 ) ) \n\n\t----- bird -----\teuropean_football_2",
    "1079": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.height DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1080": "\nSELECT COUNT(T1.id) AS remaining_players\nFROM Player_Attributes T1\nJOIN Player T2 ON T1.player_api_id = T2.player_api_id\nWHERE T1.preferred_foot = 'left'\nAND T1.attacking_work_rate IN ('high', 'medium')\nAND T1.defensive_work_rate IN ('low', 'medium');\n\n\n\t----- bird -----\teuropean_football_2",
    "1081": "\nSELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Belgium Jupiler League' \n\n\t----- bird -----\teuropean_football_2",
    "1082": "\nSELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany' \n\n\t----- bird -----\teuropean_football_2",
    "1083": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.strength DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1084": "\nSELECT COUNT(T1.id) AS remaining_players\nFROM Player_Attributes T1\nJOIN Player T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.birthday < '1986-01-01'\nAND T1.positioning IN ('ST', 'CM', 'LW', 'RW')\nAND T1.defensive_work_rate IN ('High', 'Medium', 'Low');\n\n\n\t----- bird -----\teuropean_football_2",
    "1085": "\nSELECT T1.player_name, T2.crossing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY T2.crossing DESC LIMIT 1\n\n\n\t----- bird -----\teuropean_football_2",
    "1086": "\nSELECT T1.heading_accuracy FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ariel Borysiuk';\n\n\n\t----- bird -----\teuropean_football_2",
    "1087": "\nSELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 180 AND T1.volley > 70 \n\n\t----- bird -----\teuropean_football_2",
    "1088": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.volley > 70 AND T1.dribbling > 70 \n\n\t----- bird -----\teuropean_football_2",
    "1089": "\nSELECT COUNT(*) FROM Match WHERE season = '2008/2009' AND country_id IN (SELECT id FROM Country WHERE name = 'Belgium');\n\n\n\t----- bird -----\teuropean_football_2",
    "1090": "\nSELECT T2.long_passing FROM Player_Attributes AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id ORDER BY T1.date ASC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1091": "\nSELECT COUNT(*) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Belgium') AND league_id = (SELECT id FROM League WHERE name = 'Jupiler League') AND date LIKE '2009-04-%';\n\n\n\t----- bird -----\teuropean_football_2",
    "1092": "\nSELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2008/2009' GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1093": "\nSELECT AVG(T1.overall_rating) \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.birthday < '1986-01-01';\n\n\n\t----- bird -----\teuropean_football_2",
    "1094": "\nSELECT (T1.overall_rating - T2.overall_rating) * 100 / T2.overall_rating AS percentage_increase\nFROM Player_Attributes AS T1\nJOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.date = T2.date\nWHERE T1.player_name = 'Ariel Borysiuk' AND T2.player_name = 'Paulin Puel';\n\n\n\t----- bird -----\teuropean_football_2",
    "1095": "\nSELECT AVG(T2.buildUpPlaySpeed) AS average_build_up_play_speed FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'Heart of Midlothian';\n\n\n\t----- bird -----\teuropean_football_2",
    "1096": "\nSELECT AVG(T1.overall_rating) \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.player_name = 'Pietro Marino';\n\n\n\t----- bird -----\teuropean_football_2",
    "1097": "\nSELECT SUM(T1.crossing) AS total_crossing FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Lennox';\n\n\n\t----- bird -----\teuropean_football_2",
    "1098": "\nSELECT T1.chance_creation_passing, T2.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.name = 'Ajax';\n\n\n\t----- bird -----\teuropean_football_2",
    "1099": "\nSELECT preferred_foot FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo');\n\n\n\t----- bird -----\teuropean_football_2",
    "1100": "\nSELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Dorlan Pabon' ORDER BY T1.overall_rating DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1101": "\nSELECT AVG(T2.away_team_goal) AS average_goals FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.team_fifa_api_id = T2.away_team_api_id WHERE T1.country_id = (SELECT id FROM Country WHERE name = 'Italy') AND T2.home_team_long_name = 'Parma';\n\n\n\t----- bird -----\teuropean_football_2",
    "1102": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date = '2016-06-23' ORDER BY T2.birthday DESC LIMIT 1\n\n\n\t----- bird -----\teuropean_football_2",
    "1103": "\nSELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date = '2016-02-04';\n\n\n\t----- bird -----\teuropean_football_2",
    "1104": "\nSELECT T2.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date = '2010-08-30' AND T2.player_name = 'Francesco Parravicini';\n\n\n\t----- bird -----\teuropean_football_2",
    "1105": "\nSELECT T2.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date = '2015-05-01' AND T2.player_name = 'Francesco Migliore';\n\n\n\t----- bird -----\teuropean_football_2",
    "1106": "\nSELECT T1.defensive_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22';\n\n\n\t----- bird -----\teuropean_football_2",
    "1107": "\nSELECT T1.date FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' ORDER BY T1.crossing DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1108": "\nSELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.player_name = 'Willem II' AND T2.date = '2011-02-22';\n\n\n\t----- bird -----\teuropean_football_2",
    "1109": "\nSELECT T2.buildUpPlayDribblingClass FROM Player_Attributes AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.player_name = 'LEI' AND T1.date = '2015-09-10';\n\n\n\t----- bird -----\teuropean_football_2",
    "1110": "\nSELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.name = 'FC Lorient' AND T1.date = '2010-02-22';\n\n\n\t----- bird -----\teuropean_football_2",
    "1111": "\nSELECT T1.chance_creation_passing_class FROM Team_Attributes AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'PEC Zwolle' AND T2.season = '2013/9/20';\n\n\n\t----- bird -----\teuropean_football_2",
    "1112": "\nSELECT T1.chance_creation_crossing_class FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.team_fifa_api_id = T2.home_team_api_id WHERE T2.date = '2010-02-22' AND T1.team_long_name = 'Hull City';\n\n\n\t----- bird -----\teuropean_football_2",
    "1113": "\nSELECT T2.defence_aggression_class FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date = '2015-09-10';\n\n\n\t----- bird -----\teuropean_football_2",
    "1114": "\nSELECT AVG(T1.overall_rating) \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.player_name = 'Marko Arnautovic' AND T1.date BETWEEN '2007-02-22' AND '2016-04-21';\n\n\n\t----- bird -----\teuropean_football_2",
    "1115": "\nSELECT CAST(COUNT(CASE WHEN T1.overall_rating > T2.overall_rating THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date = '2013-07-12' AND T1.player_fifa_api_id = 14589 AND T2.player_fifa_api_id = 14600 \n\n\t----- bird -----\teuropean_football_2",
    "1116": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 5;\n\n\n\t----- bird -----\teuropean_football_2",
    "1117": "\nSELECT player_api_id FROM Player_Attributes ORDER BY weight DESC LIMIT 10;\n\n\n\t----- bird -----\teuropean_football_2",
    "1118": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.age >= 35 ORDER BY T1.player_name;\n\n\n\t----- bird -----\teuropean_football_2",
    "1119": "\nSELECT COUNT(T1.home_team_goal) FROM Match AS T1 INNER JOIN Player_Attributes AS T2 ON T1.home_player_1 = T2.player_api_id WHERE T2.player_name = 'Aaron Lennon';\n\n\n\t----- bird -----\teuropean_football_2",
    "1120": "\nSELECT SUM(CASE WHEN T1.away_team_goal = 1 THEN 1 ELSE 0 END) AS total_goals FROM Match AS T1 INNER JOIN Player_Attributes AS T2 ON T1.home_player_1 = T2.player_api_id WHERE T2.player_name IN ('Daan Smith', 'Filipe Ferreira');\n\n\n\t----- bird -----\teuropean_football_2",
    "1121": "\nSELECT SUM(T1.home_team_goal) AS total_home_goals\nFROM Player_Attributes T1\nJOIN Player T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.birthday BETWEEN '1980-01-01' AND '1990-12-31'\nGROUP BY T1.player_api_id;\n\n\n\t----- bird -----\teuropean_football_2",
    "1122": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 10;\n\n\n\t----- bird -----\teuropean_football_2",
    "1123": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.potential DESC LIMIT 10;\n\n\n\t----- bird -----\teuropean_football_2",
    "1124": "\nSELECT T1.player_name FROM Player_Attributes AS T1 \nJOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id \nWHERE T2.buildUpPlayPassingClass = 'High' AND T1.attacking_work_rate = 'High'\nGROUP BY T1.player_api_id\nORDER BY COUNT(T1.player_api_id) DESC;\n\n\n\t----- bird -----\teuropean_football_2",
    "1125": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.finishing = 1 ORDER BY T2.birthday DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1126": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Belgium' \n\n\t----- bird -----\teuropean_football_2",
    "1127": "\nSELECT T1.player_name, T2.name FROM Player_Attributes AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.vision >= 90 \n\n\t----- bird -----\teuropean_football_2",
    "1128": "\nSELECT T2.name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id GROUP BY T2.name ORDER BY AVG(T1.weight) DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1129": "\nSELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.buildUpPlaySpeedClass = 'Slow Speed';\n\n\n\t----- bird -----\teuropean_football_2",
    "1130": "\nSELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.id WHERE T1.chanceCreationPassingClass LIKE 'Safe' \n\n\t----- bird -----\teuropean_football_2",
    "1131": "\nSELECT AVG(height) FROM Player WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy');\n\n\n\t----- bird -----\teuropean_football_2",
    "1132": "\nSELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 180 ORDER BY T1.player_name ASC LIMIT 3; \n\n\t----- bird -----\teuropean_football_2",
    "1133": "\nSELECT COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday LIKE '199%' AND T1.player_name LIKE 'Aaron';\n\n\n\t----- bird -----\teuropean_football_2",
    "1134": "\nSELECT T1.jumping - T2.jumping AS jumping_difference\nFROM Player_Attributes AS T1\nJOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id AND T1.date = T2.date\nWHERE T1.player_api_id IN (6, 23)\nAND T2.player_api_id NOT IN (6, 23);\n\n\n\t----- bird -----\teuropean_football_2",
    "1135": "\nSELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential < 50 AND T1.preferred_foot = 'Right' ORDER BY T1.potential ASC LIMIT 3; \n\n\t----- bird -----\teuropean_football_2",
    "1136": "\nSELECT COUNT(T1.player_api_id) \nFROM Player_Attributes AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T1.crossing > (SELECT MAX(crossing) FROM Player_Attributes WHERE preferred_foot = 'left') AND T1.attacking_work_rate = 'high';\n\n\n\t----- bird -----\teuropean_football_2",
    "1137": "\nSELECT CAST(SUM(CASE WHEN T1.strength > 80 AND T1.stamina > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id;\n\n\n\t----- bird -----\teuropean_football_2",
    "1138": "\nSELECT T2.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Poland Ekstraklasa' \n\n\t----- bird -----\teuropean_football_2",
    "1139": "\nSELECT T1.home_team_goal, T2.away_team_goal \nFROM Match AS T1 \nJOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id \nWHERE T1.date = '2008-09-24' AND T2.country_id = 3;\n\n\n\t----- bird -----\teuropean_football_2",
    "1140": "\nSELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin';\n\n\n\t----- bird -----\teuropean_football_2",
    "1141": "\nSELECT T2.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'KSV Cercle Brugge' AND T1.buildUpPlaySpeedClass IN ('Slow', 'Balanced', 'Fast');\n\n\n\t----- bird -----\teuropean_football_2",
    "1142": "\nSELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Italian Serie A' AND T1.season = '2015-2016';\n\n\n\t----- bird -----\teuropean_football_2",
    "1143": "\nSELECT MAX(home_team_goal) AS highest_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands') AND league_id = (SELECT id FROM League WHERE name = 'Eredivisie');\n\n\n\t----- bird -----\teuropean_football_2",
    "1144": "\nSELECT T1.finishing, T2.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.id ORDER BY T2.weight DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1145": "\nSELECT T2.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015-2016' GROUP BY T2.league_id ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1146": "\nSELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id ORDER BY T1.away_team_goal DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1147": "\nSELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.strength DESC LIMIT 1; \n\n\t----- bird -----\teuropean_football_2",
    "1148": "\nSELECT CAST(COUNT(T1.id) AS REAL) * 100 / COUNT(T2.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height < 180 AND T1.strength > 70 \n\n\t----- bird -----\teuropean_football_2",
    "1149": "\nSELECT \n    CASE \n        WHEN COUNT(CASE WHEN T2.SEX = 'M' THEN 1 END) > COUNT(CASE WHEN T2.SEX = 'F' THEN 1 END) THEN 'In-Patient'\n        ELSE 'Outpatient'\n    END AS Patient_Type,\n    CAST((COUNT(CASE WHEN T2.SEX = 'M' THEN 1 END) - COUNT(CASE WHEN T2.SEX = 'F' THEN 1 END)) AS REAL) * 100 / (COUNT(T2.SEX) + COUNT(CASE WHEN T2.SEX = 'F' THEN 1 END)) AS Deviation_Percentage\nFROM \n    Examination AS T1\nJOIN \n    Patient AS T2 ON T1.ID = T2.ID\nGROUP BY \n    CASE \n        WHEN COUNT(CASE WHEN T2.SEX = 'M' THEN 1 END) > COUNT(CASE WHEN T2.SEX = 'F' THEN 1 END) THEN 'In-Patient'\n        ELSE 'Outpatient'\n    END;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1150": "\nSELECT CAST(COUNT(CASE WHEN T2.Sex = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1930-01-01';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1151": "\nSELECT COUNT(CASE WHEN Admission = 'Inpatient' THEN ID ELSE NULL END) * 100 / COUNT(*) AS InpatientPercentage\nFROM Patient\nWHERE YEAR(Birthday) BETWEEN 1930 AND 1940;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1152": "\nSELECT SUM(CASE WHEN T2.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS SLE_Outpatient, \n       SUM(CASE WHEN T2.Diagnosis = 'SLE' AND T3.TreatmentType = 'Outpatient' THEN 1 ELSE 0 END) AS SLE_Outpatient_Treated,\n       SUM(CASE WHEN T2.Diagnosis = 'SLE' AND T3.TreatmentType = 'Inpatient' THEN 1 ELSE 0 END) AS SLE_Inpatient,\n       SUM(CASE WHEN T2.Diagnosis = 'SLE' AND T3.TreatmentType = 'Outpatient' AND T3.Outcome = 'Follow-up' THEN 1 ELSE 0 END) AS SLE_Outpatient_Treated_Followup\nFROM Examination AS T1\nJOIN Patient AS T2 ON T1.ID = T2.ID\nJOIN Treatment AS T3 ON T1.ID = T3.PatientID\nWHERE T2.Diagnosis = 'SLE'\nGROUP BY T2.Diagnosis;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1153": "\nSELECT T2.Date FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609 ORDER BY T2.Date;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1154": "\nSELECT T1.SEX, T1.Birthday, T2.Examination Date, T3.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.ID = 163109 \n\n\t----- bird -----\tthrombosis_prediction",
    "1155": "\nSELECT ID, SEX, Birthday FROM Patient WHERE LDH > (SELECT AVG(LDH) FROM Laboratory);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1156": "\nSELECT T1.ID, T2.Description - T1.Birthday AS Age FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE '%positive degree of coagulation%' \n\n\t----- bird -----\tthrombosis_prediction",
    "1157": "\nSELECT T1.ID, T1.SEX, T2.Diagnosis \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T1.Thrombosis = 3;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1158": "\nSELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE p.Birthday LIKE '1937%' AND l.TG > 200;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1159": "\nSELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5 \n\n\t----- bird -----\tthrombosis_prediction",
    "1160": "\nSELECT CAST(SUM(CASE WHEN T1.TP < 12 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1161": "\nSELECT AVG(aCL IgG) AS Average_IgG FROM Examination WHERE Diagnosis = 'Inpatient' AND Age >= 50 GROUP BY ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1162": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.SEX = 'F' AND EXAMINATION_DATE LIKE '1997%' AND E.Diagnosis IN ('Immediate Follow-up at Outpatient Clinic', 'Follow-up at Outpatient Clinic');\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1163": "\nSELECT T2.Description - T1.Birthday AS Age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday ASC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1164": "\nSELECT COUNT(P.ID) AS NumberOfWomenWithMostSeriousThrombosis\nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE E.Thrombosis = 1 AND YEAR(E.Examination Date) = 1997 AND P.SEX = 'Female'\nGROUP BY P.ID\nORDER BY COUNT(P.ID) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1165": "\nSELECT MAX(T1.Description) - MIN(T2.Description) AS AgeGap\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.TBIL IS NOT NULL AND T2.TBIL > 0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1166": "\nSELECT T2.Symptoms, T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T2.Birthday ASC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1167": "\nSELECT AVG(T2.GOT) AS Average_GOT, MONTH(T1.Examination Date) AS Month\nFROM Examination AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE YEAR(T1.Examination Date) = 1998\nGROUP BY MONTH(T1.Examination Date)\nORDER BY Month;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1168": "\nSELECT T2.Description, T1.Birthday + INTERVAL (T3.Date - T1.First Date) YEAR AS Age\nFROM Examination AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nJOIN Patient AS T3 ON T1.ID = T3.ID\nWHERE T2.CRP LIKE 'SJS'\nORDER BY T1.ExaminationDate ASC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1169": "\nSELECT COUNT(CASE WHEN T1.SEX = 'M' THEN 1 END) AS MaleCount, \n       COUNT(CASE WHEN T1.SEX = 'F' THEN 1 END) AS FemaleCount,\n       CAST(MaleCount AS REAL) / COUNT(*) * 100 AS RatioMaleToFemale\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.UA > 500;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1170": "\nSELECT COUNT(P.ID) AS NumberOfPatients\nFROM Patient P\nLEFT JOIN Examination E ON P.ID = E.ID\nWHERE E.Examination Date IS NULL AND DATEDIFF(CURDATE(), P.First Date) >= 365;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1171": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T2.Description BETWEEN '1990-01-01' AND '1993-12-31';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1172": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.T-BIL > 10;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1173": "\nSELECT Diagnosis FROM Examination WHERE ExaminationDate BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1174": "\nSELECT AVG(DATEDIFF(CURDATE(), Birthday)) AS Average_Age FROM Patient WHERE Diagnosis LIKE '%Laboratory%' AND ExaminationDate LIKE '1991-10-%';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1175": "\nSELECT T2.Description, T1.HGB FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T1.HGB DESC LIMIT 1 \n\n\t----- bird -----\tthrombosis_prediction",
    "1176": "\nSELECT aCL IgG FROM Examination WHERE ID = 3605340 AND Examination Date = '1996-12-02';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1177": "\nSELECT T1.TG FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 2927464 AND T1.Date = '1995-09-04' AND T1.TG < 3.8;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1178": "\nSELECT T1.SEX FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'AORTITIS' ORDER BY T2.First Date ASC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1179": "\nSELECT T3.aCL_IgG FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T3.Diagnosis = 'SLE' AND T1.Examination_Date = '1994-02-19' AND T2.Date = '1993-11-12'\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1180": "\nSELECT T1.SEX FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date = '1992-06-12' AND T2.ALT > 9;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1181": "\nSELECT DATEDIFF(CURDATE(), Birthday) AS Age FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE Date = '1991-10-21' AND GOT = 8.4);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1182": "\nSELECT COUNT(T1.ID) AS Total_Laboratory_Tests\nFROM Laboratory AS T1\nJOIN Patient AS T2 ON T1.ID = T2.ID\nWHERE T2.First_Date = '1991-06-13' AND T2.Diagnosis LIKE '%SJS%'\nAND T1.Date BETWEEN '1995-01-01' AND '1995-12-31'\nGROUP BY T2.ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1183": "\nSELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.First Date = '1997-01-27';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1184": "\nSELECT T1.Symptoms \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T2.Birthday = '1959-03-01' AND T1.Examination_Date = '1993-09-27';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1185": "\nSELECT (T2.TBIL - T1.TBIL) / (T2.Date - T1.Date) AS Decrease_Rate\nFROM Laboratory AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID AND T2.Date BETWEEN '1981-11-01' AND '1981-12-31'\nWHERE T1.Date = '1959-02-18';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1186": "\nSELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'Behcet''s' AND T1.Examination Date BETWEEN '1970-01-01' AND '1997-12-31';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1187": "\nSELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Examination_Date BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4 ORDER BY T1.ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1188": "\nSELECT COUNT(P.ID) AS TotalFemalePatients, P.ID \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.SEX = 'F' AND EXAMINATION_DATE BETWEEN '1964-01-01' AND '1964-12-31' \nAND E.Admission = 'Admitted' \nORDER BY P.ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1189": "\nSELECT COUNT(T1.ID) AS Number_of_Patients\nFROM Examination AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T1.Thrombosis = 2 AND T2.ANA LIKE 'S' AND T2.IGM > (SELECT AVG(IgnM) FROM Laboratory WHERE ANA LIKE 'S')\nAND T2.GOT < (SELECT AVG(GOT) FROM Laboratory WHERE ANA LIKE 'S');\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1190": "\nSELECT CAST(SUM(CASE WHEN T2.TG < 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG BETWEEN 5 AND 10;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1191": "\nSELECT CAST(COUNT(CASE WHEN T2.Sex = 'M' AND T1.Diagnosis LIKE '%BEHCET%' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Description LIKE '1981-01-01' AND T1.Diagnosis LIKE '%BEHCET%';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1192": "\nSELECT DISTINCT T1.ID, T2.Description \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T1.Examination Date LIKE '1991-10-%' AND T3.T-BIL BETWEEN 0.5 AND 4.5;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1193": "\nSELECT COUNT(P.ID) AS TotalWomenBetween1980And1989\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.SEX = 'F'\nAND E.ANA Pattern NOT IN ('P')\nAND P.Birthday BETWEEN '1980-01-01' AND '1989-12-31'\nGROUP BY P.ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1194": "\nSELECT T1.SEX FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE 'PSS' AND T2.CRP LIKE '%2+' AND T2.Creatinine LIKE '1' AND T2.LDH LIKE '123'\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1195": "\nSELECT AVG(T2.ALB) AS Average_Blood_Albumin_Level\nFROM Examination AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T1.Sex = 'F'\nAND T1.PLT > 400\nAND T2.Diagnosis LIKE '%SLE%'\nGROUP BY T1.ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1196": "\nSELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1197": "\nSELECT T1.Description, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 48473 ORDER BY T2.ExaminationDate ASC LIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1198": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'APS' AND P.SEX = 'F';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1199": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.Date LIKE '1997%' AND T2.PT > 10 OR T2.PT < 5;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1200": "\nSELECT CAST(SUM(CASE WHEN T1.Thrombosis = 1 AND T2.SLE = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1201": "\nSELECT CAST(COUNT(CASE WHEN T2.SEX = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday BETWEEN '1980-01-01' AND '1980-12-31' AND T2.Diagnosis LIKE '%RA%';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1202": "\nSELECT COUNT(P.ID) AS MalePatientsWithoutTreatment\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.SEX = 'M'\nAND E.Examination Date BETWEEN '1995-01-01' AND '1997-12-31'\nAND E.Diagnosis LIKE '%BEHCET%'\nAND NOT EXISTS (\n    SELECT 1\n    FROM Hospital H\n    WHERE H.ID = P.ID\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1203": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.WBC < 3.5 \n\n\t----- bird -----\tthrombosis_prediction",
    "1204": "\nSELECT T2.First Date - T1.Examination Date AS Time Taken FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 821298 ORDER BY T1.Examination Date LIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1205": "\nSELECT T1.UA FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 57266 AND T1.UA BETWEEN 30 AND 40;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1206": "\nSELECT T1.Examination_Date FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 48473 AND T2.AST > (SELECT AVG(AST) FROM Laboratory);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1207": "\nSELECT T1.SEX, T1.Birthday \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.Date BETWEEN '1994-01-01' AND '1994-12-31' \nAND T2.GOT BETWEEN 50 AND 150;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1208": "\nSELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 50 AND T1.SEX = 'Male' \n\n\t----- bird -----\tthrombosis_prediction",
    "1209": "\nSELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT > 5 AND T1.Date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY T2.Birthday ASC\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1210": "\nSELECT AVG(LDH) AS Average_LDH FROM Laboratory WHERE LDH BETWEEN 0 AND 150;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1211": "\nSELECT T1.ID, T2.Description - T2.Birthday AS Age \nFROM Laboratory AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T1.LDH BETWEEN 100 AND 300 \nAND T1.LDH > (SELECT AVG(LDH) FROM Laboratory WHERE LDH IS NOT NULL);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1212": "\nSELECT T2.Admission FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP BETWEEN 0 AND 45;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1213": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01' AND T2.ALP BETWEEN 35 AND 60; \n\n\t----- bird -----\tthrombosis_prediction",
    "1214": "\nSELECT ID, SEX, Birthday FROM Patient WHERE TP < (SELECT MIN(TP) FROM Laboratory);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1215": "\nSELECT T1.ID, T2.TP - (SELECT AVG(T2.TP) FROM Laboratory AS T2 WHERE T2.PatientID = T1.ID) AS TP_Deviation\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.PatientID\nWHERE T1.SEX = 'F' AND T2.TP > (SELECT AVG(T2.TP) FROM Laboratory AS T2 WHERE T2.PatientID = T1.ID);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1216": "\nSELECT T1.ID, T1.SEX, T1.Birthday, T1.Description, T1.First Date, T1.Admission, T1.Diagnosis \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.Sex = 'Male' AND T2.ALB NOT BETWEEN 3.0 AND 5.0 \nORDER BY T1.Birthday DESC;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1217": "\nSELECT p.Description, l.Albumin\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday BETWEEN '1982-01-01' AND '1982-12-31'\nAND l.Albumin BETWEEN 3.5 AND 6.0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1218": "\nSELECT CAST(SUM(CASE WHEN T1.UA > 120 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1219": "\nSELECT AVG(LA) AS Average_UA_Index FROM Laboratory WHERE LA IS NOT NULL AND ID IN (\n    SELECT ID FROM Patient WHERE Diagnosis = 'Normal' AND ID IN (\n        SELECT ID FROM Examination WHERE aCL IgG > 0 AND aCL IgM > 0 AND aCL IgA > 0\n    )\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1220": "\nSELECT ID, SEX, Birthday FROM Laboratory WHERE UN BETWEEN 60 AND 85;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1221": "\nSELECT T1.ID, T1.SEX, T1.Birthday \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T2.Diagnosis = 'RA' AND T2.UN IN (SELECT ID FROM Laboratory WHERE UN IS NOT NULL);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1222": "\nSELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Cre NOT BETWEEN 0.5 AND 1.5;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1223": "\nSELECT CASE WHEN COUNT(CASE WHEN T1.SEX = 'M' THEN 1 END) > COUNT(CASE WHEN T1.SEX = 'F' THEN 1 END) THEN 'True' ELSE 'False' END AS Result FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.CRE NOT BETWEEN 0.5 AND 3.0 GROUP BY T2.Sex;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1224": "\nSELECT T1.ID, T1.SEX, T1.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T1.T-BIL DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1225": "\nSELECT T1.SEX, COUNT(*) AS Total_Patients\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.T-BIL NOT BETWEEN 0 AND 1.5\nGROUP BY T1.SEX;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1226": "\nSELECT P.ID, T.T-CHO \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE T-TG > 0 AND T-CHO IS NOT NULL \nORDER BY T-TG DESC \nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1227": "\nSELECT AVG(T2.Description) AS Average_Age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Male' AND T2.TG > 50 GROUP BY T1.ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1228": "\nSELECT T1.ID, T2.Diagnosis \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.TG > 100 AND T2.TG < 300;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1229": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TG > 100 AND P.Description > '50-49' \nAND P.Description < '60-59';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1230": "\nSELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP LIKE 'Normal' AND T2.CPK LIKE 'Normal' \n\n\t----- bird -----\tthrombosis_prediction",
    "1231": "\nSELECT COUNT(P.ID) AS MalePatientsWithHighCreatinine FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.SEX = 'M' AND E.Creat > 100 AND P.Birthday BETWEEN '1936-01-01' AND '1956-12-31';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1232": "\nSELECT T1.ID, T1.SEX, T2.Description \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.GLU NOT BETWEEN 50 AND 180 AND T2.T-CHO BETWEEN 30 AND 240;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1233": "\nSELECT T2.ID, T1.GLU \nFROM Laboratory AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T2.Description >= '1991-01-01' AND T1.GLU BETWEEN 3.5 AND 7.5;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1234": "\nSELECT P.ID, P.SEX, P.Birthday, AVG(L.WBC) AS Average_WBC\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.WBC > 10  -- Assuming abnormal white blood cell count is more than 10\nGROUP BY P.SEX, P.Birthday\nORDER BY AVG(L.WBC)\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1235": "\nSELECT T1.ID, T2.Description FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HGB < 4.0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1236": "\nSELECT T1.Description, T2.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Birthday >= '1960-01-01' AND T2.RBC > 5.0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1237": "\nSELECT ID, SEX FROM Patient WHERE HGB < 10;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1238": "\nSELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA LIKE '%SLE%' AND T2.HGB > 0 ORDER BY T1.Birthday DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1239": "\nSELECT T1.ID, T2.Description - T2.Birthday AS Age\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.Hematocrit > 0.5 AND EXISTS (\n    SELECT 1\n    FROM Examination AS T3\n    WHERE T3.ID = T1.ID AND T3.Examination Date BETWEEN T2.Date - INTERVAL '1 year' AND T2.Date\n)\nGROUP BY T1.ID, T2.Description - T2.Birthday\nHAVING COUNT(*) >= 2;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1240": "\nSELECT AVG(T1.Hematocrit) AS Average_Hematocrit FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Examination_Date LIKE '1991%' AND T1.Hematocrit < (SELECT Normal_Range FROM Lab_Normal_Ranges WHERE Exam_Type = 'Hematocrit');\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1241": "\nSELECT COUNT(*) AS LowerThanNormal, COUNT(*) AS HigherThanNormal \nFROM Laboratory \nWHERE PLT < 100 AND PLT > 250 \nGROUP BY PLT;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1242": "\nSELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nWHERE YEAR(e.Examination Date) = 1984 AND e.PlT < 50 \nAND NOT EXISTS (\n    SELECT 1 \n    FROM Laboratory l \n    WHERE l.ID = e.ID AND l.PLT > 50\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1243": "\nSELECT CAST(SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Description > '1955-01-01' GROUP BY T2.SEX;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1244": "\nSELECT T1.ID, T1.SEX, T1.Birthday, T1.Description, T1.First Date, T1.Admission, T1.Diagnosis \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.Date >= '1992-01-01' AND T2.PT BETWEEN 5.0 AND 15.0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1245": "\nSELECT COUNT(*) FROM Examination WHERE ExaminationDate > '1997-01-01' AND TAT2 = 'Inactivated Partial Prothrom Bin Time';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1246": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 1 AND T2.PT > 10 AND T2.PT < 15;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1247": "\nSELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Male' AND T2.FG > 100 \n\n\t----- bird -----\tthrombosis_prediction",
    "1248": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Birthday > '1980-01-01' AND L.FBG IS NOT NULL;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1249": "\nSELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TG > 0 AND T1.TG < 50;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1250": "\nSELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PT < 0.5 AND T1.Diagnosis LIKE 'SLE' \n\n\t----- bird -----\tthrombosis_prediction",
    "1251": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.aCL_IgG < 0.5 AND P.Symptoms LIKE '%abortion%';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1252": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.aCL_IgG BETWEEN 0 AND 100 \nAND P.Symptoms IS NOT NULL;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1253": "\nSELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.aCL_IgA BETWEEN 0 AND 40 ORDER BY T1.aCL_IgA DESC LIMIT 1 \n\n\t----- bird -----\tthrombosis_prediction",
    "1254": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.IGG BETWEEN 0 AND 100 \nAND P.Description > '1990-01-01';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1255": "\nSELECT Diagnosis FROM Examination WHERE aCL_IgM > 0 GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1256": "\nSELECT COUNT(P.ID) FROM Patient P \nWHERE P.CRP IS NULL AND NOT EXISTS (\n    SELECT 1 FROM Laboratory L WHERE L.ID = P.ID\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1257": "\nSELECT COUNT(P.ID) FROM Patient P WHERE P.CRP LIKE '%abnormal%' AND P.Description < '1900-01-01'\nAND NOT EXISTS (\n    SELECT 1 FROM Examination E WHERE E.ID = P.ID AND E.Examination Date < '1900-01-01'\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1258": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.RF IS NOT NULL AND L.RF LIKE 'P%' \nAND EXISTS (SELECT 1 FROM Examination E WHERE P.ID = E.ID AND E.Thrombosis = 1);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1259": "\nSELECT DISTINCT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday > '1995-01-01' AND T1.RF IS NULL;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1260": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF LIKE 'Normal' AND T1.Description > '60';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1261": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.RF IS NULL OR L.RF = 'Normal' AND L.Thrombosis = 0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1262": "\nSELECT COUNT(P.ID) FROM Examination AS E \nJOIN Laboratory AS L ON E.ID = L.ID \nWHERE E.Diagnosis LIKE 'Normal' AND L.C3 IS NOT NULL AND L.C3 LIKE '%P%' \nAND EXISTS (SELECT 1 FROM Patient AS P WHERE P.ID = E.ID);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1263": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Hematoclit < 40 AND T2.CRP IS NOT NULL ORDER BY T2.IGG DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1264": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.Thrombosis = 1 AND Laboratory.C4 IS NOT NULL AND Laboratory.C4 > 0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1265": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.U-PRO IS NOT NULL AND L.U-PRO LIKE 'Normal' AND P.Admission = 'Yes';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1266": "\nSELECT T2.Birthday FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.aCL_IgM > 0 ORDER BY T2.Birthday ASC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1267": "\nSELECT COUNT(T1.ID) AS NumberOfSevereThrombosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SMC = 'Normal' AND T1.Thrombosis = 3 \n\n\t----- bird -----\tthrombosis_prediction",
    "1268": "\nSELECT ID FROM Patient WHERE Diagnosis LIKE '%anti-SM%' ORDER BY Birthday ASC LIMIT 3; \n\n\t----- bird -----\tthrombosis_prediction",
    "1269": "\nSELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Examination_Date > '1997-01-01' AND T2.SSC170 IS NOT NULL \n\n\t----- bird -----\tthrombosis_prediction",
    "1270": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.SEX = 'Male' AND L.SSC170 IS NOT NULL AND L.SSC170 LIKE '%Vertigo%' \nAND L.GOT IS NOT NULL AND L.GOT < 25;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1271": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.SSA IS NOT NULL AND L.SSA LIKE 'Normal' AND P.Birthday < '1990-01-01';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1272": "\nSELECT T1.ID FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Ana Pattern LIKE 'Abnormal' ORDER BY T2.First Date ASC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1273": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.SLE = 'Normal' AND E.Anti_SSB = 'Normal';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1274": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.SSB IS NULL AND T1.Symptoms <> '';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1275": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.CENTROMEA IS NOT NULL AND L.SSB IS NOT NULL \nAND L.CENTROMEA = 0 AND L.SSB = 0 \nAND P.SEX = 'Male';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1276": "\nSELECT DISTINCT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.aCL IgG > 0 AND T1.aCL IgM > 0 AND T1.aCL IgA > 0 AND T1.ANA > 0 AND T1.IGG > 0 AND T1.IGA > 0 AND T1.IGM > 0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1277": "\nSELECT COUNT(P.ID) FROM Patient P \nWHERE P.ID NOT IN (SELECT ID FROM Laboratory WHERE DNA = 'Normal') AND P.DNA IS NULL;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1278": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.DNA-II > 0 AND T1.Admission = 'Yes';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1279": "\nSELECT CAST(SUM(CASE WHEN T1.GOT > 20 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis LIKE 'SLE' AND T1.GOT > 20;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1280": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GOT BETWEEN 0 AND 15;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1281": "\nSELECT T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT > 50 AND T2.Description IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1282": "\nSELECT T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT BETWEEN 0 AND 35 AND T1.LDH BETWEEN 0 AND 40 ORDER BY T1.GOT DESC LIMIT 3; \n\n\t----- bird -----\tthrombosis_prediction",
    "1283": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GOT IS NOT NULL AND L.GOT < 100 AND P.SEX = 'Male' \n\n\t----- bird -----\tthrombosis_prediction",
    "1284": "\nSELECT T2.Date FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH BETWEEN 30 AND 80 ORDER BY T2.First Date DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1285": "\nSELECT T2.Date FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH > 50 AND T2.Diagnosis LIKE 'Abnormal' ORDER BY T1.Date DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1286": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.ID = T2.ID \nWHERE T1.GOT > 50 AND T2.Admission = 'Yes';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1287": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.UA < 100 AND L.UA > 50;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1288": "\nSELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.TP < 4.0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1289": "\nSELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE 'SJS' AND T2.TP BETWEEN 0 AND 35;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1290": "\nSELECT T1.Examination_Date FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB BETWEEN 30 AND 50 ORDER BY T2.ALB DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1291": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.ALB BETWEEN 30 AND 50 AND L.TP BETWEEN 40 AND 60 \n\n\t----- bird -----\tthrombosis_prediction",
    "1292": "\nSELECT T2.aCL_IgG FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Sex = 'F' AND T2.UA BETWEEN 30 AND 45 ORDER BY T2.UA DESC LIMIT 1 \n\n\t----- bird -----\tthrombosis_prediction",
    "1293": "\nSELECT MAX(aCL IgG) AS HighestAntiNucleusAbundance FROM Examination WHERE Diagnosis = 'Normal Creatinine Level';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1294": "\nSELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP LIKE 'Normal' AND T2.IGM LIKE 'Highest'\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1295": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.T-BIL > 0 AND T2.ANA Pattern LIKE '%Peripheral%' \nAND T2.IGG IS NOT NULL AND T2.IGM IS NOT NULL AND T2.IGA IS NOT NULL;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1296": "\nSELECT T1.aCL_IgG FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL BETWEEN 0 AND 1 ORDER BY T2.T-BIL DESC LIMIT 1 \n\n\t----- bird -----\tthrombosis_prediction",
    "1297": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TG > 100 AND L.CRP LIKE 'Negative' \nAND P.Total_Cholesterol > (SELECT AVG(Total_Cholesterol) FROM Patient);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1298": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.TG BETWEEN 30 AND 49 \nAND EXISTS (\n    SELECT 1 \n    FROM Laboratory AS T3 \n    WHERE T3.ID = T1.ID \n      AND T3.IGM LIKE 'P'\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1299": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.T-BIL < 10 AND T1.Symptoms IS NOT NULL;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1300": "\nSELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.T-BIL BETWEEN 0 AND 100 ORDER BY T1.T-BIL DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1301": "\nSELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 0 AND T2.CRP IS NOT NULL AND T2.CRP > 5;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1302": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.CRP LIKE '%Normal%' AND L.CRP NOT LIKE '%Abnormal%'\nAND EXISTS (\n    SELECT 1 FROM Examination E \n    WHERE P.ID = E.ID \n    AND E.Thrombosis = 1\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1303": "\nSELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 100 ORDER BY T1.Birthday DESC LIMIT 1; \n\n\t----- bird -----\tthrombosis_prediction",
    "1304": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.GLU IS NOT NULL AND L.GLU < 100 AND P.Thrombosis = 0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1305": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.WBC BETWEEN 4 AND 10 \n\n\t----- bird -----\tthrombosis_prediction",
    "1306": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis LIKE '%SLE%' AND P.WBC BETWEEN 4 AND 10;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1307": "\nSELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC > 5 AND T1.Admission LIKE 'OUTPATIENT';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1308": "\nSELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.PLT BETWEEN 50 AND 150 \nAND EXISTS (SELECT 1 FROM Patient AS T3 WHERE T3.ID = T1.ID AND T3.Symptoms IS NOT NULL);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1309": "\nSELECT T2.PLT FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis LIKE 'MCTD' AND T2.PLT BETWEEN 100 AND 400;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1310": "\nSELECT AVG(PT) AS Average_PT FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'Male') AND PT BETWEEN 10 AND 25;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1311": "\nSELECT COUNT(P.ID) FROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.Thrombosis = 1 AND E.PT BETWEEN 0.5 AND 1.2;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1312": "\nSELECT T1.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders';\n\n\n\t----- bird -----\tstudent_club",
    "1313": "\nSELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND department = 'Engineering');\n\n\n\t----- bird -----\tstudent_club",
    "1314": "\nSELECT m.first_name, m.last_name FROM member AS m JOIN major AS maj ON m.link_to_major = maj.major_id WHERE maj.department = 'Art and Design' AND maj.college = 'Student_Club';\n\n\n\t----- bird -----\tstudent_club",
    "1315": "\nSELECT COUNT(T1.member_id) \nFROM member AS T1 \nJOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nWHERE T2.event_name = 'Women's Soccer' AND T1.position LIKE '%Student_Club%';\n\n\n\t----- bird -----\tstudent_club",
    "1316": "\nSELECT T1.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.event_name = 'Women's Soccer' GROUP BY T1.member_id;\n\n\n\t----- bird -----\tstudent_club",
    "1317": "\nSELECT COUNT(T1.member_id) \nFROM member AS T1 \nJOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nJOIN event AS T3 ON T2.link_to_event = T3.event_id \nWHERE T3.event_name = 'Women's Soccer' AND T1.t_shirt_size = 'Medium';\n\n\n\t----- bird -----\tstudent_club",
    "1318": "\nSELECT e.event_name FROM event e \nJOIN attendance a ON e.event_id = a.link_to_event \nWHERE a.member_id IN (SELECT member_id FROM member WHERE position = 'Student_Club') \nORDER BY COUNT(a.member_id) DESC LIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1319": "\nSELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President of Student_Club' \n\n\t----- bird -----\tstudent_club",
    "1320": "\nSELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T2.link_to_member = 'Maya Mclean' \n\n\t----- bird -----\tstudent_club",
    "1321": "\nSELECT COUNT(event_id) FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison') AND event_date LIKE '2019%';\n\n\n\t----- bird -----\tstudent_club",
    "1322": "\nSELECT COUNT(event_id) FROM attendance WHERE link_to_event IN (\n    SELECT event_id FROM event WHERE type = 'meeting'\n) GROUP BY event_id HAVING COUNT(member_id) > 10;\n\n\n\t----- bird -----\tstudent_club",
    "1323": "\nSELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE a.attendance_count > 20 GROUP BY e.event_name;\n\n\n\t----- bird -----\tstudent_club",
    "1324": "\nSELECT AVG(attendance) AS average_attendance FROM attendance WHERE YEAR(event_date) = 2020 GROUP BY event_id;\n\n\n\t----- bird -----\tstudent_club",
    "1325": "\nSELECT MAX(cost) AS most_expensive_item FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE type = 'club');\n\n\n\t----- bird -----\tstudent_club",
    "1326": "\nSELECT COUNT(member_id) FROM member WHERE link_to_major = 'Environmental Engineering'\n\n\n\t----- bird -----\tstudent_club",
    "1327": "\nSELECT m.first_name, m.last_name FROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nJOIN event e ON a.link_to_event = e.event_id \nWHERE e.event_name = 'Laugh Out Loud';\n\n\n\t----- bird -----\tstudent_club",
    "1328": "\nSELECT T2.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law' AND T2.major_name = 'Constitutional Studies'\n\n\n\t----- bird -----\tstudent_club",
    "1329": "\nSELECT county FROM zip_code WHERE city = 'Sherri Ramsey';\n\n\n\t----- bird -----\tstudent_club",
    "1330": "\nSELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt';\n\n\n\t----- bird -----\tstudent_club",
    "1331": "\nSELECT T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President' \n\n\t----- bird -----\tstudent_club",
    "1332": "\nSELECT SUM(expense.cost) AS total_spent FROM expense \nJOIN member ON expense.link_to_member = member.member_id \nJOIN attendance ON expense.link_to_event = attendance.link_to_event \nWHERE member.position = 'Student_Club' AND MONTH(attendance.event_date) = 9;\n\n\n\t----- bird -----\tstudent_club",
    "1333": "\nSELECT T1.city, T2.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'President of the Student_Club' AND T1.position = 'President';\n\n\n\t----- bird -----\tstudent_club",
    "1334": "\nSELECT m.first_name, m.last_name FROM member AS m JOIN zip_code AS z ON m.zip = z.zip_code WHERE z.state = 'IL' \n\n\t----- bird -----\tstudent_club",
    "1335": "\nSELECT SUM(b.spent) AS total_spent FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'September Meeting' AND e.status = 'Completed' AND e.major_id IN (SELECT major_id FROM member WHERE position = 'Student_Club');\n\n\n\t----- bird -----\tstudent_club",
    "1336": "\nSELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Pierce' AND T1.last_name = 'Guidi';\n\n\n\t----- bird -----\tstudent_club",
    "1337": "\nSELECT SUM(b.spent) as total_budgeted_amount \nFROM budget b \nJOIN event e ON b.link_to_event = e.event_id \nWHERE e.type = 'October Speaker' \nAND b.category IN ('Category1', 'Category2', 'Category3'); \n\n\n\t----- bird -----\tstudent_club",
    "1338": "\nSELECT e.approved FROM expense e \nJOIN attendance a ON e.link_to_member = a.link_to_member \nWHERE a.event_id IN (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08') \nAND e.expense_date = '2019-10-08';\n\n\n\t----- bird -----\tstudent_club",
    "1339": "\nSELECT AVG(cost) AS total_average_cost\nFROM expense\nWHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen')\n  AND expense_date BETWEEN '2023-09-01' AND '2023-10-31'\n\n\n\t----- bird -----\tstudent_club",
    "1340": "\nSELECT SUM(b.spent) - SUM(e.cost) AS difference\nFROM budget b\nJOIN expense e ON b.link_to_budget = e.link_to_budget\nWHERE b.event_status = 'Completed' AND YEAR(b.event_date) IN (2019, 2020)\nAND b.type = 'Student_Club';\n\n\n\t----- bird -----\tstudent_club",
    "1341": "\nSELECT location FROM event WHERE event_name = 'Spring Budget Review'\n\n\n\t----- bird -----\tstudent_club",
    "1342": "\nSELECT expense.cost FROM expense JOIN event ON expense.link_to_budget = event.event_id WHERE event.type = 'Posters' AND event.event_date = '2019-09-04' \n\n\t----- bird -----\tstudent_club",
    "1343": "\nSELECT b.remaining FROM budget AS b WHERE b.category = 'Food' ORDER BY b.spent DESC LIMIT 1 \n\n\t----- bird -----\tstudent_club",
    "1344": "\nSELECT notes FROM event WHERE event_date = '2019-09-14';\n\n\n\t----- bird -----\tstudent_club",
    "1345": "\nSELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences'\n\n\n\t----- bird -----\tstudent_club",
    "1346": "\nSELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\n\n\n\t----- bird -----\tstudent_club",
    "1347": "\nSELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O\\'Gallagher'\n\n\n\t----- bird -----\tstudent_club",
    "1348": "\nSELECT COUNT(*) FROM budget WHERE category = 'November Meeting' AND spent > amount;\n\n\n\t----- bird -----\tstudent_club",
    "1349": "\nSELECT SUM(b.spent) AS total_budget_amount FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.event_name = 'September Speaker';\n\n\n\t----- bird -----\tstudent_club",
    "1350": "\nSELECT T1.status FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T2.member_id IN (SELECT member_id FROM expense WHERE expense_description LIKE 'Post Cards, Posters' AND expense_date = '2019-08-20') \n\n\t----- bird -----\tstudent_club",
    "1351": "\nSELECT T1.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason';\n\n\n\t----- bird -----\tstudent_club",
    "1352": "\nSELECT COUNT(member_id) FROM member WHERE link_to_major = 'Human Development and Family Studies' AND t_shirt_size = 'Large';\n\n\n\t----- bird -----\tstudent_club",
    "1353": "SELECT T1.zip_code FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson' \n\n\t----- bird -----\tstudent_club",
    "1354": "\nSELECT major_name FROM major WHERE position = 'Vice President';\n\n\n\t----- bird -----\tstudent_club",
    "1355": "\nSELECT T1.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\n\n\n\t----- bird -----\tstudent_club",
    "1356": "\nSELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President' \n\n\t----- bird -----\tstudent_club",
    "1357": "\nSELECT T1.event_date FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton';\n\n\n\t----- bird -----\tstudent_club",
    "1358": "\nSELECT m.first_name, m.last_name FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member WHERE a.dues_paid IS NOT NULL ORDER BY a.dues_paid ASC LIMIT 1; \n\n\t----- bird -----\tstudent_club",
    "1359": "\nSELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff' AND event_date > (SELECT event_date FROM event WHERE event_name = 'October Meeting');\n\n\n\t----- bird -----\tstudent_club",
    "1360": "\nSELECT CAST(SUM(CASE WHEN budget.category = 'Parking' THEN budget.spent ELSE 0 END) AS REAL) * 100 / SUM(budget.spent) FROM budget WHERE event_name = 'November Speaker' \n\n\t----- bird -----\tstudent_club",
    "1361": "\nSELECT SUM(cost) AS total_pizza_cost FROM expense WHERE expense_description LIKE '%pizza%' AND type = 'pizzas';\n\n\n\t----- bird -----\tstudent_club",
    "1362": "\nSELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\n\n\n\t----- bird -----\tstudent_club",
    "1363": "\nSELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';\n\n\n\t----- bird -----\tstudent_club",
    "1364": "\nSELECT T1.city FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth';\n\n\n\t----- bird -----\tstudent_club",
    "1365": "\nSELECT expense_id, expense_description, expense_date, cost FROM expense WHERE link_to_budget = ( SELECT budget_id FROM budget ORDER BY remaining ASC LIMIT 1 ) \n\n\t----- bird -----\tstudent_club",
    "1366": "\nSELECT DISTINCT m.member_id, m.first_name, m.last_name \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nWHERE a.link_to_event = 'October Meeting' \nAND a.status = 'Attended';\n\n\n\t----- bird -----\tstudent_club",
    "1367": "\nSELECT college FROM member GROUP BY college ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tstudent_club",
    "1368": "\nSELECT T1.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\n\n\n\t----- bird -----\tstudent_club",
    "1369": "\nSELECT event_name FROM event WHERE budget_id = (SELECT budget_id FROM budget ORDER BY amount DESC LIMIT 1) \n\n\t----- bird -----\tstudent_club",
    "1370": "\nSELECT expense_description, expense_date, cost FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE position = 'Vice President');\n\n\n\t----- bird -----\tstudent_club",
    "1371": "\nSELECT COUNT(T1.member_id) \nFROM member AS T1 \nJOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nWHERE T2.link_to_event = 'Women\\'s Soccer';\n\n\n\t----- bird -----\tstudent_club",
    "1372": "\nSELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason';\n\n\n\t----- bird -----\tstudent_club",
    "1373": "\nSELECT COUNT(DISTINCT T1.zip) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'MD';\n\n\n\t----- bird -----\tstudent_club",
    "1374": "\nSELECT COUNT(event_id) FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE phone = '954-555-6240');\n\n\n\t----- bird -----\tstudent_club",
    "1375": "\nSELECT DISTINCT m.first_name, m.last_name FROM member m JOIN major m2 ON m.link_to_major = m2.major_id WHERE m2.department = 'School of Applied Sciences, Technology and Education' \n\n\t----- bird -----\tstudent_club",
    "1376": "\nSELECT e.event_name, e.event_date, b.spent / b.amount AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1377": "\nSELECT COUNT(member_id) FROM member WHERE position = 'president'\n\n\n\t----- bird -----\tstudent_club",
    "1378": "\nSELECT MAX(spent) FROM budget WHERE event_status = 'active';\n\n\n\t----- bird -----\tstudent_club",
    "1379": "\nSELECT COUNT(event_id) FROM event WHERE YEAR(event_date) = 2020 AND type = 'Meeting';\n\n\n\t----- bird -----\tstudent_club",
    "1380": "\nSELECT SUM(cost) AS total_spent FROM expense WHERE expense_description LIKE '%food%' AND approved = 'Yes';\n\n\n\t----- bird -----\tstudent_club",
    "1381": "\nSELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member GROUP BY m.member_id HAVING COUNT(a.event_id) > 7 \n\n\t----- bird -----\tstudent_club",
    "1382": "\nSELECT DISTINCT m.first_name, m.last_name \nFROM member m \nJOIN major m2 ON m.link_to_major = m2.major_id \nWHERE m2.major_name = 'Interior Design' AND e.event_name = 'Community Theater';\n\n\n\t----- bird -----\tstudent_club",
    "1383": "\nSELECT DISTINCT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Georgetown' AND T2.college = 'South Carolina'\n\n\n\t----- bird -----\tstudent_club",
    "1384": "\nSELECT COUNT(*) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour');\n\n\n\t----- bird -----\tstudent_club",
    "1385": "\nSELECT m.first_name, m.last_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount > 40;\n\n\n\t----- bird -----\tstudent_club",
    "1386": "\nSELECT SUM(cost) AS total_expense FROM expense WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff');\n\n\n\t----- bird -----\tstudent_club",
    "1387": "\nSELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member WHERE a.event_id IN (SELECT event_id FROM event WHERE type = 'Yearly Kickoff' AND status = 'Assigned') \n\n\t----- bird -----\tstudent_club",
    "1388": "\nSELECT m.first_name, m.last_name, i.source \nFROM member m \nJOIN income i ON m.member_id = i.link_to_member \nORDER BY i.amount DESC \nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1389": "\nSELECT event_name FROM event ORDER BY cost ASC LIMIT 1; \n\n\t----- bird -----\tstudent_club",
    "1390": "\nSELECT \n    (SUM(CASE WHEN event_name = 'Yearly Kickoff' THEN expense.cost ELSE 0 END) / SUM(expense.cost)) * 100 AS yearly_kickoff_percentage\nFROM \n    expense\nJOIN \n    event ON expense.link_to_event = event.event_id\nWHERE \n    event.type = 'Event';\n\n\n\t----- bird -----\tstudent_club",
    "1391": "\nSELECT COUNT(CASE WHEN m.major_id = 'finance' THEN 1 END) AS finance_students, \n       COUNT(CASE WHEN m.major_id = 'physics' THEN 1 END) AS physics_students,\n       CAST(finance_students AS REAL) / COUNT(*) * 100 AS finance_to_physics_ratio\nFROM member m\nJOIN major m2 ON m.link_to_major = m2.major_id\nWHERE m.position = 'student'\nGROUP BY m2.major_name;\n\n\n\t----- bird -----\tstudent_club",
    "1392": "\nSELECT source FROM income WHERE date_received LIKE '2019-09-%' ORDER BY amount DESC LIMIT 1; \n\n\t----- bird -----\tstudent_club",
    "1393": "\nSELECT first_name, last_name, email FROM member WHERE position = 'Secretary' AND link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club');\n\n\n\t----- bird -----\tstudent_club",
    "1394": "\nSELECT COUNT(member_id) FROM member WHERE link_to_major = 'Physics Teaching'\n\n\n\t----- bird -----\tstudent_club",
    "1395": "\nSELECT COUNT(DISTINCT T1.member_id) \nFROM attendance AS T1 \nJOIN event AS T2 ON T1.link_to_event = T2.event_id \nWHERE T2.event_name = 'Community Theater' AND EXTRACT(YEAR FROM T2.event_date) = 2019;\n\n\n\t----- bird -----\tstudent_club",
    "1396": "\nSELECT COUNT(T1.event_id) AS event_count, T2.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi' GROUP BY T2.major_id \n\n\t----- bird -----\tstudent_club",
    "1397": "\nSELECT AVG(cost) AS average_spent FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE category = 'Food' AND event_status = 'Past') GROUP BY link_to_event;\n\n\n\t----- bird -----\tstudent_club",
    "1398": "\nSELECT event_name FROM event WHERE type = 'Advertisement' ORDER BY spent DESC LIMIT 1; \n\n\t----- bird -----\tstudent_club",
    "1399": "\nSELECT COUNT(*) FROM attendance WHERE link_to_event = ( SELECT event_id FROM event WHERE event_name = 'Women's Soccer' AND type = 'Conference' ) AND member_id = ( SELECT member_id FROM member WHERE first_name = 'Maya' AND last_name = 'Mclean' );\n\n\n\t----- bird -----\tstudent_club",
    "1400": "\nSELECT \n    (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) * 100 / COUNT(*)) AS percentage_share\nFROM \n    event\nWHERE \n    YEAR(event_date) = 2019;\n\n\n\t----- bird -----\tstudent_club",
    "1401": "\nSELECT expense.cost FROM expense JOIN event ON expense.link_to_budget = event.event_id WHERE event.event_name = 'September Speaker';\n\n\n\t----- bird -----\tstudent_club",
    "1402": "\nSELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tstudent_club",
    "1403": "\nSELECT e.event_name FROM event e \nJOIN attendance a ON e.event_id = a.link_to_event \nWHERE e.status = 'Closed' \nORDER BY SUM(e.cost) DESC \nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1404": "\nSELECT e.type, SUM(e.cost) AS total_value_approved\nFROM expense e\nJOIN attendance a ON e.link_to_member = a.link_to_member\nWHERE a.event_id IN (\n    SELECT event_id FROM event WHERE event_name = 'October Meeting'\n)\nAND e.approved = 'Yes'\nGROUP BY e.type;\n\n\n\t----- bird -----\tstudent_club",
    "1405": "\nSELECT b.category, b.amount FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'April Speaker' ORDER BY b.amount ASC; \n\n\t----- bird -----\tstudent_club",
    "1406": "\nSELECT MAX(amount) AS highest_budget FROM budget WHERE category = 'Food';\n\n\n\t----- bird -----\tstudent_club",
    "1407": "\nSELECT b.category, SUM(b.spent) as total_spent\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.type = 'Advertising'\nGROUP BY b.category\nORDER BY total_spent DESC\nLIMIT 3;\n\n\n\t----- bird -----\tstudent_club",
    "1408": "\nSELECT SUM(cost) AS total_cost_spent FROM expense WHERE expense_description LIKE '%Parking%' AND link_to_budget IN (SELECT budget_id FROM budget WHERE category = 'Parking');\n\n\n\t----- bird -----\tstudent_club",
    "1409": "\nSELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\n\n\n\t----- bird -----\tstudent_club",
    "1410": "\nSELECT m.first_name, m.last_name, SUM(e.cost) as total_cost\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN expense e ON a.link_to_event = e.link_to_event\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name;\n\n\n\t----- bird -----\tstudent_club",
    "1411": "\nSELECT expense_description FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison') \n\n\t----- bird -----\tstudent_club",
    "1412": "\nSELECT e.expense_description, e.cost \nFROM expense e \nJOIN member m ON e.link_to_member = m.member_id \nWHERE m.t_shirt_size = 'X-Large';\n\n\n\t----- bird -----\tstudent_club",
    "1413": "\nSELECT T1.zip FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50 AND T2.approved = 'Yes' GROUP BY T1.zip ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tstudent_club",
    "1414": "\nSELECT T1.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Phillip' AND T1.last_name = 'Cullen';\n\n\n\t----- bird -----\tstudent_club",
    "1415": "\nSELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' \n\n\t----- bird -----\tstudent_club",
    "1416": "\nSELECT COUNT(*) FROM member WHERE t_shirt_size = 'Medium' AND link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business');\n\n\n\t----- bird -----\tstudent_club",
    "1417": "\nSELECT type FROM event WHERE remaining > 30 AND link_to_event IN (SELECT budget_id FROM budget WHERE amount > 30)\n\n\n\t----- bird -----\tstudent_club",
    "1418": "\nSELECT category FROM event WHERE location = 'MU 215'\n\n\n\t----- bird -----\tstudent_club",
    "1419": "\nSELECT category FROM event WHERE event_date = '2020-03-24T12:00:00' \n\n\t----- bird -----\tstudent_club",
    "1420": "\nSELECT T1.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President';\n\n\n\t----- bird -----\tstudent_club",
    "1421": "\nSELECT CAST(COUNT(CASE WHEN m.major_id = 'Mathematics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(m.member_id) FROM member m WHERE m.link_to_major IS NOT NULL AND m.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Mathematics');\n\n\n\t----- bird -----\tstudent_club",
    "1422": "\nSELECT category FROM event WHERE location = 'MU 215' GROUP BY category;\n\n\n\t----- bird -----\tstudent_club",
    "1423": "\nSELECT COUNT(*) FROM income WHERE amount = 50;\n\n\n\t----- bird -----\tstudent_club",
    "1424": "\nSELECT COUNT(member_id) FROM member WHERE t_shirt_size = 'Extra Large';\n\n\n\t----- bird -----\tstudent_club",
    "1425": "\nSELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences';\n\n\n\t----- bird -----\tstudent_club",
    "1426": "\nSELECT m.last_name, m.major_id, m.department, m.college FROM member m JOIN major j ON m.link_to_major = j.major_id WHERE j.major_name = 'Environmental Engineering' ORDER BY m.last_name;\n\n\n\t----- bird -----\tstudent_club",
    "1427": "\nSELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location LIKE 'MU 215' AND T2.spent = 0 GROUP BY T2.category;\n\n\n\t----- bird -----\tstudent_club",
    "1428": "\nSELECT T1.city, T1.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Electrical and Computer Engineering' GROUP BY T1.city, T1.state;\n\n\n\t----- bird -----\tstudent_club",
    "1429": "\nSELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T2.member_id IN (SELECT member_id FROM member WHERE position = 'Vice President of the Student_Club' AND zip = 900) \n\n\t----- bird -----\tstudent_club",
    "1430": "\nSELECT T2.last_name, T1.position FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T2.event_date = '09/10/2019' AND T2.expense_description LIKE '%pizza%';\n\n\n\t----- bird -----\tstudent_club",
    "1431": "\nSELECT T2.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'women's soccer' GROUP BY T2.member_id ORDER BY T2.event_date DESC LIMIT 1; \n\n\t----- bird -----\tstudent_club",
    "1432": "\nSELECT CAST(SUM(CASE WHEN T1.t_shirt_size = 'Medium' THEN 50 ELSE 0 END) AS REAL) * 100 / SUM(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Student_Club' AND T2.source = '50';\n\n\n\t----- bird -----\tstudent_club",
    "1433": "\nSELECT DISTINCT T1.city FROM zip_code AS T1 INNER JOIN attendance AS T2 ON T1.zip_code = T2.link_to_event WHERE T2.type = 'post office box' \n\n\t----- bird -----\tstudent_club",
    "1434": "\nSELECT DISTINCT T1.zip_code FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.position LIKE 'Post Office Box' AND T2.city LIKE 'San Juan Municipio' AND T2.state LIKE 'Puerto Rico' \n\n\t----- bird -----\tstudent_club",
    "1435": "\nSELECT event_name FROM event WHERE type = 'game' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\n\n\n\t----- bird -----\tstudent_club",
    "1436": "\nSELECT DISTINCT e.link_to_event FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE a.member_id IN (SELECT m.member_id FROM member m WHERE m.zip IN (SELECT z.zip_code FROM zip_code z WHERE z.short_state = 'CA' AND z.city = 'Los Angeles')) AND a.amount > 50 GROUP BY e.event_id \n\n\t----- bird -----\tstudent_club",
    "1437": "\nSELECT m.first_name, m.last_name, a.link_to_event \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nWHERE a.event_date BETWEEN '2019-01-10' AND '2019-11-19' \nAND a.approved = 'Yes';\n\n\n\t----- bird -----\tstudent_club",
    "1438": "\nSELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T2.major_name = 'rec1N0upiVLy5esTO'\n\n\n\t----- bird -----\tstudent_club",
    "1439": "\nSELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'College of Agriculture and Applied Sciences' AND T2.major_name = 'Business';\n\n\n\t----- bird -----\tstudent_club",
    "1440": "\nSELECT DISTINCT T2.email FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > 20 AND T2.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\n\n\n\t----- bird -----\tstudent_club",
    "1441": "\nSELECT COUNT(member_id) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Education' AND department = 'College of Education & Human Services') \n\n\t----- bird -----\tstudent_club",
    "1442": "\nSELECT CAST(SUM(CASE WHEN budget.spent > budget.amount THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event.event_id) FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'over_budget';\n\n\n\t----- bird -----\tstudent_club",
    "1443": "\nSELECT event_id, location, status \nFROM event \nWHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\n\n\n\t----- bird -----\tstudent_club",
    "1444": "\nSELECT expense_id, expense_description, expense_date, cost FROM expense WHERE cost > (SELECT AVG(cost) FROM expense) \n\n\t----- bird -----\tstudent_club",
    "1445": "\nSELECT first_name, last_name FROM member WHERE t_shirt_size = 'Extra Large'\n\n\n\t----- bird -----\tstudent_club",
    "1446": "\nSELECT CAST(COUNT(CASE WHEN type = 'PO Box' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM zip_code WHERE type = 'PO Box';\n\n\n\t----- bird -----\tstudent_club",
    "1447": "\nSELECT e.event_name, e.location \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nWHERE b.spent < b.amount AND b.event_status = 'Underspent';\n\n\n\t----- bird -----\tstudent_club",
    "1448": "\nSELECT e.event_name, e.event_date \nFROM event e \nJOIN attendance a ON e.event_id = a.link_to_event \nJOIN expense ex ON a.link_to_member = ex.link_to_member \nWHERE ex.expense_description LIKE 'Pizza' AND ex.cost > 50 AND ex.cost < 100;\n\n\n\t----- bird -----\tstudent_club",
    "1449": "\nSELECT m.first_name, m.last_name, m.major_id FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > 100 GROUP BY m.member_id;\n\n\n\t----- bird -----\tstudent_club",
    "1450": "\nSELECT T1.city, T2.country FROM event AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.event_id IN (SELECT link_to_event FROM income GROUP BY link_to_event HAVING COUNT(*) > 40) \n\n\t----- bird -----\tstudent_club",
    "1451": "\nSELECT m.first_name, m.last_name, MAX(e.cost) AS max_expense\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN expense e ON a.link_to_event = e.link_to_event\nGROUP BY m.member_id\nHAVING COUNT(DISTINCT a.event_id) > 1;\n\n\n\t----- bird -----\tstudent_club",
    "1452": "\nSELECT AVG(cost) AS average_amount_paid FROM expense WHERE link_to_member NOT IN (SELECT member_id FROM member WHERE position = 'member');\n\n\n\t----- bird -----\tstudent_club",
    "1453": "\nSELECT event_name FROM event WHERE cost < (SELECT AVG(cost) FROM expense);\n\n\n\t----- bird -----\tstudent_club",
    "1454": "\nSELECT CAST(SUM(CASE WHEN type = 'game' THEN cost ELSE 0 END) AS REAL) * 100 / SUM(cost) FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE type = 'game');\n\n\n\t----- bird -----\tstudent_club",
    "1455": "\nSELECT b.budget_id, SUM(b.spent) AS total_spent\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.type IN ('water', 'chips', 'cookies')\nGROUP BY b.budget_id\nORDER BY total_spent DESC\nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1456": "\nSELECT m.first_name, m.last_name, SUM(e.cost) as total_spent\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id\nORDER BY total_spent DESC\nLIMIT 5;\n\n\n\t----- bird -----\tstudent_club",
    "1457": "\nSELECT m.first_name, m.last_name, m.phone \nFROM member m \nJOIN expense e ON m.member_id = e.link_to_member \nWHERE e.cost > (SELECT AVG(cost) FROM expense);\n\n\n\t----- bird -----\tstudent_club",
    "1458": "\nSELECT \n    (COUNT(CASE WHEN state = 'Maine' THEN member_id END) * 100 / COUNT(member_id)) - \n    (COUNT(CASE WHEN state = 'Vermont' THEN member_id END) * 100 / COUNT(member_id)) AS percentage_difference\nFROM \n    member;\n\n\n\t----- bird -----\tstudent_club",
    "1459": "\nSELECT T1.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke';\n\n\n\t----- bird -----\tstudent_club",
    "1460": "\nSELECT m.first_name, m.last_name, e.cost FROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nJOIN expense e ON a.link_to_expense = e.expense_id \nWHERE e.expense_description IN ('water', 'veggie tray', 'supplies') AND e.spent > 0;\n\n\n\t----- bird -----\tstudent_club",
    "1461": "\nSELECT m.last_name, m.phone FROM member m JOIN major m2 ON m.link_to_major = m2.major_id WHERE m2.major_name = 'Elementary Education' ORDER BY m.last_name;\n\n\n\t----- bird -----\tstudent_club",
    "1462": "\nSELECT b.category, b.amount FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker' GROUP BY b.category;\n\n\n\t----- bird -----\tstudent_club",
    "1463": "\nSELECT event_name FROM event WHERE type = 'food' AND link_to_event IN (SELECT budget_id FROM budget WHERE category = 'food');\n\n\n\t----- bird -----\tstudent_club",
    "1464": "\nSELECT m.first_name, m.last_name, i.amount \nFROM member m \nJOIN income i ON m.member_id = i.link_to_member \nWHERE i.date_received = '2019-09-09';\n\n\n\t----- bird -----\tstudent_club",
    "1465": "\nSELECT category FROM budget WHERE expense_description = 'Posters';\n\n\n\t----- bird -----\tstudent_club",
    "1466": "\nSELECT m.first_name, m.last_name, m.college FROM member m WHERE m.position = 'Secretary';\n\n\n\t----- bird -----\tstudent_club",
    "1467": "\nSELECT e.event_name, SUM(e.cost) as total_spent\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description LIKE 'Speaker Gift'\nGROUP BY e.link_to_event;\n\n\n\t----- bird -----\tstudent_club",
    "1468": "\nSELECT T1.hometown FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Garrett Girke';\n\n\n\t----- bird -----\tstudent_club",
    "1469": "\nSELECT m.first_name, m.last_name, m.position \nFROM member m \nJOIN zip_code z ON m.zip = z.zip_code \nWHERE z.city = 'Lincolnton' AND z.county = 'North Carolina' AND z.zip_code = 28092;\n\n\n\t----- bird -----\tstudent_club",
    "1470": "\nSELECT COUNT(*) FROM gasstations WHERE ChainID = 1 AND Segment = 'Premium';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1471": "\nSELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1472": "\nSELECT T1.CustomerID, T2.Country \nFROM customers AS T1 \nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Date LIKE '2012%' AND T2.Country = 'LAM' \nORDER BY T2.Consumption ASC \nLIMIT 1\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1473": "\nSELECT AVG(CAST(Consumption AS REAL)) as AverageMonthlyConsumption\nFROM yearmonth\nWHERE YEAR(Date) = 2013 AND Segment = 'SME';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1474": "\nSELECT c.CustomerID, c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE c.Currency = 'CZK'\nAND YEAR(t.Date) = 2011\nGROUP BY c.CustomerID, c.Segment\nORDER BY SUM(t.Amount) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1475": "\nSELECT COUNT(T1.CustomerID) \nFROM customers AS T1 \nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.Segment = 'KAM' AND YEAR(T2.Date) = 2012 AND T2.Consumption < 30000;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1476": "\nSELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN T2.Consumption ELSE 0 END) AS ConsumptionDifference\nFROM customers AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE YEAR(T2.Date) = 2012;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1477": "\nSELECT YEAR(T1.Date) AS Year, SUM(T2.Amount) AS TotalAmount\nFROM transactions_1k AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID AND T1.Date = T2.Date\nWHERE T1.Currency = 'EUR'\nGROUP BY YEAR(T1.Date)\nORDER BY TotalAmount DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1478": "\nSELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1 \n\n\t----- bird -----\tdebit_card_specializing",
    "1479": "\nSELECT YEAR(T1.Date) AS Year, SUM(T2.Consumption) AS TotalConsumption\nFROM yearmonth T1\nJOIN transactions_1k T2 ON T1.CustomerID = T2.CustomerID AND T1.Date = T2.Date\nWHERE T2.Currency = 'CZK'\nGROUP BY YEAR(T1.Date)\nORDER BY TotalConsumption DESC\nLIMIT 1\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1480": "\nSELECT T2.Date AS PeakMonth, SUM(T1.Consumption) AS TotalConsumption\nFROM yearmonth AS T1\nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T2.Segment = 'SME' AND YEAR(T1.Date) = 2013\nGROUP BY T2.Date\nORDER BY TotalConsumption DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1481": "\nWITH CustomerSegments AS (\n    SELECT \n        c.CustomerID,\n        c.Segment,\n        SUM(t1.Consumption) AS AnnualConsumption\n    FROM \n        customers c\n    JOIN \n        yearmonth t1 ON c.CustomerID = t1.CustomerID\n    WHERE \n        YEAR(t1.Date) = 2013\n    GROUP BY \n        c.CustomerID, c.Segment\n),\nCustomerSegmentsByCurrency AS (\n    SELECT \n        cs.CustomerID,\n        cs.Segment,\n        cs.AnnualConsumption,\n        g.Currency\n    FROM \n        CustomerSegments cs\n    JOIN \n        gasstations g ON cs.CustomerID = g.CustomerID\n)\nSELECT \n    CASE \n        WHEN cs1.Segment = 'SME' AND cs2.Segment = 'LAM' THEN cs1.AnnualConsumption - cs2.AnnualConsumption\n        WHEN cs1.Segment = 'LAM' AND cs2.Segment = 'KAM' THEN cs1.AnnualConsumption - cs2.AnnualConsumption\n        WHEN cs1.Segment = 'KAM' AND cs2.Segment = 'SME' THEN cs2.AnnualConsumption - cs1.AnnualConsumption\n    END AS Difference\nFROM \n    CustomerSegmentsByCurrency cs1\nJOIN \n    CustomerSegmentsByCurrency cs2 ON cs1.CustomerID = cs2.CustomerID AND cs1.Currency = cs2.Currency\nWHERE \n    cs1.Segment IN ('SME', 'LAM', 'KAM')\nGROUP BY \n    Difference;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1482": "\nWITH SegmentConsumption AS (\n    SELECT \n        c.Segment,\n        SUM(t.Amount) AS TotalAmount,\n        SUM(CASE WHEN t.Currency = 'EUR' THEN t.Amount ELSE 0 END) AS EURAmount,\n        SUM(CASE WHEN t.Currency != 'EUR' THEN t.Amount ELSE 0 END) AS OtherCurrencyAmount\n    FROM \n        customers c\n    JOIN \n        transactions_1k t ON c.CustomerID = t.CustomerID\n    WHERE \n        t.Date BETWEEN '2012-01-01' AND '2013-12-31'\n    GROUP BY \n        c.Segment\n),\nSegmentPercentageIncrease AS (\n    SELECT \n        Segment,\n        (EURAmount - OtherCurrencyAmount) / OtherCurrencyAmount * 100 AS PercentageIncrease\n    FROM \n        SegmentConsumption\n)\nSELECT \n    Segment,\n    MAX(PercentageIncrease) AS MaxPercentageIncrease,\n    MIN(PercentageIncrease) AS MinPercentageIncrease\nFROM \n    SegmentPercentageIncrease\nGROUP BY \n    Segment;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1483": "\nSELECT SUM(T2.Consumption) AS TotalConsumption\nFROM customers AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T1.CustomerID = 6 AND T2.Date BETWEEN '2013-08-01' AND '2013-11-30'\nGROUP BY T1.CustomerID;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1484": "\nSELECT COUNT(CASE WHEN Segment = 'discount' THEN GasStationID END) - COUNT(CASE WHEN Segment = 'discount' THEN GasStationID END) AS difference\nFROM gasstations\nWHERE Country = 'Czech Republic'\nINTERSECT\nSELECT COUNT(CASE WHEN Segment = 'discount' THEN GasStationID END) - COUNT(CASE WHEN Segment = 'discount' THEN GasStationID END) AS difference\nFROM gasstations\nWHERE Country = 'Slovakia';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1485": "\nSELECT SUM(T1.Consumption) - SUM(T2.Consumption)\nFROM yearmonth AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID AND T1.Date = DATE_SUB(T2.Date, INTERVAL 3 MONTH)\nWHERE T1.CustomerID = 7 AND T2.CustomerID = 5 AND T1.Date LIKE '2013-04%'\nAND T2.Date LIKE '2013-04%';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1486": "\nSELECT SUM(CASE WHEN Currency = 'CZK' THEN Amount ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN Amount ELSE 0 END) AS Difference\nFROM transactions_1k;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1487": "\nSELECT T2.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'Euro' AND MONTH(T2.Date) = 10 AND YEAR(T2.Date) = 2013 ORDER BY T2.Consumption DESC LIMIT 1\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1488": "\nSELECT c.CustomerID, c.Segment, SUM(ym.Consumption) as TotalConsumption\nFROM customers c\nJOIN yearmonthym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'KAM'\nGROUP BY c.CustomerID, c.Segment\nORDER BY TotalConsumption DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1489": "\nSELECT SUM(T2.Consumption) AS TotalConsumption\nFROM customers AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T1.Segment = 'KAM' AND T2.Date LIKE '2013-05%'\nGROUP BY T1.CustomerID;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1490": "\nSELECT CAST(SUM(CASE WHEN T1.Amount > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' GROUP BY T2.Segment;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1491": "\nSELECT T1.Country, COUNT(T2.GasStationID) AS ValueForMoneyGasStations\nFROM customers AS T1\nJOIN gasstations AS T2 ON T1.CustomerID = T2.CustomerID\nGROUP BY T1.Country;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1492": "\nSELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customers WHERE Segment = 'KAM';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1493": "\nSELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM yearmonth WHERE Date LIKE '2012-02%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'Gas Station');\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1494": "\nSELECT CAST(SUM(CASE WHEN T2.Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Country = 'Slovakia';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1495": "\nSELECT T2.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date LIKE '2013-09%' GROUP BY T2.CustomerID ORDER BY SUM(T1.Consumption) DESC LIMIT 1 \n\n\t----- bird -----\tdebit_card_specializing",
    "1496": "\nSELECT T2.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2013-09%' GROUP BY T2.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1 \n\n\t----- bird -----\tdebit_card_specializing",
    "1497": "\nSELECT c.CustomerID, c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date LIKE '2012-06%'\nORDER BY SUM(t.Amount) ASC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1498": "\nSELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE YEAR(Date) = 2012;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1499": "\nSELECT MAX(Consumption) AS BiggestMonthlyConsumption\nFROM yearmonth\nWHERE CustomerID IN (\n    SELECT CustomerID\n    FROM customers\n    WHERE Currency = 'Euro'\n)\nGROUP BY Date;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1500": "\nSELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE DATE(T1.Date) LIKE '2013-09%' \n\n\t----- bird -----\tdebit_card_specializing",
    "1501": "\nSELECT DISTINCT T2.Country FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE MONTH(T2.Date) = 6 AND YEAR(T2.Date) = 2013 GROUP BY T2.Country;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1502": "\nSELECT DISTINCT T2.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Price IS NOT NULL AND T2.Price LIKE '%euro%' \n\n\t----- bird -----\tdebit_card_specializing",
    "1503": "\nSELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Price * T1.Amount = ( SELECT SUM(T3.Price) * T3.Amount FROM transactions_1k AS T3 INNER JOIN products AS T4 ON T3.ProductID = T4.ProductID WHERE T3.CustomerID = T1.CustomerID AND T4.Currency = 'EUR' ) GROUP BY T2.Description ORDER BY T2.Description;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1504": "\nSELECT AVG(T1.Price) AS AverageTotalPrice\nFROM transactions_1k AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T2.Date LIKE '2012-01-%'\nGROUP BY T1.CustomerID;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1505": "\nSELECT COUNT(T1.CustomerID) \nFROM customers AS T1 \nJOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.Currency = 'EUR' AND T2.Consumption > 1000;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1506": "\nSELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T1.GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'Czech Republic') \n\n\t----- bird -----\tdebit_card_specializing",
    "1507": "\nSELECT T2.Time FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ChainID = 11 GROUP BY T2.Time ORDER BY COUNT(*) DESC LIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1508": "\nSELECT COUNT(T1.TransactionID) \nFROM transactions_1k AS T1 \nJOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.Country = 'Czech Republic' AND T1.Price > 1000;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1509": "\nSELECT COUNT(T2.TransactionID) \nFROM transactions_1k AS T1 \nJOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.Country = 'Czech Republic' AND T1.Date > '2012-01-01';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1510": "\nSELECT AVG(T1.Price) AS AverageTotalPrice\nFROM transactions_1k AS T1\nJOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID\nWHERE T2.Country = 'Czech Republic'\nGROUP BY T2.Country;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1511": "\nSELECT AVG(T1.Price) AS AverageTotalPrice\nFROM transactions_1k AS T1\nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T2.Currency = 'EUR'\nGROUP BY T2.CustomerID;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1512": "\nSELECT T1.CustomerID, T2.Amount\nFROM customers AS T1\nJOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T2.Date LIKE '2012-08-25'\nORDER BY T2.Amount DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1513": "\nSELECT T1.Country FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2012-08-25' ORDER BY T2.Price ASC LIMIT 1 \n\n\t----- bird -----\tdebit_card_specializing",
    "1514": "\nSELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1515": "\nSELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23 21:20:00' \n\n\t----- bird -----\tdebit_card_specializing",
    "1516": "\nSELECT COUNT(T1.TransactionID) \nFROM transactions_1k AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Currency = 'EUR' AND T1.Date LIKE '2012-08-26 07%' \nAND T1.Time LIKE '07:00:00';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1517": "\nSELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T2.Date ASC LIMIT 1; \n\n\t----- bird -----\tdebit_card_specializing",
    "1518": "\nSELECT T1.Country FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24 12:42:00' \n\n\t----- bird -----\tdebit_card_specializing",
    "1519": "\nSELECT T1.ProductID FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23 21:20:00' \n\n\t----- bird -----\tdebit_card_specializing",
    "1520": "\nSELECT T1.Date, T2.Consumption\nFROM customers AS T1\nJOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T1.CustomerID = (SELECT CustomerID FROM customers WHERE Amount = 124.05 AND Date LIKE '2012-08-24')\nAND T2.Date LIKE '2012-01-%';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1521": "\nSELECT COUNT(T1.TransactionID) \nFROM transactions_1k AS T1 \nJOIN customers AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T2.Segment = 'CZE' AND T1.Date LIKE '2012-08-26 08:00%' AND T1.Date LIKE '2012-08-26 09:00%';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1522": "\nSELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2013-06-%' AND T2.Amount = 214582.17 \n\n\t----- bird -----\tdebit_card_specializing",
    "1523": "\nSELECT T2.Country FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CardID = 667467 GROUP BY T2.Country ORDER BY COUNT(*) DESC LIMIT 1; \n\n\t----- bird -----\tdebit_card_specializing",
    "1524": "\nSELECT T1.Country FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Amount = 548.4 AND T2.Date LIKE '2012-08-24' \n\n\t----- bird -----\tdebit_card_specializing",
    "1525": "\nSELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date LIKE '2012-08-25%' \n\n\t----- bird -----\tdebit_card_specializing",
    "1526": "\nSELECT (SUM(CASE WHEN YEAR(T1.Date) = 2013 THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN YEAR(T1.Date) = 2012 THEN T1.Consumption ELSE 0 END)) / SUM(CASE WHEN YEAR(T1.Date) = 2012 THEN T1.Consumption ELSE 0 END) * 100 AS ConsumptionDecreaseRate\nFROM yearmonth AS T1\nJOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID AND T1.Date = T2.Date\nWHERE T2.Amount = 634.8;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1527": "\nSELECT T2.GasStationID, SUM(T1.Amount) AS TotalRevenue\nFROM transactions_1k AS T1\nJOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID\nGROUP BY T2.GasStationID\nORDER BY TotalRevenue DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1528": "\nSELECT \n    (SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) * 100 / COUNT(T2.Segment)) AS Percentage_Premium\nFROM \n    customers AS T1\nJOIN \n    transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE \n    T1.Country = 'SVK'\nGROUP BY \n    T1.Segment;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1529": "\nSELECT SUM(T1.Amount) AS TotalSpent, T2.Consumption\nFROM transactions_1k AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID AND T2.Date LIKE '2012-01%'\nWHERE T1.CustomerID = 38508\nGROUP BY T2.Date;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1530": "\nSELECT p.Description AS ProductName, SUM(t.Amount) AS TotalSales\nFROM products p\nJOIN transactions_1k t ON p.ProductID = t.ProductID\nGROUP BY p.ProductID\nORDER BY TotalSales DESC\nLIMIT 5;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1531": "\nSELECT T1.CustomerID, AVG(T2.Price) AS AveragePricePerItem, T3.Currency\nFROM customers AS T1\nJOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID\nJOIN products AS T3 ON T2.ProductID = T3.ProductID\nGROUP BY T1.CustomerID\nORDER BY AVG(T2.Price) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1532": "\nSELECT T1.Country FROM customers AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T2.GasStationID = T3.GasStationID WHERE T3.ProductID = 2 ORDER BY T3.Price DESC LIMIT 1 \n\n\t----- bird -----\tdebit_card_specializing",
    "1533": "\nSELECT T3.Consumption FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T2.ProductID = T3.ProductID WHERE T3.ProductID = 5 AND T2.Price > 29.00 AND YEAR(T2.Date) = 2012 AND MONTH(T2.Date) = 8 \n\n\t----- bird -----\tdebit_card_specializing"
}