{
    "0": "\nSELECT MAX(\"Percent (%) Eligible Free (K-12)\") AS HighestEligibleFreeRate FROM frpm WHERE \"County Name\" = 'Alameda'\n\n\t----- bird -----\tcalifornia_schools",
    "1": "\nSELECT School_Name, `Percent (%) Eligible Free (Ages 5-17)` \nFROM frpm \nWHERE School_Type = 'Continuation' \nORDER BY `Percent (%) Eligible Free (Ages 5-17)` ASC \nLIMIT 3\n\n\t----- bird -----\tcalifornia_schools",
    "2": "\nSELECT s.Zip\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Charter = 1 AND f.County Name = 'Fresno County Office of Education'\n\n\t----- bird -----\tcalifornia_schools",
    "3": "\nWITH frpm_ranked AS (\n    SELECT CDSCode, MAX(\"FRPM Count (K-12)\") OVER () AS max_frpm_count,\n           \"Percent (%) Eligible FRPM (K-12)\", \"School Name\"\n    FROM frpm\n)\nSELECT s.CDSCode, CONCAT(s.MailStreet, ', ', s.MailCity, ', ', s.MailState, ' ', s.MailZip) AS FullMailAddress\nFROM frpm_ranked frp\nJOIN schools s ON frp.CDSCode = s.CDSCode\nWHERE frp.\"FRPM Count (K-12)\" = frp.max_frpm_count;\n\n\t----- bird -----\tcalifornia_schools",
    "4": "\nSELECT Phone\nFROM schools\nWHERE Charter = 1 AND FundingType = 'Charter' AND OpenDate > '2000-01-01'\n\n\t----- bird -----\tcalifornia_schools",
    "5": "\nSELECT COUNT(s.CDSCode) \nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.Virtual = 'Y' AND ss.AvgScrMath < 400\n\n\t----- bird -----\tcalifornia_schools",
    "6": "\nSELECT s.CDSCode, s.School, ss.NumTstTakr \nFROM schools s\nJOIN satscores sat ON s.CDSCode = sat.cds\nWHERE ss.NumTstTakr > 500 AND (s.Magnet = 1 OR s.EdOpsName LIKE '%magnet%')\n\n\t----- bird -----\tcalifornia_schools",
    "7": "\nSELECT s.Phone\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.NumGE1500 = (\n    SELECT MAX(NumGE1500)\n    FROM satscores\n)\n\n\t----- bird -----\tcalifornia_schools",
    "8": "\nSELECT satscores.NumTstTakr\nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE frpm.FRPM Count (K-12) = (\n    SELECT MAX(frpm.FRPM Count (K-12))\n    FROM frpm\n)\n\n\t----- bird -----\tcalifornia_schools",
    "9": "\nSELECT COUNT(DISTINCT s.CDSCode) \nFROM schools AS s\nJOIN frpm AS f ON s.CDSCode = f.CDSCode\nJOIN satscores AS sat ON s.CDSCode = sat.cds\nWHERE f.\"Charter Funding Type\" = 'Direct Charter' AND sat.AvgScrMath > 560\n\n\t----- bird -----\tcalifornia_schools",
    "10": "\nSELECT frpm.\"FRPM Count (Ages 5-17)\" \nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE satscores.sname = (\n    SELECT sname \n    FROM satscores \n    ORDER BY AvgScrRead DESC \n    LIMIT 1\n)\n\n\t----- bird -----\tcalifornia_schools",
    "11": "\nSELECT DISTINCT frpm.CDSCode FROM frpm WHERE (frpm.\"Enrollment (K-12)\" > 500)\n\n\t----- bird -----\tcalifornia_schools",
    "12": "\nSELECT MAX(t2.\"Percent (%) Eligible Free (Ages 5-17)\") AS HighestEligibleFreeRate\nFROM satscores t1\nJOIN frpm t2 ON t1.cds = t2.CDSCode\nWHERE (t1.NumGE1500 / CAST(t1.NumTstTakr AS REAL)) > 0.3\n\n\t----- bird -----\tcalifornia_schools",
    "13": "\nSELECT s.Phone\nFROM schools s\nJOIN (\n    SELECT cds, (NumGE1500 * 100.0 / NumTstTakr) AS ExcellenceRate\n    FROM satscores\n    WHERE NumTstTakr > 0\n    ORDER BY ExcellenceRate DESC\n    LIMIT 3\n) ss ON s.CDSCode = ss.cds\n\n\t----- bird -----\tcalifornia_schools",
    "14": "\nSELECT s.NCESSchool, f.\"Enrollment (Ages 5-17)\" \nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nORDER BY f.\"Enrollment (Ages 5-17)\" DESC\nLIMIT 5\n\n\t----- bird -----\tcalifornia_schools",
    "15": "\nSELECT d.District, s.AvgScrRead \nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nJOIN frpm f ON f.CDSCode = sc.CDSCode\nWHERE sc.StatusType = 'Active' AND f.Low Grade <= 12 AND f.High Grade >= 6\nGROUP BY d.District, s.AvgScrRead \nORDER BY s.AvgScrRead DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "16": "\nSELECT COUNT(s.cds) \nFROM satscores s\nJOIN frpm f ON s.cds = f.CDSCode\nWHERE f.District Name = 'merged Alameda' AND s.NumTstTakr < 100\n\n\t----- bird -----\tcalifornia_schools",
    "17": "\nSELECT s.CharterNum\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.AvgScrWrite = 499;\n\n\t----- bird -----\tcalifornia_schools",
    "18": "\nSELECT COUNT(s.cds) \nFROM satscores s\nJOIN frpm f ON s.cds = f.CDSCode\nWHERE f.County Name = 'Contra Costa' AND f.Charter Funding Type = 'Directly Funded' AND s.NumTstTakr <= 250\n\n\t----- bird -----\tcalifornia_schools",
    "19": "\nSELECT s.Phone\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\n\n\t----- bird -----\tcalifornia_schools",
    "20": "\nSELECT COUNT(*)\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE frpm.County Name = 'Amador' AND frpm.Low Grade = '9' AND frpm.High Grade = '12';\n\n\t----- bird -----\tcalifornia_schools",
    "21": "\nSELECT COUNT(DISTINCT frpm.CDSCode) \nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.County = 'Los Angeles' \nAND frpm.Free Meal Count (K-12) > 500 \nAND frpm.Free Meal Count (K-12) < 700;\n\n\t----- bird -----\tcalifornia_schools",
    "22": "\nSELECT sname FROM satscores WHERE cname = 'Contra Costa' ORDER BY NumTstTakr DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "23": "\nSELECT s.School, s.Street, s.City, s.State, s.Zip \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE ABS(f.\"Enrollment (K-12)\" - f.\"Enrollment (Ages 5-17)\") > 30;\n\n\t----- bird -----\tcalifornia_schools",
    "24": "\nSELECT DISTINCT frpm.School Name, satscores.sname \nFROM frpm\nJOIN satscores ON frpm.CDSCode = satscores.cds\nWHERE frpm.\"Percent (%) Eligible Free (K-12)\" > 0.1 AND satscores.NumGE1500 > 0\n\n\t----- bird -----\tcalifornia_schools",
    "25": "\nSELECT s.CDSCode, frpm.\"Charter Funding Type\" AS FundingType\nFROM schools s\nJOIN satscores sat ON s.CDSCode = sat.cds\nJOIN frpm ON s.CDSCode = frpm.CDSCode\nWHERE s.County = 'Riverside' AND sat.AvgScrMath > 400\nGROUP BY s.CDSCode, frpm.\"Charter Funding Type\"\n\n\t----- bird -----\tcalifornia_schools",
    "26": "\nSELECT s.School, CONCAT(s.Street, ', ', s.City, ', ', s.State, ' ', s.Zip) AS Address\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.County Name = 'Monterey' AND f.School Type LIKE '%High%' AND f.Free Meal Count (Ages 5-17) > 800;\n\n\t----- bird -----\tcalifornia_schools",
    "27": "\nSELECT s.sname, ss.AvgScrWrite, s.Phone \nFROM satscores AS ss\nJOIN schools AS s ON ss.cds = s.CDSCode\nWHERE (s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01')\n\n\t----- bird -----\tcalifornia_schools",
    "28": "\nSELECT s.School, s.DOCType \nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE f.\"Charter Funding Type\" = 'Locally Funded'\nAND (f.\"Enrollment (K-12)\" - f.\"Enrollment (Ages 5-17)\") > (\n    SELECT AVG(\"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\")\n    FROM frpm\n    WHERE \"Charter Funding Type\" = 'Locally Funded'\n)\n\n\t----- bird -----\tcalifornia_schools",
    "29": "\nSELECT OpenDate FROM schools WHERE CDSCode IN (SELECT CDSCode FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 1)\n\n\t----- bird -----\tcalifornia_schools",
    "30": "\nSELECT s.City, f.\"Enrollment (K-12)\" AS Enrollment FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode ORDER BY Enrollment LIMIT 5\n\n\t----- bird -----\tcalifornia_schools",
    "31": "\nSELECT \"School Name\", \"Percent (%) Eligible Free (K-12)\" \nFROM frpm \nORDER BY \"Enrollment (K-12)\" DESC \nLIMIT 10 \nOFFSET 9;\n\n\t----- bird -----\tcalifornia_schools",
    "32": "\nSELECT s.CDSCode, frpm.\"Percent (%) Eligible FRPM (K-12)\" AS EligibilityRate\nFROM frpm\nJOIN schools s ON frpm.CDSCode = s.CDSCode\nWHERE s.EILCode = 66\nORDER BY frpm.\"Free Meal Count (K-12)\" DESC\nLIMIT 5\n\n\t----- bird -----\tcalifornia_schools",
    "33": "\nSELECT s.Website, frpm.School Name FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode WHERE frpm.Free Meal Count (Ages 5-17) BETWEEN 1900 AND 2000\n\n\t----- bird -----\tcalifornia_schools",
    "34": "\nSELECT T1.\"Percent (%) Eligible Free (Ages 5-17)\" \nFROM frpm AS T1\nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T2.AdmFName1 = 'Kacey' AND T2.AdmLName1 = 'Gibson'\n\n\t----- bird -----\tcalifornia_schools",
    "35": "\nSELECT s.AdmEmail1 FROM schools AS s JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE s.Charter = 1 ORDER BY f.\"Enrollment (K-12)\" ASC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "36": "\nWITH RankedSchools AS (\n    SELECT s.cds, ss.sname, ss.NumTstTakr, ss.NumGE1500,\n           ROW_NUMBER() OVER (ORDER BY ss.NumGE1500 DESC) as rnk\n    FROM satscores ss\n    JOIN schools s ON ss.cds = s.CDSCode\n    WHERE ss.NumGE1500 > 0\n)\nSELECT s.AdmFName1, s.AdmLName1\nFROM RankedSchools rs\nJOIN frpm f ON rs.cds = f.CDSCode\nJOIN schools s ON rs.cds = s.CDSCode\nWHERE rs.rnk = 1;\n\n\t----- bird -----\tcalifornia_schools",
    "37": "\nSELECT Street, City, Zip, State FROM schools WHERE CDSCode IN (SELECT cds FROM satscores ORDER BY AvgScrRead + AvgScrMath + AvgScrWrite ASC LIMIT 1)\n\n\t----- bird -----\tcalifornia_schools",
    "38": "\nSELECT s.Website\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.County = 'Los Angeles' AND ss.NumTstTakr BETWEEN 2000 AND 3000;\n\n\t----- bird -----\tcalifornia_schools",
    "39": "\nSELECT AVG(s.NumTstTakr) \nFROM satscores AS s\nJOIN schools AS sc ON s.cds = sc.CDSCode\nWHERE sc.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\nAND sc.County = 'Fresno';\n\n\t----- bird -----\tcalifornia_schools",
    "40": "\nSELECT s.Phone\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.District = 'Fresno Unified'\nORDER BY ss.AvgScrRead ASC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "41": "\nSELECT s.School, ss.AvgScrRead\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.Virtual = 'Y'\nORDER BY ss.AvgScrRead DESC\nLIMIT 5\n\n\t----- bird -----\tcalifornia_schools",
    "42": "\nSELECT s.EdOpsName \nFROM schools s\nJOIN satscores sat ON s.CDSCode = sat.cds\nORDER BY sat.AvgScrMath DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "43": "\nSELECT s.cname, ss.AvgScrMath \nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE (ss.AvgScrRead + ss.AvgScrMath + ss.AvgScrWrite) / 3 = (\n    SELECT MIN((AvgScrRead + AvgScrMath + AvgScrWrite) / 3)\n    FROM satscores\n)\n\n\t----- bird -----\tcalifornia_schools",
    "44": "\nSELECT satscores.cname, satscores.sname, satscores.AvgScrWrite \nFROM satscores \nWHERE (satscores.NumTstTakr, satscores.NumGE1500) IN (\n    SELECT NumTstTakr, MAX(NumGE1500) \n    FROM satscores\n)\n\n\t----- bird -----\tcalifornia_schools",
    "45": "\nSELECT s.School, ss.AvgScrWrite AS Average_Writing_Score\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE (s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich') OR (s.AdmFName2 = 'Ricci' AND s.AdmLName2 = 'Ulrich') OR (s.AdmFName3 = 'Ricci' AND s.AdmLName3 = 'Ulrich')\nGROUP BY s.School, ss.AvgScrWrite\n\n\t----- bird -----\tcalifornia_schools",
    "46": "\nSELECT s.State, f.\"Enrollment (K-12)\" AS Total_Enrollment\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.\"Low Grade\" <= 1 AND f.\"High Grade\" >= 12 AND s.SOCType = 'State Special'\nORDER BY Total_Enrollment DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "47": "\nSELECT AVG(COUNT(*)) AS MonthlyAverageOpenSchools\nFROM (\n    SELECT EXTRACT(MONTH FROM OpenDate) AS Month, COUNT(*) \n    FROM schools \n    JOIN frpm ON schools.CDSCode = frpm.CDSCode \n    WHERE County = 'Alameda' AND District Type = 'Elementary School District' AND YEAR(OpenDate) = 1980\n    GROUP BY EXTRACT(MONTH FROM OpenDate)\n) AS MonthlyCounts\nGROUP BY Month\n\n\t----- bird -----\tcalifornia_schools",
    "48": "\nSELECT CAST(SUM(CASE WHEN T1.District Type = 'Unified School District' AND T1.County Name = 'Orange County' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.District Type = 'Elementary School District' AND T1.County Name = 'Orange County' THEN 1 ELSE 0 END) AS Ratio\nFROM frpm T1\nJOIN schools T2 ON T1.CDSCode = T2.CDSCode\nWHERE T1.County Name = 'Orange County'\n\n\t----- bird -----\tcalifornia_schools",
    "49": "\nSELECT s.CDSCode, s.School, s.ClosedDate, c.CountyName\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN (\n    SELECT CountyName, COUNT(CDSCode) AS ClosedSchoolCount\n    FROM schools\n    JOIN frpm ON schools.CDSCode = frpm.CDSCode\n    WHERE ClosedDate IS NOT NULL\n    GROUP BY CountyName\n    ORDER BY ClosedSchoolCount DESC\n    LIMIT 1\n) c ON f.CountyName = c.CountyName\nWHERE s.ClosedDate IS NOT NULL\n\n\t----- bird -----\tcalifornia_schools",
    "50": "\nSELECT s.Street, s.City, s.State, s.Zip, ss.sname \nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nORDER BY ss.AvgScrMath DESC\nLIMIT 1 OFFSET 5;\n\n\t----- bird -----\tcalifornia_schools",
    "51": "\nSELECT s.MailStreet, s.School, ss.AvgScrRead \nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE ss.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores)\n\n\t----- bird -----\tcalifornia_schools",
    "52": "\nSELECT COUNT(s.cds) AS Total_Schools\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.NumGE1500 >= 1 AND sc.MailCity = 'Lakeport'\n\n\t----- bird -----\tcalifornia_schools",
    "53": "\nSELECT satscores.NumTstTakr\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.MailCity = 'Fresno';\n\n\t----- bird -----\tcalifornia_schools",
    "54": "\nSELECT s.CDSCode, s.MailZip\nFROM schools s\nWHERE (s.AdmFName1 = 'Avetik' AND s.AdmLName1 = 'Atoian') \n   OR (s.AdmFName2 = 'Avetik' AND s.AdmLName2 = 'Atoian')\n   OR (s.AdmFName3 = 'Avetik' AND s.AdmLName3 = 'Atoian');\n\n\t----- bird -----\tcalifornia_schools",
    "55": "\nSELECT \n    (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Colusa') * 1.0 / \n    (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Humboldt')\nAS Ratio_Colusa_Humboldt\n\n\t----- bird -----\tcalifornia_schools",
    "56": "\nSELECT COUNT(*)\nFROM schools\nWHERE State = 'California' AND LastUpdate IS NOT NULL AND County = 'San Joaquin'\n\n\t----- bird -----\tcalifornia_schools",
    "57": "\nSELECT s.Phone, s.Ext \nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nORDER BY ss.AvgScrWrite DESC\nLIMIT 1 OFFSET 332;\n\n\t----- bird -----\tcalifornia_schools",
    "58": "\nSELECT s.Phone, s.Ext, s.School FROM schools AS s WHERE s.Zip = '95203-3704'\n\n\t----- bird -----\tcalifornia_schools",
    "59": "\nSELECT Website FROM schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') OR (AdmFName3 = 'Mike' AND AdmLName3 = 'Larson') OR (AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez')\n\n\t----- bird -----\tcalifornia_schools",
    "60": "\nSELECT s.Website\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Virtual LIKE '%Partial%' AND f.\"Charter School (Y/N)\" = 1 AND s.County = 'San Joaquin'\n\n\t----- bird -----\tcalifornia_schools",
    "61": "\nSELECT COUNT(s.CDSCode) \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.City = 'Hickman' AND s.StatusType = 'Charter' AND f.District Type = 'Elementary School District'\n\n\t----- bird -----\tcalifornia_schools",
    "62": "\nSELECT COUNT(DISTINCT frpm.CDSCode) \nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE frpm.\"Percent (%) Eligible Free (K-12)\" < 0.18 AND schools.County = 'Los Angeles' AND frpm.\"Charter School (Y/N)\" = 0;\n\n\t----- bird -----\tcalifornia_schools",
    "63": "\nSELECT s.School, s.City, adm.AdmFName1, adm.AdmLName1, adm.AdmEmail1, adm.AdmFName2, adm.AdmLName2, adm.AdmEmail2, adm.AdmFName3, adm.AdmLName3, adm.AdmEmail3\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nLEFT JOIN (\n    SELECT CDSCode, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3\n    FROM schools\n) adm ON s.CDSCode = adm.CDSCode\nWHERE f.\"Charter School (Y/N)\" = 1 AND f.\"Charter School Number\" = '00D2'\n\n\t----- bird -----\tcalifornia_schools",
    "64": "\nSELECT COUNT(s.CDSCode) \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.MailCity = 'Hickman' AND f.Charter School Number = '00D4'\n\n\t----- bird -----\tcalifornia_schools",
    "65": "\nSELECT (SUM(CASE WHEN Charter Funding Type = 'Locally Funded' THEN 1 ELSE 0 END) * 100 / COUNT(*)) AS Percentage_Locally_Funded\nFROM frpm\nWHERE County Name = 'Santa Clara'\nAND \"Charter School (Y/N)\" = 1\n\n\t----- bird -----\tcalifornia_schools",
    "66": "\nSELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.OpenDate BETWEEN '2000-01-01' AND '2005-12-31'\nAND s.County = 'Stanislaus'\nAND f.Charter Funding Type = 'Directly Funded';\n\n\t----- bird -----\tcalifornia_schools",
    "67": "\nSELECT SUM(CASE WHEN District = 'Community College District' AND YEAR(ClosedDate) = 1989 AND City = 'San Francisco' THEN 1 ELSE 0 END) AS TotalClosure\nFROM schools\nWHERE ClosedDate IS NOT NULL AND City = 'San Francisco'\n\n\t----- bird -----\tcalifornia_schools",
    "68": "\nSELECT s.County, COUNT(s.CDSCode) AS ClosureCount\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.ClosedDate BETWEEN '1980-01-01' AND '1989-12-31'\nAND s.SOCType = 'CEA'\nGROUP BY s.County\nORDER BY ClosureCount DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "69": "\nSELECT NCESDist FROM schools WHERE SOC = 'State Special Schools'\n\n\t----- bird -----\tcalifornia_schools",
    "70": "\nSELECT COUNT(CASE WHEN ClosedDate IS NULL THEN 1 ELSE NULL END) AS Active_District_Community_Day_Schools, \n       COUNT(CASE WHEN ClosedDate IS NOT NULL THEN 1 ELSE NULL END) AS Closed_District_Community_Day_Schools\nFROM schools\nWHERE County = 'Alpine' AND (DOCType = 'District Community Day School' OR SOCType = 'Community Day School')\n\n\t----- bird -----\tcalifornia_schools",
    "71": "\nSELECT DISTINCT frpm.District Code FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.City = 'Fresno' AND schools.Magnet = 0;\n\n\t----- bird -----\tcalifornia_schools",
    "72": "\nSELECT \"frpm\".\"Enrollment (Ages 5-17)\" \nFROM \"frpm\"\nJOIN \"schools\" ON \"frpm\".\"CDSCode\" = \"schools\".\"CDSCode\"\nWHERE \"frpm\".\"Academic Year\" = '2014-2015' AND \"schools\".\"School\" = 'State Special School' AND \"schools\".\"City\" = 'Fremont'\n\n\t----- bird -----\tcalifornia_schools",
    "73": "\nSELECT t2.\"Free Meal Count (Ages 5-17)\" FROM schools AS t1 JOIN frpm AS t2 ON t1.CDSCode = t2.CDSCode WHERE t1.MailStreet = 'PO Box 1040' AND t1.School = 'Youth Authority School'\n\n\t----- bird -----\tcalifornia_schools",
    "74": "\nSELECT T1.Low Grade FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.NCESDist = '613360' AND T1.District Name = 'District Special Education Consortia School'\n\n\t----- bird -----\tcalifornia_schools",
    "75": "\nSELECT s.School AS School_Name, f.Low Grade AS Educational_Level\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE f.\"NSLP Provision Status\" = 'Breakfast Provision 2' AND f.\"County Code\" = '37'\n\n\t----- bird -----\tcalifornia_schools",
    "76": "\nSELECT s.City\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.Low Grade = '9' AND f.High Grade = '12' AND f.NSLP Provision Status = '2' AND f.County Name = 'Merced' AND (f.Low Grade >= 9 AND f.High Grade <= 12)\n\n\t----- bird -----\tcalifornia_schools",
    "77": "\nSELECT s.School, f.\"Percent (%) Eligible FRPM (Ages 5-17)\" \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Los Angeles' AND f.Low Grade = 'Kindergarten' AND f.High Grade = '9'\n\n\t----- bird -----\tcalifornia_schools",
    "78": "\nSELECT GSserved\nFROM schools\nWHERE City = 'Adelanto'\nGROUP BY GSserved\nORDER BY COUNT(CDSCode) DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "79": "\nSELECT COUNT(s.CDSCode) AS SchoolCount, s.County\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.Virtual = 1 AND (s.County = 'San Diego' OR s.County = 'Santa Barbara')\nGROUP BY s.County\nORDER BY SchoolCount DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "80": "\nSELECT s.School, s.Latitude, frpm.School Type AS SchoolType\nFROM schools s\nJOIN frpm ON s.CDSCode = frpm.CDSCode\nORDER BY s.Latitude DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "81": "\nSELECT s.City, f.Low Grade, f.School Name \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.State = 'California'\nORDER BY s.Latitude ASC\nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "82": "\nSELECT GSoffered FROM schools ORDER BY Longitude DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "83": "\nSELECT City, COUNT(CDSCode) AS SchoolCount\nFROM schools\nWHERE GSserved = 'K-8' AND Magnet = 1\nGROUP BY City;\n\n\t----- bird -----\tcalifornia_schools",
    "84": "\nSELECT AdmFName1 AS FirstName, District FROM schools WHERE AdmFName1 IS NOT NULL GROUP BY AdmFName1, District ORDER BY COUNT(AdmFName1) DESC LIMIT 2\n\n\t----- bird -----\tcalifornia_schools",
    "85": "\nSELECT frpm.\"Percent (%) Eligible Free (K-12)\", frpm.\"District Code\"\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 = 'Alusine'\n\n\t----- bird -----\tcalifornia_schools",
    "86": "\nSELECT s.AdmLName1, d.District, c.County, s.School \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.Charter School Number = 40;\n\n\t----- bird -----\tcalifornia_schools",
    "87": "\nSELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (GSoffered IN ('Intermediate/Middle Schools', 'Unified Schools') OR GSserved IN ('Intermediate/Middle Schools', 'Unified Schools'))\n\n\t----- bird -----\tcalifornia_schools",
    "88": "\nSELECT s.School, frpm.School Name, s.AdmEmail1 \nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nJOIN frpm ON s.CDSCode = frpm.CDSCode\nWHERE NumGE1500 > 0\nORDER BY NumGE1500 DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "89": "\nSELECT COUNT(a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'East Bohemia'\nAND EXISTS (\n    SELECT 1\n    FROM trans t\n    WHERE t.account_id = a.account_id\n    AND EXISTS (\n        SELECT 1\n        FROM card c\n        JOIN disp dp ON c.disp_id = dp.disp_id\n        WHERE dp.account_id = a.account_id\n        AND c.issued > t.date\n    )\n)\n\n\t----- bird -----\tfinancial",
    "90": "\nSELECT COUNT(DISTINCT a.account_id) \nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'Prague'\n\n\t----- bird -----\tfinancial",
    "91": "\nSELECT EXTRACT(YEAR FROM date) AS year, AVG(A9::real) AS avg_unemployment_ratio\nFROM district\nWHERE date IN ('1995-01-01', '1996-01-01')\nGROUP BY EXTRACT(YEAR FROM date)\nORDER BY AVG(A9::real) DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "92": "\nSELECT COUNT(district_id) \nFROM district \nWHERE A10 > 6000 AND A10 < 10000 AND EXISTS (\n    SELECT 1 FROM client WHERE district_id = district.district_id AND gender = 'F'\n)\n\n\t----- bird -----\tfinancial",
    "93": "\nSELECT COUNT(c.client_id)\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'male' AND d.A2 = 'North Bohemia' AND d.A10 > 8000\n\n\t----- bird -----\tfinancial",
    "94": "\nWITH female_clients AS (\n    SELECT client_id, district_id, birth_date,\n           (EXTRACT(YEAR FROM AGE(birth_date)) + 1) AS age\n    FROM client\n    WHERE gender = 'F'\n),\naverage_salaries AS (\n    SELECT d.district_id, AVG(d.A10) AS avg_salary\n    FROM female_clients fc\n    JOIN district d ON fc.district_id = d.district_id\n    GROUP BY d.district_id\n),\noldest_female_client AS (\n    SELECT client_id, birth_date\n    FROM female_clients\n    ORDER BY age DESC\n    LIMIT 1\n)\nSELECT a.account_id,\n       (SELECT MAX(avg_salary) - MIN(avg_salary) OVER () AS salary_gap\n        FROM average_salaries)\nFROM oldest_female_client ofc\nJOIN disp d ON ofc.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id;\n\n\t----- bird -----\tfinancial",
    "95": "\nWITH youngest_client AS (\n    SELECT client_id, birth_date\n    FROM client\n    ORDER BY birth_date DESC\n    LIMIT 1\n),\naverage_salary AS (\n    SELECT disp.client_id, AVG(account.A10) as avg_salary\n    FROM account\n    JOIN disp ON account.account_id = disp.account_id\n    GROUP BY disp.client_id\n)\nSELECT account.account_id\nFROM account\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE client.client_id IN (SELECT client_id FROM youngest_client)\nAND disp.client_id IN (SELECT client_id FROM average_salary ORDER BY avg_salary DESC LIMIT 1);\n\n\t----- bird -----\tfinancial",
    "96": "\nSELECT COUNT(DISTINCT d.client_id) \nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nWHERE a.frequency = 'Weekly'\nAND d.type = 'OWNER'\n\n\t----- bird -----\tfinancial",
    "97": "\nSELECT DISTINCT c.client_id, c.gender, c.birth_date, c.district_id \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE d.type = 'Disponent' AND t.type = 'statement of issuance'\n\n\t----- bird -----\tfinancial",
    "98": "\nWITH ApprovedLoansIn1997 AS (\n    SELECT account_id, amount\n    FROM loan\n    WHERE EXTRACT(YEAR FROM date) = 1997 AND status = 'approved'\n),\nLowestAmountAccounts AS (\n    SELECT account_id\n    FROM ApprovedLoansIn1997\n    GROUP BY account_id\n    HAVING MIN(amount) = (SELECT MIN(amount) FROM ApprovedLoansIn1997)\n)\nSELECT a.account_id, d.frequency\nFROM account a\nJOIN LowestAmountAccounts la ON a.account_id = la.account_id\nJOIN disp dp ON a.account_id = dp.account_id\nWHERE d.frequency = 'weekly'\n\n\t----- bird -----\tfinancial",
    "99": "\nSELECT a.account_id, l.amount AS approved_amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE EXTRACT(YEAR FROM AGE(l.date, a.date)) > 12 AND EXTRACT(YEAR FROM a.date) = 1993\nORDER BY l.amount DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "100": "\nSELECT COUNT(DISTINCT d.client_id) \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dis ON c.district_id = dis.district_id\nWHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND dis.A2 = 'Slokolov'\n\n\t----- bird -----\tfinancial",
    "101": "\nSELECT account_id, date \nFROM account \nWHERE YEAR(date) = 1995 \nORDER BY date ASC \nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "102": "\nSELECT DISTINCT a.account_id, a.date AS opening_date\nFROM account a\nJOIN (\n    SELECT account_id, SUM(amount) AS total_amount\n    FROM trans\n    GROUP BY account_id\n) t ON a.account_id = t.account_id\nWHERE a.date < '1997-01-01' AND t.total_amount > 3000\n\n\t----- bird -----\tfinancial",
    "103": "\nSELECT c.client_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.issued = '1994-03-03'\n\n\t----- bird -----\tfinancial",
    "104": "\nSELECT a.date \nFROM account a\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.amount = 840 AND t.date = '1998-10-14'\n\n\t----- bird -----\tfinancial",
    "105": "\nSELECT DISTINCT T2.district_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25' AND T1.status = 'approved'\n\n\t----- bird -----\tfinancial",
    "106": "\nSELECT MAX(t.amount) AS max_transaction_amount\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE ca.issued = '1996-10-21'\n\n\t----- bird -----\tfinancial",
    "107": "\nWITH avg_salary_branch AS (\n    SELECT district_id, AVG(A10) as avg_salary\n    FROM district\n    GROUP BY district_id\n    ORDER BY avg_salary DESC\n    LIMIT 1\n),\noldest_client_in_highest_avg_salary_branch AS (\n    SELECT c.client_id, c.gender, c.birth_date\n    FROM client c\n    JOIN disp d ON c.client_id = d.client_id\n    JOIN account a ON d.account_id = a.account_id\n    WHERE a.district_id IN (SELECT district_id FROM avg_salary_branch)\n    ORDER BY c.birth_date ASC\n    LIMIT 1\n)\nSELECT gender\nFROM oldest_client_in_highest_avg_salary_branch\n\n\t----- bird -----\tfinancial",
    "108": "\nWITH max_loan AS (\n    SELECT account_id, MAX(amount) as max_amount\n    FROM loan\n    GROUP BY account_id\n),\nclient_with_max_loan AS (\n    SELECT l.account_id, c.client_id\n    FROM loan l\n    JOIN max_loan ml ON l.amount = ml.max_amount AND l.account_id = ml.account_id\n    JOIN disp d ON l.account_id = d.account_id\n    JOIN client c ON d.client_id = c.client_id\n)\nSELECT t.amount AS first_transaction_amount\nFROM trans t\nJOIN client_with_max_loan clml ON t.account_id = clml.account_id\nWHERE t.date > (SELECT MIN(date) FROM account WHERE account_id = clml.account_id)\nORDER BY t.date ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "109": "\nSELECT COUNT(c.client_id)\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dis ON c.district_id = dis.district_id\nWHERE c.gender = 'F' AND dis.A2 = 'Jesenik'\n\n\t----- bird -----\tfinancial",
    "110": "\nSELECT disp.disp_id\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN disp ON account.account_id = disp.account_id\nWHERE trans.amount = 5100 AND DATE_PART('year', trans.date) = 1998 AND DATE_PART('month', trans.date) = 9 AND DATE_PART('day', trans.date) = 2\n\n\t----- bird -----\tfinancial",
    "111": "\nSELECT COUNT(*)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Litomerice' AND EXTRACT(YEAR FROM account.date) = 1996;\n\n\t----- bird -----\tfinancial",
    "112": "\nSELECT d.district_id FROM client c JOIN disp dsp ON c.client_id = dsp.client_id JOIN account a ON dsp.account_id = a.account_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\n\n\t----- bird -----\tfinancial",
    "113": "\nSELECT c.birth_date \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.amount = 98832 AND l.date = '1996-01-03'\n\n\t----- bird -----\tfinancial",
    "114": "\nSELECT a.account_id\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nJOIN disp dp ON a.account_id = dp.account_id\nWHERE d.A2 = 'Prague'\nORDER BY a.date ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "115": "\nSELECT CAST(COUNT(CASE WHEN T1.gender = 'male' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.client_id) AS male_percentage\nFROM client AS T1\nJOIN district AS T2 ON T1.district_id = T2.district_id\nWHERE T2.A3 = 'south Bohemia'\nORDER BY T2.A9 DESC\nLIMIT 1\n\n\t----- bird -----\tfinancial",
    "116": "\nWITH first_loan_client AS (\n    SELECT client_id, account_id\n    FROM disp d\n    JOIN loan l ON d.account_id = l.account_id\n    WHERE l.date = '1993-07-05'\n),\nbalance_changes AS (\n    SELECT t.account_id, MIN(t.date) as start_date, MAX(t.date) as end_date, \n           FIRST_VALUE(balance) OVER (PARTITION BY account_id ORDER BY date ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as initial_balance,\n           LAST_VALUE(balance) OVER (PARTITION BY account_id ORDER BY date ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as final_balance\n    FROM trans t\n    JOIN first_loan_client flc ON t.account_id = flc.account_id\n    WHERE t.date >= '1993-03-22' AND t.date <= '1998-12-27'\n)\nSELECT (final_balance - initial_balance) * 1.0 / initial_balance AS increase_rate\nFROM balance_changes;\n\n\t----- bird -----\tfinancial",
    "117": "\nSELECT CAST(SUM(CASE WHEN status = 'Fully Paid' THEN amount ELSE 0 END) AS REAL) * 100 / SUM(amount) AS percentage_paid_loans\nFROM loan\nWHERE status = 'Fully Paid'\n\n\t----- bird -----\tfinancial",
    "118": "\nSELECT CAST(COUNT(CASE WHEN status = 'running' THEN loan_id ELSE NULL END) AS FLOAT) * 100 / COUNT(loan_id) AS percentage_running\nFROM loan\nWHERE amount < 100000\n\n\t----- bird -----\tfinancial",
    "119": "\nSELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region\nFROM account a\nJOIN trans t ON a.account_id = t.account_id\nJOIN disp d ON a.account_id = d.account_id\nWHERE EXTRACT(YEAR FROM t.date) = 1993 AND EXISTS (\n    SELECT 1\n    FROM card c\n    WHERE c.disp_id = d.disp_id AND c.issued > t.date\n)\nGROUP BY a.account_id, d.A2, d.A3\n\n\t----- bird -----\tfinancial",
    "120": "\nSELECT a.account_id, a.frequency\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'east Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31'\n\n\t----- bird -----\tfinancial",
    "121": "\nSELECT a.account_id, a.date \nFROM account AS a\nJOIN district AS d ON a.district_id = d.district_id\nWHERE d.A2 = 'Prachatice'\n\n\t----- bird -----\tfinancial",
    "122": "\nSELECT d.district_id, d.A2 AS region\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.loan_id = 4990;\n\n\t----- bird -----\tfinancial",
    "123": "\nSELECT DISTINCT a.account_id, d.A2 AS district, d.A3 AS region\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.amount > 300000\n\n\t----- bird -----\tfinancial",
    "124": "\nSELECT l.loan_id, d.A2 AS district, d.A10 AS average_salary\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.duration = 60\nGROUP BY l.loan_id, d.A2, d.A10\n\n\t----- bird -----\tfinancial",
    "125": "\nSELECT d.district_id, ((d.A10 - prev_d.A10) / prev_d.A10 * 100) AS unemployment_rate_increment\nFROM district d\nJOIN (\n    SELECT account.account_id, loan.status\n    FROM loan\n    JOIN account ON loan.account_id = account.account_id\n    WHERE loan.status NOT IN ('LICZBICA', 'WR\u00d3CONE')\n) AS debt_clients ON d.district_id = debt_clients.account_district_id\nJOIN district prev_d ON d.district_id = prev_d.district_id AND prev_d.A2 = '1995'\nWHERE d.A2 = '1996';\n\n\t----- bird -----\tfinancial",
    "126": "\nSELECT CAST(COUNT(CASE WHEN d.A2 = 'Decin' THEN a.account_id END) AS FLOAT) * 100 / COUNT(a.account_id) \nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE EXTRACT(YEAR FROM a.date) = 1993\n\n\t----- bird -----\tfinancial",
    "127": "\nSELECT DISTINCT account_id FROM account WHERE frequency = 'monthly'\n\n\t----- bird -----\tfinancial",
    "128": "\nSELECT d.district_id, COUNT(c.client_id) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp ds ON c.client_id = ds.client_id\nJOIN account a ON ds.account_id = a.account_id\nWHERE c.gender = 'F'\nGROUP BY d.district_id\nORDER BY female_account_holders DESC\nLIMIT 10;\n\n\t----- bird -----\tfinancial",
    "129": "\nSELECT d.A2, SUM(CASE WHEN t.type = 'DB' THEN t.amount ELSE 0 END) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.date BETWEEN '1996-01-01' AND '1996-01-31'\nAND t.type = 'DB'\nAND t.k_symbol NOT IN ('POS', 'MC', 'V')\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10\n\n\t----- bird -----\tfinancial",
    "130": "\nSELECT COUNT(a.account_id) \nFROM account a\nJOIN district d ON a.district_id = d.district_id\nLEFT JOIN disp dp ON a.account_id = dp.account_id\nLEFT JOIN card c ON dp.disp_id = c.disp_id\nWHERE d.A2 = 'South Bohemia' AND c.card_id IS NULL\n\n\t----- bird -----\tfinancial",
    "131": "\nSELECT d.district_id, d.A2, COUNT(l.loan_id) AS active_loans\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'active'\nGROUP BY d.district_id, d.A2\nORDER BY active_loans DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "132": "\nSELECT AVG(loan.amount) AS average_loan_amount\nFROM loan\nJOIN disp ON loan.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE client.gender = 'M';\n\n\t----- bird -----\tfinancial",
    "133": "\nSELECT D.A2, D.A3 FROM district D WHERE D.A14 = (SELECT MAX(T1.A14) FROM district T1 WHERE EXTRACT(YEAR FROM T1.A9) = 1996)\n\n\t----- bird -----\tfinancial",
    "134": "\nWITH crime_counts AS (\n    SELECT district_id, SUM(CASE WHEN EXTRACT(YEAR FROM date) = 1996 THEN 1 ELSE 0 END) as crimes_1996\n    FROM trans\n    GROUP BY district_id\n),\nmax_crime_district AS (\n    SELECT district_id\n    FROM crime_counts\n    ORDER BY crimes_1996 DESC\n    LIMIT 1\n)\nSELECT COUNT(*)\nFROM account a\nJOIN max_crime_district mcd ON a.district_id = mcd.district_id;\n\n\t----- bird -----\tfinancial",
    "135": "\nSELECT COUNT(a.account_id) \nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN card c ON d.disp_id = c.card_id\nWHERE a.frequency = 'monthly' AND EXISTS (\n    SELECT 1 FROM trans t WHERE t.account_id = a.account_id AND t.operation = 'withdrawal' AND t.amount > t.balance\n)\n\n\t----- bird -----\tfinancial",
    "136": "\nSELECT COUNT(DISTINCT l.account_id) \nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND l.amount >= 250000\nAND l.status = 'approved'\nAND a.frequency = 'monthly';\n\n\t----- bird -----\tfinancial",
    "137": "\nSELECT COUNT(a.account_id) \nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'Branch location 1' AND EXISTS (\n    SELECT 1 FROM loan l WHERE l.account_id = a.account_id AND l.status = 'running'\n)\n\n\t----- bird -----\tfinancial",
    "138": "\nWITH crime_counts AS (\n    SELECT district_id, SUM(CASE WHEN EXTRACT(YEAR FROM t.date) = 1995 THEN 1 ELSE 0 END) as crimes_1995\n    FROM trans t\n    GROUP BY district_id\n),\nranked_crime_counts AS (\n    SELECT district_id, crimes_1995,\n           RANK() OVER (ORDER BY crimes_1995 DESC) as crime_rank\n    FROM crime_counts\n)\nSELECT COUNT(*)\nFROM client c\nJOIN ranked_crime_counts rcc ON c.district_id = rcc.district_id\nWHERE c.gender = 'male' AND rcc.crime_rank = 2;\n\n\t----- bird -----\tfinancial",
    "139": "\nSELECT COUNT(c.card_id) \nFROM card c\nJOIN disp d ON c.disp_id = d.disp_id\nWHERE c.type = 'high' AND d.type = 'disponent'\n\n\t----- bird -----\tfinancial",
    "140": "\nSELECT COUNT(*) FROM account AS t1 JOIN district AS t2 ON t1.district_id = t2.district_id WHERE t2.A2 = 'Pisek'\n\n\t----- bird -----\tfinancial",
    "141": "\nSELECT DISTINCT d.district_id, d.A2, d.A3\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.amount > 10000 AND EXTRACT(YEAR FROM t.date) = 1997\n\n\t----- bird -----\tfinancial",
    "142": "\nSELECT DISTINCT a.account_id\nFROM account a\nJOIN order o ON a.account_id = o.account_id\nWHERE o.bank_to = 'Pisek' AND o.k_symbol = 'H'\n\n\t----- bird -----\tfinancial",
    "143": "\nSELECT DISTINCT d.account_id\nFROM disp d\nJOIN card c ON d.disp_id = c.disp_id\nWHERE c.type IN ('gold', 'junior')\nGROUP BY d.account_id\nHAVING COUNT(DISTINCT c.type) > 1\n\n\t----- bird -----\tfinancial",
    "144": "\nSELECT AVG(amount) AS average_credit_card_amount\nFROM trans T\nJOIN disp D ON T.account_id = D.account_id\nJOIN card C ON D.disp_id = C.card_id\nWHERE C.type = 'credit'\nAND EXTRACT(YEAR FROM T.date) = 2021\nGROUP BY EXTRACT(MONTH FROM T.date)\n\n\t----- bird -----\tfinancial",
    "145": "\nSELECT DISTINCT d.account_id\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE d.type = 'KREDI'\nAND EXTRACT(YEAR FROM t.date) = 1998\nGROUP BY d.account_id, DATE_TRUNC('MONTH', t.date)\nHAVING SUM(CASE WHEN t.operation = 'POS' THEN t.amount ELSE 0 END) < (\n    SELECT AVG(monthly_spent) \n    FROM (\n        SELECT account_id, DATE_TRUNC('MONTH', date) AS month, SUM(CASE WHEN operation = 'POS' THEN amount ELSE 0 END) AS monthly_spent\n        FROM trans\n        JOIN disp ON trans.account_id = disp.account_id\n        WHERE disp.type = 'KREDI'\n        AND EXTRACT(YEAR FROM trans.date) = 1998\n        GROUP BY account_id, DATE_TRUNC('MONTH', date)\n    ) subquery\n)\n\n\t----- bird -----\tfinancial",
    "146": "\nSELECT DISTINCT c.client_id, a.account_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN card ca ON d.disp_id = ca.disp_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE c.gender = 'F' AND ca.type = 'Credit'\n\n\t----- bird -----\tfinancial",
    "147": "\nSELECT COUNT(DISTINCT d.client_id) \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dis ON c.district_id = dis.district_id\nWHERE c.gender = 'F' AND dis.A2 = 'South Bohemia'\n\n\t----- bird -----\tfinancial",
    "148": "\nSELECT a.account_id\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'Tabor'\nAND a.frequency IN ('monthly', 'biweekly') -- Assuming frequency indicates eligibility for loans\nAND a.date <= CURRENT_DATE - INTERVAL '3 months' -- Assuming recent activity is required for loan eligibility\n\n\t----- bird -----\tfinancial",
    "149": "\nSELECT DISTINCT a.frequency AS account_type, d.A10 AS average_income\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE NOT EXISTS (\n    SELECT 1 FROM loan l WHERE l.account_id = a.account_id\n) AND d.A10 > 8000 AND d.A10 <= 9000\n\n\t----- bird -----\tfinancial",
    "150": "\nSELECT COUNT(DISTINCT a.account_id) \nFROM account a\nJOIN district d ON a.district_id = d.district_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE d.A2 = 'North Bohemia' AND t.bank = 'AB'\n\n\t----- bird -----\tfinancial",
    "151": "\nSELECT DISTINCT d.district_id, d.A2 AS district_name\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.operation = 'withdrawal'\nGROUP BY d.district_id, d.A2\n\n\t----- bird -----\tfinancial",
    "152": "\nSELECT AVG(A14) AS average_crimes_1995\nFROM district\nWHERE A14 > 4000 AND district_id IN (\n    SELECT DISTINCT district_id\n    FROM account\n    WHERE date >= '1997-01-01'\n)\nAND CAST(SUBSTR(A8, -4) AS INTEGER) = 1995;\n\n\t----- bird -----\tfinancial",
    "153": "\nSELECT COUNT(DISTINCT c.disp_id) \nFROM card ca\nJOIN disp d ON ca.disp_id = d.disp_id\nWHERE ca.type = 'classic'\n\n\t----- bird -----\tfinancial",
    "154": "\nSELECT COUNT(*)\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'male' AND d.A2 = 'Hl.m. Praha'\n\n\t----- bird -----\tfinancial",
    "155": "\nSELECT CAST(COUNT(card_id) AS FLOAT) * 100 / (SELECT COUNT(*) FROM card WHERE type = 'Gold') \nFROM card \nWHERE type = 'Gold' AND issued < '1998-01-01';\n\n\t----- bird -----\tfinancial",
    "156": "\nSELECT c.client_id, c.gender, c.birth_date, c.district_id \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.amount = (SELECT MAX(amount) FROM loan)\n\n\t----- bird -----\tfinancial",
    "157": "\nSELECT A14 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532)\n\n\t----- bird -----\tfinancial",
    "158": "\nSELECT d.district_id FROM district d JOIN account a ON d.district_id = a.district_id WHERE a.account_id IN (SELECT account_id FROM order WHERE order_id = 33333)\n\n\t----- bird -----\tfinancial",
    "159": "\nSELECT t.type, t.operation, t.amount, t.balance, t.date \nFROM trans AS t \nJOIN disp AS d ON t.account_id = d.account_id \nWHERE d.client_id = 3356 AND t.type = 'cash' AND t.operation = 'withdrawal'\n\n\t----- bird -----\tfinancial",
    "160": "\nSELECT COUNT(DISTINCT a.account_id) \nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE a.frequency = 'W' AND l.amount < 200000\n\n\t----- bird -----\tfinancial",
    "161": "\nSELECT card.type \nFROM client \nJOIN disp ON client.client_id = disp.client_id \nJOIN card ON disp.disp_id = card.disp_id \nWHERE client.client_id = 13539;\n\n\t----- bird -----\tfinancial",
    "162": "\nSELECT district.A2 FROM client JOIN district ON client.district_id = district.district_id WHERE client.client_id = 3541\n\n\t----- bird -----\tfinancial",
    "163": "\nSELECT d.district_id, COUNT(a.account_id) AS account_count\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'no problems'\nGROUP BY d.district_id\nORDER BY account_count DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "164": "\nSELECT client_id FROM disp WHERE account_id = (SELECT account_id FROM order WHERE order_id = 32423)\n\n\t----- bird -----\tfinancial",
    "165": "\nSELECT t.*\nFROM trans AS t\nJOIN account AS a ON t.account_id = a.account_id\nWHERE a.district_id = 5\n\n\t----- bird -----\tfinancial",
    "166": "\nSELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik')\n\n\t----- bird -----\tfinancial",
    "167": "\nSELECT DISTINCT c.client_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE ca.type = 'junior' AND ca.issued > '1996-01-01'\n\n\t----- bird -----\tfinancial",
    "168": "\nSELECT CAST(COUNT(CASE WHEN c.gender = 'F' THEN 1 END) AS FLOAT) * 100 / COUNT(c.client_id) \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dis ON c.district_id = dis.district_id\nWHERE a.date IN (\n    SELECT MIN(date)\n    FROM account\n    GROUP BY account_id\n) AND dis.A10 > 10000\n\n\t----- bird -----\tfinancial",
    "169": "\nWITH male_client_loans AS (\n    SELECT l.account_id, SUM(l.amount) as total_loan_amount, EXTRACT(YEAR FROM l.date) as year\n    FROM loan l\n    JOIN disp d ON l.account_id = d.account_id\n    JOIN client c ON d.client_id = c.client_id\n    WHERE c.gender = 'M' AND EXTRACT(YEAR FROM l.date) IN (1996, 1997)\n    GROUP BY l.account_id, year\n),\nyearly_loan_totals AS (\n    SELECT year, SUM(total_loan_amount) as total_yearly_loans\n    FROM male_client_loans\n    GROUP BY year\n)\nSELECT \n    ylt.year,\n    ylt.total_yearly_loans,\n    (ylt.total_yearly_loans - COALESCE(LAG(ylt.total_yearly_loans) OVER (ORDER BY ylt.year), 0)) / NULLIF(COALESCE(LAG(ylt.total_yearly_loans) OVER (ORDER BY ylt.year), 1), 0) * 100.0 as growth_rate\nFROM yearly_loan_totals ylt\nORDER BY ylt.year;\n\n\t----- bird -----\tfinancial",
    "170": "\nSELECT COUNT(*)\nFROM trans\nWHERE date > '1995-12-31'\nAND type = 'WITHDRAWAL';\n\n\t----- bird -----\tfinancial",
    "171": "\nSELECT (SELECT A2 FROM district WHERE A3 = 'Vysocina' AND A4 = 'JHC') - (SELECT A2 FROM district WHERE A3 = 'Pardubice' AND A4 = 'JHC') AS crime_difference\nFROM district\nWHERE A3 IN ('Vysocina', 'Pardubice') AND A4 = 'JHC'\nGROUP BY A3, A4\n\n\t----- bird -----\tfinancial",
    "172": "\nSELECT COUNT(CASE WHEN type = 'owner' THEN 1 END) AS owner_count, \n       COUNT(CASE WHEN type = 'disponent' THEN 1 END) AS disponent_count \nFROM disp \nWHERE account_id BETWEEN 1 AND 10;\n\n\t----- bird -----\tfinancial",
    "173": "\nSELECT frequency, COUNT(*) AS statement_requests_count\nFROM account\nWHERE account_id = 3\nGROUP BY frequency;\n\nSELECT SUM(amount) AS total_debit_amount\nFROM trans\nWHERE account_id = 3539 AND operation = 'DEBIT';\n\n\t----- bird -----\tfinancial",
    "174": "\nSELECT birth_date FROM client WHERE client_id = (SELECT client_id FROM disp WHERE account_id = (SELECT account_id FROM account WHERE account_id = 130))\n\n\t----- bird -----\tfinancial",
    "175": "\nSELECT COUNT(DISTINCT d.account_id) \nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nWHERE d.type = 'OWNER' AND a.frequency = 'STATEMENT'\n\n\t----- bird -----\tfinancial",
    "176": "\nSELECT SUM(loan.amount) AS total_debt, \n       CASE \n         WHEN loan.status = 'paid off' THEN 'Client has paid off all debts.'\n         ELSE 'Client is still in debt with status: ' || loan.status\n       END AS payment_status\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN loan ON disp.account_id = loan.account_id\nWHERE client.client_id = 992\n\n\t----- bird -----\tfinancial",
    "177": "\nSELECT c.gender, t.balance \nFROM client c \nJOIN disp d ON c.client_id = d.client_id \nJOIN account a ON d.account_id = a.account_id \nJOIN trans t ON a.account_id = t.account_id \nWHERE c.client_id = 4 AND t.trans_id = 851\n\n\t----- bird -----\tfinancial",
    "178": "\nSELECT card.type \nFROM client \nJOIN disp ON client.client_id = disp.client_id \nJOIN card ON disp.disp_id = card.disp_id \nWHERE client.client_id = 9;\n\n\t----- bird -----\tfinancial",
    "179": "\nSELECT SUM(t.amount) AS total_payment\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE c.client_id = 617 AND EXTRACT(YEAR FROM t.date) = 1998\n\n\t----- bird -----\tfinancial",
    "180": "\nSELECT c.client_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dis ON c.district_id = dis.district_id\nWHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31'\nAND dis.A2 = 'East Bohemia';\n\n\t----- bird -----\tfinancial",
    "181": "\nSELECT c.client_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE c.gender = 'F'\nORDER BY l.amount DESC\nLIMIT 3\n\n\t----- bird -----\tfinancial",
    "182": "\nSELECT COUNT(DISTINCT d.client_id) \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31'\nAND l.status = 'paid' AND l.amount > 4000;\n\n\t----- bird -----\tfinancial",
    "183": "\nSELECT COUNT(*)\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Beroun' AND DATE_PART('year', account.date) > 1996;\n\n\t----- bird -----\tfinancial",
    "184": "\nSELECT COUNT(DISTINCT d.client_id) \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id\nWHERE c.gender = 'F' AND ca.type = 'junior'\n\n\t----- bird -----\tfinancial",
    "185": "\nSELECT CAST(COUNT(CASE WHEN c.gender = 'F' THEN 1 END) AS FLOAT) / COUNT(c.client_id) \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dis ON c.district_id = dis.district_id\nWHERE dis.A2 = 'Prague'\n\n\t----- bird -----\tfinancial",
    "186": "\nSELECT CAST(COUNT(d.disp_id) AS FLOAT) / (SELECT COUNT(*) FROM client WHERE gender = 'M') * 100 \nFROM disp d JOIN account a ON d.account_id = a.account_id \nJOIN client c ON d.client_id = c.client_id \nWHERE c.gender = 'M' AND a.frequency = 'WEEKLY'\n\n\t----- bird -----\tfinancial",
    "187": "\nSELECT COUNT(DISTINCT d.client_id) \nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nWHERE a.frequency = 'User' AND a.frequency = 'Weekly'\n\n\t----- bird -----\tfinancial",
    "188": "\nSELECT a.account_id, l.amount AS approved_amount, a.date AS account_opening_date\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 24 AND a.date < '1997-01-01'\nORDER BY l.amount ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "189": "\nSELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'F'\nAND c.birth_date = (\n    SELECT MIN(birth_date)\n    FROM client\n    WHERE gender = 'F'\n)\nGROUP BY a.account_id, c.client_id\nHAVING AVG(a.A10) = (\n    SELECT MIN(avg_salary)\n    FROM (\n        SELECT AVG(district.A10) AS avg_salary\n        FROM account a\n        JOIN disp d ON a.account_id = d.account_id\n        JOIN client c ON d.client_id = c.client_id\n        JOIN district ON c.district_id = district.district_id\n        WHERE c.gender = 'F'\n        AND c.birth_date = (\n            SELECT MIN(birth_date)\n            FROM client\n            WHERE gender = 'F'\n        )\n        GROUP BY c.client_id\n    ) AS subquery\n)\n\n\t----- bird -----\tfinancial",
    "190": "\nSELECT COUNT(c.client_id)\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE EXTRACT(YEAR FROM c.birth_date) = 1920 AND d.A3 = 'east Bohemia'\n\n\t----- bird -----\tfinancial",
    "191": "\nSELECT COUNT(*) FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.duration = 24 AND l.status = 'pre-payment' AND a.frequency = 'weekly'\n\n\t----- bird -----\tfinancial",
    "192": "\nSELECT l.account_id, AVG(l.amount) AS average_loan_amount\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.status = 'running'\nGROUP BY l.account_id\nHAVING MAX(t.date) > l.date\nFROM trans t\n\n\t----- bird -----\tfinancial",
    "193": "\nSELECT c.client_id, d.A2 AS district\nFROM client c\nJOIN disp d ON c.district_id = d.district_id\nWHERE d.A3 IN ('permanent', 'loan')\nGROUP BY c.client_id, d.A2\nHAVING COUNT(DISTINCT d.A3) = 2\n\n\t----- bird -----\tfinancial",
    "194": "\nSELECT c.client_id, AGE(c.birth_date) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.disp_id = ca.disp_id AND ca.type = 'high level'\nWHERE EXISTS (\n    SELECT 1 FROM loan l WHERE l.account_id = d.account_id AND l.status = 'eligible'\n)\n\n\t----- bird -----\tfinancial",
    "195": "\nSELECT bond_type, COUNT(*) AS count FROM bond GROUP BY bond_type ORDER BY count DESC LIMIT 1\n\n\t----- bird -----\ttoxicology",
    "196": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label != 'carcinogenic' AND a.element = 'Cl'\n\n\t----- bird -----\ttoxicology",
    "197": "\nSELECT AVG(count_of_oxygen) AS average_oxygen_atoms\nFROM (\n    SELECT COUNT(*) AS count_of_oxygen\n    FROM atom a\n    JOIN connected c ON a.atom_id = c.atom_id\n    JOIN bond b ON c.bond_id = b.bond_id\n    WHERE a.element = 'O' AND b.bond_type = 'single'\n    GROUP BY c.atom_id2\n) AS oxygen_counts\n\n\t----- bird -----\ttoxicology",
    "198": "\nSELECT COUNT(m.molecule_id) / COUNT(DISTINCT m.molecule_id) AS avg_single_bonded_carcinogenic_molecules\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE m.label LIKE '%carcinogenic%' AND b.bond_type = 'single'\n\n\t----- bird -----\ttoxicology",
    "199": "\nSELECT COUNT(DISTINCT a1.atom_id) \nFROM atom AS a1\nJOIN molecule AS m ON a1.molecule_id = m.molecule_id\nJOIN connected AS c ON a1.atom_id = c.atom_id OR a1.atom_id = c.atom_id2\nJOIN bond AS b ON c.bond_id = b.bond_id\nWHERE a1.element = 'Na' AND NOT EXISTS (\n    SELECT 1 FROM atom WHERE molecule_id = m.molecule_id AND element IN ('C', 'H')\n)\n\n\t----- bird -----\ttoxicology",
    "200": "\nSELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%'\nGROUP BY m.molecule_id, m.label\n\n\t----- bird -----\ttoxicology",
    "201": "\nSELECT CAST(COUNT(DISTINCT a1.atom_id) AS FLOAT) / (SELECT COUNT(DISTINCT atom_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) * 100 AS percentage_carbon_in_double_bond_molecules\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id AND b.bond_type = 'double'\nWHERE a1.element = 'C';\n\n\t----- bird -----\ttoxicology",
    "202": "\nSELECT COUNT(*) FROM bond WHERE bond_type = 'triple'\n\n\t----- bird -----\ttoxicology",
    "203": "\nSELECT COUNT(*) FROM atom WHERE element != 'Br'\n\n\t----- bird -----\ttoxicology",
    "204": "\nSELECT COUNT(molecule_id) \nFROM molecule \nWHERE label = 'carcinogenic' \nLIMIT 100\n\n\t----- bird -----\ttoxicology",
    "205": "\nSELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'Si'\n\n\t----- bird -----\ttoxicology",
    "206": "\nSELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id IN (\n    SELECT bond_id\n    FROM bond\n    WHERE molecule_id IN (\n        SELECT molecule_id\n        FROM molecule\n        WHERE label = 'TR004_8_9'\n    )\n)\n\n\t----- bird -----\ttoxicology",
    "207": "\nSELECT DISTINCT a1.element, a2.element\nFROM atom AS a1\nJOIN connected AS c ON a1.atom_id = c.atom_id\nJOIN bond AS b ON c.bond_id = b.bond_id\nJOIN atom AS a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'double'\n\n\t----- bird -----\ttoxicology",
    "208": "\nSELECT m.label, COUNT(*) AS count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE a.element = 'H'\nGROUP BY m.label\nORDER BY count DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "209": "\nSELECT b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'Tellurium'\n\n\t----- bird -----\ttoxicology",
    "210": "\nSELECT a1.atom_id, a2.atom_id\nFROM atom AS a1\nJOIN connected AS c ON a1.atom_id = c.atom_id\nJOIN bond AS b ON c.bond_id = b.bond_id\nJOIN atom AS a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'single'\n\n\t----- bird -----\ttoxicology",
    "211": "\nSELECT a1.atom_id, a2.atom_id\nFROM atom AS a1\nJOIN connected AS c ON a1.atom_id = c.atom_id\nJOIN bond AS b ON c.bond_id = b.bond_id\nJOIN molecule AS m ON a1.molecule_id = m.molecule_id\nJOIN atom AS a2 ON c.atom_id2 = a2.atom_id AND a2.molecule_id = m.molecule_id\nWHERE m.label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "212": "\nSELECT element\nFROM atom\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label != 'carcinogenic'\n)\nGROUP BY element\nORDER BY COUNT(*) ASC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "213": "\nSELECT b.bond_type\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nWHERE (c1.atom_id = 'TR004_8' AND c2.atom_id = 'TR004_20') OR (c1.atom_id = 'TR004_20' AND c2.atom_id = 'TR004_8')\n\n\t----- bird -----\ttoxicology",
    "214": "\nSELECT DISTINCT m.label FROM molecule m WHERE m.molecule_id NOT IN (\n    SELECT a.molecule_id FROM atom a WHERE a.element = 'Sn'\n)\n\n\t----- bird -----\ttoxicology",
    "215": "\nSELECT COUNT(DISTINCT a1.atom_id) AS atom_count\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'single' AND (a1.element = 'I' AND a2.element = 'S' OR a1.element = 'S' AND a2.element = 'I')\n\n\t----- bird -----\ttoxicology",
    "216": "\nSELECT DISTINCT a1.atom_id, a2.atom_id\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id AND b.bond_type = 'triple'\nJOIN connected c2 ON c.atom_id2 = c2.atom_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE a1.element <> a2.element\nUNION ALL\nSELECT DISTINCT a1.atom_id, a2.atom_id\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id AND b.bond_type = 'triple'\nJOIN connected c2 ON c.atom_id = c2.atom_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE a1.element <> a2.element\n\n\t----- bird -----\ttoxicology",
    "217": "\nSELECT DISTINCT a2.atom_id, m.label\nFROM atom a1\nJOIN molecule m ON a1.molecule_id = m.molecule_id\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE m.label = 'TR181'\nUNION\nSELECT DISTINCT a1.atom_id, m.label\nFROM atom a1\nJOIN molecule m ON a1.molecule_id = m.molecule_id\nJOIN connected c ON a1.atom_id = c.atom_id2\nJOIN atom a2 ON c.atom_id = a2.atom_id\nWHERE m.label = 'TR181'\n\n\t----- bird -----\ttoxicology",
    "218": "\nWITH carcinogenic_molecules AS (\n    SELECT molecule_id FROM molecule WHERE label = 'carcinogenic'\n),\nfluorine_containing_molecules AS (\n    SELECT DISTINCT t1.molecule_id \n    FROM atom AS t1\n    JOIN connected AS t2 ON t1.atom_id = t2.atom_id\n    JOIN bond AS t3 ON t2.bond_id = t3.bond_id\n    WHERE t1.element = 'F'\n)\nSELECT CAST(COUNT(DISTINCT molecule_id) FILTER (WHERE NOT molecule_id IN (SELECT molecule_id FROM fluorine_containing_molecules)) AS FLOAT) * 100 / COUNT(DISTINCT molecule_id) AS percentage_without_fluorine\nFROM carcinogenic_molecules\n\n\t----- bird -----\ttoxicology",
    "219": "\nWITH triple_bond_molecules AS (\n    SELECT DISTINCT m.molecule_id, m.label\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id\n    JOIN connected c1 ON b.bond_id = c1.bond_id\n    JOIN connected c2 ON b.bond_id = c2.bond_id\n    WHERE b.bond_type = 'triple'\n),\ncarcinogenic_molecules AS (\n    SELECT molecule_id\n    FROM triple_bond_molecules\n    WHERE label LIKE '%carcinogenic%'\n)\nSELECT \n    (COUNT(c.molecule_id) * 100.0 / COUNT(t.molecule_id)) AS percentage_carcinogenic\nFROM \n    carcinogenic_molecules c,\n    triple_bond_molecules t;\n\n\t----- bird -----\ttoxicology",
    "220": "\nSELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE m.label = 'TR000'\nGROUP BY a.element\nORDER BY a.element ASC\nLIMIT 3\n\n\t----- bird -----\ttoxicology",
    "221": "\nSELECT a1.element AS atom1, a2.element AS atom2\nFROM connected c\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN molecule m ON a1.molecule_id = m.molecule_id\nWHERE c.bond_id = 'TR001_2_6' AND m.label = 'TR001';\n\n\t----- bird -----\ttoxicology",
    "222": "\nSELECT COUNT(CASE WHEN label = 'carcinogenic' THEN 1 END) - COUNT(CASE WHEN label != 'carcinogenic' THEN 1 END) AS difference\nFROM molecule\nWHERE label IN ('carcinogenic', 'non-carcinogenic')\n\n\t----- bird -----\ttoxicology",
    "223": "\nSELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR_000_2_5'\n\n\t----- bird -----\ttoxicology",
    "224": "\nSELECT DISTINCT bond_id FROM connected WHERE atom_id2 = (SELECT atom_id FROM atom WHERE element = 'TR000_2')\n\n\t----- bird -----\ttoxicology",
    "225": "\nSELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = 'double'\nGROUP BY m.molecule_id, m.label\nORDER BY m.label ASC\nLIMIT 5\n\n\t----- bird -----\ttoxicology",
    "226": "\nSELECT CAST(COUNT(CASE WHEN b.bond_type = 'double' THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS double_bond_percentage\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE m.label = 'TR008'\n\n\t----- bird -----\ttoxicology",
    "227": "\nSELECT CAST(COUNT(molecule_id) AS FLOAT) * 100 / (SELECT COUNT(*) FROM molecule) \nFROM molecule \nWHERE label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "228": "\nSELECT CAST(SUM(CASE WHEN t1.element = 'H' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) AS hydrogen_percentage\nFROM atom AS t1\nJOIN connected AS t2 ON t1.atom_id = t2.atom_id\nJOIN molecule AS t3 ON t1.molecule_id = t3.molecule_id\nWHERE t3.label = 'TR206'\n\n\t----- bird -----\ttoxicology",
    "229": "\nSELECT b.bond_type\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.label = 'TR000'\n\n\t----- bird -----\ttoxicology",
    "230": "\nSELECT T1.element, T4.label \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.atom_id = T2.atom_id \nJOIN bond AS T3 ON T2.bond_id = T3.bond_id \nJOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id \nWHERE T4.label = 'toxicology' AND T4.molecule_id IN (\n    SELECT molecule_id FROM atom WHERE element IN (\n        SELECT element FROM atom WHERE molecule_id IN (\n            SELECT molecule_id FROM molecule WHERE label = 'TR060'\n        )\n    )\n) OR T4.label = 'TR060'\n\n\t----- bird -----\ttoxicology",
    "231": "\nWITH BondCount AS (\n    SELECT b.bond_type, COUNT(*) as count\n    FROM bond b\n    JOIN molecule m ON b.molecule_id = m.molecule_id\n    JOIN connected c ON b.bond_id = c.bond_id\n    WHERE m.label = 'TR018'\n    GROUP BY b.bond_type\n),\nMaxBondCount AS (\n    SELECT MAX(count) as max_count\n    FROM BondCount\n)\nSELECT bc.bond_type, CASE WHEN bc.count = mb.max_count THEN 'Yes' ELSE 'No' END as is_carcinogenic_majority_bond\nFROM BondCount bc, MaxBondCount mb\nWHERE bc.count = mb.max_count;\n\n\t----- bird -----\ttoxicology",
    "232": "\nSELECT m.label\nFROM molecule m\nJOIN atom a1 ON m.molecule_id = a1.molecule_id\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id AND b.bond_type = 'single'\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE m.label NOT LIKE '%carcinogenic%'\nGROUP BY m.molecule_id, m.label\nORDER BY m.label ASC\nLIMIT 3\n\n\t----- bird -----\ttoxicology",
    "233": "\nSELECT b.bond_id, b.bond_type\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.label = 'TR006'\nORDER BY b.bond_id ASC\nLIMIT 2\n\n\t----- bird -----\ttoxicology",
    "234": "\nSELECT COUNT(DISTINCT b.bond_id) \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.atom_id = '12' AND m.label = 'TR009'\n\n\t----- bird -----\ttoxicology",
    "235": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = 'carcinogenic' AND a.element = 'Br'\n\n\t----- bird -----\ttoxicology",
    "236": "\nSELECT b.bond_type, a1.element AS atom1_element, a2.element AS atom2_element\nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_6_9'\nJOIN connected c2 ON c1.atom_id2 = c2.atom_id2 AND c2.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN atom a2 ON c2.atom_id = a2.atom_id\nWHERE b.bond_id = 'TR001_6_9'\n\n\t----- bird -----\ttoxicology",
    "237": "\nSELECT m.label, c.carcinogenic \nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nLEFT JOIN (\n    SELECT molecule_id, CASE WHEN label LIKE '%carcinogenic%' THEN 'Yes' ELSE 'No' END AS carcinogenic\n    FROM molecule\n) c ON m.molecule_id = c.molecule_id\nWHERE a.atom_id = 'TR001_10'\n\n\t----- bird -----\ttoxicology",
    "238": "\nSELECT COUNT(DISTINCT molecule_id) \nFROM bond \nWHERE bond_type = 'triple';\n\n\t----- bird -----\ttoxicology",
    "239": "\nSELECT COUNT(*) AS connection_count\nFROM connected\nWHERE atom_id = '19';\n\n\t----- bird -----\ttoxicology",
    "240": "\nSELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR004'\n\n\t----- bird -----\ttoxicology",
    "241": "\nSELECT COUNT(*) FROM molecule WHERE label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "242": "\nSELECT m.molecule_id, m.label \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.atom_id IN ('21', '22', '23', '24', '25') AND m.label LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "243": "\nSELECT DISTINCT b.bond_id, b.molecule_id, b.bond_type\nFROM bond AS b\nJOIN connected AS c ON b.bond_id = c.bond_id\nJOIN atom AS a1 ON c.atom_id = a1.atom_id\nJOIN atom AS a2 ON c.atom_id2 = a2.atom_id\nWHERE a1.element = 'P' AND a2.element = 'N'\nOR a1.element = 'N' AND a2.element = 'P';\n\n\t----- bird -----\ttoxicology",
    "244": "\nWITH DoubleBonds AS (\n    SELECT molecule_id, COUNT(*) AS double_bond_count\n    FROM bond\n    WHERE bond_type = 'double'\n    GROUP BY molecule_id\n),\nRankedMolecules AS (\n    SELECT m.molecule_id, m.label, db.double_bond_count,\n           RANK() OVER (ORDER BY db.double_bond_count DESC) as rank\n    FROM molecule m\n    JOIN DoubleBonds db ON m.molecule_id = db.molecule_id\n)\nSELECT label\nFROM RankedMolecules\nWHERE rank = 1;\n\n\t----- bird -----\ttoxicology",
    "245": "\nSELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT COUNT(DISTINCT bond_id) AS bond_count\n    FROM atom a\n    JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n    WHERE a.element = 'iodine'\n    GROUP BY a.atom_id\n) AS bond_counts\n\n\t----- bird -----\ttoxicology",
    "246": "\nSELECT bond.bond_type, bond.bond_id\nFROM connected\nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE connected.atom_id = '45' OR connected.atom_id2 = '45'\n\n\t----- bird -----\ttoxicology",
    "247": "\nSELECT DISTINCT element FROM atom WHERE atom_id NOT IN (SELECT atom_id2 FROM connected)\n\n\t----- bird -----\ttoxicology",
    "248": "\nSELECT a1.atom_id, a2.atom_id \nFROM atom AS a1\nJOIN connected AS c ON a1.atom_id = c.atom_id\nJOIN bond AS b ON c.bond_id = b.bond_id\nJOIN connected AS c2 ON c.atom_id2 = c2.atom_id AND c.bond_id = c2.bond_id\nJOIN atom AS a2 ON c2.atom_id2 = a2.atom_id\nWHERE b.molecule_id IN (\n    SELECT molecule_id FROM molecule WHERE label = 'TR447'\n) AND b.bond_type = 'triple';\n\n\t----- bird -----\ttoxicology",
    "249": "\nSELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR144_8_19'\n\n\t----- bird -----\ttoxicology",
    "250": "\nSELECT m.molecule_id, COUNT(b.bond_id) AS double_bond_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id AND b.bond_type = 'double'\nWHERE m.label LIKE '%carcinogenic%'\nGROUP BY m.molecule_id\nORDER BY double_bond_count DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "251": "\nWITH carcinogenic_molecules AS (\n    SELECT molecule_id FROM molecule WHERE label = 'carcinogenic'\n),\nelements_in_carcinogens AS (\n    SELECT element, COUNT(*) as count FROM atom \n    JOIN carcinogenic_molecules ON atom.molecule_id = carcinogenic_molecules.molecule_id\n    GROUP BY element\n)\nSELECT element FROM elements_in_carcinogens ORDER BY count ASC LIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "252": "\nSELECT DISTINCT a2.atom_id, a2.element \nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE a1.element = 'lead'\nUNION\nSELECT DISTINCT a1.atom_id, a1.element \nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id2\nJOIN atom a2 ON c.atom_id = a2.atom_id\nWHERE a2.element = 'lead'\n\n\t----- bird -----\ttoxicology",
    "253": "\nSELECT DISTINCT a1.element, a2.element \nFROM atom AS a1\nJOIN connected AS c ON a1.atom_id = c.atom_id\nJOIN bond AS b ON c.bond_id = b.bond_id\nJOIN connected AS c2 ON c.bond_id = c2.bond_id AND c.atom_id2 = c2.atom_id2\nJOIN atom AS a2 ON c2.atom_id = a2.atom_id\nWHERE b.bond_type = 'triple'\n\n\t----- bird -----\ttoxicology",
    "254": "\nWITH element_combinations AS (\n    SELECT a1.element, a2.element, COUNT(c.bond_id) as bond_count\n    FROM atom a1\n    JOIN connected c ON a1.atom_id = c.atom_id\n    JOIN atom a2 ON a2.atom_id = c.atom_id2\n    GROUP BY a1.element, a2.element\n),\nmax_bonds AS (\n    SELECT MAX(bond_count) as max_bond_count\n    FROM element_combinations\n)\nSELECT \n    CAST(SUM(ec.bond_count) AS FLOAT) / (SELECT mb.max_bond_count FROM max_bonds mb) * 100 AS percentage\nFROM element_combinations ec\nWHERE ec.bond_count = (SELECT mb.max_bond_count FROM max_bonds mb);\n\n\t----- bird -----\ttoxicology",
    "255": "\nSELECT CAST(COUNT(DISTINCT CASE WHEN b.bond_type = 'single' THEN c.atom_id ELSE NULL END) AS FLOAT) / COUNT(DISTINCT CASE WHEN b.bond_type = 'single' THEN b.bond_id ELSE NULL END)\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE EXISTS (\n    SELECT 1 FROM atom a WHERE c.atom_id = a.atom_id AND a.molecule_id IN (\n        SELECT m.molecule_id FROM molecule m JOIN atom a2 ON m.molecule_id = a2.molecule_id WHERE m.label LIKE '%carcinogenic%'\n    )\n) OR EXISTS (\n    SELECT 1 FROM atom a WHERE c.atom_id2 = a.atom_id AND a.molecule_id IN (\n        SELECT m.molecule_id FROM molecule m JOIN atom a2 ON m.molecule_id = a2.molecule_id WHERE m.label LIKE '%carcinogenic%'\n    )\n)\n\n\t----- bird -----\ttoxicology",
    "256": "\nSELECT COUNT(DISTINCT atom_id) AS total_atoms\nFROM atom\nWHERE element IN ('carbon', 'hydrogen')\n\n\t----- bird -----\ttoxicology",
    "257": "\nSELECT t3.atom_id2 FROM atom AS t1 JOIN connected AS t3 ON t1.atom_id = t3.atom_id WHERE t1.element = 'sulfur'\n\n\t----- bird -----\ttoxicology",
    "258": "\nSELECT DISTINCT b.bond_type\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'Tin'\nUNION\nSELECT DISTINCT b.bond_type\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'Tin'\n\n\t----- bird -----\ttoxicology",
    "259": "\nSELECT COUNT(DISTINCT a.element) AS element_count\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = 'single'\nGROUP BY a.molecule_id\n\n\t----- bird -----\ttoxicology",
    "260": "\nSELECT COUNT(DISTINCT a1.atom_id) AS total_atoms\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id AND b.bond_type = 'triple'\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE a1.element IN ('phosphorus', 'bromine') OR a2.element IN ('phosphorus', 'bromine')\n\n\t----- bird -----\ttoxicology",
    "261": "\nSELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "262": "\nSELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = 'single'\nAND m.label NOT LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "263": "\nSELECT CAST(COUNT(DISTINCT CASE WHEN a.element = 'Cl' THEN a.atom_id END) AS FLOAT) * 100 / COUNT(DISTINCT a.atom_id) AS chlorine_percentage\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON b.bond_id = c.bond_id\nWHERE b.bond_type = 'single'\n\n\t----- bird -----\ttoxicology",
    "264": "\nSELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\n\n\t----- bird -----\ttoxicology",
    "265": "\nSELECT molecule_id FROM molecule WHERE label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "266": "\nSELECT COUNT(DISTINCT m.molecule_id) AS total_carcinogenic_molecules\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label LIKE 'TR%0' AND m.label >= 'TR000' AND m.label <= 'TR030'\nGROUP BY m.molecule_id\nHAVING COUNT(CASE WHEN a.element IN ('C', 'H') THEN 1 END) > 2\n\n\t----- bird -----\ttoxicology",
    "267": "\nSELECT b.bond_type\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.molecule_id BETWEEN 'TR000' AND 'TR050'\n\n\t----- bird -----\ttoxicology",
    "268": "\nSELECT a.element\nFROM atom AS a\nJOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR001_10_11'\n\n\t----- bird -----\ttoxicology",
    "269": "\nSELECT COUNT(DISTINCT b.bond_id) \nFROM bond AS b\nJOIN connected AS c ON b.bond_id = c.bond_id\nJOIN atom AS a1 ON c.atom_id = a1.atom_id\nJOIN atom AS a2 ON c.atom_id2 = a2.atom_id\nWHERE a1.element = 'iodine' OR a2.element = 'iodine'\n\n\t----- bird -----\ttoxicology",
    "270": "\nSELECT m.label, COUNT(*) AS count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE a.element = 'Calcium'\nGROUP BY m.label;\n\n\t----- bird -----\ttoxicology",
    "271": "\nSELECT CASE WHEN COUNT(DISTINCT a.element) = 2 AND ARRAY['Cl', 'C'] <@ ARRAY(SELECT DISTINCT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR001_1_8') THEN 'YES' ELSE 'NO' END AS result\n\n\t----- bird -----\ttoxicology",
    "272": "\nSELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c1 ON a.atom_id = c1.atom_id\nJOIN bond b ON c1.bond_id = b.bond_id\nJOIN connected c2 ON c1.atom_id2 = c2.atom_id AND c2.atom_id2 = c1.atom_id\nWHERE a.element = 'carbon' AND b.bond_type = 'triple' AND m.label != 'carcinogenic'\nGROUP BY m.molecule_id\nHAVING COUNT(DISTINCT c1.bond_id) >= 3\nLIMIT 2;\n\n\t----- bird -----\ttoxicology",
    "273": "\nWITH carcinogenic_molecules AS (\n    SELECT molecule_id FROM molecule WHERE label = 'carcinogenic'\n),\nchlorine_atoms AS (\n    SELECT atom_id FROM atom WHERE element = 'Cl' AND molecule_id IN (SELECT molecule_id FROM carcinogenic_molecules)\n)\nSELECT \n    COUNT(DISTINCT chlorine_atoms.atom_id) * 100.0 / COUNT(DISTINCT atom.molecule_id) AS percentage_chlorine\nFROM \n    chlorine_atoms,\n    atom\nWHERE \n    atom.molecule_id IN (SELECT molecule_id FROM carcinogenic_molecules);\n\n\t----- bird -----\ttoxicology",
    "274": "\nSELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR001'\n\n\t----- bird -----\ttoxicology",
    "275": "\nSELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = 'double';\n\n\t----- bird -----\ttoxicology",
    "276": "\nSELECT c.atom_id, c.atom_id2 \nFROM connected AS c\nJOIN bond AS b ON c.bond_id = b.bond_id\nWHERE b.bond_type = 'triple'\nLIMIT 2\n\n\t----- bird -----\ttoxicology",
    "277": "\nSELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR005_16_26'\n\n\t----- bird -----\ttoxicology",
    "278": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = 'single' AND m.label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "279": "\nSELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_id = 'TR001_10_11'\n\n\t----- bird -----\ttoxicology",
    "280": "\nSELECT b.bond_id, m.label \nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = 'triple'\nAND EXISTS (\n    SELECT 1 FROM connected c WHERE c.bond_id = b.bond_id\n)\nAND m.label LIKE '%carcinogenic%'\nUNION\nSELECT b.bond_id, 'Not Carcinogenic' AS label \nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = 'triple'\nAND EXISTS (\n    SELECT 1 FROM connected c WHERE c.bond_id = b.bond_id\n)\nAND NOT m.label LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "281": "\nSELECT m.label, a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label LIKE '%carcinogenic%' AND a.atom_id IN (\n    SELECT t4.atom_id\n    FROM (\n        SELECT m2.molecule_id, a2.atom_id,\n               ROW_NUMBER() OVER (PARTITION BY m2.molecule_id ORDER BY a2.atom_id) as row_num\n        FROM molecule m2\n        JOIN atom a2 ON m2.molecule_id = a2.molecule_id\n    ) t4\n    WHERE t4.row_num = 4\n)\n\n\t----- bird -----\ttoxicology",
    "282": "\nSELECT (COUNT(CASE WHEN element = 'H' THEN 1 END) * 1.0 / COUNT(*)) AS hydrogen_ratio, m.label \nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.molecule_id = 'TR006'\n\n\t----- bird -----\ttoxicology",
    "283": "\nSELECT m.label, c.carcinogenic\nFROM molecule m\nJOIN (\n    SELECT a.molecule_id, COUNT(DISTINCT CASE WHEN a.element = 'Ca' THEN a.atom_id END) > 0 AS carcinogenic\n    FROM atom a\n    GROUP BY a.molecule_id\n) c ON m.molecule_id = c.molecule_id\nWHERE c.carcinogenic = true;\n\n\t----- bird -----\ttoxicology",
    "284": "\nSELECT DISTINCT b.bond_type\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'Tellurium'\n\n\t----- bird -----\ttoxicology",
    "285": "\nSELECT DISTINCT a1.element, a2.element\nFROM atom AS a1\nJOIN connected AS c ON a1.atom_id = c.atom_id\nJOIN bond AS b ON c.bond_id = b.bond_id\nJOIN atom AS a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_id = 'TR001_10_11'\n\n\t----- bird -----\ttoxicology",
    "286": "\nSELECT CAST(COUNT(DISTINCT CASE WHEN bond_type = 'triple-bond' THEN molecule_id END) AS FLOAT) * 100 / COUNT(DISTINCT molecule_id) AS percentage_triple_bonded_molecules\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\n\n\t----- bird -----\ttoxicology",
    "287": "\nSELECT CAST(COUNT(CASE WHEN b.bond_type = 'double' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'TR047' \n\t----- bird -----\ttoxicology",
    "288": "\nSELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR001_1'\n\n\t----- bird -----\ttoxicology",
    "289": "\nSELECT m.label, a.element, b.bond_type\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = 'TR151'\n\n\t----- bird -----\ttoxicology",
    "290": "\nSELECT DISTINCT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR151'\nAND EXISTS (\n    SELECT 1 FROM connected c WHERE (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id)\n);\n\n\t----- bird -----\ttoxicology",
    "291": "\nSELECT COUNT(molecule_id) FROM molecule WHERE label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "292": "\nSELECT a.atom_id, a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id BETWEEN 'TR010' AND 'TR050'\nAND a.element = 'carbon';\n\n\t----- bird -----\ttoxicology",
    "293": "\nSELECT COUNT(DISTINCT a.atom_id) \nFROM atom AS a\nJOIN molecule AS m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'carcinogenic compounds'\n\n\t----- bird -----\ttoxicology",
    "294": "\nSELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = 'double'\nAND EXISTS (\n    SELECT 1\n    FROM atom a\n    WHERE a.atom_id IN (c.atom_id, c.atom_id2)\n    AND a.molecule_id IN (\n        SELECT m.molecule_id\n        FROM molecule m\n        WHERE m.label LIKE '%carcinogenic%'\n    )\n)\n\t----- bird -----\ttoxicology",
    "295": "\nSELECT COUNT(a.atom_id) \nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'hydrogen' AND m.label = 'carcinogenic compound'\n\n\t----- bird -----\ttoxicology",
    "296": "\nSELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id IN (\n    SELECT atom_id FROM atom WHERE element = 'TR00_1'\n)\nJOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 IN (\n    SELECT atom_id FROM atom WHERE element = 'TR00_1'\n)\nWHERE b.bond_type = 'TR00_1_2';\n\n\t----- bird -----\ttoxicology",
    "297": "\nSELECT atom_id, element FROM atom WHERE element = 'C' AND molecule_id NOT IN (SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic%')\n\n\t----- bird -----\ttoxicology",
    "298": "\nWITH carcinogenic_molecules AS (\n    SELECT DISTINCT m.molecule_id\n    FROM molecule m\n    JOIN atom a ON m.molecule_id = a.molecule_id\n    WHERE a.element = 'hydrogen'\n),\ntotal_carcinogenic_molecules AS (\n    SELECT COUNT(DISTINCT m.molecule_id) AS total_count\n    FROM molecule m\n    JOIN atom a ON m.molecule_id = a.molecule_id\n)\nSELECT \n    (SELECT COUNT(*) FROM carcinogenic_molecules) * 100.0 / \n    (SELECT total_count FROM total_carcinogenic_molecules) AS percentage\n\n\t----- bird -----\ttoxicology",
    "299": "\nSELECT m.label, a.element, b.bond_type\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = 'TR124'\n\n\t----- bird -----\ttoxicology",
    "300": "\nSELECT a.atom_id, a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR186'\n\n\t----- bird -----\ttoxicology",
    "301": "\nSELECT T2.bond_type FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'TR007_4_19'\n\n\t----- bird -----\ttoxicology",
    "302": "\nSELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.bond_id = 'TR001_2_4'\n\n\t----- bird -----\ttoxicology",
    "303": "\nSELECT COUNT(b.bond_id) AS double_bonds_count, m.carcinogenic \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nJOIN connected c1 ON b.bond_id = c1.bond_id \nJOIN connected c2 ON b.bond_id = c2.bond_id \nJOIN atom a1 ON c1.atom_id = a1.atom_id \nJOIN atom a2 ON c2.atom_id2 = a2.atom_id \nWHERE m.label = 'TR006' AND b.bond_type = 'DOUBLE';\n\n\t----- bird -----\ttoxicology",
    "304": "\nSELECT m.molecule_id, a.element \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label LIKE '%carcinogenic%'\nGROUP BY m.molecule_id, a.element\nORDER BY m.molecule_id\n\n\t----- bird -----\ttoxicology",
    "305": "\nSELECT b.bond_id, a1.element AS atom1_element, a2.element AS atom2_element\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'single';\n\n\t----- bird -----\ttoxicology",
    "306": "\nSELECT m.molecule_id, STRING_AGG(a.element, ', ') AS elements\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a ON c1.atom_id = a.atom_id AND a.molecule_id = m.molecule_id\nWHERE b.bond_type = 'triple'\nGROUP BY m.molecule_id;\n\n\t----- bird -----\ttoxicology",
    "307": "\nSELECT a1.element, a2.element \nFROM atom AS a1\nJOIN connected AS c ON a1.atom_id = c.atom_id\nJOIN connected AS c2 ON a1.atom_id = c2.atom_id\nJOIN bond AS b ON c.bond_id = b.bond_id AND c2.bond_id = b.bond_id\nJOIN atom AS a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_id = 'TR000_2_3'\n\n\t----- bird -----\ttoxicology",
    "308": "\nSELECT COUNT(DISTINCT b.bond_id) AS bond_count\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id AND a1.element = 'Cl'\nJOIN atom a2 ON c.atom_id2 = a2.atom_id AND a2.element = 'Cl';\n\n\t----- bird -----\ttoxicology",
    "309": "\nSELECT a.atom_id, COUNT(DISTINCT b.bond_type) AS bond_types_count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = 'TR346'\nGROUP BY a.atom_id\n\n\t----- bird -----\ttoxicology",
    "310": "\nSELECT COUNT(DISTINCT m.molecule_id) AS total_molecules_with_double_bond,\n       SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_compounds\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = 'double';\n\n\t----- bird -----\ttoxicology",
    "311": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nLEFT JOIN bond b ON m.molecule_id = b.molecule_id\nWHERE a.element != 'S' AND b.bond_type NOT IN ('double')\nGROUP BY m.molecule_id\nHAVING COUNT(CASE WHEN a.element = 'S' THEN 1 END) = 0 AND COUNT(b.bond_id) = 0 OR MAX(IIF(b.bond_type = 'double', 1, 0)) = 0\n\n\t----- bird -----\ttoxicology",
    "312": "\nSELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_2_4'\n\n\t----- bird -----\ttoxicology",
    "313": "\nSELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005'\n\n\t----- bird -----\ttoxicology",
    "314": "\nSELECT COUNT(*) AS single_bond_count\nFROM bond\nWHERE bond_type = 'single';\n\n\t----- bird -----\ttoxicology",
    "315": "\nSELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'cl'\nAND m.label LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "316": "\nSELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'c' AND m.molecule_id NOT IN (\n    SELECT m2.molecule_id\n    FROM molecule m2\n    JOIN carcinogenic c ON m2.molecule_id = c.molecule_id\n)\n\n\t----- bird -----\ttoxicology",
    "317": "\nWITH carcinogenic_molecules AS (\n    SELECT molecule_id FROM molecule WHERE label = 'carcinogenic'\n),\nchlorine_atoms AS (\n    SELECT DISTINCT atom_id, molecule_id FROM atom WHERE element = 'Cl'\n)\nSELECT \n    (COUNT(DISTINCT c.atom_id) * 100.0 / COUNT(DISTINCT cm.molecule_id)) AS percentage\nFROM \n    carcinogenic_molecules cm\nJOIN \n    chlorine_atoms c ON cm.molecule_id = c.molecule_id;\n\n\t----- bird -----\ttoxicology",
    "318": "\nSELECT DISTINCT T1.molecule_id FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_1_7'\n\n\t----- bird -----\ttoxicology",
    "319": "\nSELECT COUNT(DISTINCT T1.element) AS element_count\nFROM atom AS T1\nJOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2\nWHERE T2.bond_id = 'TR001_3_4'\n\n\t----- bird -----\ttoxicology",
    "320": "\nSELECT bond.bond_type FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE (connected.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2') OR (connected.atom_id = 'TR000_2' AND connected.atom_id2 = 'TR000_1')\n\n\t----- bird -----\ttoxicology",
    "321": "\nSELECT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a1 ON m.molecule_id = a1.molecule_id\nJOIN atom a2 ON m.molecule_id = a2.molecule_id\nJOIN connected c ON (a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2) OR (a2.atom_id = c.atom_id AND a1.atom_id = c.atom_id2)\nWHERE (a1.atom_id = 'TR000_2' AND a2.atom_id = 'TR000_4') OR (a1.atom_id = 'TR000_4' AND a2.atom_id = 'TR000_2')\n\n\t----- bird -----\ttoxicology",
    "322": "\nSELECT element FROM atom WHERE atom_id = 'TR000_1'\n\n\t----- bird -----\ttoxicology",
    "323": "\nSELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS is_carcinogenic\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = 'TR000'\nAND a.element IN (SELECT element FROM carcinogenic_elements)\n\n\t----- bird -----\ttoxicology",
    "324": "\nSELECT CAST(COUNT(DISTINCT CASE WHEN bond_type = 'single' THEN atom_id END) AS FLOAT) / COUNT(DISTINCT atom_id) * 100 AS single_bond_percentage\nFROM (\n    SELECT a.atom_id, b.bond_type\n    FROM atom a\n    JOIN connected c ON a.atom_id = c.atom_id\n    JOIN bond b ON b.bond_id = c.bond_id\n    UNION ALL\n    SELECT a2.atom_id, b.bond_type\n    FROM atom a2\n    JOIN connected c2 ON a2.atom_id = c2.atom_id2\n    JOIN bond b ON b.bond_id = c2.bond_id\n) AS subquery\n\n\t----- bird -----\ttoxicology",
    "325": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label LIKE '%carcinogenic%' AND a.element = 'Nitrogen'\n\n\t----- bird -----\ttoxicology",
    "326": "\nSELECT DISTINCT m.molecule_id, m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'Sulphur' AND b.bond_type = 'double'\n\n\t----- bird -----\ttoxicology",
    "327": "\nSELECT m.molecule_id, COUNT(a.atom_id) AS atom_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label != 'carcinogenic'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5\n\n\t----- bird -----\ttoxicology",
    "328": "\nSELECT DISTINCT a1.element\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a1.molecule_id = m.molecule_id\nWHERE b.bond_type = 'double' AND m.label = 'TR024'\n\n\t----- bird -----\ttoxicology",
    "329": "\nSELECT m.molecule_id, m.label, COUNT(a.atom_id) AS atom_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label LIKE '%carcinogenic%'\nGROUP BY m.molecule_id, m.label\nORDER BY atom_count DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "330": "\nSELECT CAST(COUNT(DISTINCT m.molecule_id) AS FLOAT) / (SELECT COUNT(*) FROM molecule) * 100\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id AND c.atom_id IN (\n    SELECT atom_id \n    FROM atom \n    WHERE element = 'H'\n)\nJOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 IN (\n    SELECT atom_id \n    FROM atom \n    WHERE element = 'H'\n)\nWHERE m.label LIKE '%carcinogenic%' AND b.bond_type = 'triple';\n\n\t----- bird -----\ttoxicology",
    "331": "\nSELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "332": "\nSELECT COUNT(DISTINCT m.molecule_id) AS single_bond_molecules_count\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE m.label BETWEEN 'TR004' AND 'TR010'\nAND b.bond_type = 'SINGLE';\n\n\t----- bird -----\ttoxicology",
    "333": "\nSELECT COUNT(*) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR008' AND a.element = 'C'\n\n\t----- bird -----\ttoxicology",
    "334": "\nSELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id NOT IN (SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic%')\n\n\t----- bird -----\ttoxicology",
    "335": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'double' AND (a1.element = 'O' OR a2.element = 'O')\n\n\t----- bird -----\ttoxicology",
    "336": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'triple' AND m.label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "337": "\nSELECT a.element, b.bond_type \nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.molecule_id = 'TR016'\nUNION\nSELECT a2.element, b.bond_type \nFROM atom a2\nJOIN connected c2 ON a2.atom_id = c2.atom_id2\nJOIN bond b2 ON c2.bond_id = b2.bond_id\nWHERE a2.molecule_id = 'TR016'\n\n\t----- bird -----\ttoxicology",
    "338": "\nSELECT a.atom_id\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE b.bond_type = 'double' AND a.element = 'C' AND m.label = 'TR012'\n\n\t----- bird -----\ttoxicology",
    "339": "\nSELECT DISTINCT a1.atom_id\nFROM atom a1\nJOIN molecule m ON a1.molecule_id = m.molecule_id\nJOIN connected c ON a1.atom_id = c.atom_id OR a1.atom_id = c.atom_id2\nWHERE m.label LIKE '%carcinogenic%' AND a1.element = 'O'\n\n\t----- bird -----\ttoxicology",
    "340": "\nSELECT name, foilStatus \nFROM cards \nWHERE hasFoil = 1 AND rarity IN ('Mythic Rare', 'Rare') AND convertedManaCost > 4\nORDER BY convertedManaCost DESC\nLIMIT 10;\n\n\t----- bird -----\tcard_games",
    "341": "\nSELECT name, borderColor FROM cards WHERE availability = 'available' AND hasFoil = 0 AND borderColor = 'borderless'\n\n\t----- bird -----\tcard_games",
    "342": "\nSELECT name, faceConvertedManaCost AS cost FROM cards WHERE faceConvertedManaCost > convertedManaCost ORDER BY cost DESC\n\n\t----- bird -----\tcard_games",
    "343": "\nSELECT name FROM cards WHERE frameVersion = '2015' AND edhrecRank < 100\n\n\t----- bird -----\tcard_games",
    "344": "\nSELECT c.name, l.format, l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.rarity = 'Mythic' AND l.format = 'Gladiator' AND l.status = 'Banned';\n\n\t----- bird -----\tcard_games",
    "345": "\nSELECT l.uuid, l.status AS vintage_legality\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types LIKE '%Artifact%' AND c.layout = 'normal' AND l.format = 'Vintage'\n\n\t----- bird -----\tcard_games",
    "346": "\nSELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.power IS NULL AND l.format = 'commander' AND l.status = 'legal'\n\n\t----- bird -----\tcard_games",
    "347": "\nSELECT c.name, r.text, CASE WHEN c.flavorText IS NULL THEN 'Missing' ELSE 'Present' END AS flavorStatus, \nCASE WHEN c.flavorName IS NULL THEN 'Missing' ELSE 'Present' END AS flavorNameStatus, \nCASE WHEN c.frameVersion IS NULL THEN 'Missing' ELSE 'Present' END AS frameVersionStatus\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniel'\n\n\t----- bird -----\tcard_games",
    "348": "\nSELECT r.id, r.date, r.text \nFROM rulings AS r\nJOIN cards AS c ON r.uuid = c.uuid\nWHERE c.name = 'Sublime Epiphany' AND c.number = '74s'\n\n\t----- bird -----\tcard_games",
    "349": "\nSELECT c.name, c.artist, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'COMMANDER' AND l.status = 'Legal'\nORDER BY (\n    SELECT COUNT(*)\n    FROM rulings r\n    WHERE r.uuid = c.uuid\n) DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "350": "\nSELECT DISTINCT T1.language FROM foreign_data AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Annul' AND T2.number = 29;\n\n\t----- bird -----\tcard_games",
    "351": "\nSELECT c.name FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE fd.language = 'Japanese'\n\n\t----- bird -----\tcard_games",
    "352": "\nSELECT CAST(COUNT(f.id) AS FLOAT) / COUNT(c.uuid) * 100 AS chinese_simplified_percentage\nFROM cards c\nLEFT JOIN foreign_data f ON c.uuid = f.uuid AND f.language = 'Chinese Simplified'\n\n\t----- bird -----\tcard_games",
    "353": "\nSELECT s.name, COUNT(c.id) AS total_cards\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nJOIN cards c ON s.code = c.setCode\nWHERE st.language = 'Italian'\nGROUP BY s.name\n\n\t----- bird -----\tcard_games",
    "354": "\nSELECT COUNT(DISTINCT T1.type) \nFROM cards AS T1\nJOIN foreign_data AS T2 ON T1.uuid = T2.uuid\nWHERE T1.artist = 'Aaron Boyd' AND T2.language = 'en'\n\n\t----- bird -----\tcard_games",
    "355": "\nSELECT keywords FROM cards WHERE name = 'Angel of Mercy'\n\n\t----- bird -----\tcard_games",
    "356": "\nSELECT COUNT(*) FROM cards WHERE power = '\u221e'\n\n\t----- bird -----\tcard_games",
    "357": "\nSELECT promoTypes FROM cards WHERE name = 'Duress'\n\n\t----- bird -----\tcard_games",
    "358": "\nSELECT borderColor FROM cards WHERE name = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "359": "\nSELECT originalType FROM cards WHERE name = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "360": "\nSELECT DISTINCT T3.language FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Angel of Mercy'\n\n\t----- bird -----\tcard_games",
    "361": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'restricted' AND c.text IS NOT NULL;\n\n\t----- bird -----\tcard_games",
    "362": "\nSELECT r.text AS ruling_description\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nWHERE c.name = 'Condemn'\nORDER BY r.date DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "363": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Restricted' AND c.isStarter = 1\n\n\t----- bird -----\tcard_games",
    "364": "\nSELECT l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.name = 'Cloudchaser Eagle'\n\n\t----- bird -----\tcard_games",
    "365": "\nSELECT type FROM cards WHERE name = 'Benalish Knight'\n\n\t----- bird -----\tcard_games",
    "366": "\nSELECT r.text AS rule\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nWHERE c.name = 'Benalish Knight'\nORDER BY r.date ASC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "367": "\nSELECT DISTINCT c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'Phyrexian'\nGROUP BY c.artist\n\n\t----- bird -----\tcard_games",
    "368": "\nSELECT CAST(COUNT(CASE WHEN borderColor = 'borderless' THEN id ELSE NULL END) AS FLOAT) * 100 / COUNT(*) AS borderless_percentage\nFROM cards\n\n\t----- bird -----\tcard_games",
    "369": "\nSELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1\n\n\t----- bird -----\tcard_games",
    "370": "\nSELECT COUNT(*) \nFROM cards \nJOIN foreign_data ON cards.uuid = foreign_data.uuid \nWHERE borderColor = 'borderless' AND foreign_data.language = 'Russian'\n\n\t----- bird -----\tcard_games",
    "371": "\nSELECT CAST(COUNT(CASE WHEN T2.language = 'French' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1\n\n\t----- bird -----\tcard_games",
    "372": "\nSELECT COUNT(*) FROM cards WHERE toughness = 99\n\n\t----- bird -----\tcard_games",
    "373": "\nSELECT name FROM cards WHERE artist = 'Aaron Boyd'\n\n\t----- bird -----\tcard_games",
    "374": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\n\n\t----- bird -----\tcard_games",
    "375": "\nSELECT id FROM cards WHERE convertedManaCost = 0\n\n\t----- bird -----\tcard_games",
    "376": "\nSELECT DISTINCT layout FROM cards WHERE keywords LIKE '%flying%'\n\n\t----- bird -----\tcard_games",
    "377": "\nSELECT COUNT(*)\nFROM cards\nWHERE originalType = 'Summon - Angel'\nAND subtypes NOT LIKE '%Angel%'\n\n\t----- bird -----\tcard_games",
    "378": "\nSELECT id FROM cards WHERE hasFoil = 1 AND (hasNonFoil = 1 OR text LIKE '%with non-foil%' OR flavorText LIKE '%with non-foil%')\n\n\t----- bird -----\tcard_games",
    "379": "\nSELECT id FROM cards WHERE duelDeck = 'Duel Deck: A'\n\n\t----- bird -----\tcard_games",
    "380": "\nSELECT edhrecRank FROM cards WHERE frameVersion = '2015'\n\n\t----- bird -----\tcard_games",
    "381": "\nSELECT DISTINCT c.artist\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE fd.language = 'Chinese Simplified'\nGROUP BY c.artist\n\n\t----- bird -----\tcard_games",
    "382": "\nSELECT c.name, c.flavorText, f.language \nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.availability = 'paper' AND f.language = 'Japanese'\nGROUP BY c.name, c.flavorText, f.language\nHAVING COUNT(DISTINCT c.uuid) = 1\n\n\t----- bird -----\tcard_games",
    "383": "\nSELECT COUNT(*) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned' AND c.borderColor = 'white'\n\n\t----- bird -----\tcard_games",
    "384": "\nSELECT c.uuid, f.language\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE l.format = 'Legacy'\n\n\t----- bird -----\tcard_games",
    "385": "\nSELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality')\n\n\t----- bird -----\tcard_games",
    "386": "\nSELECT COUNT(c.id) AS card_count, l.status \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.frameVersion = 'future'\nGROUP BY l.status\n\n\t----- bird -----\tcard_games",
    "387": "\nSELECT c.name, c.colors FROM cards AS c JOIN sets AS s ON c.setCode = s.code WHERE s.code = 'OGW'\n\n\t----- bird -----\tcard_games",
    "388": "\nSELECT c.name, st.translation, st.language\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE c.convertedManaCost = 5 AND l.format = '10E'\nGROUP BY c.name, st.translation, st.language\n\n\t----- bird -----\tcard_games",
    "389": "\nSELECT c.name, r.date\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.originalType = 'Creature - Elf'\n\n\t----- bird -----\tcard_games",
    "390": "\nSELECT colors, (SELECT format FROM legalities WHERE legalities.uuid = cards.uuid) AS format\nFROM cards\nWHERE id BETWEEN 1 AND 20;\n\n\t----- bird -----\tcard_games",
    "391": "\nSELECT c.name, f.language\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.colors LIKE '%B%' AND c.type LIKE '%Artifact%'\nAND EXISTS (\n    SELECT 1 FROM set_translations st WHERE st.setCode = c.setCode\n)\n\n\t----- bird -----\tcard_games",
    "392": "\nSELECT c.name, r.date\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.rarity = 'uncommon'\nORDER BY r.date ASC\nLIMIT 3\n\n\t----- bird -----\tcard_games",
    "393": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.artist = 'John Avon' AND c.cardKingdomFoilId IS NOT NULL AND l.status = 'Not Allowed'\nGROUP BY c.id\n\n\t----- bird -----\tcard_games",
    "394": "\nSELECT COUNT(*) \nFROM cards \nWHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "395": "\nSELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability LIKE '%mtgo%' AND hand = '-1'\n\n\t----- bird -----\tcard_games",
    "396": "\nSELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability LIKE '%paper%' AND hasContentWarning = 1\n\n\t----- bird -----\tcard_games",
    "397": "\nSELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability IN ('paper', 'mtgo')\n\n\t----- bird -----\tcard_games",
    "398": "\nSELECT SUM(CASE WHEN manaCost IS NULL THEN 0 ELSE LENGTH(manaCost) END) AS totalManaCost\nFROM cards\nWHERE artist = 'Rob Alexander';\n\n\t----- bird -----\tcard_games",
    "399": "\nSELECT DISTINCT type FROM cards WHERE mtgArenaId IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "400": "\nSELECT DISTINCT c.setCode \nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE st.language = 'Spanish';\n\n\t----- bird -----\tcard_games",
    "401": "\nSELECT CAST(COUNT(CASE WHEN frameEffects LIKE '%legendary%' AND leadershipSkills = '+3' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE frameVersion = '2015'\n\n\t----- bird -----\tcard_games",
    "402": "\nSELECT CAST(SUM(CASE WHEN c.isStorySpotlight = 1 AND c.text IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.id) AS percentage, c.id\nFROM cards c\nWHERE c.isStorySpotlight = 1\n\n\t----- bird -----\tcard_games",
    "403": "\nSELECT c.name, COUNT(f.uuid) * 100.0 / (SELECT COUNT(*) FROM cards) AS percentage_spanish\nFROM cards c\nLEFT JOIN foreign_data f ON c.uuid = f.uuid AND f.language = 'Spanish'\nGROUP BY c.id\nORDER BY percentage_spanish DESC\n\n\t----- bird -----\tcard_games",
    "404": "\nSELECT T2.language FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309\n\n\t----- bird -----\tcard_games",
    "405": "\nSELECT COUNT(st.id) \nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.block = 'Commander' AND st.language = 'Portuguese (Brasil)'\n\n\t----- bird -----\tcard_games",
    "406": "\nSELECT c.id, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types LIKE '%Creature%' AND l.status IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "407": "\nSELECT DISTINCT T2.translation\nFROM cards AS T1\nJOIN set_translations AS T2 ON T1.setCode = T2.setCode\nWHERE T2.language = 'German' AND T1.type IS NOT NULL\nGROUP BY T2.translation\n\n\t----- bird -----\tcard_games",
    "408": "\nSELECT COUNT(*)\nFROM cards\nWHERE power IS NULL AND text LIKE '%triggered ability%'\n\n\t----- bird -----\tcard_games",
    "409": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN rulings r ON c.uuid = r.uuid\nWHERE l.format IN ('Vintage', 'Legacy', 'Extended', 'Standard') -- Assuming pre-modern formats are Vintage, Legacy, Extended, and Standard\nAND r.text = 'This is a triggered mana ability'\nAND c.layout != 'modal_dfc' AND c.layout != 'double_faced' AND c.layout != 'transform' -- Cards with multiple faces usually have these layouts\n\n\t----- bird -----\tcard_games",
    "410": "\nSELECT c.id FROM cards AS c JOIN legalities AS l ON c.uuid = l.uuid WHERE c.artist = 'Erica Yang' AND l.format = 'Pauper' AND l.status = 'Legal' AND c.availability = 'paper'\n\n\t----- bird -----\tcard_games",
    "411": "\nSELECT artist FROM cards WHERE flavorText = \"Das perfekte Gegenmittel zu einer dichten Formation\"\n\n\t----- bird -----\tcard_games",
    "412": "\nSELECT T2.name FROM foreign_data AS T2 JOIN cards AS T1 ON T2.uuid = T1.uuid WHERE T2.language = 'French' AND T1.artist = 'Matthew D. Wilson' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.type LIKE '%Creature%'\n\n\t----- bird -----\tcard_games",
    "413": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.rarity IS NOT NULL AND r.date = '2009-10-01'\n\n\t----- bird -----\tcard_games",
    "414": "\nSELECT T2.language FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ravnica' AND T1.baseSetSize = 180\n\n\t----- bird -----\tcard_games",
    "415": "\nSELECT CAST(SUM(CASE WHEN hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.id) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'commander' AND l.status = 'legal'\n\n\t----- bird -----\tcard_games",
    "416": "\nSELECT \n    (CAST(SUM(CASE WHEN T1.language = 'French' AND (T2.power IS NULL OR T2.power = '*') THEN 1 ELSE 0 END) AS REAL) / COUNT(CASE WHEN T2.power IS NULL OR T2.power = '*' THEN 1 ELSE NULL END)) * 100\nFROM foreign_data AS T1\nJOIN cards AS T2 ON T1.uuid = T2.uuid\n\n\t----- bird -----\tcard_games",
    "417": "\nSELECT CAST(COUNT(CASE WHEN translation = 'expansion' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM set_translations WHERE language = 'Japanese'\n\n\t----- bird -----\tcard_games",
    "418": "\nSELECT printings FROM cards WHERE artist = 'Daren Bader'\n\n\t----- bird -----\tcard_games",
    "419": "\nSELECT COUNT(*) FROM cards WHERE edhrecRank > 12000 AND borderColor = 'colorless'\n\n\t----- bird -----\tcard_games",
    "420": "\nSELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\n\n\t----- bird -----\tcard_games",
    "421": "\nSELECT c.name, c.power, c.types \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.promoTypes IS NOT NULL AND l.status = 'Legal' AND l.format = 'Arena League'\nAND c.power NOT IN (SELECT power FROM cards WHERE promoTypes IS NOT NULL)\nORDER BY c.name ASC\nLIMIT 3\n\n\t----- bird -----\tcard_games",
    "422": "\nSELECT T2.language FROM foreign_data AS T2 JOIN cards AS T1 ON T2.uuid = T1.uuid WHERE T2.multiverseid = 149934\n\n\t----- bird -----\tcard_games",
    "423": "\nSELECT c.cardKingdomFoilId, c.cardKingdomId \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Legal'\nORDER BY c.cardKingdomFoilId ASC\nLIMIT 3\n\n\t----- bird -----\tcard_games",
    "424": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM cards) \nFROM cards \nWHERE layout != 'normal'\n\n\t----- bird -----\tcard_games",
    "425": "\nSELECT number FROM cards WHERE subtypes = 'Angel/Wizard' AND layout != 'modal_dfc'\n\n\t----- bird -----\tcard_games",
    "426": "\nSELECT s.name, s.code\nFROM sets s\nWHERE s.isOnlineOnly = 0 AND s.releaseDate <= CURRENT_DATE\nGROUP BY s.name, s.code\nORDER BY s.name ASC\nLIMIT 3;\n\n\t----- bird -----\tcard_games",
    "427": "\nSELECT T2.language FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.code = 'ARC'\n\n\t----- bird -----\tcard_games",
    "428": "\nSELECT s.name, st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.id = 5;\n\n\t----- bird -----\tcard_games",
    "429": "\nSELECT T1.language, T2.type FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.id = 206;\n\n\t----- bird -----\tcard_games",
    "430": "\nSELECT s.id, s.name \nFROM sets s\nJOIN set_translations st ON s.code = st.setCode AND st.language = 'Italian'\nWHERE s.block = 'Shadowmoor'\nGROUP BY s.id, s.name\nORDER BY s.name ASC\nLIMIT 2\n\n\t----- bird -----\tcard_games",
    "431": "\nSELECT s.id, s.name FROM sets s JOIN cards c ON s.code = c.setCode WHERE s.isOnlineOnly = 1 AND c.watermark IS NOT NULL AND c.watermark != '' AND c.hasFoil = 1\n\n\t----- bird -----\tcard_games",
    "432": "\nSELECT s.code, COUNT(c.id) AS card_count\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nJOIN cards c ON s.code = c.setCode\nWHERE st.language = 'Russian'\nGROUP BY s.code\nORDER BY card_count DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "433": "\nSELECT CAST(COUNT(f.id) AS FLOAT) * 100 / (SELECT COUNT(*) FROM cards) AS percentage\nFROM foreign_data f\nJOIN sets s ON f.setCode = s.code\nWHERE f.language = 'Chinese Simplified' AND s.isOnlineOnly = 1\n\n\t----- bird -----\tcard_games",
    "434": "\nSELECT COUNT(*) FROM sets WHERE isForeignOnly = 1 AND isOnlineOnly = 0\n\n\t----- bird -----\tcard_games",
    "435": "\nSELECT id FROM cards WHERE borderColor = 'black'\n\n\t----- bird -----\tcard_games",
    "436": "\nSELECT id FROM cards WHERE frameEffects = 'extendedart'\n\n\t----- bird -----\tcard_games",
    "437": "\nSELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\n\n\t----- bird -----\tcard_games",
    "438": "\nSELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE id = 174)\n\n\t----- bird -----\tcard_games",
    "439": "\nSELECT translation FROM set_translations WHERE setCode = 'ALL'\n\n\t----- bird -----\tcard_games",
    "440": "\nSELECT T2.language FROM foreign_data AS T1 JOIN sets AS S ON T1.setCode = S.code JOIN set_translations AS ST ON S.code = ST.setCode JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar' AND ST.translation = 'A Pedra Fellwar'\n\n\t----- bird -----\tcard_games",
    "441": "\nSELECT code FROM sets WHERE releaseDate = '2007-07-13'\n\n\t----- bird -----\tcard_games",
    "442": "\nSELECT s.baseSetSize, s.code \nFROM sets s\nJOIN (\n    SELECT setCode \n    FROM sets \n    WHERE block IN ('Masques', 'Mirage')\n) AS subquery\nON s.setCode = subquery.setCode\n\n\t----- bird -----\tcard_games",
    "443": "\nSELECT code FROM sets WHERE type = 'expansion'\n\n\t----- bird -----\tcard_games",
    "444": "\nSELECT foreign_data.name, cards.type \nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE cards.watermark = 'boros'\n\n\t----- bird -----\tcard_games",
    "445": "\nSELECT T1.language, T1.flavorText, T2.type \nFROM foreign_data AS T1 \nJOIN cards AS T2 ON T1.uuid = T2.uuid \nWHERE T2.watermark LIKE '%colorpie%'\n\n\t----- bird -----\tcard_games",
    "446": "\nSELECT CAST(COUNT(CASE WHEN T1.convertedManaCost = 10 THEN 1 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Abyssal Horror'\n\n\t----- bird -----\tcard_games",
    "447": "\nSELECT code FROM sets WHERE type = 'expansion commander'\n\n\t----- bird -----\tcard_games",
    "448": "\nSELECT foreign_data.name, cards.type \nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE cards.watermark = 'abzan';\n\n\t----- bird -----\tcard_games",
    "449": "\nSELECT T1.language, T2.type FROM foreign_data AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'azorius'\n\n\t----- bird -----\tcard_games",
    "450": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.artist = 'Aaron Miller' AND l.status = 'Legal'\nGROUP BY c.id\nHAVING COUNT(l.format) > 10 -- Assuming \"incredibly powerful\" means the card is considered legal in more than 10 formats as an arbitrary threshold for power level.\n\n\t----- bird -----\tcard_games",
    "451": "\nSELECT COUNT(*) FROM cards WHERE hand > 0 AND availability = 'paper'\n\n\t----- bird -----\tcard_games",
    "452": "\nSELECT name FROM cards WHERE text IS NOT NULL AND text != ''\n\n\t----- bird -----\tcard_games",
    "453": "\nSELECT manaCost FROM cards WHERE name = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "454": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NULL\n\n\t----- bird -----\tcard_games",
    "455": "\nSELECT name FROM cards WHERE layout = 'modal_dfc' AND isPromo = 1\n\n\t----- bird -----\tcard_games",
    "456": "\nSELECT type FROM cards WHERE name = 'Molimo, Maro-Sorcerer'\n\n\t----- bird -----\tcard_games",
    "457": "\nSELECT DISTINCT c.purchaseUrls\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.promoTypes LIKE '%bundle%'\nAND l.status = 'legal'\nGROUP BY c.purchaseUrls\n\n\t----- bird -----\tcard_games",
    "458": "\nSELECT COUNT(DISTINCT artist) \nFROM cards \nWHERE borderColor = 'black' AND printings LIKE '%arena%' AND printings LIKE '%mtgo%'\n\n\t----- bird -----\tcard_games",
    "459": "\nSELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper')\n\n\t----- bird -----\tcard_games",
    "460": "\nSELECT artist FROM cards WHERE asciiName = 'Battra, Dark Destroyer' \n\t----- bird -----\tcard_games",
    "461": "\nSELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\n\n\t----- bird -----\tcard_games",
    "462": "\nSELECT T3.translation FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T3.language = 'Italian' AND T1.name = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "463": "\nSELECT COUNT(DISTINCT set_translations.id) \nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nJOIN sets ON legalities.format = sets.code\nJOIN set_translations ON sets.code = set_translations.setCode\nWHERE cards.name = 'Angel of Mercy'\n\n\t----- bird -----\tcard_games",
    "464": "\nSELECT c.name FROM cards AS c JOIN legalities AS l ON c.uuid = l.uuid JOIN sets AS s ON l.format = s.code WHERE s.name = 'Hauptset Zehnte Edition'\n\n\t----- bird -----\tcard_games",
    "465": "\nSELECT DISTINCT f.uuid, f.name, f.language \nFROM cards c \nJOIN foreign_data f ON c.uuid = f.uuid \nWHERE c.name = 'Ancestor\\'s Chosen' AND f.language = 'Korean'\n\n\t----- bird -----\tcard_games",
    "466": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Hauptset Zehnte Edition' AND c.artist = 'Adam Rex'\n\n\t----- bird -----\tcard_games",
    "467": "\nSELECT baseSetSize FROM sets WHERE name = 'Hauptset Zehnte Edition'\n\n\t----- bird -----\tcard_games",
    "468": "\nSELECT translation FROM set_translations WHERE language = 'Simplified Chinese' AND setCode = '8ED'\n\n\t----- bird -----\tcard_games",
    "469": "\nSELECT s.isOnlineOnly FROM sets s INNER JOIN cards c ON c.setCode = s.code WHERE c.name = 'Angel of Mercy'\n\n\t----- bird -----\tcard_games",
    "470": "\nSELECT s.releaseDate FROM sets s JOIN cards c ON c.setCode = s.code WHERE c.name = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "471": "\nSELECT T2.type FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.translation = 'Hauptset Zehnte Edition'\n\n\t----- bird -----\tcard_games",
    "472": "\nSELECT COUNT(DISTINCT s.id) \nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age' AND st.language = 'Italian'\n\n\t----- bird -----\tcard_games",
    "473": "\nSELECT DISTINCT c.availability\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Adarkar Valkyrie' AND l.format = 'paper' AND l.status = 'not_legal'\nUNION\nSELECT DISTINCT c.availability\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Adarkar Valkyrie' AND l.format = 'arena' AND l.status = 'not_implemented';\n\n\t----- bird -----\tcard_games",
    "474": "\nSELECT COUNT(DISTINCT c.setCode) \nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nJOIN sets s ON c.setCode = s.code\nWHERE st.language = 'Italian' AND s.baseSetSize < 10\n\n\t----- bird -----\tcard_games",
    "475": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.borderColor = 'black' AND s.name = 'Coldsnap'\n\n\t----- bird -----\tcard_games",
    "476": "\nSELECT c.name FROM cards AS c JOIN legalities AS l ON c.uuid = l.uuid JOIN sets AS s ON l.format = s.code WHERE s.name = 'Coldsnap' ORDER BY c.convertedManaCost DESC LIMIT 1\n\n\t----- bird -----\tcard_games",
    "477": "\nSELECT DISTINCT c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN sets s ON l.format = s.code\nWHERE s.name = 'Coldsnap' AND c.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\n\n\t----- bird -----\tcard_games",
    "478": "\nSELECT number, name FROM cards WHERE setCode = 'CSP' AND number = '4'\n\n\t----- bird -----\tcard_games",
    "479": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.convertedManaCost > 5 AND s.name = 'Coldsnap' AND c.power IS NULL;\n\n\t----- bird -----\tcard_games",
    "480": "\nSELECT t2.flavortext FROM sets AS t1 JOIN foreign_data AS t2 ON t1.code = t2.setcode WHERE t2.name = 'Ancestor\\'s Chosen' AND t2.language = 'Italian'\n\n\t----- bird -----\tcard_games",
    "481": "\nSELECT DISTINCT T2.language FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.flavorText IS NOT NULL;\n\n\t----- bird -----\tcard_games",
    "482": "\nSELECT T2.translation FROM foreign_data AS T1 JOIN set_translations AS T2 ON T1.uuid = T2.setCode WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'German'\n\n\t----- bird -----\tcard_games",
    "483": "\nSELECT r.text AS italian_ruling, c.name AS card_name\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nLEFT JOIN set_translations st ON s.code = st.setCode AND st.language = 'Italian'\nJOIN (\n    SELECT uuid\n    FROM cards\n    WHERE setCode = 'CSP'\n) AS cs_cards ON c.uuid = cs_cards.uuid\nWHERE r.text LIKE '%Translation%' AND st.translation IS NOT NULL\nORDER BY c.name;\n\n\t----- bird -----\tcard_games",
    "484": "\nSELECT ft.translation AS italian_name, c.name AS english_name, c.convertedManaCost\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN sets s ON l.format = s.code\nJOIN set_translations st ON s.code = st.setCode AND st.language = 'Italian'\nJOIN foreign_data fd ON c.uuid = fd.uuid AND fd.language = 'Italian'\nWHERE s.name = 'Coldsnap' AND l.status = 'legal'\nORDER BY c.convertedManaCost DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "485": "\nSELECT r.date FROM rulings AS r JOIN cards AS c ON r.uuid = c.uuid WHERE c.name = 'Reminisce'\n\n\t----- bird -----\tcard_games",
    "486": "\nSELECT CAST(COUNT(CASE WHEN T1.convertedManaCost = 7 THEN 1 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.setCode = 'CSP'\n\n\t----- bird -----\tcard_games",
    "487": "\nSELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId = T1.cardKingdomId AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage_powerful_cards\nFROM cards AS T1\nJOIN sets AS T2 ON T1.setCode = T2.code\nWHERE T2.name = 'Coldsnap'\n\n\t----- bird -----\tcard_games",
    "488": "\nSELECT code FROM sets WHERE releaseDate = '2017-07-14'\n\n\t----- bird -----\tcard_games",
    "489": "\nSELECT keyruneCode FROM sets WHERE code = 'PKHC'\n\n\t----- bird -----\tcard_games",
    "490": "\nSELECT mcmId FROM sets WHERE code = 'SS2'\n\n\t----- bird -----\tcard_games",
    "491": "\nSELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'\n\n\t----- bird -----\tcard_games",
    "492": "\nSELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'From the Vault: Lore' AND T2.language = 'en'\n\n\t----- bird -----\tcard_games",
    "493": "\nSELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\n\n\t----- bird -----\tcard_games",
    "494": "\nSELECT c.name, r.text \nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Jim Pavelec'\n\n\t----- bird -----\tcard_games",
    "495": "\nSELECT s.releaseDate FROM sets s JOIN cards c ON c.setCode = s.code WHERE c.name = 'Evacuation'\n\n\t----- bird -----\tcard_games",
    "496": "\nSELECT COUNT(*) FROM cards AS c JOIN sets AS s ON c.setCode = s.code WHERE s.name = 'Rinascita di Alara'\n\n\t----- bird -----\tcard_games",
    "497": "\nSELECT s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Huiti\u00e8me \u00e9dition'\n\n\t----- bird -----\tcard_games",
    "498": "\nSELECT st.translation FROM set_translations st\nJOIN sets s ON st.setcode = s.code\nWHERE s.code = (SELECT c.setCode FROM cards c WHERE c.name = 'Tendo Ice Bridge')\nAND st.language = 'French'\n\n\t----- bird -----\tcard_games",
    "499": "\nSELECT COUNT(*)\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.name = 'Salvat 2011'\n\n\t----- bird -----\tcard_games",
    "500": "\nSELECT T3.translation FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Fellwar Stone' AND T3.language = 'Japanese'\n\n\t----- bird -----\tcard_games",
    "501": "\nSELECT c.name, MAX(c.convertedManaCost) AS maxConvertedManaCost\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN sets s ON l.setCode = s.code\nWHERE s.name = 'Journey into Nyx Hero''s Path'\nGROUP BY c.name\nORDER BY maxConvertedManaCost DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "502": "\nSELECT releaseDate FROM sets WHERE name = 'Ola de fr\u00edo'\n\n\t----- bird -----\tcard_games",
    "503": "\nSELECT s.type FROM sets s JOIN cards c ON c.setCode = s.code WHERE c.name = 'Samite Pilgrim'\n\n\t----- bird -----\tcard_games",
    "504": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.convertedManaCost = 3 AND s.name = 'World Championship Decks 2004'\n\n\t----- bird -----\tcard_games",
    "505": "\nSELECT translation FROM set_translations WHERE language = 'Simplified Chinese' AND setCode = 'MIR'\n\n\t----- bird -----\tcard_games",
    "506": "\nSELECT CAST(COUNT(CASE WHEN c.hasFoil = 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(c.id) AS percentage_nonfoil_only\nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE st.language = 'Japanese'\n\n\t----- bird -----\tcard_games",
    "507": "\nSELECT CAST(COUNT(s.isOnlineOnly) AS FLOAT) * 100 / COUNT(st.setCode) AS percentage_online_only\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE st.language = 'Brazilian Portuguese'\nAND s.isOnlineOnly = 1\n\n\t----- bird -----\tcard_games",
    "508": "\nSELECT DISTINCT printings FROM cards WHERE artist = 'Aleksi Briclot' AND text IS NULL;\n\n\t----- bird -----\tcard_games",
    "509": "\nSELECT id FROM sets WHERE totalSetSize = (SELECT MAX(totalSetSize) FROM sets)\n\n\t----- bird -----\tcard_games",
    "510": "\nSELECT artist FROM cards WHERE otherFaceIds IS NULL ORDER BY convertedManaCost DESC LIMIT 1\n\n\t----- bird -----\tcard_games",
    "511": "\nSELECT frameEffects, COUNT(*) AS count\nFROM cards\nWHERE hasFoil = 1 AND rarity IN ('Mythic Rare', 'Rare')\nGROUP BY frameEffects\nORDER BY count DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "512": "\nSELECT COUNT(*) FROM cards WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'Duel_deck_a'\n\n\t----- bird -----\tcard_games",
    "513": "\nSELECT s.id FROM sets s WHERE s.type = 'Commander' AND NOT EXISTS (SELECT 1 FROM set_translations st WHERE st.setCode = s.code AND st.translation LIKE '%Alchemy%') ORDER BY s.totalSetSize DESC LIMIT 1\n\n\t----- bird -----\tcard_games",
    "514": "\nSELECT name, convertedManaCost FROM cards WHERE duelDeck IS NOT NULL ORDER BY convertedManaCost DESC LIMIT 10\n\n\t----- bird -----\tcard_games",
    "515": "\nSELECT c.originalReleaseDate, l.format \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.rarity = 'Mythic Rare' \nORDER BY c.originalReleaseDate ASC \nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "516": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.artist = 'Volkan Ba\u00c7\u00b5a' AND fd.language = 'French'\n\n\t----- bird -----\tcard_games",
    "517": "\nSELECT COUNT(c.id) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'rare' AND c.type LIKE '%enchantment%' AND c.name = 'Abundance'\nGROUP BY c.id\nHAVING COUNT(DISTINCT l.format) = (SELECT COUNT(*) FROM legalities WHERE status = 'legal')\n\n\t----- bird -----\tcard_games",
    "518": "\nSELECT L.format, C.name\nFROM legalities L\nJOIN cards C ON L.uuid = C.uuid\nWHERE L.status = 'banned'\nGROUP BY L.format, C.name\nORDER BY COUNT(L.format) DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "519": "\nSELECT translation FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Battlebond') AND language = 'en'\n\n\t----- bird -----\tcard_games",
    "520": "\nSELECT artist, format\nFROM cards AS c\nJOIN legalities AS l ON c.uuid = l.uuid\nGROUP BY artist\nORDER BY COUNT(*) ASC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "521": "\nSELECT l.status\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE c.frameVersion = '1997' AND c.artist = 'D. Alexander Gregory' AND l.format = 'Legacy' AND (c.hasContentWarning = 1 OR c.isReserved = 1)\n\n\t----- bird -----\tcard_games",
    "522": "\nSELECT c.name, l.format \nFROM cards AS c\nJOIN legalities AS l ON c.uuid = l.uuid\nWHERE c.edhrecRank = 1 AND l.status = 'Banned'\n\n\t----- bird -----\tcard_games",
    "523": "\nSELECT COUNT(DISTINCT s.code) / 4 AS annual_average_sets, l.language AS common_language\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nJOIN cards c ON s.code = SUBSTRING(c.setCode FROM 1 FOR 3)\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE s.releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\nGROUP BY l.language\nORDER BY COUNT(DISTINCT s.code) DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "524": "\nSELECT DISTINCT artist\nFROM cards\nWHERE borderColor = 'black' AND mtgArenaId IS NOT NULL AND (mtgoFoilId IS NULL OR mtgoId IS NULL) AND availability LIKE '%arena%'\n\n\t----- bird -----\tcard_games",
    "525": "\nSELECT DISTINCT uuid FROM legalities WHERE format = 'old_school' AND (status = 'restricted' OR status = 'banned')\n\n\t----- bird -----\tcard_games",
    "526": "\nSELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\n\n\t----- bird -----\tcard_games",
    "527": "\nSELECT r.text, r.date\nFROM rulings AS r\nJOIN cards AS c ON r.uuid = c.uuid\nWHERE c.artist = 'Kev Walker' AND c.name = 'Kev Walker'\nORDER BY r.date DESC;\n\n\t----- bird -----\tcard_games",
    "528": "\nSELECT c.name, l.format, l.status \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Hour of Devastation'\nORDER BY c.name, l.format;\n\n\t----- bird -----\tcard_games",
    "529": "\nSELECT s.name FROM sets s\nJOIN set_translations st_kr ON s.code = st_kr.setCode AND st_kr.language = 'Korean'\nLEFT JOIN set_translations st_jp ON s.code = st_jp.setCode AND st_jp.language = 'Japanese'\nWHERE st_jp.translation IS NULL AND st_kr.translation IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "530": "\nSELECT DISTINCT frameVersion AS FrameStyles FROM cards WHERE artist = 'Allen Williams'\nUNION ALL\nSELECT name, frameVersion FROM cards WHERE artist = 'Allen Williams'\nUNION ALL\nSELECT name FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE status = 'Banned'\n\n\t----- bird -----\tcard_games",
    "531": "\nSELECT DisplayName, Reputation FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon'\n\n\t----- bird -----\tcodebase_community",
    "532": "\nSELECT DisplayName FROM users WHERE CreationDate BETWEEN '2014-01-01' AND '2014-12-31'\n\n\t----- bird -----\tcodebase_community",
    "533": "\nSELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\n\n\t----- bird -----\tcodebase_community",
    "534": "\nSELECT DisplayName FROM users WHERE Views = (SELECT MAX(Views) FROM users)\n\n\t----- bird -----\tcodebase_community",
    "535": "\nSELECT COUNT(DISTINCT U.Id) \nFROM users U\nWHERE U.UpVotes > 100 AND U.DownVotes > 1\n\n\t----- bird -----\tcodebase_community",
    "536": "\nSELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-01-01'\n\n\t----- bird -----\tcodebase_community",
    "537": "\nSELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\n\n\t----- bird -----\tcodebase_community",
    "538": "\nSELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "539": "\nSELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Eliciting priors from experts'\n\n\t----- bird -----\tcodebase_community",
    "540": "\nSELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' ORDER BY p.Score DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "541": "\nSELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Reputation = (SELECT MAX(Reputation) FROM posts) LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "542": "\nSELECT COUNT(c.Id) AS TotalComments\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "543": "\nSELECT p.Id, p.AnswerCount \nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie' AND p.PostTypeId = 1\nORDER BY p.AnswerCount DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "544": "\nSELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.LastEditorUserId WHERE p.Title = 'Examples for teaching: Correlation does not mean causation'\n\n\t----- bird -----\tcodebase_community",
    "545": "\nSELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' AND p.PostTypeId = 1\n\n\t----- bird -----\tcodebase_community",
    "546": "\nSELECT DISTINCT u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.CreationDate IS NOT NULL AND p.LastActivityDate IS NOT NULL AND p.ClosedDate IS NULL AND p.DeletionDate IS NULL\n\n\t----- bird -----\tcodebase_community",
    "547": "\nSELECT COUNT(p.Id) \nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.CreationDate <= DATE_SUB(CURDATE(), INTERVAL 60 YEAR) AND p.Score > 19\n\n\t----- bird -----\tcodebase_community",
    "548": "\nSELECT u.Location FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Eliciting priors from experts'\n\n\t----- bird -----\tcodebase_community",
    "549": "\nSELECT p.Body FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'bayesian'\n\n\t----- bird -----\tcodebase_community",
    "550": "\nSELECT p.Body\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.Count = (\n    SELECT MAX(Count) \n    FROM tags\n)\n\n\t----- bird -----\tcodebase_community",
    "551": "\nSELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\n\n\t----- bird -----\tcodebase_community",
    "552": "\nSELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "553": "\nSELECT COUNT(*) FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND YEAR(T1.Date) = 2011\n\n\t----- bird -----\tcodebase_community",
    "554": "\nSELECT u.DisplayName FROM users u JOIN (\n    SELECT UserId, COUNT(*) AS badge_count FROM badges GROUP BY UserId ORDER BY badge_count DESC LIMIT 1\n) b ON u.Id = b.UserId\n\n\t----- bird -----\tcodebase_community",
    "555": "\nSELECT AVG(posts.Score) AS AverageScore\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "556": "\nSELECT AVG(badge_count) AS average_badges\nFROM (\n    SELECT COUNT(b.Id) AS badge_count, b.UserId\n    FROM badges b\n    JOIN users u ON b.UserId = u.Id\n    WHERE u.Views > 200\n    GROUP BY b.UserId\n) AS user_badge_counts\n\n\t----- bird -----\tcodebase_community",
    "557": "\nSELECT CAST(COUNT(CASE WHEN u.Age >= 18 THEN p.Id ELSE NULL END) AS FLOAT) * 100 / COUNT(p.Id) AS percentage_elder_user_posts\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Score > 20\n\n\t----- bird -----\tcodebase_community",
    "558": "\nSELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\n\n\t----- bird -----\tcodebase_community",
    "559": "\nSELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(*) DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "560": "\nSELECT COUNT(*) AS Revival_Badge_Count \nFROM badges \nWHERE Name = 'Revival';\n\n\t----- bird -----\tcodebase_community",
    "561": "\nSELECT p.Title FROM posts p JOIN (\n    SELECT PostId, MAX(Score) AS MaxScore FROM comments GROUP BY PostId\n) c ON p.Id = c.PostId WHERE c.MaxScore = c.Score\n\n\t----- bird -----\tcodebase_community",
    "562": "\nSELECT p.Id, c.CommentCount \nFROM posts p\nJOIN (\n    SELECT PostId, COUNT(*) AS CommentCount \n    FROM comments \n    GROUP BY PostId\n) c ON p.Id = c.PostId\nWHERE p.ViewCount = 1910\n\n\t----- bird -----\tcodebase_community",
    "563": "\nSELECT p.FavoriteCount FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23 20:29:39'\n\n\t----- bird -----\tcodebase_community",
    "564": "\nSELECT Text FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE ParentId = 107829)\n\n\t----- bird -----\tcodebase_community",
    "565": "\nSELECT p.Id, p.Title, p.Body, c.Text AS CommentText\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18'\n\n\t----- bird -----\tcodebase_community",
    "566": "\nSELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 65041\n\n\t----- bird -----\tcodebase_community",
    "567": "\nSELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\n\n\t----- bird -----\tcodebase_community",
    "568": "\nSELECT U.DisplayName FROM users U JOIN votes V ON U.Id = V.UserId WHERE V.Id = 6347\n\n\t----- bird -----\tcodebase_community",
    "569": "\nSELECT COUNT(v.Id) AS NumberOfVotes\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nWHERE p.Title LIKE '%data visualization%' OR p.Body LIKE '%data visualization%'\n\n\t----- bird -----\tcodebase_community",
    "570": "\nSELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'DatEpicCoderGuyWhoPrograms')\n\n\t----- bird -----\tcodebase_community",
    "571": "\nSELECT CAST(COUNT(p.Id) AS FLOAT) / COUNT(v.Id) AS ratio\nFROM users u\nLEFT JOIN posts p ON u.Id = p.OwnerUserId\nLEFT JOIN votes v ON u.Id = v.UserId\nWHERE u.Id = 24\n\n\t----- bird -----\tcodebase_community",
    "572": "\nSELECT Views FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\n\n\t----- bird -----\tcodebase_community",
    "573": "\nSELECT Text, CreationDate, UserDisplayName FROM comments WHERE Score = 17\n\n\t----- bird -----\tcodebase_community",
    "574": "\nSELECT Id, WebsiteUrl FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\n\n\t----- bird -----\tcodebase_community",
    "575": "\nSELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'SilentGhost'\n\n\t----- bird -----\tcodebase_community",
    "576": "\nSELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!'\n\n\t----- bird -----\tcodebase_community",
    "577": "\nSELECT Text, CreationDate, PostId \nFROM comments \nWHERE UserDisplayName = 'A Lion.';\n\n\t----- bird -----\tcodebase_community",
    "578": "\nSELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Understanding what Dassault iSight is doing?'\n\n\t----- bird -----\tcodebase_community",
    "579": "\nSELECT c.Text, c.CreationDate, u.DisplayName \nFROM comments AS c\nJOIN posts AS p ON c.PostId = p.Id\nJOIN users AS u ON c.UserId = u.Id\nWHERE p.Title = 'How does gentle boosting differ from AdaBoost?'\nORDER BY c.CreationDate ASC;\n\n\t----- bird -----\tcodebase_community",
    "580": "\nSELECT u.DisplayName, b.Name FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Necromancer' LIMIT 10;\n\n\t----- bird -----\tcodebase_community",
    "581": "\nSELECT LastEditorDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data?'\n\n\t----- bird -----\tcodebase_community",
    "582": "\nSELECT p.Title FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN users u ON ph.UserId = u.Id WHERE u.DisplayName = 'Vebjorn Ljosa' AND ph.PostHistoryTypeId = 5\n\n\t----- bird -----\tcodebase_community",
    "583": "\nSELECT SUM(p.Score) AS TotalScore, u.WebsiteUrl \nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Yevgeny' AND p.LastEditorDisplayName = 'Yevgeny'\nGROUP BY u.WebsiteUrl\n\n\t----- bird -----\tcodebase_community",
    "584": "\nSELECT c.Id, c.Text, c.CreationDate, u.DisplayName AS UserDisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.PostId IN (\n    SELECT p.Id \n    FROM posts p\n    WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\n)\nAND c.UserId IN (\n    SELECT DISTINCT ph.UserId\n    FROM postHistory ph\n    JOIN posts p ON ph.PostId = p.Id\n    WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\n);\n\n\t----- bird -----\tcodebase_community",
    "585": "\nSELECT SUM(v.BountyAmount) AS TotalBountyAmount\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nWHERE p.Title LIKE '%data%' AND v.VoteTypeId = 8\n\n\t----- bird -----\tcodebase_community",
    "586": "\nSELECT u.DisplayName, v.CreationDate\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nJOIN users u ON v.UserId = u.Id\nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%'\n\n\t----- bird -----\tcodebase_community",
    "587": "\nSELECT p.Title, c.Text AS CommentText, p.Score \nFROM posts p\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE p.Tags LIKE '%<humor>%' \nAND p.ViewCount IS NOT NULL\nORDER BY p.ViewCount DESC;\n\n\t----- bird -----\tcodebase_community",
    "588": "\nSELECT COUNT(*) \nFROM comments \nWHERE UserId = 13;\n\n\t----- bird -----\tcodebase_community",
    "589": "\nSELECT Id FROM users ORDER BY Reputation DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "590": "\nSELECT Id FROM users ORDER BY Views ASC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "591": "\nSELECT COUNT(DISTINCT UserId) AS SupporterBadgeCount\nFROM badges\nWHERE Name = 'Supporter' AND YEAR(Date) = 2011;\n\n\t----- bird -----\tcodebase_community",
    "592": "\nSELECT COUNT(DISTINCT UserId) FROM badges WHERE Name IN (SELECT DISTINCT Name FROM badges GROUP BY Name HAVING COUNT(Id) > 5)\n\n\t----- bird -----\tcodebase_community",
    "593": "\nSELECT COUNT(DISTINCT u.Id) \nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE u.Location = 'New York' AND b.Name IN ('Teacher', 'Supporter')\nGROUP BY u.Id\nHAVING COUNT(DISTINCT b.Name) = 2\n\n\t----- bird -----\tcodebase_community",
    "594": "\nSELECT u.DisplayName, u.Reputation \nFROM posts p JOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Id = 1;\n\n\t----- bird -----\tcodebase_community",
    "595": "\nSELECT u.Id, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE (SELECT COUNT(*) FROM postHistory ph WHERE ph.PostId = p.Id) = 1 AND u.Views >= 1000 GROUP BY u.Id, u.DisplayName\n\n\t----- bird -----\tcodebase_community",
    "596": "\nSELECT u.Id, u.DisplayName, b.Name \nFROM users u\nJOIN (\n    SELECT UserId, COUNT(*) as comment_count \n    FROM comments \n    GROUP BY UserId \n    ORDER BY comment_count DESC\n) c ON u.Id = c.UserId\nLEFT JOIN badges b ON u.Id = b.UserId\n\n\t----- bird -----\tcodebase_community",
    "597": "\nSELECT COUNT(b.UserId) AS TeacherBadgeHoldersFromIndia\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Teacher' AND u.Location = 'India'\n\n\t----- bird -----\tcodebase_community",
    "598": "\nSELECT \n    ((SUM(CASE WHEN YEAR(Date) = 2011 THEN 1 ELSE 0 END) - SUM(CASE WHEN YEAR(Date) = 2010 THEN 1 ELSE 0 END)) / CAST(SUM(CASE WHEN YEAR(Date) = 2010 THEN 1 ELSE 0 END) AS FLOAT)) * 100 AS PercentageDifference\nFROM badges\nWHERE Name = 'Student';\n\n\t----- bird -----\tcodebase_community",
    "599": "\nSELECT ph.PostHistoryTypeId, COUNT(DISTINCT c.UserId) AS UniqueCommentersCount\nFROM postHistory ph\nJOIN comments c ON ph.PostId = c.PostId\nWHERE ph.PostId = 3720\nGROUP BY ph.PostHistoryTypeId;\n\n\t----- bird -----\tcodebase_community",
    "600": "\nSELECT p1.Id, p1.Score AS Popularity\nFROM posts p1\nJOIN postLinks pl ON p1.Id = pl.PostId OR p1.Id = pl.RelatedPostId\nWHERE pl.PostId = 61217 OR pl.RelatedPostId = 61217\n\n\t----- bird -----\tcodebase_community",
    "601": "\nSELECT Score, LinkTypeId FROM postLinks WHERE PostId = 395\n\n\t----- bird -----\tcodebase_community",
    "602": "\nSELECT posts.Id AS PostId, posts.OwnerUserId AS UserId\nFROM posts\nWHERE posts.Score > 60\n\n\t----- bird -----\tcodebase_community",
    "603": "\nSELECT SUM(FavoriteCount) AS TotalFavoriteCount\nFROM posts\nWHERE OwnerUserId = 686 AND YEAR(LasActivityDate) = 2011;\n\n\t----- bird -----\tcodebase_community",
    "604": "\nSELECT AVG(u.UpVotes), AVG(u.Age)\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Id IN (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(OwnerUserId) > 10)\nGROUP BY u.Id\nHAVING COUNT(p.Id) > 10\n\n\t----- bird -----\tcodebase_community",
    "605": "\nSELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'\n\n\t----- bird -----\tcodebase_community",
    "606": "\nSELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08'\n\n\t----- bird -----\tcodebase_community",
    "607": "\nSELECT COUNT(*) AS PositiveCommentsCount\nFROM comments\nWHERE Score > 0\n\n\t----- bird -----\tcodebase_community",
    "608": "\nSELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47'\n\n\t----- bird -----\tcodebase_community",
    "609": "\nSELECT COUNT(*) FROM posts WHERE Score = 10\n\n\t----- bird -----\tcodebase_community",
    "610": "\nSELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users) GROUP BY b.Name\n\n\t----- bird -----\tcodebase_community",
    "611": "\nSELECT u.Reputation FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08'\n\n\t----- bird -----\tcodebase_community",
    "612": "\nSELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Pierre'\n\n\t----- bird -----\tcodebase_community",
    "613": "\nSELECT b.Date \nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.Location = 'Rochester, NY'\n\n\t----- bird -----\tcodebase_community",
    "614": "\nSELECT CAST(COUNT(DISTINCT b.UserId) AS FLOAT) * 100 / (SELECT COUNT(*) FROM users) AS TeacherBadgePercentage\nFROM badges b\nWHERE b.Name = 'Teacher'\n\n\t----- bird -----\tcodebase_community",
    "615": "\nSELECT CAST(COUNT(CASE WHEN users.Age BETWEEN 13 AND 19 THEN 1 END) AS FLOAT) * 100 / COUNT(badges.UserId) \nFROM badges \nJOIN users ON badges.UserId = users.Id \nWHERE badges.Name = 'Organizer'\n\n\t----- bird -----\tcodebase_community",
    "616": "\nSELECT c.Score FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:19:56'\n\n\t----- bird -----\tcodebase_community",
    "617": "\nSELECT c.Text AS CommentContent, p.Id AS PostId, p.CreaionDate AS PostCreationDate\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.CreaionDate = '2010-07-19 19:37:33'\n\n\t----- bird -----\tcodebase_community",
    "618": "\nSELECT u.Age FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location = 'Vienna, Austria'\n\n\t----- bird -----\tcodebase_community",
    "619": "\nSELECT COUNT(b.Id) \nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Supporter' AND TIMESTAMPDIFF(YEAR, u.CreationDate, CURDATE()) >= 18\n\n\t----- bird -----\tcodebase_community",
    "620": "\nSELECT u.Views FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08'\n\n\t----- bird -----\tcodebase_community",
    "621": "\nSELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users) GROUP BY b.Name\n\n\t----- bird -----\tcodebase_community",
    "622": "\nSELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Sharpie'\n\n\t----- bird -----\tcodebase_community",
    "623": "\nSELECT COUNT(*) \nFROM badges \nWHERE Name = 'Supporter'\nAND UserId IN (SELECT Id FROM users WHERE Age >= 65)\n\n\t----- bird -----\tcodebase_community",
    "624": "\nSELECT DisplayName FROM users WHERE Id = 30;\n\n\t----- bird -----\tcodebase_community",
    "625": "\nSELECT COUNT(*) FROM users WHERE Location = 'New York'\n\n\t----- bird -----\tcodebase_community",
    "626": "\nSELECT COUNT(*)\nFROM votes\nWHERE YEAR(CreationDate) = 2010;\n\n\t----- bird -----\tcodebase_community",
    "627": "\nSELECT COUNT(*) FROM users WHERE Age >= 18\n\n\t----- bird -----\tcodebase_community",
    "628": "\nSELECT DisplayName, Views FROM users ORDER BY Views DESC LIMIT 10;\n\n\t----- bird -----\tcodebase_community",
    "629": "\nSELECT \n    YEAR(v.CreationDate) AS Year,\n    COUNT(*) AS TotalVotes\nFROM votes v\nWHERE YEAR(v.CreationDate) IN (2010, 2011)\nGROUP BY YEAR(v.CreationDate);\n\n\t----- bird -----\tcodebase_community",
    "630": "\nSELECT T1.TagName FROM tags AS T1\nJOIN posts AS T2 ON T1.ExcerptPostId = T2.Id OR T1.WikiPostId = T2.Id\nWHERE T2.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'John Stauffer')\nGROUP BY T1.TagName\n\n\t----- bird -----\tcodebase_community",
    "631": "\nSELECT COUNT(*) FROM posts AS P JOIN users AS U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'Daniel Vassallo'\n\n\t----- bird -----\tcodebase_community",
    "632": "\nSELECT COUNT(*) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'Harlan'\n\n\t----- bird -----\tcodebase_community",
    "633": "\nSELECT P.Id FROM posts P JOIN users U ON P.OwnerUserId = U.Id WHERE U.DisplayName = 'slashnick' ORDER BY P.AnswerCount DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "634": "\nSELECT p.Id, p.OwnerUserId, u.DisplayName, p.Score \nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nORDER BY p.Score DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "635": "\nSELECT COUNT(p.Id) AS PostCount\nFROM posts p\nJOIN votes v ON p.Id = v.PostId\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Matt Parker'\nGROUP BY p.Id\nHAVING COUNT(v.Id) > 4\n\n\t----- bird -----\tcodebase_community",
    "636": "\nSELECT COUNT(c.Id) AS NegativeCommentCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Neil McGuigan' AND c.Text LIKE '%-%'\nAND c.CreationDate >= (\n    SELECT CreationDate FROM users WHERE DisplayName = 'Neil McGuigan'\n)\n\n\t----- bird -----\tcodebase_community",
    "637": "\nSELECT DISTINCT t.TagName \nFROM tags t\nJOIN posts p ON t.Id = p.Tags\nJOIN users u ON p.OwnerUserId = u.Id\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE u.DisplayName = 'Mark Meckes' AND c.Id IS NULL;\n\n\t----- bird -----\tcodebase_community",
    "638": "\nSELECT u.DisplayName AS UserName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Organizer';\n\n\t----- bird -----\tcodebase_community",
    "639": "\nSELECT CAST(COUNT(CASE WHEN tags.TagName = 'r' THEN posts.Id END) AS FLOAT) * 100 / COUNT(posts.Id) AS Percentage_R_Language\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nLEFT JOIN postTags ON posts.Id = postTags.PostId\nLEFT JOIN tags ON postTags.TagId = tags.Id\nWHERE users.DisplayName = 'Community'\n\n\t----- bird -----\tcodebase_community",
    "640": "\nSELECT (SELECT SUM(posts.ViewCount) \n        FROM posts \n        JOIN users ON posts.OwnerUserId = users.Id \n        WHERE users.DisplayName = 'mornington') -\n       (SELECT SUM(posts.ViewCount) \n        FROM posts \n        JOIN users ON posts.OwnerUserId = users.Id \n        WHERE users.DisplayName = 'Amos') AS ViewCountDifference\n\n\t----- bird -----\tcodebase_community",
    "641": "\nSELECT COUNT(DISTINCT UserId) AS CommentatorBadgeUsersCount\nFROM badges\nWHERE Name = 'Commentator'\nAND YEAR(Date) = 2014\n\n\t----- bird -----\tcodebase_community",
    "642": "\nSELECT COUNT(*) FROM posts WHERE DATE(CreaionDate) = '2010-07-21'\n\n\t----- bird -----\tcodebase_community",
    "643": "\nSELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users)\n\n\t----- bird -----\tcodebase_community",
    "644": "\nSELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\n\n\t----- bird -----\tcodebase_community",
    "645": "\nSELECT COUNT(*) \nFROM comments \nWHERE UserId = 13 AND Score < 0;\n\n\t----- bird -----\tcodebase_community",
    "646": "\nSELECT p.Title, c.UserDisplayName\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.Score > 0;\n\n\t----- bird -----\tcodebase_community",
    "647": "\nSELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.Location = 'North Pole' AND YEAR(b.Date) = 2011\n\n\t----- bird -----\tcodebase_community",
    "648": "\nSELECT u.DisplayName, u.WebsiteUrl \nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.FavoriteCount > 150\n\n\t----- bird -----\tcodebase_community",
    "649": "\nSELECT COUNT(ph.Id) AS PostHistoryCount, MAX(ph.CreationDate) AS LastEditDate\nFROM posts p\nJOIN postHistory ph ON p.Id = ph.PostId\nWHERE p.Title = 'What is the best introductory Bayesian statistics textbook?'\n\n\t----- bird -----\tcodebase_community",
    "650": "\nSELECT LastAccessDate, Location FROM users WHERE Id IN (SELECT UserId FROM badges WHERE Name = 'Outliers')\n\n\t----- bird -----\tcodebase_community",
    "651": "\nSELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId WHERE p.Title = 'How to tell if something happened in a data set which monitors a value over time' AND pl.LinkTypeId IN (3, 4)\n\n\t----- bird -----\tcodebase_community",
    "652": "\nSELECT p.Id, b.Name\nFROM posts p\nJOIN badges b ON p.OwnerUserId = b.UserId\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Samuel' AND YEAR(b.Date) = 2013\n\n\t----- bird -----\tcodebase_community",
    "653": "\nSELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId ORDER BY p.Score DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "654": "\nSELECT u.DisplayName, u.Location \nFROM users u\nJOIN tags t ON u.Id = t.ExcerptPostId\nJOIN posts p ON t.Id = p.Id\nWHERE t.TagName = 'hypothesis-testing'\n\n\t----- bird -----\tcodebase_community",
    "655": "\nSELECT t1.RelatedPostId, t1.LinkTypeId \nFROM postLinks AS t1\nJOIN posts AS t2 ON t1.PostId = t2.Id\nWHERE t2.Title = 'What are principal component scores?'\n\n\t----- bird -----\tcodebase_community",
    "656": "\nSELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ParentId IN (SELECT ParentId FROM posts WHERE PostTypeId = 2 ORDER BY Score DESC LIMIT 1)\n\n\t----- bird -----\tcodebase_community",
    "657": "\nSELECT u.DisplayName, u.WebsiteUrl \nFROM users u\nJOIN votes v ON u.Id = v.UserId\nWHERE v.VoteTypeId = 8\nORDER BY v.BountyAmount DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "658": "\nSELECT Title FROM posts ORDER BY Score DESC LIMIT 5\n\n\t----- bird -----\tcodebase_community",
    "659": "\nSELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000\n\n\t----- bird -----\tcodebase_community",
    "660": "\nSELECT OwnerUserId FROM posts ORDER BY (Score + AnswerCount) DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "661": "\nSELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\n\n\t----- bird -----\tcodebase_community",
    "662": "\nSELECT COUNT(p.Id) AS PostCount\nFROM posts p\nJOIN votes v ON p.Id = v.PostId\nWHERE YEAR(v.CreationDate) = 2011 AND v.BountyAmount = 50\n\n\t----- bird -----\tcodebase_community",
    "663": "\nSELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "664": "\nSELECT p.Score\nFROM posts p\nJOIN tags t ON p.Tags LIKE '%' || t.TagName || '%'\nWHERE t.Count = (\n    SELECT MAX(Count) \n    FROM tags\n)\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "665": "\nSELECT DATE_FORMAT(CreationDate, '%Y-%m') AS Month, COUNT(Id) / 12 AS AverageMonthlyLinks\nFROM postLinks\nWHERE CreationDate BETWEEN '2010-01-01' AND '2010-12-31'\nAND RelatedPostId IN (\n    SELECT Id FROM posts WHERE AnswerCount <= 2\n)\nGROUP BY Month\n\n\t----- bird -----\tcodebase_community",
    "666": "\nSELECT PostId AS id\nFROM votes\nWHERE UserId = 1465\nORDER BY BountyAmount DESC, Score DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "667": "\nSELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId OR p.Id = pl.RelatedPostId ORDER BY pl.CreationDate ASC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "668": "\nSELECT u.DisplayName FROM users u JOIN (\n    SELECT UserId, COUNT(*) AS badge_count FROM badges GROUP BY UserId ORDER BY badge_count DESC LIMIT 1\n) b ON u.Id = b.UserId\n\n\t----- bird -----\tcodebase_community",
    "669": "\nSELECT MIN(V.CreationDate) AS FirstVoteDate\nFROM votes V\nJOIN users U ON V.UserId = U.Id\nWHERE U.DisplayName = 'chl'\n\n\t----- bird -----\tcodebase_community",
    "670": "\nSELECT MIN(CreationDate) AS FirstPostDate\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nORDER BY u.CreationDate DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "671": "\nSELECT u.DisplayName FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Autobiographer' ORDER BY b.Date LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "672": "\nSELECT COUNT(DISTINCT u.Id) \nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom'\nAND EXISTS (\n    SELECT 1 FROM posts WHERE OwnerUserId = u.Id GROUP BY OwnerUserId HAVING SUM(FavoriteCount) >= 4\n)\n\n\t----- bird -----\tcodebase_community",
    "673": "\nSELECT AVG(cnt.posts_voted) \nFROM (\n    SELECT COUNT(v.PostId) AS posts_voted, v.UserId\n    FROM votes v\n    JOIN users u ON v.UserId = u.Id\n    GROUP BY v.UserId\n    ORDER BY u.CreationDate ASC\n    LIMIT 1\n) cnt\n\n\t----- bird -----\tcodebase_community",
    "674": "\nSELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "675": "\nSELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000\n\n\t----- bird -----\tcodebase_community",
    "676": "\nSELECT DisplayName FROM users WHERE Age >= 18\n\n\t----- bird -----\tcodebase_community",
    "677": "\nSELECT COUNT(*) FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Jay Stevens' AND YEAR(p.CreaionDate) = 2010\n\n\t----- bird -----\tcodebase_community",
    "678": "\nSELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "679": "\nSELECT Id, Title FROM posts ORDER BY Score DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "680": "\nSELECT AVG(posts.Score) AS AverageScore\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Stephen Turner'\n\n\t----- bird -----\tcodebase_community",
    "681": "\nSELECT DISTINCT u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Views > 20000 AND YEAR(p.CreaionDate) = 2011\n\n\t----- bird -----\tcodebase_community",
    "682": "\nSELECT p.Id, u.DisplayName AS OwnerDisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2010\nORDER BY p.Reputation DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "683": "\nSELECT CAST(COUNT(CASE WHEN u.Reputation > 1000 THEN p.Id END) AS FLOAT) / COUNT(p.Id) * 100 AS Percentage\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(u.CreationDate) = 2011\n\n\t----- bird -----\tcodebase_community",
    "684": "\nSELECT CAST(COUNT(CASE WHEN Age BETWEEN 13 AND 19 THEN Id ELSE NULL END) AS FLOAT) * 100 / COUNT(*) AS TeenageUserPercentage\nFROM users\nWHERE Age IS NOT NULL;\n\n\t----- bird -----\tcodebase_community",
    "685": "\nSELECT p.Views, u.DisplayName \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Computer Game Datasets' \nORDER BY p.LastActivityDate DESC \nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "686": "\nWITH AverageViews AS (\n    SELECT AVG(Views) AS AvgViews\n    FROM users\n)\nSELECT COUNT(*) AS TotalPostsAboveAverageViews\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.ViewCount > (SELECT AvgViews FROM AverageViews);\n\n\t----- bird -----\tcodebase_community",
    "687": "\nSELECT COUNT(c.Id) AS comment_count\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Score = (SELECT MAX(Score) FROM posts)\n\n\t----- bird -----\tcodebase_community",
    "688": "\nSELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\n\n\t----- bird -----\tcodebase_community",
    "689": "\nSELECT u.DisplayName, u.Location FROM users u JOIN posts p ON u.Id = p.LastEditorUserId WHERE p.Id = 183\n\n\t----- bird -----\tcodebase_community",
    "690": "\nSELECT b.Name, MAX(b.Date) AS AwardDate\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'Emmett'\nGROUP BY b.Name\nORDER BY AwardDate DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "691": "\nSELECT COUNT(*) \nFROM users \nWHERE Age >= 18 AND UpVotes > 5000\n\n\t----- bird -----\tcodebase_community",
    "692": "\nSELECT b.Date - u.CreationDate AS Duration \nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'Zolomon'\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "693": "\nWITH LatestUser AS (\n    SELECT Id, CreationDate\n    FROM users\n    ORDER BY CreationDate DESC\n    LIMIT 1\n)\nSELECT \n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM LatestUser)) AS NumberOfPosts,\n    (SELECT COUNT(*) FROM comments WHERE UserId = (SELECT Id FROM LatestUser)) AS NumberOfComments;\n\n\t----- bird -----\tcodebase_community",
    "694": "\nSELECT c.Text, c.UserDisplayName\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Analysing wind data with R'\nORDER BY c.CreationDate DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "695": "\nSELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol'\n\n\t----- bird -----\tcodebase_community",
    "696": "\nSELECT COUNT(*) FROM posts p JOIN tags t ON p.tags LIKE '%' || t.TagName || '%' WHERE t.TagName = 'careers'\n\n\t----- bird -----\tcodebase_community",
    "697": "\nSELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon'\n\n\t----- bird -----\tcodebase_community",
    "698": "\nSELECT \n    c.Id AS CommentId, \n    p.Id AS AnswerId\nFROM \n    posts p\nLEFT JOIN \n    comments c ON p.Id = c.PostId\nWHERE \n    p.Title = 'Clustering 1D data' AND (c.Text IS NOT NULL OR p.PostTypeId = 2)\n\n\t----- bird -----\tcodebase_community",
    "699": "\nSELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\n\n\t----- bird -----\tcodebase_community",
    "700": "\nSELECT COUNT(PostId) AS NumberOfPostsWithBountyOver30\nFROM votes\nWHERE VoteTypeId = 5 AND BountyAmount > 30\n\n\t----- bird -----\tcodebase_community",
    "701": "\nWITH MostInfluentialUser AS (\n    SELECT Id, Reputation \n    FROM users \n    ORDER BY Reputation DESC \n    LIMIT 1\n),\nRelevantPosts AS (\n    SELECT p.Id, p.Score \n    FROM posts p \n    JOIN MostInfluentialUser mu ON p.OwnerUserId = mu.Id\n)\nSELECT CAST(SUM(CASE WHEN Score > 50 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) AS PercentageAbove50\nFROM RelevantPosts\n\n\t----- bird -----\tcodebase_community",
    "702": "\nSELECT COUNT(*) FROM posts WHERE Score < 20\n\n\t----- bird -----\tcodebase_community",
    "703": "\nSELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20\n\n\t----- bird -----\tcodebase_community",
    "704": "\nSELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\n\n\t----- bird -----\tcodebase_community",
    "705": "\nSELECT u.Reputation, u.UpVotes \nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)'\n\n\t----- bird -----\tcodebase_community",
    "706": "\nSELECT c.Text AS CommentText, p.Title AS PostTitle\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title LIKE '%linear regression%'\n\n\t----- bird -----\tcodebase_community",
    "707": "\nSELECT c.Text, c.Score\nFROM comments AS c\nJOIN posts AS p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "708": "\nSELECT u.CreationDate, u.Age \nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text LIKE '%website%'\n\n\t----- bird -----\tcodebase_community",
    "709": "\nSELECT COUNT(DISTINCT c.PostId) \nFROM comments AS c\nJOIN posts AS p ON c.PostId = p.Id\nWHERE c.Score = 0 AND p.ViewCount < 5\n\n\t----- bird -----\tcodebase_community",
    "710": "\nSELECT COUNT(c.Id) AS CommentCountWithZeroScore\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.CommentCount = 1 AND c.Score = 0\n\n\t----- bird -----\tcodebase_community",
    "711": "\nSELECT COUNT(DISTINCT c.UserId) \nFROM comments AS c\nJOIN users AS u ON c.UserId = u.Id\nWHERE c.Score = 0 AND u.Age = 40\n\n\t----- bird -----\tcodebase_community",
    "712": "\nSELECT c.PostId, c.Text AS CommentText\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Group differences on a five point Likert item'\n\n\t----- bird -----\tcodebase_community",
    "713": "\nSELECT U.UpVotes FROM users U INNER JOIN (\n    SELECT UserId FROM comments WHERE Text = 'R is also lazy evaluated.'\n) C ON U.Id = C.UserId\n\n\t----- bird -----\tcodebase_community",
    "714": "\nSELECT * FROM comments WHERE UserDisplayName = 'Harvey Motulsky'\n\n\t----- bird -----\tcodebase_community",
    "715": "\nSELECT DISTINCT c.UserDisplayName\nFROM comments AS c\nJOIN users AS u ON c.UserId = u.Id\nWHERE c.Score BETWEEN 1 AND 5\nAND u.DownVotes = 0\n\n\t----- bird -----\tcodebase_community",
    "716": "\nSELECT CAST(COUNT(CASE WHEN U.UpVotes = 0 THEN C.Id ELSE NULL END) AS FLOAT) * 100 / COUNT(C.Id) AS Percentage\nFROM comments C\nJOIN users U ON C.UserId = U.Id\nWHERE C.Score BETWEEN 5 AND 10\n\n\t----- bird -----\tcodebase_community",
    "717": "\nSELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = '3-D Man';\n\n\t----- bird -----\tsuperhero",
    "718": "\nSELECT COUNT(*) FROM hero_power AS hp JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength'\n\n\t----- bird -----\tsuperhero",
    "719": "\nSELECT COUNT(*) \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength' AND s.height_cm > 200;\n\n\t----- bird -----\tsuperhero",
    "720": "\nSELECT s.full_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id GROUP BY s.id, s.full_name HAVING COUNT(hp.power_id) > 15\n\n\t----- bird -----\tsuperhero",
    "721": "\nSELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')\n\n\t----- bird -----\tsuperhero",
    "722": "\nSELECT c.colour FROM superhero s JOIN colour c ON s.skin_colour_id = c.id WHERE s.superhero_name = 'Apocalypse'\n\n\t----- bird -----\tsuperhero",
    "723": "\nSELECT COUNT(hp.hero_id) \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'blue' AND sp.power_name = 'Agility'\n\n\t----- bird -----\tsuperhero",
    "724": "\nSELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')\n\n\t----- bird -----\tsuperhero",
    "725": "\nSELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\n\n\t----- bird -----\tsuperhero",
    "726": "\nSELECT s.full_name FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ORDER BY s.height_cm DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "727": "\nSELECT p.publisher_name FROM publisher p JOIN superhero s ON p.id = s.publisher_id WHERE s.superhero_name = 'Sauron'\n\n\t----- bird -----\tsuperhero",
    "728": "\nSELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.eye_colour_id IN (SELECT id FROM colour WHERE colour = 'blue')\n\n\t----- bird -----\tsuperhero",
    "729": "\nSELECT AVG(height_cm) AS average_height\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics';\n\n\t----- bird -----\tsuperhero",
    "730": "\nSELECT CAST(COUNT(CASE WHEN sp.power_name = 'Super Strength' THEN 1 END) AS FLOAT) * 100 / COUNT(s.id) AS percentage_super_strength\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "731": "\nSELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')\n\n\t----- bird -----\tsuperhero",
    "732": "\nSELECT p.publisher_name FROM publisher p JOIN superhero s ON p.id = s.publisher_id WHERE (SELECT attribute_value FROM hero_attribute ha WHERE ha.hero_id = s.id AND ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') ORDER BY attribute_value ASC LIMIT 1) IS NOT NULL ORDER BY (SELECT attribute_value FROM hero_attribute ha WHERE ha.hero_id = s.id AND ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') ORDER BY attribute_value ASC LIMIT 1) ASC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "733": "\nSELECT COUNT(*) FROM superhero S JOIN publisher P ON S.publisher_id = P.id JOIN colour C ON S.eye_colour_id = C.id WHERE P.publisher_name = 'Marvel Comics' AND C.colour = 'Gold'\n\n\t----- bird -----\tsuperhero",
    "734": "\nSELECT t2.publisher_name FROM superhero AS t1 JOIN publisher AS t2 ON t1.publisher_id = t2.id WHERE t1.superhero_name = 'Blue Beetle II'\n\n\t----- bird -----\tsuperhero",
    "735": "\nSELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')\n\n\t----- bird -----\tsuperhero",
    "736": "\nSELECT s.superhero_name, a.attribute_value \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'intelligence'\nORDER BY a.attribute_value ASC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "737": "\nSELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.superhero_name = 'Copycat'\n\n\t----- bird -----\tsuperhero",
    "738": "\nSELECT COUNT(*) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'durability') AND attribute_value < 50;\n\n\t----- bird -----\tsuperhero",
    "739": "\nSELECT s.superhero_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'death touch'\n\n\t----- bird -----\tsuperhero",
    "740": "\nSELECT COUNT(s.id) \nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nWHERE g.gender = 'Female' AND ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND ha.attribute_value = 100;\n\n\t----- bird -----\tsuperhero",
    "741": "\nSELECT superhero_name FROM superhero WHERE id = (\n    SELECT hero_id FROM hero_power GROUP BY hero_id ORDER BY COUNT(power_id) DESC LIMIT 1\n)\n\n\t----- bird -----\tsuperhero",
    "742": "\nSELECT COUNT(*) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'vampire')\n\n\t----- bird -----\tsuperhero",
    "743": "\nSELECT \n    CAST(COUNT(CASE WHEN a.alignment = 'Self' THEN s.id END) AS FLOAT) * 100 / COUNT(s.id) AS percentage_self_interest,\n    COUNT(CASE WHEN a.alignment = 'Self' AND p.publisher_name = 'Marvel Comics' THEN s.id ELSE NULL END) AS marvel_count\nFROM \n    superhero s\nJOIN \n    alignment a ON s.alignment_id = a.id\nJOIN \n    publisher p ON s.publisher_id = p.id;\n\n\t----- bird -----\tsuperhero",
    "744": "\nSELECT p1.publisher_name, COUNT(s.id) - COUNT(s2.id) AS difference\nFROM publisher p1\nJOIN (\n    SELECT s.id\n    FROM superhero s\n    JOIN publisher p ON s.publisher_id = p.id\n    WHERE p.publisher_name = 'DC'\n) s\nON p1.publisher_name = 'Marvel Comics' AND p1.id = s.publisher_id\nLEFT JOIN (\n    SELECT id\n    FROM superhero\n    WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')\n) s2 ON s.id = s2.id\nGROUP BY p1.publisher_name;\n\n\t----- bird -----\tsuperhero",
    "745": "\nSELECT id FROM publisher WHERE publisher_name = 'Star Trek';\n\n\t----- bird -----\tsuperhero",
    "746": "\nSELECT AVG(attribute_value) AS average_attribute_value\nFROM hero_attribute\n\n\t----- bird -----\tsuperhero",
    "747": "\nSELECT COUNT(*) FROM superhero WHERE full_name IS NULL OR full_name = ''\n\n\t----- bird -----\tsuperhero",
    "748": "\nSELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.id = 75;\n\n\t----- bird -----\tsuperhero",
    "749": "\nSELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Deathlok';\n\n\t----- bird -----\tsuperhero",
    "750": "\nSELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')\n\n\t----- bird -----\tsuperhero",
    "751": "\nSELECT sp.power_name, sh.superhero_name\nFROM superhero sh\nJOIN hero_power hp ON sh.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON sh.gender_id = g.id\nWHERE g.gender = 'male'\nLIMIT 5;\n\n\t----- bird -----\tsuperhero",
    "752": "\nSELECT superhero_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'alien')\n\n\t----- bird -----\tsuperhero",
    "753": "\nSELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id IS NULL; \n\n\t----- bird -----\tsuperhero",
    "754": "\nSELECT sp.power_name FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id WHERE hp.hero_id = 56;\n\n\t----- bird -----\tsuperhero",
    "755": "\nSELECT s.full_name FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Demi-God' LIMIT 5;\n\n\t----- bird -----\tsuperhero",
    "756": "\nSELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')\n\n\t----- bird -----\tsuperhero",
    "757": "\nSELECT r.race FROM race AS r JOIN superhero AS s ON r.id = s.race_id WHERE s.weight_kg = 169\n\n\t----- bird -----\tsuperhero",
    "758": "\nSELECT c.colour FROM superhero s JOIN colour c ON s.hair_colour_id = c.id WHERE s.race_id = (SELECT id FROM race WHERE race = 'human') AND s.height_cm = 185\n\n\t----- bird -----\tsuperhero",
    "759": "\nSELECT c.colour FROM colour AS c JOIN superhero AS s ON c.id = s.eye_colour_id ORDER BY s.weight_kg DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "760": "\nSELECT CAST(COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN s.id END) AS FLOAT) * 100 / COUNT(s.id) AS percentage_marvel_heroes\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.height_cm BETWEEN 150 AND 180\n\n\t----- bird -----\tsuperhero",
    "761": "\nSELECT s.full_name FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id WHERE g.gender = 'Male' AND s.weight_kg > (SELECT 0.79 * AVG(weight_kg) FROM superhero)\n\n\t----- bird -----\tsuperhero",
    "762": "\nSELECT power_name, COUNT(*) as count\nFROM hero_power\nJOIN superpower ON hero_power.power_id = superpower.id\nGROUP BY power_name\nORDER BY count DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "763": "\nSELECT ha.attribute_value, a.attribute_name \nFROM hero_attribute ha\nJOIN superhero s ON ha.hero_id = s.id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = 'Abomination'\n\n\t----- bird -----\tsuperhero",
    "764": "\nSELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_id = 1;\n\n\t----- bird -----\tsuperhero",
    "765": "\nSELECT COUNT(*) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'stealth')\n\n\t----- bird -----\tsuperhero",
    "766": "\nSELECT s.full_name FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id WHERE ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'strength') ORDER BY ha.attribute_value DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "767": "\nSELECT AVG(weight_kg) AS average_weight FROM superhero WHERE skin_colour_id IS NULL;\n\n\t----- bird -----\tsuperhero",
    "768": "\nSELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'\n\n\t----- bird -----\tsuperhero",
    "769": "\nSELECT s.superhero_name, a.attribute_value \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'Durability' AND p.publisher_name = 'Dark Horse Comics'\nORDER BY a.attribute_value DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "770": "\nSELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.full_name = 'Abraham Sapien'\n\n\t----- bird -----\tsuperhero",
    "771": "\nSELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'flight'\n\n\t----- bird -----\tsuperhero",
    "772": "\nSELECT c.colour, e.colour, s.colour \nFROM superhero h\nJOIN colour c ON h.eye_colour_id = c.id\nJOIN colour e ON h.hair_colour_id = e.id\nJOIN colour s ON h.skin_colour_id = s.id\nJOIN gender g ON h.gender_id = g.id\nJOIN publisher p ON h.publisher_id = p.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\n\n\t----- bird -----\tsuperhero",
    "773": "\nSELECT s.superhero_name, p.publisher_name \nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE (s.eye_colour_id, s.hair_colour_id, s.skin_colour_id) IN (\n    SELECT eye_colour_id, hair_colour_id, skin_colour_id \n    FROM superhero\n    GROUP BY eye_colour_id, hair_colour_id, skin_colour_id\n    HAVING COUNT(*) > 1\n)\n\n\t----- bird -----\tsuperhero",
    "774": "\nSELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'A-Bomb'\n\n\t----- bird -----\tsuperhero",
    "775": "\nSELECT CAST(COUNT(CASE WHEN T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM superhero AS T1 \nJOIN gender AS T2 ON T1.gender_id = T2.id \nWHERE T2.gender = 'Female'\n\n\t----- bird -----\tsuperhero",
    "776": "\nSELECT s.superhero_name, r.race \nFROM superhero AS s\nJOIN race AS r ON s.race_id = r.id\nWHERE s.full_name = 'Charles Chandler';\n\n\t----- bird -----\tsuperhero",
    "777": "\nSELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id WHERE superhero.superhero_name = 'Agent 13'\n\n\t----- bird -----\tsuperhero",
    "778": "\nSELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'adaptation'\n\n\t----- bird -----\tsuperhero",
    "779": "\nSELECT COUNT(*) FROM hero_power HP JOIN superhero S ON HP.hero_id = S.id WHERE S.superhero_name = 'Amazo'\n\n\t----- bird -----\tsuperhero",
    "780": "\nSELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Hunter Zolomon';\n\n\t----- bird -----\tsuperhero",
    "781": "\nSELECT s.height_cm FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour = 'amber'\n\n\t----- bird -----\tsuperhero",
    "782": "\nSELECT s.superhero_name FROM superhero AS s JOIN colour AS e ON s.eye_colour_id = e.id JOIN colour AS h ON s.hair_colour_id = h.id WHERE e.colour = 'black' AND h.colour = 'black'\n\n\t----- bird -----\tsuperhero",
    "783": "\nSELECT c.colour FROM colour AS c JOIN superhero AS s ON s.eye_colour_id = c.id WHERE s.skin_colour_id IN (SELECT id FROM colour WHERE colour = 'gold')\n\n\t----- bird -----\tsuperhero",
    "784": "\nSELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'vampire')\n\n\t----- bird -----\tsuperhero",
    "785": "\nSELECT superhero_name FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')\n\n\t----- bird -----\tsuperhero",
    "786": "\nSELECT COUNT(*) AS hero_count\nFROM (\n    SELECT hero_id\n    FROM hero_attribute\n    WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'strength')\n    ORDER BY attribute_value DESC\n    LIMIT 1\n) AS max_strength_heroes\n\n\t----- bird -----\tsuperhero",
    "787": "\nSELECT r.race, a.alignment FROM superhero s JOIN race r ON s.race_id = r.id JOIN alignment a ON s.alignment_id = a.id WHERE s.full_name = 'Cameron Hicks'\n\n\t----- bird -----\tsuperhero",
    "788": "\nSELECT CAST(COUNT(*) AS FLOAT) * 100 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) \nFROM superhero \nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') \nAND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')\n\n\t----- bird -----\tsuperhero",
    "789": "\nSELECT AVG(weight_kg) AS average_weight FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'alien')\n\n\t----- bird -----\tsuperhero",
    "790": "\nSELECT ABS((s1.weight_kg - s2.weight_kg)) AS weight_difference\nFROM superhero s1, superhero s2\nWHERE s1.full_name = 'Emil Blonsky' AND s2.full_name = 'Charles Chandler'\n\n\t----- bird -----\tsuperhero",
    "791": "\nSELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name\n\n\t----- bird -----\tsuperhero",
    "792": "\nSELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Abomination'\n\n\t----- bird -----\tsuperhero",
    "793": "\nSELECT COUNT(*) FROM superhero S JOIN race R ON S.race_id = R.id JOIN gender G ON S.gender_id = G.id WHERE R.race = 'god/eternal' AND G.gender = 'male'\n\n\t----- bird -----\tsuperhero",
    "794": "\nSELECT superhero_name FROM superhero WHERE attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed')) AND hero_attribute.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed')\n\n\t----- bird -----\tsuperhero",
    "795": "\nSELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')\n\n\t----- bird -----\tsuperhero",
    "796": "\nSELECT attribute.attribute_name, hero_attribute.attribute_value \nFROM superhero \nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id \nJOIN attribute ON hero_attribute.attribute_id = attribute.id \nWHERE superhero.superhero_name = '3-D Man';\n\n\t----- bird -----\tsuperhero",
    "797": "\nSELECT s.superhero_name FROM superhero AS s JOIN colour AS e ON s.eye_colour_id = e.id JOIN colour AS h ON s.hair_colour_id = h.id WHERE e.colour = 'blue' AND h.colour = 'brown'\n\n\t----- bird -----\tsuperhero",
    "798": "\nSELECT T2.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\n\n\t----- bird -----\tsuperhero",
    "799": "\nSELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\n\n\t----- bird -----\tsuperhero",
    "800": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM superhero) * 100\nFROM superhero\nWHERE eye_colour_id = (\n    SELECT id \n    FROM colour \n    WHERE colour = 'blue'\n)\n\n\t----- bird -----\tsuperhero",
    "801": "\nSELECT \n    (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Male')) * 1.0 / \n    (SELECT COUNT(*) FROM superhero) AS male_ratio,\n    (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) * 1.0 /\n    (SELECT COUNT(*) FROM superhero) AS female_ratio\n\n\t----- bird -----\tsuperhero",
    "802": "\nSELECT superhero_name, height_cm FROM superhero ORDER BY height_cm DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "803": "\nSELECT id FROM superpower WHERE power_name = 'cryokinesis'\n\n\t----- bird -----\tsuperhero",
    "804": "\nSELECT superhero_name FROM superhero WHERE id = 294;\n\n\t----- bird -----\tsuperhero",
    "805": "\nSELECT full_name FROM superhero WHERE weight_kg IS NULL\n\n\t----- bird -----\tsuperhero",
    "806": "\nSELECT c.colour FROM colour AS c JOIN superhero AS s ON c.id = s.eye_colour_id WHERE s.full_name = 'Karen Beecher-Duncan'\n\n\t----- bird -----\tsuperhero",
    "807": "\nSELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.full_name = 'Helen Parr'\n\n\t----- bird -----\tsuperhero",
    "808": "\nSELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.weight_kg = 108 AND s.height_cm = 188\n\n\t----- bird -----\tsuperhero",
    "809": "\nSELECT p.publisher_name FROM publisher p JOIN superhero s ON p.id = s.publisher_id WHERE s.id = 38;\n\n\t----- bird -----\tsuperhero",
    "810": "\nSELECT r.race FROM race AS r JOIN superhero AS s ON r.id = s.race_id WHERE s.id IN (SELECT hero_id FROM hero_attribute ORDER BY attribute_value DESC LIMIT 1)\n\n\t----- bird -----\tsuperhero",
    "811": "\nSELECT a.alignment, p.power_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE s.superhero_name = 'Atom IV';\n\n\t----- bird -----\tsuperhero",
    "812": "\nSELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour = 'blue' LIMIT 5;\n\n\t----- bird -----\tsuperhero",
    "813": "\nSELECT AVG(ha.attribute_value) AS average_attribute_value\nFROM hero_attribute ha\nJOIN superhero s ON ha.hero_id = s.id\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'neutral'\nGROUP BY a.alignment\n\n\t----- bird -----\tsuperhero",
    "814": "\nSELECT c.colour\nFROM colour c\nJOIN superhero s ON c.id = s.skin_colour_id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nWHERE ha.attribute_value = 100\nGROUP BY c.colour\n\n\t----- bird -----\tsuperhero",
    "815": "\nSELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.gender_id = gender.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE gender.gender = 'Female' AND alignment.alignment = 'Good'\n\n\t----- bird -----\tsuperhero",
    "816": "\nSELECT s.superhero_name FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id WHERE ha.attribute_value BETWEEN 75 AND 80\n\n\t----- bird -----\tsuperhero",
    "817": "\nSELECT r.race FROM race AS r JOIN superhero AS s ON r.id = s.race_id JOIN colour AS c ON s.hair_colour_id = c.id JOIN gender AS g ON s.gender_id = g.id WHERE c.colour = 'blue' AND g.gender = 'male'\n\n\t----- bird -----\tsuperhero",
    "818": "\nSELECT CAST(COUNT(CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM superhero \nWHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\n\n\t----- bird -----\tsuperhero",
    "819": "\nSELECT \n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL) -\n    (SELECT COUNT(*) FROM superhero WHERE eye_colour_id IS NULL AND weight_kg IS NULL) AS difference;\n\n\t----- bird -----\tsuperhero",
    "820": "\nSELECT ha.attribute_value \nFROM hero_attribute ha\nJOIN superhero s ON ha.hero_id = s.id\nWHERE s.superhero_name = 'Hulk' AND a.attribute_name = 'Strength'\n\n\t----- bird -----\tsuperhero",
    "821": "\nSELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Ajax';\n\n\t----- bird -----\tsuperhero",
    "822": "\nSELECT COUNT(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'green' AND T3.alignment = 'evil'\n\n\t----- bird -----\tsuperhero",
    "823": "\nSELECT COUNT(*) FROM superhero S JOIN gender G ON S.gender_id = G.id JOIN publisher P ON S.publisher_id = P.id WHERE G.gender = 'Female' AND P.publisher_name = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "824": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'control wind'\nORDER BY s.superhero_name ASC;\n\n\t----- bird -----\tsuperhero",
    "825": "\nSELECT g.gender\nFROM gender g\nJOIN superhero s ON g.id = s.gender_id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Phoenix Force'\n\n\t----- bird -----\tsuperhero",
    "826": "\nSELECT s.superhero_name, p.publisher_name, s.weight_kg AS weight\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'DC Comics'\nORDER BY s.weight_kg DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "827": "\nSELECT AVG(T1.height_cm) FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race != 'Human' AND T3.publisher_name = 'Dark Horse Comics'\n\n\t----- bird -----\tsuperhero",
    "828": "\nSELECT superhero_id, attribute_value AS speed \nFROM hero_attribute \nWHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') \nORDER BY attribute_value DESC \nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "829": "\nSELECT p.publisher_name, COUNT(s.id) AS superhero_count,\n(CASE \n    WHEN p.publisher_name = 'DC Comics' THEN COUNT(s.id)\n    ELSE 0\nEND -\nCASE \n    WHEN p.publisher_name = 'Marvel Comics' THEN COUNT(s.id)\n    ELSE 0\nEND) AS difference\nFROM publisher p\nJOIN superhero s ON p.id = s.publisher_id\nWHERE p.publisher_name IN ('DC Comics', 'Marvel Comics')\nGROUP BY p.publisher_name;\n\n\t----- bird -----\tsuperhero",
    "830": "\nSELECT a.attribute_name, ha.attribute_value \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = 'Black Panther'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "831": "\nSELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = 'Abomination'\n\n\t----- bird -----\tsuperhero",
    "832": "\nSELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "833": "\nSELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\n\n\t----- bird -----\tsuperhero",
    "834": "\nSELECT CAST(COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'George Lucas'\n\n\t----- bird -----\tsuperhero",
    "835": "\nSELECT CAST(COUNT(CASE WHEN T1.alignment_id = (SELECT id FROM alignment WHERE alignment = 'good') THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS percentage_good_superheroes\nFROM superhero AS T1\nJOIN publisher AS T2 ON T1.publisher_id = T2.id\nWHERE T2.publisher_name = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "836": "\nSELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\n\n\t----- bird -----\tsuperhero",
    "837": "\nSELECT hero_id FROM hero_attribute WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute)\n\n\t----- bird -----\tsuperhero",
    "838": "\nSELECT full_name FROM superhero WHERE superhero_name = 'Alien'\n\n\t----- bird -----\tsuperhero",
    "839": "\nSELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE s.weight_kg < 100 AND c.colour = 'brown'\n\n\t----- bird -----\tsuperhero",
    "840": "\nSELECT ha.attribute_value, a.attribute_name\nFROM hero_attribute ha\nJOIN superhero s ON ha.hero_id = s.id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = 'Aquababy'\n\n\t----- bird -----\tsuperhero",
    "841": "\nSELECT weight_kg, race.race \nFROM superhero \nJOIN race ON superhero.race_id = race.id \nWHERE superhero.id = 40;\n\n\t----- bird -----\tsuperhero",
    "842": "\nSELECT AVG(height_cm) AS average_height FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')\n\n\t----- bird -----\tsuperhero",
    "843": "\nSELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'intellegence')\n\n\t----- bird -----\tsuperhero",
    "844": "\nSELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = 'Blackwulf'\n\n\t----- bird -----\tsuperhero",
    "845": "\nSELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id WHERE sh.height_cm > (SELECT 0.8 * AVG(height_cm) FROM superhero)\n\n\t----- bird -----\tsuperhero",
    "846": "\nSELECT d.driverRef\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId IN (\n    SELECT r.raceId\n    FROM races r\n    WHERE r.round = 18\n) AND q.position BETWEEN 18 AND 20\n\n\t----- bird -----\tformula_1",
    "847": "\nSELECT d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId IN (\n    SELECT r.raceId\n    FROM races r\n    WHERE r.round = 19\n)\nORDER BY \nCASE \n    WHEN q.q2 IS NOT NULL THEN q.q2\nEND ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "848": "\nSELECT DISTINCT s.year\nFROM seasons s\nJOIN races r ON s.year = r.year\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.location = 'Shanghai'\n\n\t----- bird -----\tformula_1",
    "849": "\nSELECT r.name, c.name AS circuit_name, s.year, c.location, c.country, r.date \nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN seasons s ON r.year = s.year\nWHERE c.name = 'Circuit de Barcelona-Catalunya'\nORDER BY r.date;\n\n\t----- bird -----\tformula_1",
    "850": "\nSELECT r.name AS race_name, c.name AS circuit_name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany';\n\n\t----- bird -----\tformula_1",
    "851": "\nSELECT c.name, c.location, c.country \nFROM circuits AS c\nJOIN races AS r ON c.circuitId = r.circuitId\nJOIN results AS res ON r.raceId = res.raceId\nJOIN constructors AS con ON res.constructorId = con.constructorId\nWHERE con.name = 'Renault'\nGROUP BY c.circuitId, c.name, c.location, c.country\n\n\t----- bird -----\tformula_1",
    "852": "\nSELECT COUNT(*)\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE YEAR(r.date) = 2010 AND NOT (c.country IN ('China', 'Japan', 'Malaysia', 'Singapore', 'Bahrain', 'Europe'))\n\n\t----- bird -----\tformula_1",
    "853": "\nSELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain'\n\n\t----- bird -----\tformula_1",
    "854": "\nSELECT location, lat, lng FROM circuits WHERE name = 'Australian Grand Prix'\n\n\t----- bird -----\tformula_1",
    "855": "\nSELECT races.name, seasons.year, races.date \nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nJOIN seasons ON races.year = seasons.year\nWHERE circuits.name = 'Sepang International Circuit'\nORDER BY races.date;\n\n\t----- bird -----\tformula_1",
    "856": "\nSELECT r.time \nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Sepang International Circuit'\nAND r.time IS NOT NULL;\n\n\t----- bird -----\tformula_1",
    "857": "\nSELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi'\n\n\t----- bird -----\tformula_1",
    "858": "\nSELECT C.country\nFROM constructors C\nJOIN constructorResults CR ON C.constructorId = CR.constructorId\nJOIN races R ON CR.raceId = R.raceId\nWHERE CR.points = 1 AND R.round = 24\n\n\t----- bird -----\tformula_1",
    "859": "\nSELECT q.q1 \nFROM qualifying AS q\nJOIN drivers AS d ON q.driverId = d.driverId\nWHERE d.forename = 'Bruno' AND d.surname = 'Senna' AND q.raceId = 354;\n\n\t----- bird -----\tformula_1",
    "860": "\nSELECT D.nationality FROM drivers AS D JOIN qualifying AS Q ON D.driverId = Q.driverId WHERE Q.qualifyId IN (SELECT qualifyId FROM qualifying WHERE raceId = 355 AND q2 = '0:01:40')\n\n\t----- bird -----\tformula_1",
    "861": "\nSELECT number FROM qualifying WHERE raceId = 903 AND q3 = '0:01:54'\n\n\t----- bird -----\tformula_1",
    "862": "\nSELECT COUNT(*)\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.statusId NOT IN (SELECT statusId FROM status WHERE status = 'Finished')\n\n\t----- bird -----\tformula_1",
    "863": "\nSELECT s.year, s.url AS season_url, r.name AS race_name, r.date \nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\n\n\t----- bird -----\tformula_1",
    "864": "\nSELECT COUNT(DISTINCT driverId) AS numberOfDriversFinished\nFROM results\nWHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29')\nAND position IS NOT NULL AND position != 0\n\n\t----- bird -----\tformula_1",
    "865": "\nSELECT D.surname, D.forename FROM drivers AS D JOIN results AS R ON D.driverId = R.driverId WHERE R.raceId = 592 AND R.position IS NOT NULL ORDER BY D.dob ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "866": "\nSELECT d.url AS driver_website\nFROM results r\nJOIN qualifying q ON r.raceId = q.raceId AND r.driverId = q.driverId\nJOIN lapTimes lt ON r.raceId = lt.raceId AND r.driverId = lt.driverId\nWHERE r.raceId = 161 AND lt.time = '0:01:27'\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "867": "\nSELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 933 AND r.fastestLapSpeed IS NOT NULL ORDER BY CAST(r.fastestLapSpeed AS REAL) DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "868": "\nSELECT c.lat, c.lng FROM circuits AS c JOIN races AS r ON c.circuitId = r.circuitId WHERE r.name = 'Malaysian Grand Prix'\n\n\t----- bird -----\tformula_1",
    "869": "\nSELECT c.url \nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nWHERE r.round = 9\nORDER BY cr.points DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "870": "\nSELECT q.q1 \nFROM qualifying AS q\nJOIN drivers AS d ON q.driverId = d.driverId\nJOIN races AS r ON q.raceId = r.raceId\nWHERE d.forename = 'Lucas' AND d.surname = 'Di Grassi' AND r.round = 345;\n\n\t----- bird -----\tformula_1",
    "871": "\nSELECT d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.raceId = 347 AND q.q2 = '0:01:15'\n\n\t----- bird -----\tformula_1",
    "872": "\nSELECT d.code\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.position IN (1, 2, 3) AND q.q3 = '0:01:33' AND EXISTS (\n    SELECT 1 FROM races r WHERE r.raceId = q.raceId AND r.round = 45\n)\n\n\t----- bird -----\tformula_1",
    "873": "\nSELECT r.time\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Bruce' AND d.surname = 'McLaren' AND r.raceid = 743\n\n\t----- bird -----\tformula_1",
    "874": "\nSELECT d.forename, d.surname\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'San Marino Grand Prix' AND ra.year = 2006 AND r.position = 2\n\n\t----- bird -----\tformula_1",
    "875": "\nSELECT s.year, s.url AS season_url, r.name AS race_name, r.date \nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\n\n\t----- bird -----\tformula_1",
    "876": "\nSELECT COUNT(DISTINCT driverId) AS numberOfDriversFinished\nFROM results\nWHERE raceId IN (\n    SELECT raceId\n    FROM races\n    WHERE date = '2015-11-29'\n);\n\n\t----- bird -----\tformula_1",
    "877": "\nSELECT d.driverId, d.forename, d.surname, d.dob \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nWHERE r.raceId = 872 AND r.position IS NOT NULL \nORDER BY d.dob DESC \nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "878": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 348\nORDER BY r.fastestLapTime ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "879": "\nSELECT D.nationality FROM drivers D JOIN results R ON D.driverId = R.driverId WHERE R.fastestLapSpeed IS NOT NULL ORDER BY CAST(SUBSTR(R.fastestLapSpeed, INSTR(R.fastestLapSpeed, ' ') + 1) AS REAL) DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "880": "\nWITH FastestLapSpeeds AS (\n    SELECT r.raceId, d.forename, d.surname, r.year,\n           ROW_NUMBER() OVER (PARTITION BY r.raceId ORDER BY res.fastestLapSpeed) as lap_order,\n           res.fastestLapSpeed\n    FROM results res\n    JOIN drivers d ON res.driverId = d.driverId\n    JOIN races r ON res.raceId = r.raceId\n    WHERE d.forename = 'Paul' AND d.surname = 'di Resta'\n)\nSELECT \n    f1.raceId AS raceId_853,\n    f2.raceId AS next_race_id,\n    (f1.fastestLapSpeed::float - f2.fastestLapSpeed::float) / f2.fastestLapSpeed::float * 100 as percent_faster\nFROM FastestLapSpeeds f1\nJOIN FastestLapSpeeds f2 ON f1.lap_order = f2.lap_order + 1 AND f1.year = f2.year\nWHERE f1.lap_order = 853;\n\n\t----- bird -----\tformula_1",
    "881": "\nSELECT d.driverId, d.forename || ' ' || d.surname AS driverName, COUNT(r.raceId) filter (WHERE r.statusId = 1) as completedRaces, COUNT(r.raceId) as totalRaces, ((COUNT(r.raceId) filter (WHERE r.statusId = 1)::float / COUNT(r.raceId)) * 100) as completionRate\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.date = '1983-07-16'\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY totalRaces DESC;\n\n\t----- bird -----\tformula_1",
    "882": "\nSELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY date LIMIT 1\n\n\t----- bird -----\tformula_1",
    "883": "\nSELECT name, date \nFROM races \nWHERE year = 2005 \nORDER BY date DESC;\n\n\t----- bird -----\tformula_1",
    "884": "\nSELECT r1.name AS first_race, r2.name AS other_races_in_same_month_year\nFROM races r1\nJOIN races r2 ON DATE_TRUNC('month', r1.date) = DATE_TRUNC('month', r2.date)\nWHERE r1.raceId = (\n    SELECT MIN(raceId) \n    FROM races\n)\nAND r1.raceId != r2.raceId\nORDER BY r1.name, r2.name;\n\n\t----- bird -----\tformula_1",
    "885": "\nSELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "886": "\nSELECT year FROM races GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "887": "\nSELECT r.name FROM races AS r JOIN seasons AS s ON r.year = s.year WHERE r.year = 2017 AND r.circuitId NOT IN (SELECT circuitId FROM races WHERE year = 2000)\n\n\t----- bird -----\tformula_1",
    "888": "\nSELECT c.country, c.name, c.location \nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.name LIKE 'European Grand Prix'\nORDER BY r.date ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "889": "\nSELECT s.year\nFROM seasons s\nJOIN races r ON s.year = r.year\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'British Grand Prix' AND c.name = 'Brands Hatch'\nORDER BY s.year DESC\nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "890": "\nSELECT COUNT(DISTINCT r.year) \nFROM races AS r\nJOIN circuits AS c ON r.circuitId = c.circuitId\nWHERE c.name = 'Silverstone' AND c.country = 'United Kingdom'\n\n\t----- bird -----\tformula_1",
    "891": "\nSELECT d.forename, d.surname \nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Singapore Grand Prix' AND ra.year = 2010\nORDER BY r.position\n\n\t----- bird -----\tformula_1",
    "892": "\nSELECT d.forename, d.surname, SUM(r.points) AS total_points\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nGROUP BY d.driverId\nORDER BY total_points DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "893": "\nSELECT d.forename, d.surname, rs.points\nFROM driverStandings rs\nJOIN drivers d ON rs.driverId = d.driverId\nJOIN races r ON rs.raceId = r.raceId\nWHERE r.name = 'Chinese Grand Prix' AND r.year = 2017\nORDER BY rs.points DESC\nLIMIT 3;\n\n\t----- bird -----\tformula_1",
    "894": "\nSELECT d.forename, d.surname, r.name AS race_name, l.time AS best_lap_time\nFROM lapTimes l\nJOIN drivers d ON l.driverId = d.driverId\nJOIN races r ON l.raceId = r.raceId\nWHERE l.time IN (\n    SELECT MIN(time)\n    FROM lapTimes\n);\n\n\t----- bird -----\tformula_1",
    "895": "\nSELECT AVG(lapTimes.time) AS average_lap_time\nFROM lapTimes\nJOIN races ON lapTimes.raceId = races.raceId\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel' AND races.name = '2009 Chinese Grand Prix'\n\n\t----- bird -----\tformula_1",
    "896": "\nSELECT CAST(COUNT(CASE WHEN r.position != 1 THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage_not_first\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND r.year >= 2010;\n\n\t----- bird -----\tformula_1",
    "897": "\nSELECT d.forename, d.surname, d.nationality, AVG(rs.points) AS average_points\nFROM drivers d\nJOIN driverStandings rs ON d.driverId = rs.driverId\nWHERE rs.wins = (\n    SELECT MAX(wins)\n    FROM driverStandings\n)\nGROUP BY d.driverId\nORDER BY rs.wins DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "898": "\nSELECT MIN(YEAR(CURDATE()) - YEAR(dob)) AS age, forename, surname \nFROM drivers \nWHERE nationality = 'Japanese'\nGROUP BY driverId \nORDER BY age ASC \nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "899": "\nSELECT c.name, COUNT(r.raceId) AS race_count\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.year BETWEEN 1990 AND 2000\nGROUP BY c.circuitId\nHAVING race_count = 4;\n\n\t----- bird -----\tformula_1",
    "900": "\nSELECT c.name, c.location, r.name AS race_name\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE c.country = 'USA' AND r.year = 2006;\n\n\t----- bird -----\tformula_1",
    "901": "\nSELECT r.name AS race_name, c.name AS circuit_name, c.location \nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005\n\n\t----- bird -----\tformula_1",
    "902": "\nSELECT r.name, r.date, r.time \nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND res.grid < 10;\n\n\t----- bird -----\tformula_1",
    "903": "\nSELECT COUNT(r.raceId) AS wins\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND c.name = 'Sepang International Circuit' AND res.position = 1;\n\n\t----- bird -----\tformula_1",
    "904": "\nSELECT r.name AS race, r.year \nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher'\nORDER BY res.fastestLapSpeed DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "905": "\nSELECT AVG(T2.points) AS average_points\nFROM drivers AS T1\nJOIN driverStandings AS T2 ON T1.driverId = T2.driverId\nWHERE T1.forename = 'Eddie' AND T1.surname = 'Irvine' AND T2.raceId IN (SELECT raceId FROM races WHERE year = 2000)\n\n\t----- bird -----\tformula_1",
    "906": "\nSELECT r.year, r.round, d.forename, d.surname, res.points \nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.date ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "907": "\nSELECT races.name, circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2017 ORDER BY races.date\n\n\t----- bird -----\tformula_1",
    "908": "\nSELECT r.name AS race_name, s.year, c.location \nFROM races r\nJOIN seasons s ON r.year = s.year\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN results res ON r.raceId = res.raceId\nORDER BY res.laps DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "909": "\nSELECT CAST(COUNT(CASE WHEN C.country = 'Germany' THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS percentage\nFROM races R\nJOIN circuits C ON R.circuitId = C.circuitId\nWHERE R.name = 'European Grand Prix'\n\n\t----- bird -----\tformula_1",
    "910": "\nSELECT lat, lng FROM circuits WHERE name = 'Silverstone'\n\n\t----- bird -----\tformula_1",
    "911": "\nSELECT name, lat FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "912": "\nSELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\n\n\t----- bird -----\tformula_1",
    "913": "\nSELECT country FROM circuits ORDER BY alt DESC LIMIT 1; \n\n\t----- bird -----\tformula_1",
    "914": "\nSELECT COUNT(*) FROM drivers WHERE code IS NULL OR code = ''\n\n\t----- bird -----\tformula_1",
    "915": "\nSELECT T2.country FROM drivers AS T1 JOIN circuits AS T2 ON T1.driverId = T2.circuitId ORDER BY T1.dob ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "916": "\nSELECT surname FROM drivers WHERE nationality = 'Italian'\n\n\t----- bird -----\tformula_1",
    "917": "\nSELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'\n\n\t----- bird -----\tformula_1",
    "918": "\nSELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\n\n\t----- bird -----\tformula_1",
    "919": "\nSELECT c.name, c.location, c.country \nFROM circuits AS c\nJOIN races AS r ON c.circuitId = r.circuitId\nWHERE r.year = 2009 AND r.name LIKE '%Spanish Grand Prix%'\n\n\t----- bird -----\tformula_1",
    "920": "\nSELECT DISTINCT s.year\nFROM seasons s\nJOIN races r ON s.year = r.year\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Silverstone Circuit'\nORDER BY s.year ASC;\n\n\t----- bird -----\tformula_1",
    "921": "\nSELECT r.raceId, r.name AS raceName, r.date, c.name AS circuitName, c.location, c.country\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Silverstone Circuit'\nORDER BY r.date;\n\n\t----- bird -----\tformula_1",
    "922": "\nSELECT r.time \nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Abu Dhabi' AND r.year = 2010;\n\n\t----- bird -----\tformula_1",
    "923": "\nSELECT COUNT(raceId) \nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Italy'\n\n\t----- bird -----\tformula_1",
    "924": "\nSELECT r.date \nFROM races AS r\nJOIN circuits AS c ON r.circuitId = c.circuitId\nWHERE c.name = 'Barcelona-Catalunya'\n\n\t----- bird -----\tformula_1",
    "925": "\nSELECT c.url\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.name = 'Spanish Grand Prix' AND r.year = 2009;\n\n\t----- bird -----\tformula_1",
    "926": "\nSELECT r.raceId, r.time AS raceTime, res.fastestLapTime \nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.fastestLapTime ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "927": "\nSELECT d.forename, d.surname \nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.fastestLapSpeed IS NOT NULL\nORDER BY CAST(SUBSTRING(r.fastestLapSpeed FROM '\\d+') AS DECIMAL(10,2)) DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "928": "\nSELECT d.driverRef\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Australian Grand Prix' AND ra.year = 2008 AND r.position = 1;\n\n\t----- bird -----\tformula_1",
    "929": "\nSELECT r.name AS race_name, r.date, r.time \nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.date;\n\n\t----- bird -----\tformula_1",
    "930": "\nSELECT r.name, MIN(rs.position) AS highest_rank\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN driverStandings rs ON res.driverId = rs.driverId AND res.raceId = rs.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nGROUP BY r.name, res.raceId\nORDER BY MIN(rs.position) ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "931": "\nSELECT r.driverId, d.forename || ' ' || d.surname AS driverName, r.fastestLapSpeed\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Spanish Grand Prix' AND ra.year = 2009\nORDER BY CAST(r.fastestLapSpeed AS REAL) DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "932": "\nSELECT DISTINCT s.year\nFROM seasons s\nJOIN races r ON s.year = r.year\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY s.year ASC;\n\n\t----- bird -----\tformula_1",
    "933": "\nSELECT r.rank\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND ra.name = 'Australian Grand Prix'\nAND ra.year = 2008;\n\n\t----- bird -----\tformula_1",
    "934": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE r.grid = 4 AND ra.name = 'Australian Grand Prix' AND ra.year = 2008;\n\n\t----- bird -----\tformula_1",
    "935": "\nSELECT COUNT(*)\nFROM results\nWHERE raceId = (\n    SELECT raceId\n    FROM races\n    WHERE year = 2008 AND round = 1\n) AND position < 100\n\n\t----- bird -----\tformula_1",
    "936": "\nSELECT r.raceId, d.forename, d.surname, r.name AS raceName, s.q1, s.q2, s.q3, l.time AS fastestLapTime, l.lap AS fastestLapNumber\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nLEFT JOIN qualifying s ON r.resultId = s.qualifyId\nLEFT JOIN lapTimes l ON r.resultId = l.driverId AND r.raceId = l.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND ra.name = 'Australian Grand Prix' AND ra.year = 2008\nORDER BY l.milliseconds ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "937": "\nSELECT r.time \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE r.position = 2 AND ra.name = 'Australian Grand Prix' AND ra.year = 2008\n\n\t----- bird -----\tformula_1",
    "938": "\nSELECT d.forename, d.surname, d.url \nFROM drivers d \nJOIN driverStandings ds ON d.driverId = ds.driverId \nJOIN races r ON ds.raceId = r.raceId \nWHERE r.name = 'Australian Grand Prix' AND r.year = 2008 AND ds.position = 1\n\n\t----- bird -----\tformula_1",
    "939": "\nSELECT COUNT(DISTINCT d.driverId) \nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.nationality = 'USA' AND ra.name = 'Australian Grand Prix' AND ra.year = 2008\n\n\t----- bird -----\tformula_1",
    "940": "\nSELECT COUNT(DISTINCT d.driverId) \nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.position IS NOT NULL;\n\n\t----- bird -----\tformula_1",
    "941": "\nSELECT SUM(points) AS total_points\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\n\n\t----- bird -----\tformula_1",
    "942": "\nSELECT AVG(CAST(TIME AS FLOAT)) / 1000 AS average_fastest_lap_time_seconds\nFROM results R\nJOIN drivers D ON R.driverId = D.driverId\nWHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND fastestLapTime IS NOT NULL\n\n\t----- bird -----\tformula_1",
    "943": "\nSELECT COUNT(CASE WHEN T1.laps = T2.laps THEN 1 END) * 100 / COUNT(*) AS completion_rate\nFROM lapTimes AS T1\nJOIN (\n    SELECT raceId, MAX(lap) AS laps\n    FROM lapTimes\n    WHERE raceId IN (\n        SELECT raceId\n        FROM races\n        WHERE year = 2008 AND name = 'Australian Grand Prix'\n    )\n    GROUP BY raceId\n) AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId\nWHERE T1.lap = T2.laps\n\n\t----- bird -----\tformula_1",
    "944": "\nSELECT (1 - (rl.last_time / rl.champion_time)) * 100 AS percentage_faster\nFROM (\n    SELECT r.time AS champion_time, \n           (SELECT time FROM results WHERE raceId = r.raceId ORDER BY position DESC LIMIT 1) AS last_time\n    FROM results r\n    JOIN races ra ON r.raceId = ra.raceId\n    WHERE r.position = 1 AND ra.name = 'Australian Grand Prix' AND ra.year = 2008\n) rl\n\n\t----- bird -----\tformula_1",
    "945": "\nSELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';\n\n\t----- bird -----\tformula_1",
    "946": "\nSELECT location, lat, lng FROM circuits WHERE country = 'United States'\n\n\t----- bird -----\tformula_1",
    "947": "\nSELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01'\n\n\t----- bird -----\tformula_1",
    "948": "\nSELECT AVG(points) AS average_points\nFROM (\n    SELECT cr.points\n    FROM constructorResults cr\n    JOIN constructors c ON cr.constructorId = c.constructorId\n    WHERE c.nationality = 'British'\n) AS subquery\n\n\t----- bird -----\tformula_1",
    "949": "\nSELECT c.name, cr.points\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nGROUP BY c.name, cr.points\nORDER BY cr.points DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "950": "\nSELECT constructors.name FROM constructors\nJOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nWHERE raceId = 291 AND points = 0;\n\n\t----- bird -----\tformula_1",
    "951": "\nSELECT COUNT(DISTINCT c.constructorId) AS japanese_constructors_with_zero_points\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE c.nationality = 'Japanese' AND cr.points = 0\nGROUP BY c.constructorId\nHAVING COUNT(cr.raceId) = 2\n\n\t----- bird -----\tformula_1",
    "952": "\nSELECT DISTINCT c.name\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nWHERE cs.position = 1\n\n\t----- bird -----\tformula_1",
    "953": "\nSELECT COUNT(DISTINCT c.constructorId) \nFROM constructors c\nJOIN results r ON c.constructorId = r.constructorId\nWHERE c.nationality = 'French' AND r.laps > 50\n\n\t----- bird -----\tformula_1",
    "954": "\nSELECT d.driverId, (SUM(CASE WHEN r.position IS NOT NULL THEN 1 ELSE 0 END) * 100 / COUNT(r.raceId)) AS completion_percentage\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009\nGROUP BY d.driverId\n\n\t----- bird -----\tformula_1",
    "955": "\nSELECT r.year, AVG(SUBSTRING_INDEX(r.time, '.', 1) + SUBSTRING_INDEX(r.time, '.', -1) / 1000) AS avg_champion_time_seconds\nFROM results r\nJOIN (\n    SELECT raceId, MAX(points) as max_points\n    FROM results\n    GROUP BY raceId\n) subq ON r.raceId = subq.raceId AND r.points = subq.max_points\nGROUP BY r.year\n\n\t----- bird -----\tformula_1",
    "956": "\nSELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.position = 2 AND d.dob > '1975-01-01'\n\n\t----- bird -----\tformula_1",
    "957": "\nSELECT COUNT(DISTINCT d.driverId) \nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE d.nationality = 'Italian' AND r.statusId IN (\n    SELECT statusId FROM status WHERE status LIKE 'Did Not Finish%'\n)\n\n\t----- bird -----\tformula_1",
    "958": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.fastestLapTime = (\n    SELECT MIN(r2.fastestLapTime)\n    FROM results r2\n);\n\n\t----- bird -----\tformula_1",
    "959": "\nSELECT r.fastestLap FROM results AS r JOIN races AS ra ON r.raceId = ra.raceId WHERE ra.year = 2009 AND r.positionOrder = 1\n\n\t----- bird -----\tformula_1",
    "960": "\nSELECT AVG(T1.fastestLapSpeed) AS average_fastest_lap_speed\nFROM results AS T1\nJOIN races AS T2 ON T1.raceId = T2.raceId\nWHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\n\n\t----- bird -----\tformula_1",
    "961": "\nSELECT r.name, s.year FROM races AS r JOIN seasons AS s ON r.year = s.year WHERE r.time IS NOT NULL ORDER BY TIME(r.time) ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "962": "\nSELECT CAST(COUNT(CASE WHEN l.lap > 50 THEN r.driverId END) AS REAL) * 100 / COUNT(r.driverId) AS percentage\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN lapTimes l ON r.raceId = l.raceId AND r.driverId = l.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.dob < '1985-01-01' AND ra.year BETWEEN 2000 AND 2005\n\n\t----- bird -----\tformula_1",
    "963": "\nSELECT COUNT(DISTINCT d.driverId) \nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE d.nationality = 'French' AND lt.time < '02:00.00'\n\n\t----- bird -----\tformula_1",
    "964": "\nSELECT code FROM drivers WHERE nationality = 'America'\n\n\t----- bird -----\tformula_1",
    "965": "\nSELECT raceId FROM races WHERE year = 2009\n\n\t----- bird -----\tformula_1",
    "966": "\nSELECT COUNT(DISTINCT driverId) AS participant_count\nFROM results\nWHERE raceId = 18;\n\n\t----- bird -----\tformula_1",
    "967": "\nSELECT code, COUNT(*) FILTER (WHERE nationality = 'Netherlands') AS netherlandic_count\nFROM drivers\nORDER BY dob DESC\nLIMIT 3\n\n\t----- bird -----\tformula_1",
    "968": "\nSELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\n\n\t----- bird -----\tformula_1",
    "969": "\nSELECT COUNT(*) FROM drivers WHERE nationality = 'Australian' AND YEAR(dob) = 1980\n\n\t----- bird -----\tformula_1",
    "970": "\nSELECT d.forename, d.surname, r.year, r.name AS race_name, l.time AS lap_time\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nJOIN lapTimes l ON l.driverId = d.driverId AND l.raceId = r.raceId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31'\nORDER BY l.milliseconds ASC\nLIMIT 3\n\n\t----- bird -----\tformula_1",
    "971": "\nSELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "972": "\nSELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE YEAR(d.dob) = 1971 AND r.fastestLapTime IS NOT NULL\nORDER BY CAST(SUBSTRING_INDEX(r.fastestLapTime, '.', -1) AS TIME)\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "973": "\nSELECT d.driverId, d.forename, d.surname, l.time AS latest_lap_time\nFROM drivers d\nJOIN lapTimes l ON d.driverId = l.driverId\nWHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01'\nORDER BY l.time DESC\nLIMIT 10;\n\n\t----- bird -----\tformula_1",
    "974": "\nSELECT s.year\nFROM seasons s\nJOIN races r ON s.year = r.year\nJOIN results res ON r.raceId = res.raceId\nWHERE res.fastestLapTime IS NOT NULL\nORDER BY CAST(REPLACE(res.fastestLapTime, ':+', ':') AS TIME)\nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "975": "\nSELECT s.year\nFROM seasons s\nJOIN races r ON s.year = r.year\nJOIN results res ON r.raceId = res.raceId\nWHERE res.fastestLapSpeed IS NOT NULL\nORDER BY CAST(SUBSTRING(res.fastestLapSpeed, LENGTH(res.fastestLapSpeed) - 2) AS REAL)\nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "976": "\nSELECT driverId, MIN(milliseconds) AS fastest_first_lap_time\nFROM lapTimes\nGROUP BY driverId\nORDER BY fastest_first_lap_time ASC\nLIMIT 5;\n\n\t----- bird -----\tformula_1",
    "977": "\nSELECT COUNT(*)\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.round BETWEEN 50 AND 100\nAND r.statusId = (SELECT statusId FROM status WHERE status = 'Disqualified')\n\n\t----- bird -----\tformula_1",
    "978": "\nSELECT name, location, lat, lng \nFROM circuits \nWHERE country = 'Austria'\n\n\t----- bird -----\tformula_1",
    "979": "\nSELECT r.round, COUNT(res.driverId) AS finishers_count\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nWHERE res.position IS NOT NULL AND res.statusId IN (1, 25) -- Assuming statusId 1 is 'Finished' and 25 is for DNS but still counted as a participant\nGROUP BY r.round\nORDER BY finishers_count DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "980": "\nSELECT d.driverRef, d.nationality, d.dob \nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 23 AND q.q2 IS NOT NULL\n\n\t----- bird -----\tformula_1",
    "981": "\nSELECT s.year, r.name, r.date, r.time\nFROM seasons s\nJOIN races r ON s.year = r.year\nJOIN drivers d ON TRUE\nJOIN qualifying q ON r.raceId = q.raceId AND d.driverId = q.driverId\nWHERE d.dob = (\n    SELECT MIN(d2.dob)\n    FROM drivers d2\n    JOIN qualifying q2 ON d2.driverId = q2.driverId\n)\nORDER BY r.date ASC, r.time ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "982": "\nSELECT COUNT(*)\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE d.nationality = 'American'\nAND r.statusId = (SELECT statusId FROM status WHERE status = 'Disqualified')\n\n\t----- bird -----\tformula_1",
    "983": "\nSELECT c.url FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE c.nationality = 'Italian' ORDER BY cs.points DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "984": "\nSELECT c.url\nFROM constructors c\nJOIN (\n    SELECT constructorId, SUM(wins) AS totalWins\n    FROM constructorStandings\n    GROUP BY constructorId\n    ORDER BY totalWins DESC\n    LIMIT 1\n) cs ON c.constructorId = cs.constructorId\n\n\t----- bird -----\tformula_1",
    "985": "\nSELECT d.forename, d.surname, r.name AS race_name, l.time AS lap_time\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nJOIN lapTimes l ON l.raceId = r.raceId AND l.driverId = d.driverId\nWHERE r.name LIKE '%French Grand Prix%' AND l.lap = 3\nORDER BY l.milliseconds DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "986": "\nSELECT r.name AS race_name, l.milliseconds AS fastest_lap_milliseconds\nFROM lapTimes l\nJOIN races r ON l.raceId = r.raceId\nWHERE l.lap = 1 AND l.milliseconds = (\n    SELECT MIN(l2.milliseconds)\n    FROM lapTimes l2\n    WHERE l2.lap = 1\n);\n\n\t----- bird -----\tformula_1",
    "987": "\nSELECT AVG(T1.fastestLapTime) AS average_fastest_lap_time\nFROM results T1\nJOIN races T2 ON T1.raceId = T2.raceId\nWHERE T2.name = 'United States Grand Prix' AND T2.year = 2006\nAND T1.position <= 10\nGROUP BY T1.raceId;\n\n\t----- bird -----\tformula_1",
    "988": "\nSELECT d.driverId, d.forename, d.surname, AVG(p.milliseconds) AS avg_pit_stop_duration\nFROM drivers d\nJOIN pitStops p ON d.driverId = p.driverId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY avg_pit_stop_duration ASC\nLIMIT 5;\n\n\t----- bird -----\tformula_1",
    "989": "\nSELECT r.driverId, d.forename, d.surname, res.time \nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE r.name = 'Canadian Grand Prix' AND r.year = 2008 AND res.position = 1\n\n\t----- bird -----\tformula_1",
    "990": "\nSELECT c.constructorRef, c.url\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nJOIN races r ON cs.raceId = r.raceId\nWHERE r.name = 'Singapore Grand Prix' AND r.year = 2009 AND cs.position = 1\n\n\t----- bird -----\tformula_1",
    "991": "\nSELECT forename || ' ' || surname AS full_name, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31'\n\n\t----- bird -----\tformula_1",
    "992": "\nSELECT forename || ' ' || surname AS full_name, url, dob \nFROM drivers \nWHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31'\nORDER BY dob DESC\n\n\t----- bird -----\tformula_1",
    "993": "\nSELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\n\n\t----- bird -----\tformula_1",
    "994": "\nSELECT C.name, C.nationality, MAX(TotalPoints) AS PointsScored\nFROM (\n    SELECT CR.constructorId, SUM(CR.points) AS TotalPoints\n    FROM constructorResults CR\n    JOIN races R ON CR.raceId = R.raceId\n    JOIN circuits CT ON R.circuitId = CT.circuitId\n    WHERE CT.name = 'Monaco' AND R.date BETWEEN '1980-01-01' AND '2010-12-31'\n    GROUP BY CR.constructorId\n) AS SubQuery\nJOIN constructors C ON SubQuery.constructorId = C.constructorId\nGROUP BY C.name, C.nationality\nORDER BY PointsScored DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "995": "\nSELECT AVG(T2.points) AS average_score\nFROM races AS T1\nJOIN results AS T2 ON T1.raceId = T2.raceId\nWHERE T1.name = 'Turkish Grand Prix' AND T2.driverId = (\n    SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\n)\n\n\t----- bird -----\tformula_1",
    "996": "\nSELECT year, COUNT(*) AS race_count\nFROM races\nWHERE year BETWEEN 2000 AND 2009\nGROUP BY year;\n\n\t----- bird -----\tformula_1",
    "997": "\nSELECT nationality AS citizenship, COUNT(*) AS driver_count\nFROM drivers\nGROUP BY nationality\nORDER BY driver_count DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "998": "\nSELECT COUNT(*) AS victories\nFROM driverStandings ds\nJOIN results r ON ds.raceId = r.raceId AND ds.driverId = r.driverId\nWHERE ds.position = 91 AND r.position = 1\n\n\t----- bird -----\tformula_1",
    "999": "\nSELECT r.name AS race_name\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nWHERE res.fastestLapTime = (\n    SELECT MIN(fastestLapTime)\n    FROM results\n    WHERE fastestLapTime IS NOT NULL\n)\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1000": "\nSELECT c.location || ', ' || c.country AS full_location\nFROM circuits c\nJOIN races r ON c.circuitid = r.circuitid\nWHERE r.date = (SELECT MAX(date) FROM races)\n\n\t----- bird -----\tformula_1",
    "1001": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.year = 2008 AND r.round = 3 AND c.name = 'Marina Bay Street Circuit' AND q.position = 1\n\n\t----- bird -----\tformula_1",
    "1002": "\nSELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS race_name\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nORDER BY r.date ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1003": "\nSELECT COUNT(*) AS accident_count\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Canadian Grand Prix' AND r.statusId = 3\nGROUP BY r.driverId\nORDER BY accident_count DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1004": "\nSELECT d.forename || ' ' || d.surname AS driver_name, ds.wins \nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nWHERE d.dob = (SELECT MIN(dob) FROM drivers)\nORDER BY ds.wins DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1005": "\nSELECT MAX(TO_NUMBER(SUBSTR(duration, 1, INSTR(duration, ':') - 1)) * 60 + TO_NUMBER(SUBSTR(duration, INSTR(duration, ':') + 1))) AS longest_pit_stop_time\nFROM pitStops\n\n\t----- bird -----\tformula_1",
    "1006": "\nSELECT MIN(time) AS fastest_lap_time\nFROM lapTimes\n\n\t----- bird -----\tformula_1",
    "1007": "\nSELECT MAX(T2.duration) AS longest_pit_stop_time\nFROM drivers AS T1\nJOIN pit_stops AS T2 ON T1.driverId = T2.driverId\nWHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\n\t----- bird -----\tformula_1",
    "1008": "\nSELECT p.stop, p.lap \nFROM pit_stops AS p\nJOIN drivers AS d ON p.driverId = d.driverId\nJOIN races AS r ON p.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.name = 'Australian Grand Prix' AND r.year = 2011\n\n\t----- bird -----\tformula_1",
    "1009": "\nSELECT d.forename, d.surname, ps.time, ps.duration \nFROM pitStops ps\nJOIN races r ON ps.raceId = r.raceId\nJOIN drivers d ON ps.driverId = d.driverId\nWHERE r.name = 'Australian Grand Prix' AND r.year = 2011\nORDER BY ps.lap, ps.stop;\n\n\t----- bird -----\tformula_1",
    "1010": "\nSELECT T2.time, T1.lap \nFROM lapTimes AS T1 \nJOIN results AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId \nJOIN drivers AS T3 ON T2.driverId = T3.driverId \nWHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' \nORDER BY T1.time ASC \nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "1011": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.fastestLapTime = (\n    SELECT MIN(fastestLapTime)\n    FROM results\n    WHERE fastestLapTime IS NOT NULL\n)\n\n\t----- bird -----\tformula_1",
    "1012": "\nSELECT c.name AS circuit_name, r.date AS race_date, res.fastestLapTime, res.position \nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nAND res.fastestLap IS NOT NULL\nORDER BY r.date DESC, res.fastestLapTime ASC;\n\n\t----- bird -----\tformula_1",
    "1013": "\nSELECT MIN(T2.lap) AS lap_record, T1.name AS circuit_name\nFROM circuits AS T1\nJOIN lapTimes AS T2 ON T1.circuitId = T2.raceId\nWHERE T1.name = 'Austrian Grand Prix Circuit'\nGROUP BY T1.name\nORDER BY lap_record ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1014": "\nSELECT c.name AS Circuit_Name, r.year AS Year, d.forename || ' ' || d.surname AS Driver_Name, l.lap AS Lap_Number, l.time AS Lap_Time\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nJOIN lapTimes l ON res.resultId = l.resultId\nWHERE c.country = 'Italy'\nORDER BY l.milliseconds ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1015": "\nSELECT r.name, c.name AS circuit_name, l.time AS lap_record_time, l.lap AS lap_number\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN results res ON r.raceId = res.raceId\nJOIN lapTimes l ON res.driverId = l.driverId AND res.raceId = l.raceId\nWHERE c.name LIKE '%Austrian Grand Prix Circuit%' AND l.milliseconds = (\n    SELECT MIN(l2.milliseconds)\n    FROM lapTimes l2\n    JOIN races r2 ON l2.raceId = r2.raceId\n    WHERE r2.circuitId = r.circuitId\n)\n\n\t----- bird -----\tformula_1",
    "1016": "\nSELECT p.time, p.duration\nFROM pit_stops p\nJOIN races r ON p.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN results res ON p.raceId = res.raceId AND p.driverId = res.driverId\nWHERE c.name = 'Austrian Grand Prix Circuit' AND res.fastestLap = 1\nORDER BY p.lap ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1017": "\nSELECT c.lat, c.lng \nFROM circuits AS c\nJOIN races AS r ON c.circuitId = r.circuitId\nJOIN results AS res ON r.raceId = res.raceId\nWHERE res.fastestLapTime = '1:29.488'\nGROUP BY c.lat, c.lng\n\n\t----- bird -----\tformula_1",
    "1018": "\nSELECT AVG(T2.milliseconds) AS average_pit_stop_time\nFROM drivers AS T1\nJOIN pitStops AS T2 ON T1.driverId = T2.driverId\nWHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\n\t----- bird -----\tformula_1",
    "1019": "\nSELECT AVG(lt.milliseconds) AS average_lap_time_ms\nFROM lapTimes lt\nJOIN races r ON lt.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Italy' AND lt.position = 1\nGROUP BY c.name\n\n\t----- bird -----\tformula_1",
    "1020": "\nSELECT P.player_api_id FROM Player_Attributes PA JOIN Player P ON PA.player_fifa_api_id = P.player_fifa_api_id ORDER BY PA.overall_rating DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1021": "\nSELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1022": "\nSELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes)\n\n\t----- bird -----\teuropean_football_2",
    "1023": "\nSELECT COUNT(DISTINCT PA.player_api_id) AS players_count\nFROM Player_Attributes PA\nJOIN Match M ON PA.player_api_id IN (M.home_player_X1, M.home_player_X2, M.home_player_X3, M.home_player_X4, M.home_player_X5, M.home_player_X6, M.home_player_X7, M.home_player_X8, M.home_player_X9, M.home_player_X10, M.home_player_X11)\nWHERE PA.overall_rating BETWEEN 60 AND 65\nAND PA.preferred_foot = 'L'\nAND PA.attacking_work_rate IN ('High', 'Medium')\nAND PA.defensive_work_rate = 'Low';\n\n\t----- bird -----\teuropean_football_2",
    "1024": "\nSELECT P.player_api_id\nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nORDER BY PA.crossing DESC\nLIMIT 5\n\n\t----- bird -----\teuropean_football_2",
    "1025": "\nSELECT L.name AS league_name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2016'\nGROUP BY L.name\nORDER BY total_goals DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1026": "\nSELECT T2.team_long_name, COUNT(*) AS losses_count\nFROM Match M1\nJOIN Team T2 ON M1.home_team_api_id = T2.team_api_id\nWHERE M1.season = '2016' AND M1.home_team_goal < M1.away_team_goal\nGROUP BY T2.team_long_name\nORDER BY losses_count ASC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1027": "\nSELECT P.player_name, COUNT(pa.penalties) AS penalty_count\nFROM Player_Attributes pa\nJOIN Player P ON pa.player_api_id = P.player_api_id\nGROUP BY P.player_name\nORDER BY penalty_count DESC\nLIMIT 10;\n\n\t----- bird -----\teuropean_football_2",
    "1028": "\nSELECT T2.team_long_name AS Away_Team, COUNT(*) AS Wins\nFROM Match AS M\nJOIN Team AS T1 ON M.away_team_api_id = T1.team_api_id\nJOIN Team AS T2 ON M.home_team_api_id = T2.team_api_id\nJOIN Country AS C ON M.country_id = C.id\nWHERE C.name = 'Scotland' AND M.season = '2010' AND M.away_team_goal > M.home_team_goal\nGROUP BY T2.team_long_name\nORDER BY Wins DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1029": "\nSELECT T1.buildUpPlaySpeed, T2.team_long_name \nFROM Team_Attributes AS T1\nJOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id\nORDER BY T1.buildUpPlaySpeed DESC\nLIMIT 4\n\n\t----- bird -----\teuropean_football_2",
    "1030": "\nSELECT L.name AS league_name, COUNT(M.id) AS draw_count\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2016' AND M.home_team_goal = M.away_team_goal\nGROUP BY L.name\nORDER BY draw_count DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1031": "\nSELECT P.player_name, (2015 - strftime('%Y', P.birthday)) AS age\nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nWHERE PA.sprint_speed >= 97 AND PA.date BETWEEN '2013-01-01' AND '2015-12-31'\nGROUP BY P.player_name, age\nORDER BY age DESC;\n\n\t----- bird -----\teuropean_football_2",
    "1032": "\nSELECT L.name AS League_Name, COUNT(M.id) AS Match_Count\nFROM Match M\nJOIN League L ON M.league_id = L.id\nGROUP BY L.id, L.name\nORDER BY Match_Count DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1033": "\nSELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31'\n\n\t----- bird -----\teuropean_football_2",
    "1034": "\nSELECT player_api_id FROM Player_Attributes WHERE date LIKE '2010%' AND overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE date LIKE '2010%')\nGROUP BY player_api_id\nORDER BY AVG(overall_rating) DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1035": "\nSELECT DISTINCT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\n\n\t----- bird -----\teuropean_football_2",
    "1036": "\nSELECT T.team_long_name\nFROM Team AS T\nJOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id\nWHERE TA.date LIKE '2012-%' AND buildUpPlayPassing > (\n    SELECT AVG(buildUpPlayPassing)\n    FROM Team_Attributes\n    WHERE date LIKE '2012-%'\n);\n\n\t----- bird -----\teuropean_football_2",
    "1037": "\nSELECT CAST(COUNT(CASE WHEN preferred_foot = 'Left' THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS left_foot_percentage\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE STRFTIME('%Y', p.birthday) BETWEEN '1987' AND '1992'\n\n\t----- bird -----\teuropean_football_2",
    "1038": "\nSELECT L.name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals\nFROM League L\nJOIN Match M ON L.id = M.league_id\nGROUP BY L.id\nORDER BY total_goals ASC\nLIMIT 5\n\n\t----- bird -----\teuropean_football_2",
    "1039": "\nSELECT AVG(pa.long_shots) AS average_long_shots\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Ahmed Samir Farag'\n\n\t----- bird -----\teuropean_football_2",
    "1040": "\nSELECT P.player_name, AVG(PA.heading_accuracy) AS avg_heading_accuracy\nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nWHERE P.height > 180\nGROUP BY P.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10\n\n\t----- bird -----\teuropean_football_2",
    "1041": "\nSELECT T.team_long_name\nFROM Team AS T\nJOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id\nWHERE TA.buildUpPlayDribblingClass = 'Normal' AND CAST(strftime('%Y', TA.date) AS INTEGER) = 2014\nGROUP BY T.id, TA.chanceCreationPassing\nHAVING TA.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND strftime('%Y', date) = '2014')\nORDER BY TA.chanceCreationPassing DESC\n\n\t----- bird -----\teuropean_football_2",
    "1042": "\nSELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2009/2010'\nGROUP BY L.id\nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\n\n\t----- bird -----\teuropean_football_2",
    "1043": "\nSELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\n\n\t----- bird -----\teuropean_football_2",
    "1044": "\nSELECT player_name, birthday FROM Player WHERE birthday LIKE '1970-10-%'\n\n\t----- bird -----\teuropean_football_2",
    "1045": "\nSELECT pa.attacking_work_rate FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Franco Zennaro' LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1046": "\nSELECT ta.buildUpPlaySpeedClass, ta.chanceCreationPassingClass \nFROM Team t\nJOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id\nWHERE t.team_long_name = 'ADO Den Haag'\nAND ta.date IN (\n    SELECT date FROM Team_Attributes WHERE buildUpPlayPositioningClass IS NOT NULL ORDER BY date ASC LIMIT 1\n)\n\n\t----- bird -----\teuropean_football_2",
    "1047": "\nSELECT pa.heading_accuracy\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Francois Affolter' AND pa.date = '18/09/2014'\n\n\t----- bird -----\teuropean_football_2",
    "1048": "\nSELECT pa.overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011'\n\n\t----- bird -----\teuropean_football_2",
    "1049": "\nSELECT COUNT(*) FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T2.name = 'Scotland Premier League'\n\n\t----- bird -----\teuropean_football_2",
    "1050": "\nSELECT pa.preferred_foot FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.birthday = (SELECT MIN(birthday) FROM Player) ORDER BY pa.date DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1051": "\nSELECT p.player_name, pa.potential \nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.potential = (SELECT MAX(potential) FROM Player_Attributes)\n\n\t----- bird -----\teuropean_football_2",
    "1052": "\nSELECT COUNT(*) \nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.weight < 130 AND pa.preferred_foot = 'Left'\n\n\t----- bird -----\teuropean_football_2",
    "1053": "\nSELECT T.team_short_name\nFROM Team_Attributes TA\nJOIN Team T ON TA.team_fifa_api_id = T.team_fifa_api_id\nWHERE TA.chanceCreationPassingClass = 'Risky'\n\n\t----- bird -----\teuropean_football_2",
    "1054": "\nSELECT pa.defensive_work_rate FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'David Wilson'\n\n\t----- bird -----\teuropean_football_2",
    "1055": "\nSELECT P.birthday FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE PA.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\n\n\t----- bird -----\teuropean_football_2",
    "1056": "\nSELECT L.name FROM League AS L JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Netherlands'\n\n\t----- bird -----\teuropean_football_2",
    "1057": "\nSELECT AVG(home_team_goal) AS average_home_team_goals\nFROM Match\nJOIN Country ON Match.country_id = Country.id\nWHERE season = '2010/2011' AND country_name = 'Poland';\n\n\t----- bird -----\teuropean_football_2",
    "1058": "\nSELECT p.player_name, AVG(pa.finishing) AS avg_finishing\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.id IN (\n    SELECT id \n    FROM Player \n    ORDER BY height \n    LIMIT 1\n)\nOR p.id IN (\n    SELECT id \n    FROM Player \n    ORDER BY height DESC \n    LIMIT 1\n)\nGROUP BY p.player_name\nORDER BY avg_finishing DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1059": "\nSELECT player_name FROM Player WHERE height > 180\n\n\t----- bird -----\teuropean_football_2",
    "1060": "\nSELECT COUNT(*) FROM Player WHERE birthday LIKE '1990-%'\n\n\t----- bird -----\teuropean_football_2",
    "1061": "\nSELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\n\n\t----- bird -----\teuropean_football_2",
    "1062": "\nSELECT P.player_name FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE PA.overall_rating > 80 AND PA.date BETWEEN '2008-01-01' AND '2010-12-31'\n\n\t----- bird -----\teuropean_football_2",
    "1063": "\nSELECT pa.potential FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Aaron Doran' ORDER BY pa.date DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1064": "\nSELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'Left')\n\n\t----- bird -----\teuropean_football_2",
    "1065": "\nSELECT T.team_long_name FROM Team AS T JOIN Team_Attributes AS TA ON T.team_fifa_api_id = TA.team_fifa_api_id WHERE TA.buildUpPlaySpeedClass = 'fast'\n\n\t----- bird -----\teuropean_football_2",
    "1066": "\nSELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_fifa_api_id IN (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'CLB' OR team_short_name = 'CLB')\n\n\t----- bird -----\teuropean_football_2",
    "1067": "\nSELECT T.team_short_name FROM Team_Attributes TA JOIN Team T ON TA.team_fifa_api_id = T.team_fifa_api_id WHERE buildUpPlayPassing > 70 GROUP BY T.team_short_name\n\n\t----- bird -----\teuropean_football_2",
    "1068": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.date BETWEEN '2010-01-01' AND '2015-12-31'\nAND p.height > 170;\n\n\t----- bird -----\teuropean_football_2",
    "1069": "\nSELECT player_name, height FROM Player ORDER BY height ASC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1070": "\nSELECT C.name FROM Country C JOIN League L ON C.id = L.country_id WHERE L.name = 'Italy Serie A'\n\n\t----- bird -----\teuropean_football_2",
    "1071": "\nSELECT T.team_short_name FROM Team AS T JOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id WHERE TA.buildUpPlaySpeed = 31 AND TA.buildUpPlayDribbling = 53 AND TA.buildUpPlayPassing = 32\n\n\t----- bird -----\teuropean_football_2",
    "1072": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Aaron Doran'\n\n\t----- bird -----\teuropean_football_2",
    "1073": "\nSELECT COUNT(*) AS match_count\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = '1. Bundesliga'\nAND l.country_id = (SELECT id FROM Country WHERE name = 'Germany')\nAND m.date >= '2008-08-01' AND m.date <= '2008-10-31';\n\n\t----- bird -----\teuropean_football_2",
    "1074": "\nSELECT DISTINCT T.team_short_name\nFROM Team AS T\nJOIN Match AS M ON T.team_api_id = M.home_team_api_id\nWHERE M.home_team_goal = 10;\n\n\t----- bird -----\teuropean_football_2",
    "1075": "\nSELECT P.player_name, PA.balance, PA.potential \nFROM Player AS P\nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id\nWHERE PA.potential = 61\nORDER BY PA.balance DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1076": "\nSELECT (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo')) -\n       (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye'))\nAS ball_control_difference\n\n\t----- bird -----\teuropean_football_2",
    "1077": "\nSELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\n\n\t----- bird -----\teuropean_football_2",
    "1078": "\nSELECT player_name, birthday FROM Player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada'\n\n\t----- bird -----\teuropean_football_2",
    "1079": "\nSELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1080": "\nSELECT COUNT(DISTINCT player_api_id) \nFROM Player_Attributes\nWHERE preferred_foot = 'Left'\nAND defensive_work_rate = 'Medium' OR defensive_work_rate = 'Low';\n\n\t----- bird -----\teuropean_football_2",
    "1081": "\nSELECT C.name FROM Country C JOIN League L ON C.id = L.country_id WHERE L.name = 'Belgium Jupiler League'\n\n\t----- bird -----\teuropean_football_2",
    "1082": "\nSELECT name FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Germany')\n\n\t----- bird -----\teuropean_football_2",
    "1083": "\nSELECT player_name, MAX(overall_rating) AS max_strength\nFROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nGROUP BY player_name\nORDER BY max_strength DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1084": "\nSELECT COUNT(DISTINCT P.player_api_id) \nFROM Player P\nJOIN Match M ON P.player_api_id IN (\n    SELECT home_player_1 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_2 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_3 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_4 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_5 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_6 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_7 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_8 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_9 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_10 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT home_player_11 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_1 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_2 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_3 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_4 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_5 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_6 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_7 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_8 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_9 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_10 FROM Match WHERE date < '1986-01-01'\n    UNION ALL\n    SELECT away_player_11 FROM Match WHERE date < '1986-01-01'\n)\nWHERE P.date_of_birth < '1986-01-01' AND P.position IN ('CB', 'RB', 'LB')\n\n\t----- bird -----\teuropean_football_2",
    "1085": "\nSELECT p.player_name, pa.crossing\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\nORDER BY pa.crossing DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1086": "\nSELECT pa.heading_accuracy \nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Ariel Borysiuk'\nORDER BY pa.date DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1087": "\nSELECT COUNT(*) \nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180 AND pa.volleys > 70\n\n\t----- bird -----\teuropean_football_2",
    "1088": "\nSELECT P.player_name FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE PA.volleys > 70 AND PA.dribbling > 70\n\n\t----- bird -----\teuropean_football_2",
    "1089": "\nSELECT COUNT(*) FROM Match M JOIN League L ON M.league_id = L.id JOIN Country C ON L.country_id = C.id WHERE season = '2008/2009' AND C.name = 'Belgium'\n\n\t----- bird -----\teuropean_football_2",
    "1090": "\nSELECT T1.long_passing FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday = (SELECT MIN(birthday) FROM Player) ORDER BY T1.date DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1091": "\nSELECT COUNT(*) AS match_count\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Belgium Jupiler' AND strftime('%Y-%m', m.date) = '2009-04'\n\n\t----- bird -----\teuropean_football_2",
    "1092": "\nSELECT L.name AS league_name, COUNT(M.id) AS match_count\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2008/2009'\nGROUP BY L.name\nORDER BY match_count DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1093": "\nSELECT AVG(overall_rating) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE birthday LIKE '1985%%' OR birthday LIKE '<1986')\n\n\t----- bird -----\teuropean_football_2",
    "1094": "\nSELECT (p1.overall_rating - p2.overall_rating) * 100.0 / p2.overall_rating AS percentage_difference\nFROM Player_Attributes p1, Player_Attributes p2\nJOIN Player pl1 ON p1.player_fifa_api_id = pl1.player_fifa_api_id\nJOIN Player pl2 ON p2.player_fifa_api_id = pl2.player_fifa_api_id\nWHERE pl1.player_name = 'Ariel Borysiuk' AND pl2.player_name = 'Paulin Puel'\nORDER BY p1.date DESC, p2.date DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1095": "\nSELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Heart of Midlothian' OR Team.team_short_name = 'Heart of Midlothian'\n\n\t----- bird -----\teuropean_football_2",
    "1096": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id\nWHERE p.player_name = 'Pietro Marino'\n\n\t----- bird -----\teuropean_football_2",
    "1097": "\nSELECT SUM(pa.crossing) AS total_crossing_score\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Aaron Lennox'\n\n\t----- bird -----\teuropean_football_2",
    "1098": "\nSELECT ta.chanceCreationPassing, ta.chanceCreationPassingClass \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.id\nWHERE t.team_long_name = 'Ajax' OR t.team_short_name = 'Ajax'\nORDER BY ta.chanceCreationPassing DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1099": "\nSELECT preferred_foot FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Abdou Diallo' LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1100": "\nSELECT MAX(pa.overall_rating) AS highest_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Dorlan Pabon'\n\n\t----- bird -----\teuropean_football_2",
    "1101": "\nSELECT AVG(M.away_team_goal) AS average_goals\nFROM Match M\nJOIN Team T ON M.away_team_api_id = T.team_api_id\nJOIN League L ON M.league_id = L.id\nJOIN Country C ON L.country_id = C.id\nWHERE T.team_long_name = 'Parma' AND C.name = 'Italy'\n\n\t----- bird -----\teuropean_football_2",
    "1102": "\nSELECT P.player_name FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE PA.overall_rating = 77 AND PA.date = '2016-06-23' ORDER BY STR_TO_DATE(P.birthday, '%Y-%m-%d') ASC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1103": "\nSELECT pa.overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Aaron Mooy' AND pa.date = '2016-02-04'\n\n\t----- bird -----\teuropean_football_2",
    "1104": "\nSELECT potential FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Francesco Parravicini') AND date = '2010/8/30'\n\n\t----- bird -----\teuropean_football_2",
    "1105": "\nSELECT pa.attacking_work_rate FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Francesco Migliore' AND pa.date = '2015-5-1'\n\n\t----- bird -----\teuropean_football_2",
    "1106": "\nSELECT pa.defensive_work_rate FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Kevin Berigaud' AND pa.date = '2013/2/22'\n\n\t----- bird -----\teuropean_football_2",
    "1107": "\nSELECT T1.date FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' ORDER BY T1.crossing DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1108": "\nSELECT buildUpPlaySpeedClass FROM Team_Attributes AS TA JOIN Team AS T ON TA.team_fifa_api_id = T.team_fifa_api_id WHERE T.team_long_name = 'Willem II' AND TA.date = '2011/2/22'\n\n\t----- bird -----\teuropean_football_2",
    "1109": "\nSELECT buildUpPlayDribblingClass \nFROM Team_Attributes AS TA \nJOIN Team AS T ON TA.team_fifa_api_id = T.team_fifa_api_id \nWHERE T.team_short_name = 'LEI' AND TA.date = '2015-9-10'\n\n\t----- bird -----\teuropean_football_2",
    "1110": "\nSELECT ta.buildUpPlayPassingClass \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nWHERE t.team_long_name = 'FC Lorient' AND ta.date = '2010/2/22'\n\n\t----- bird -----\teuropean_football_2",
    "1111": "\nSELECT ta.buildUpPlayPassingClass AS chance_creation_passing_class \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nWHERE t.team_long_name = 'PEC Zwolle' AND ta.date = '2013-9-20'\n\n\t----- bird -----\teuropean_football_2",
    "1112": "\nSELECT T3.buildUpPlayPositioningClass AS chance_creation_crossing_class \nFROM Team AS T1\nJOIN Match AS T2 ON T1.team_api_id = T2.home_team_api_id OR T1.team_api_id = T2.away_team_api_id\nJOIN Team_Attributes AS T3 ON T1.team_fifa_api_id = T3.team_fifa_api_id\nWHERE (T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22' AND T1.team_api_id = T2.home_team_api_id)\nOR (T1.team_long_name = 'Hull City' AND T2.date = '2010-02-22' AND T1.team_api_id = T2.away_team_api_id)\n\n\t----- bird -----\teuropean_football_2",
    "1113": "\nSELECT ta.buildupplaypassingclass AS defence_aggression_class \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'Hannover 96' AND ta.date = '2015-09-10'\n\n\t----- bird -----\teuropean_football_2",
    "1114": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Marko Arnautovic'\nAND pa.date BETWEEN '2007-02-22' AND '2016-04-21';\n\n\t----- bird -----\teuropean_football_2",
    "1115": "\nSELECT ((p1.overall_rating - p2.overall_rating) / p2.overall_rating * 100) AS percentage_difference\nFROM Player_Attributes p1\nJOIN Player p ON p.player_api_id = p1.player_api_id\nWHERE p.player_name = 'Landon Donovan' AND p1.date = '2013/7/12'\nCROSS JOIN (\n    SELECT overall_rating\n    FROM Player_Attributes pa\n    JOIN Player p ON p.player_api_id = pa.player_api_id\n    WHERE p.player_name = 'Jordan Bowery' AND pa.date = '2013/7/12'\n) p2\n\n\t----- bird -----\teuropean_football_2",
    "1116": "\nSELECT player_name FROM Player ORDER BY height DESC LIMIT 5\n\n\t----- bird -----\teuropean_football_2",
    "1117": "\nSELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\n\n\t----- bird -----\teuropean_football_2",
    "1118": "\nSELECT player_name FROM Player WHERE birthday <= DATE('now', '-35 years')\n\n\t----- bird -----\teuropean_football_2",
    "1119": "\nSELECT SUM(home_team_goal) AS total_goals_scored_by_aaron_lennon\nFROM Match M\nJOIN Player P ON M.home_player_1 = P.player_api_id OR M.home_player_2 = P.player_api_id OR M.home_player_3 = P.player_api_id OR M.home_player_4 = P.player_api_id OR M.home_player_5 = P.player_api_id OR M.home_player_6 = P.player_api_id OR M.home_player_7 = P.player_api_id OR M.home_player_8 = P.player_api_id OR M.home_player_9 = P.player_api_id OR M.home_player_10 = P.player_api_id OR M.home_player_11 = P.player_api_id\nWHERE P.player_name = 'Aaron Lennon'\n\n\t----- bird -----\teuropean_football_2",
    "1120": "\nSELECT SUM(T2.away_team_goal) AS total_goals\nFROM Player AS T1\nJOIN Match AS T2 ON T1.player_api_id = T2.away_player_1 OR T1.player_api_id = T2.away_player_2 OR T1.player_api_id = T2.away_player_3 OR T1.player_api_id = T2.away_player_4 OR T1.player_api_id = T2.away_player_5 OR T1.player_api_id = T2.away_player_6 OR T1.player_api_id = T2.away_player_7 OR T1.player_api_id = T2.away_player_8 OR T1.player_api_id = T2.away_player_9 OR T1.player_api_id = T2.away_player_10 OR T1.player_api_id = T2.away_player_11\nWHERE T1.player_name IN ('Daan Smith', 'Filipe Ferreira')\n\n\t----- bird -----\teuropean_football_2",
    "1121": "\nSELECT SUM(home_team_goal) AS total_home_goals\nFROM Match\nJOIN Player ON Match.home_player_1 = Player.player_api_id OR Match.home_player_2 = Player.player_api_id OR Match.home_player_3 = Player.player_api_id OR Match.home_player_4 = Player.player_api_id OR Match.home_player_5 = Player.player_api_id OR Match.home_player_6 = Player.player_api_id OR Match.home_player_7 = Player.player_api_id OR Match.home_player_8 = Player.player_api_id OR Match.home_player_9 = Player.player_api_id OR Match.home_player_10 = Player.player_api_id OR Match.home_player_11 = Player.player_api_id\nWHERE DATE_PART('year', AGE(to_date(Player.birthday, 'YYYY-MM-DD'))) <= 30;\n\n\t----- bird -----\teuropean_football_2",
    "1122": "\nSELECT P.player_name FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id ORDER BY PA.overall_rating DESC LIMIT 10\n\n\t----- bird -----\teuropean_football_2",
    "1123": "\nSELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.potential = (SELECT MAX(potential) FROM Player_Attributes)\n\n\t----- bird -----\teuropean_football_2",
    "1124": "\nSELECT P.player_name\nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nWHERE PA.attacking_work_rate = 'attacking'\nAND EXISTS (\n    SELECT 1\n    FROM Match M\n    WHERE (M.home_player_1 = PA.player_api_id OR M.home_player_2 = PA.player_api_id OR M.home_player_3 = PA.player_api_id OR M.home_player_4 = PA.player_api_id OR M.home_player_5 = PA.player_api_id OR M.home_player_6 = PA.player_api_id OR M.home_player_7 = PA.player_api_id OR M.home_player_8 = PA.player_api_id OR M.home_player_9 = PA.player_api_id OR M.home_player_10 = PA.player_api_id OR M.home_player_11 = PA.player_api_id)\n    OR (M.away_player_1 = PA.player_api_id OR M.away_player_2 = PA.player_api_id OR M.away_player_3 = PA.player_api_id OR M.away_player_4 = PA.player_api_id OR M.away_player_5 = PA.player_api_id OR M.away_player_6 = PA.player_api_id OR M.away_player_7 = PA.player_api_id OR M.away_player_8 = PA.player_api_id OR M.away_player_9 = PA.player_api_id OR M.away_player_10 = PA.player_api_id OR M.away_player_11 = PA.player_api_id)\n    AND (M.chanceCreationPassing = 'true' OR M.chanceCreationCrossing = 'true' OR M.chanceCreationShooting = 'true')\n);\n\n\t----- bird -----\teuropean_football_2",
    "1125": "\nSELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.finishing = 1 ORDER BY STR_TO_DATE(p.birthday, '%Y-%m-%d') ASC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1126": "\nSELECT player_name FROM Player WHERE country_id = (SELECT id FROM Country WHERE name = 'Belgium')\n\n\t----- bird -----\teuropean_football_2",
    "1127": "\nSELECT P.player_name, C.name AS country\nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nJOIN Country C ON P.country_id = C.id\nWHERE PA.vision >= 90\nGROUP BY P.player_name, C.name\n\n\t----- bird -----\teuropean_football_2",
    "1128": "\nSELECT C.name, AVG(P.weight) AS avg_weight\nFROM Player P\nJOIN Team T ON P.player_api_id = T.id\nJOIN League L ON T.team_fifa_api_id = L.id\nJOIN Country C ON L.country_id = C.id\nGROUP BY C.name\nORDER BY avg_weight DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1129": "\nSELECT T.team_long_name FROM Team AS T JOIN Team_Attributes AS TA ON T.team_fifa_api_id = TA.team_fifa_api_id WHERE TA.buildUpPlaySpeedClass = 'slow'\n\n\t----- bird -----\teuropean_football_2",
    "1130": "\nSELECT T.team_short_name\nFROM Team_Attributes TA\nJOIN Team T ON TA.team_fifa_api_id = T.team_fifa_api_id\nWHERE TA.buildUpPlayPassingClass = 'Safe'\nGROUP BY T.team_short_name\n\n\t----- bird -----\teuropean_football_2",
    "1131": "\nSELECT AVG(height) AS average_height\nFROM Player\nJOIN Country ON Player.player_fifa_api_id = Team.team_fifa_api_id\nJOIN League ON Team.league_id = League.id\nWHERE Country.name = 'Italy'\n\n\t----- bird -----\teuropean_football_2",
    "1132": "\nSELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\n\n\t----- bird -----\teuropean_football_2",
    "1133": "\nSELECT COUNT(*) \nFROM Player \nWHERE birthday > '1990-01-01' AND player_name LIKE 'Aaron%'\n\n\t----- bird -----\teuropean_football_2",
    "1134": "\nSELECT (t1.jumping - t2.jumping) AS jumping_difference\nFROM Player_Attributes t1, Player_Attributes t2\nWHERE t1.player_api_id = 6 AND t2.player_api_id = 23\nORDER BY t1.date DESC, t2.date DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1135": "\nSELECT player_api_id, potential FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 3\n\n\t----- bird -----\teuropean_football_2",
    "1136": "\nSELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'Left' AND attacking_work_rate LIKE '%low%' OR attacking_work_rate LIKE '%medium%' AND crossing = (\n    SELECT MAX(crossing) \n    FROM Player_Attributes \n    WHERE preferred_foot = 'Left'\n)\n\n\t----- bird -----\teuropean_football_2",
    "1137": "\nSELECT CAST(COUNT(*) AS FLOAT) * 100 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage\nFROM Player_Attributes\nWHERE strength > 80 AND stamina > 80\n\n\t----- bird -----\teuropean_football_2",
    "1138": "\nSELECT C.name \nFROM League L JOIN Country C ON L.country_id = C.id \nWHERE L.name = 'Poland Ekstraklasa'\n\n\t----- bird -----\teuropean_football_2",
    "1139": "\nSELECT home_team_goal, away_team_goal \nFROM Match \nWHERE date = '2008-09-24' AND league_id = (\n    SELECT id FROM League WHERE name = 'Belgian Jupiler League'\n);\n\n\t----- bird -----\teuropean_football_2",
    "1140": "\nSELECT pa.sprint_speed, pa.agility, pa.acceleration \nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Alexis Blin'\nORDER BY pa.date DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1141": "\nSELECT ta.buildUpPlaySpeedClass FROM Team_Attributes ta INNER JOIN Team t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'KSV Cercle Brugge'\n\n\t----- bird -----\teuropean_football_2",
    "1142": "\nSELECT COUNT(*) FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015-2016' AND T2.name = 'Serie A' AND T2.country_id = (SELECT id FROM Country WHERE name = 'Italy')\n\n\t----- bird -----\teuropean_football_2",
    "1143": "\nSELECT MAX(T1.home_team_goal) AS highest_home_score\nFROM Match AS T1\nJOIN League AS T2 ON T1.league_id = T2.id\nJOIN Country AS T3 ON T2.country_id = T3.id\nWHERE T3.name = 'Netherlands' AND T2.name = 'Eredivisie'\n\n\t----- bird -----\teuropean_football_2",
    "1144": "\nSELECT pa.finishing, pa.curve \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nORDER BY p.weight DESC \nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1145": "\nSELECT L.name AS league_name, COUNT(M.id) AS game_count\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2015-2016'\nGROUP BY L.name\nORDER BY game_count DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1146": "\nSELECT T2.team_long_name AS TeamName, SUM(M.away_team_goal) AS TotalGoals\nFROM Match M\nJOIN Team T2 ON M.away_team_api_id = T2.team_api_id\nGROUP BY T2.team_long_name\nORDER BY TotalGoals DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1147": "\nSELECT P.player_name FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id ORDER BY PA.strength DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1148": "\nSELECT CAST(COUNT(CASE WHEN height < 180 AND strength > 70 THEN player_api_id END) AS REAL) * 100 / COUNT(player_api_id) AS percentage_under_180_cm_stronger_than_70\nFROM Player_Attributes\nWHERE strength IS NOT NULL AND height IS NOT NULL;\n\n\t----- bird -----\teuropean_football_2",
    "1149": "\nSELECT \n    (SUM(CASE WHEN Admission = 'in-patient' AND SEX = 'male' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = 'out-patient' AND SEX = 'male' THEN 1 ELSE 0 END)) / CAST(SUM(1) AS REAL) * 100 AS deviation\nFROM Patient\n\n\t----- bird -----\tthrombosis_prediction",
    "1150": "\nSELECT CAST(COUNT(*) AS FLOAT) * 100 / (SELECT COUNT(*) FROM Patient) \nFROM Patient \nWHERE SEX = 'F' AND Birthday > '1930-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1151": "\nSELECT CAST(COUNT(CASE WHEN Admission = 'inpatient' THEN ID END) AS FLOAT) * 100 / COUNT(*) FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31'\n\n\t----- bird -----\tthrombosis_prediction",
    "1152": "\nSELECT \n    (SUM(CASE WHEN Admission = 'Outpatient' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS Outpatient_Ratio,\n    (SUM(CASE WHEN Admission = 'Inpatient' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS Inpatient_Ratio\nFROM Patient\nWHERE ID IN (\n    SELECT ID FROM Examination WHERE Diagnosis = 'SLE'\n)\n\n\t----- bird -----\tthrombosis_prediction",
    "1153": "\nSELECT T1.Diagnosis, T2.Date \nFROM Examination AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.ID = 30609;\n\n\t----- bird -----\tthrombosis_prediction",
    "1154": "\nSELECT P.SEX, P.Birthday, E.Examination_Date, E.Symptoms \nFROM Patient AS P \nJOIN Examination AS E ON P.ID = E.ID \nWHERE P.ID = 163109;\n\n\t----- bird -----\tthrombosis_prediction",
    "1155": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.LDH NOT BETWEEN 135 AND 214;\n\n\t----- bird -----\tthrombosis_prediction",
    "1156": "\nSELECT P.ID, TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) AS Age\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE E.KCT LIKE '%positive%' OR E.RVVT LIKE '%positive%' OR E.LAC LIKE '%positive%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1157": "\nSELECT P.ID, P.SEX, E.Diagnosis \nFROM Patient AS P \nJOIN Examination AS E ON P.ID = E.ID \nWHERE E.Thrombosis = 3;\n\n\t----- bird -----\tthrombosis_prediction",
    "1158": "\nSELECT P.ID, P.SEX, P.Birthday\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE YEAR(P.Birthday) = 1937 AND L.T_CHO > (SELECT MAX(T_CHO) FROM Laboratory WHERE T_CHO < 200) OR L.T_CHO < (SELECT MIN(T_CHO) FROM Laboratory WHERE T_CHO > 150)\n\n\t----- bird -----\tthrombosis_prediction",
    "1159": "\nSELECT P.ID, P.SEX, P.Diagnosis \nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.ALB < 3.5;\n\n\t----- bird -----\tthrombosis_prediction",
    "1160": "\nSELECT CAST(COUNT(CASE WHEN T1.SEX = 'F' AND T2.TP NOT BETWEEN 65 AND 80 THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) AS Percentage\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\n\n\t----- bird -----\tthrombosis_prediction",
    "1161": "\nSELECT AVG(e.aCL_IgG) \nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE p.SEX = 'F' AND TIMESTAMPDIFF(YEAR, p.Birthday, CURDATE()) >= 50 AND p.Admission = 'in-patient'\n\n\t----- bird -----\tthrombosis_prediction",
    "1162": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'female' AND EXTRACT(YEAR FROM Patient.First Date) = 1997 AND Examination.Diagnosis = 'outpatient clinic'\nGROUP BY Patient.ID\nHAVING MAX(Examination.Examination Date) - MIN(Examination.Examination Date) < INTERVAL '1 day'\n\n\t----- bird -----\tthrombosis_prediction",
    "1163": "\nSELECT MIN(TIMESTAMPDIFF(YEAR, Patient.Birthday, Patient.First_Date)) AS Youngest_Patient_Age\nFROM Patient;\n\n\t----- bird -----\tthrombosis_prediction",
    "1164": "\nSELECT COUNT(P.ID) AS Number_of_Women_Patients\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE E.Thrombosis = (SELECT MAX(Thrombosis) FROM Examination WHERE EXTRACT(YEAR FROM `Examination Date`) = 1997)\nAND P.SEX = 'F'\nAND EXTRACT(YEAR FROM E.`Examination Date`) = 1997;\n\n\t----- bird -----\tthrombosis_prediction",
    "1165": "\nSELECT MAX(YEAR(CURRENT_DATE) - YEAR(Birthday)) - MIN(YEAR(CURRENT_DATE) - YEAR(Birthday)) AS AgeGap\nFROM Patient\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE TG = (SELECT DISTINCT TG FROM Laboratory WHERE TG IS NOT NULL ORDER BY TG ASC LIMIT 1)\n);\n\n\t----- bird -----\tthrombosis_prediction",
    "1166": "\nSELECT P.Description, E.Symptoms, E.Diagnosis \nFROM Patient AS P\nJOIN Examination AS E ON P.ID = E.ID\nWHERE P.Birthday = (SELECT MIN(Birthday) FROM Patient)\nORDER BY P.Description ASC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1167": "\nSELECT MONTH(L.Date) AS Month, COUNT(P.ID) AS MalePatientsCount\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'male' AND YEAR(L.Date) = 1998\nGROUP BY MONTH(L.Date)\nORDER BY Month;\n\n\t----- bird -----\tthrombosis_prediction",
    "1168": "\nSELECT P.First_Date, TIMESTAMPDIFF(YEAR, P.Birthday, P.First_Date) AS Age_at_Admission\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE E.Diagnosis = 'SJS'\nORDER BY P.Birthday DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1169": "\nSELECT \n    SUM(CASE WHEN T1.SEX = 'Male' THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.SEX = 'Female' THEN 1 ELSE 0 END) AS MaleToFemaleRatio\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.UA NOT BETWEEN (SELECT MIN(UA) FROM Laboratory WHERE UA IS NOT NULL) AND (SELECT MAX(UA) FROM Laboratory WHERE UA IS NOT NULL)\n\n\t----- bird -----\tthrombosis_prediction",
    "1170": "\nSELECT COUNT(P.ID) \nFROM Patient P\nLEFT JOIN Examination E ON P.ID = E.ID AND E.Examination_Date >= DATEADD(year, 1, P.First_Date)\nWHERE E.ID IS NULL\n\n\t----- bird -----\tthrombosis_prediction",
    "1171": "\nSELECT COUNT(P.ID) AS Underage_Patients_Count\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.Birthday > '1987-01-01' AND P.Birthday < '1994-01-01'\nAND E.\"Examination Date\" BETWEEN '1990-01-01' AND '1993-12-31';\n\n\t----- bird -----\tthrombosis_prediction",
    "1172": "\nSELECT COUNT(P.ID) AS Male_Patients_With_Elevated_Bilirubin\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'male' AND L.T_BIL > (SELECT AVG(T_BIL) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1173": "\nSELECT Diagnosis, COUNT(*) AS count\nFROM Examination\nJOIN Laboratory ON Examination.ID = Laboratory.ID\nWHERE Laboratory.Date BETWEEN '1985-01-01' AND '1995-12-31'\nGROUP BY Diagnosis\nORDER BY count DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1174": "\nSELECT AVG(YEAR('1991-10-01') - YEAR(P.Birthday)) AS AverageAge\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE EXTRACT(MONTH FROM L.Date) = 10 AND EXTRACT(YEAR FROM L.Date) = 1991;\n\n\t----- bird -----\tthrombosis_prediction",
    "1175": "\nSELECT P.Birthday, E.Diagnosis \nFROM Patient AS P\nJOIN Examination AS E ON P.ID = E.ID\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.HGB = (\n    SELECT MAX(HGB) FROM Laboratory\n)\nORDER BY P.Birthday DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1176": "\nSELECT ANA FROM Examination WHERE ID = 3605340 AND Examination_Date = '1996-12-02'\n\n\t----- bird -----\tthrombosis_prediction",
    "1177": "\nSELECT T1.ID, T1.T_CHO AS Total_Cholesterol FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ID = 2927464 AND T1.Date = '1995-09-04'\n\n\t----- bird -----\tthrombosis_prediction",
    "1178": "\nSELECT SEX FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Diagnosis = 'AORTITIS') LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1179": "\nSELECT E.aCL_IgG, E.aCL_IgM, E.aCL_IgA\nFROM Examination AS E\nJOIN Patient AS P ON E.ID = P.ID\nWHERE P.Diagnosis = 'SLE' AND P.First_Date = '1994-02-19'\nAND E.Examination_Date = '1993-11-12';\n\n\t----- bird -----\tthrombosis_prediction",
    "1180": "\nSELECT P.SEX FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GPT = 9 AND L.Date = '1992-06-12'\n\n\t----- bird -----\tthrombosis_prediction",
    "1181": "\nSELECT TIMESTAMPDIFF(YEAR, p.Birthday, l.Date) AS Age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.UA = 8.4 AND l.Date = '1991-10-21'\n\n\t----- bird -----\tthrombosis_prediction",
    "1182": "\nSELECT COUNT(*)\nFROM Laboratory L JOIN Patient P ON L.ID = P.ID\nWHERE P.First Date = '1991-06-13' AND P.Diagnosis = 'SJS' AND YEAR(L.Date) = 1995\n\n\t----- bird -----\tthrombosis_prediction",
    "1183": "\nSELECT P.Diagnosis FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND E.Examination_Date = '1997-01-27' LIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1184": "\nSELECT T1.Symptoms FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = '1959-03-01' AND T1.Examination_Date = '1993-09-27'\n\n\t----- bird -----\tthrombosis_prediction",
    "1185": "\nSELECT (T1.T_CHO - T2.T_CHO) / CAST(T1.T_CHO AS REAL) * 100 AS DecreaseRate\nFROM Laboratory T1\nJOIN Patient T3 ON T1.ID = T3.ID\nJOIN (\n    SELECT ID, T_CHO, Date\n    FROM Laboratory\n    WHERE Date BETWEEN '1981-12-01' AND '1981-12-31'\n) T2 ON T1.ID = T2.ID\nWHERE T3.Birthday = '1959-02-18'\nAND T1.Date BETWEEN '1981-11-01' AND '1981-11-30';\n\n\t----- bird -----\tthrombosis_prediction",
    "1186": "\nSELECT P.ID FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'Behcet\\'s' AND E.Examination Date BETWEEN '1970-01-01' AND '1997-12-31'\n\n\t----- bird -----\tthrombosis_prediction",
    "1187": "\nSELECT P.ID\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nJOIN Examination AS E ON P.ID = E.ID\nWHERE L.Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND E.Examination Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND L.GPT > 30\nAND L.ALB < 4\n\n\t----- bird -----\tthrombosis_prediction",
    "1188": "\nSELECT ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission IS NOT NULL;\n\n\t----- bird -----\tthrombosis_prediction",
    "1189": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis = 2 AND Examination.ANA_Pattern = 'S' AND Examination.aCL_IgM > (SELECT AVG(aCL_IgM) FROM Examination)\n\n\t----- bird -----\tthrombosis_prediction",
    "1190": "\nSELECT CAST(COUNT(CASE WHEN UA < 320 THEN ID END) AS REAL) * 100 / COUNT(ID) AS Percentage\nFROM Laboratory\nWHERE U_PRO = 'N'\n\n\t----- bird -----\tthrombosis_prediction",
    "1191": "\nSELECT CAST(COUNT(P.ID) AS FLOAT) * 100 / (SELECT COUNT(*) FROM Patient WHERE EXTRACT(YEAR FROM First_Date) = 1981) \nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.SEX = 'M' AND EXTRACT(YEAR FROM P.First_Date) = 1981 AND E.Diagnosis = 'BEHCET'\n\n\t----- bird -----\tthrombosis_prediction",
    "1192": "\nSELECT P.ID, P.SEX, P.Birthday, P.Description, P.First_Date, P.Admission, P.Diagnosis \nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.Date BETWEEN '1991-10-01' AND '1991-10-31'\nAND L.T_BIL >= 0.2 AND L.T_BIL <= 2.5;\n\n\t----- bird -----\tthrombosis_prediction",
    "1193": "\nSELECT COUNT(P.ID) \nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.SEX = 'F' AND YEAR(P.Birthday) BETWEEN 1980 AND 1989 AND (E.ANA Pattern != 'P' OR E.ANA Pattern IS NULL)\n\n\t----- bird -----\tthrombosis_prediction",
    "1194": "\nSELECT P.SEX FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Diagnosis = 'PSS' AND L.CRP = '2+' AND L.CRE = 1 AND L.LDH = 123\n\n\t----- bird -----\tthrombosis_prediction",
    "1195": "\nSELECT AVG(Lab.ALB) AS Average_Albumin_Level\nFROM Patient P\nJOIN Laboratory Lab ON P.ID = Lab.ID\nWHERE P.SEX = 'F' AND Lab.PLT > 400 AND P.Diagnosis = 'SLE'\n\n\t----- bird -----\tthrombosis_prediction",
    "1196": "\nSELECT Symptoms, COUNT(*) AS frequency\nFROM Examination\nWHERE Diagnosis = 'SLE'\nGROUP BY Symptoms\nORDER BY frequency DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1197": "\nSELECT T1.First_Date, T1.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 48473 LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1198": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'female' AND Examination.Diagnosis = 'APS'\n\n\t----- bird -----\tthrombosis_prediction",
    "1199": "\nSELECT COUNT(DISTINCT L.UID) \nFROM Laboratory AS L\nWHERE strftime('%Y', L.Date) = '1997' AND L.U_PRO NOT IN ('-', '\u00b1')\n\n\t----- bird -----\tthrombosis_prediction",
    "1200": "\nSELECT CAST(SUM(CASE WHEN T1.LAC = 'Positive' AND T1.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.ID) AS Proportion\nFROM Examination AS T1\nWHERE T1.LAC IN ('Positive', 'Negative')\n\n\t----- bird -----\tthrombosis_prediction",
    "1201": "\nSELECT CAST(COUNT(CASE WHEN SEX = 'F' THEN ID END) AS FLOAT) * 100 / COUNT(*) FROM Patient WHERE Birthday BETWEEN '1980-01-01' AND '1980-12-31' AND Diagnosis = 'RA'\n\n\t----- bird -----\tthrombosis_prediction",
    "1202": "\nSELECT COUNT(P.ID) \nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.SEX = 'male'\nAND EXTRACT(YEAR FROM E.Examination_Date) BETWEEN 1995 AND 1997\nAND P.Diagnosis = 'BEHCET disease'\nAND P.Admission IS NULL;\n\n\t----- bird -----\tthrombosis_prediction",
    "1203": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'female' AND Laboratory.WBC < 3.5\n\n\t----- bird -----\tthrombosis_prediction",
    "1204": "\nSELECT First Date, Description FROM Patient WHERE ID = 821298\n\n\t----- bird -----\tthrombosis_prediction",
    "1205": "\nSELECT UA FROM Laboratory WHERE ID = 57266 LIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1206": "\nSELECT Date FROM Laboratory WHERE ID = 48473 AND GOT > (SELECT MAX(GOT) FROM Laboratory WHERE ID = 48473 AND Date IN (SELECT DISTINCT Date FROM Laboratory WHERE ID = 48473))\n\n\t----- bird -----\tthrombosis_prediction",
    "1207": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.Date BETWEEN '1994-01-01' AND '1994-12-31'\nAND L.GOT >= 15 AND L.GOT <= 40;\n\n\t----- bird -----\tthrombosis_prediction",
    "1208": "\nSELECT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'male'\nAND L.GPT > (SELECT AVG(GPT) FROM Laboratory)\nGROUP BY P.ID\nHAVING COUNT(L.GPT > (SELECT AVG(GPT) FROM Laboratory)) > 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1209": "\nSELECT P.Diagnosis\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.GPT > (SELECT AVG(GPT) FROM Laboratory)\nORDER BY P.Birthday ASC;\n\n\t----- bird -----\tthrombosis_prediction",
    "1210": "\nSELECT AVG(LDH) AS AverageLDH\nFROM Laboratory\nWHERE LDH BETWEEN 105 AND 235;\n\n\t----- bird -----\tthrombosis_prediction",
    "1211": "\nSELECT P.ID, TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) AS Age\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.LDH > 300 OR (L.LDH BETWEEN 100 AND 300)\nGROUP BY P.ID\nHAVING MAX(L.Date) = L.Date\n\n\t----- bird -----\tthrombosis_prediction",
    "1212": "\nSELECT P.Admission FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.ALP BETWEEN 40 AND 150;\n\n\t----- bird -----\tthrombosis_prediction",
    "1213": "\nSELECT P.ID, L.ALP\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE P.Birthday = '1982-04-01'\nAND L.ALP BETWEEN 30 AND 120;\n\n\t----- bird -----\tthrombosis_prediction",
    "1214": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.TP < 6.5;\n\n\t----- bird -----\tthrombosis_prediction",
    "1215": "\nSELECT P.ID, L.TP - (SELECT AVG(TP) FROM Laboratory WHERE TP IS NOT NULL) AS DeviationFromNormal\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'female' AND L.TP > (SELECT AVG(TP) FROM Laboratory WHERE TP IS NOT NULL)\n\n\t----- bird -----\tthrombosis_prediction",
    "1216": "\nSELECT P.ID, P.Birthday\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'male' AND L.ALB NOT BETWEEN 35 AND 50\nORDER BY P.Birthday DESC\n\n\t----- bird -----\tthrombosis_prediction",
    "1217": "\nSELECT P.ID, L.ALB, CASE \n                        WHEN L.ALB BETWEEN 35 AND 50 THEN 'Normal'\n                        ELSE 'Abnormal'\n                    END AS Albumin_Status\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE YEAR(P.Birthday) = 1982;\n\n\t----- bird -----\tthrombosis_prediction",
    "1218": "\nSELECT CAST(COUNT(CASE WHEN T1.SEX = 'F' AND T2.UA > (SELECT MAX(UA) FROM Laboratory WHERE UA < 7.2) THEN 1 END) AS FLOAT) * 100 / COUNT(T1.ID) AS Female_UA_Abnormal_Percentage\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T1.SEX = 'F'\n\n\t----- bird -----\tthrombosis_prediction",
    "1219": "\nSELECT AVG(Latest.UA) AS Average_UA\nFROM (\n    SELECT ID, MAX(Date) AS MaxDate\n    FROM Laboratory\n    GROUP BY ID\n) AS LatestDates\nJOIN Laboratory AS Latest ON LatestDates.ID = Latest.ID AND LatestDates.MaxDate = Latest.Date\nWHERE Latest.UA IS NOT NULL AND Latest.UA > 0 AND Latest.UA < 415 -- Assuming normal UA range is below 415 for adult males and below 350 for adult females, this needs to be adjusted based on actual medical guidelines.\n\n\t----- bird -----\tthrombosis_prediction",
    "1220": "\nSELECT P.ID, P.SEX, P.Birthday \nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.UN = (SELECT MIN(UN) FROM Laboratory WHERE UN > 0)\n\n\t----- bird -----\tthrombosis_prediction",
    "1221": "\nSELECT P.ID, P.SEX, P.Birthday\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE P.Diagnosis = 'RA' AND L.UN BETWEEN 5 AND 20\n\n\t----- bird -----\tthrombosis_prediction",
    "1222": "\nSELECT COUNT(P.ID) AS Male_Patients_With_Abnormal_Creatinine\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'male' AND L.CRE NOT BETWEEN 0.5 AND 1.2\n\n\t----- bird -----\tthrombosis_prediction",
    "1223": "\nSELECT (CASE WHEN male_count > female_count THEN TRUE ELSE FALSE END) AS result\nFROM (\n    SELECT \n        SUM(CASE WHEN P.SEX = 'M' AND L.CRE NOT BETWEEN 0.5 AND 1.2 THEN 1 ELSE 0 END) AS male_count,\n        SUM(CASE WHEN P.SEX = 'F' AND L.CRE NOT BETWEEN 0.5 AND 1.2 THEN 1 ELSE 0 END) AS female_count\n    FROM Patient P\n    JOIN Laboratory L ON P.ID = L.ID\n) subquery\n\n\t----- bird -----\tthrombosis_prediction",
    "1224": "\nSELECT P.ID, P.SEX, P.Birthday, L.T_BIL AS Highest_T_Bilirubin\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.T_BIL = (SELECT MAX(T_BIL) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1225": "\nSELECT P.SEX, COUNT(E.ID) AS PatientCount\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE E.T_BIL NOT BETWEEN 0 AND 20\nGROUP BY P.SEX\n\n\t----- bird -----\tthrombosis_prediction",
    "1226": "\nSELECT ID, T-CHO FROM Laboratory WHERE T-CHO = (SELECT MAX(T-CHO) FROM Laboratory) ORDER BY Birthday ASC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1227": "\nSELECT AVG(JULIANSDIFF('2023-01-01', p.Birthday)) AS average_age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'male' AND l.T_CHO > (SELECT AVG(T_CHO) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1228": "\nSELECT P.ID, P.Diagnosis\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.TG > 100\n\n\t----- bird -----\tthrombosis_prediction",
    "1229": "\nSELECT COUNT(Patient.ID)\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.TG NOT BETWEEN 50 AND 150 -- Assuming normal range for TG is between 50 and 150 mg/dL\nAND TIMESTAMPDIFF(YEAR, Patient.Birthday, CURDATE()) > 50;\n\n\t----- bird -----\tthrombosis_prediction",
    "1230": "\nSELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = 'outpatient' AND l.CPK BETWEEN 24 AND 160\n\n\t----- bird -----\tthrombosis_prediction",
    "1231": "\nSELECT COUNT(P.ID) AS Male_Patients_With_High_CPK\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'Male' \nAND EXTRACT(YEAR FROM P.Birthday) BETWEEN 1936 AND 1956\nAND L.CPK > (SELECT MAX(NORMAL_RANGE) FROM NORMAL_RANGES WHERE TEST_NAME = 'CPK')\n\n\t----- bird -----\tthrombosis_prediction",
    "1232": "\nSELECT P.ID, P.SEX, TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) AS Age\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.GLU NOT BETWEEN 70 AND 100 AND L.T-CHO BETWEEN 200 AND 240\n\n\t----- bird -----\tthrombosis_prediction",
    "1233": "\nSELECT P.ID, L.GLU\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE YEAR(P.First_Date) = 1991 AND L.GLU BETWEEN 60 AND 100;\n\n\t----- bird -----\tthrombosis_prediction",
    "1234": "\nSELECT P.ID, P.SEX, P.Birthday\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.WBC NOT BETWEEN 4 AND 10\nGROUP BY P.SEX\nORDER BY P.Birthday DESC\n\n\t----- bird -----\tthrombosis_prediction",
    "1235": "\nSELECT P.ID, TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) AS Age\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.RBC < (SELECT AVG(RBC) FROM Laboratory)\nGROUP BY P.ID\nORDER BY Age ASC;\n\n\t----- bird -----\tthrombosis_prediction",
    "1236": "\nSELECT P.ID, P.SEX, P.Birthday, P.Admission\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE P.SEX = 'F' AND TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) >= 50 AND L.RBC < (SELECT AVG(RBC) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1237": "\nSELECT P.ID, P.SEX FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = 'outpatient' AND L.HGB < 13\n\n\t----- bird -----\tthrombosis_prediction",
    "1238": "\nSELECT P.ID, P.SEX FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND E.LAC IS NULL ORDER BY P.Birthday ASC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1239": "\nSELECT P.ID, TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) AS Age\nFROM Patient P\nJOIN (\n    SELECT ID, Date\n    FROM Laboratory\n    WHERE HCT > 45 AND ID IN (\n        SELECT ID\n        FROM Laboratory\n        GROUP BY ID\n        HAVING COUNT(*) >= 2\n    )\n) L ON P.ID = L.ID\nGROUP BY P.ID\nHAVING COUNT(L.Date) >= 2\n\n\t----- bird -----\tthrombosis_prediction",
    "1240": "\nSELECT AVG(HCT) AS Average_Hematocrit_Level\nFROM Laboratory\nWHERE Date BETWEEN '1991-01-01' AND '1991-12-31'\nAND HCT < (SELECT NORMAL_RANGE FROM REFERENCE_RANGES WHERE TEST = 'HCT')\n\n\t----- bird -----\tthrombosis_prediction",
    "1241": "\nSELECT \n    SUM(CASE WHEN PLT < (SELECT MIN(PLT) FROM Laboratory WHERE PLT IS NOT NULL) THEN 1 ELSE 0 END) AS LowerThanNormal,\n    SUM(CASE WHEN PLT > (SELECT MAX(PLT) FROM Laboratory WHERE PLT IS NOT NULL) THEN 1 ELSE 0 END) AS HigherThanNormal\nFROM Laboratory\nWHERE PLT IS NOT NULL AND PLT < (SELECT MIN(PLT) FROM Laboratory WHERE PLT IS NOT NULL) OR PLT > (SELECT MAX(PLT) FROM Laboratory WHERE PLT IS NOT NULL)\n\n\t----- bird -----\tthrombosis_prediction",
    "1242": "\nSELECT P.ID, P.SEX, P.Birthday, L.Date, L.PLT \nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE YEAR(L.Date) = 1984 AND TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) < 50 AND L.PLT BETWEEN 150 AND 400\n\n\t----- bird -----\tthrombosis_prediction",
    "1243": "\nSELECT CAST(COUNT(CASE WHEN T1.SEX = 'F' AND T2.PT > 15 THEN T1.ID END) AS REAL) * 100 / COUNT(T1.ID) AS Female_PT_Abnormal_Percentage\nFROM Patient AS T1\nJOIN Examination AS T2 ON T1.ID = T2.ID\nWHERE TIMESTAMPDIFF(YEAR, T1.Birthday, CURDATE()) > 55;\n\n\t----- bird -----\tthrombosis_prediction",
    "1244": "\nSELECT P.ID, P.SEX, P.Birthday, P.First Date, L.PT\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE P.First Date > '1992-12-31' AND L.PT BETWEEN 9.5 AND 12.5;\n\n\t----- bird -----\tthrombosis_prediction",
    "1245": "\nSELECT COUNT(*) FROM Examination WHERE Examination.Date > '1997-01-01' AND KCT = 'inactivated partial prothrombin time'\n\n\t----- bird -----\tthrombosis_prediction",
    "1246": "\nSELECT COUNT(E.ID) \nFROM Examination E\nWHERE E.APTT > 38 AND E.Thrombosis = 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1247": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Patient.SEX = 'male' AND Laboratory.WBC BETWEEN 4 AND 10 AND Laboratory.FG NOT BETWEEN 200 AND 400\n\n\t----- bird -----\tthrombosis_prediction",
    "1248": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Birthday > '1980-01-01' AND Laboratory.FG != 'N'\n\n\t----- bird -----\tthrombosis_prediction",
    "1249": "\nSELECT DISTINCT P.Diagnosis\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.U_PRO = 'Positive'\nOR L.U_PRO = 'High';\n\n\t----- bird -----\tthrombosis_prediction",
    "1250": "\nSELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID JOIN Examination AS E ON P.ID = E.ID WHERE L.U_PRO = 'N' AND E.Diagnosis = 'SLE'\n\n\t----- bird -----\tthrombosis_prediction",
    "1251": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.aCL_IgG < (SELECT AVG(aCL_IgG) FROM Examination WHERE aCL_IgG IS NOT NULL) AND Examination.Symptoms LIKE '%abortion%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1252": "\nSELECT COUNT(E.ID) \nFROM Examination E\nJOIN Laboratory L ON E.ID = L.ID\nWHERE L.IGG IS NOT NULL AND L.IGG >= 70 AND L.IGG <= 160 AND E.Symptoms IS NOT NULL\n\n\t----- bird -----\tthrombosis_prediction",
    "1253": "\nSELECT P.Diagnosis\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.IGA IN (\n    SELECT MAX(IGA) AS Normal_IGA\n    FROM Laboratory\n    WHERE IGA BETWEEN 70 AND 450\n)\n\n\t----- bird -----\tthrombosis_prediction",
    "1254": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.IGA IS NOT NULL AND Laboratory.IGA > 0 AND Laboratory.IGA < 150 AND Patient.First Date >= '1990-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1255": "\nSELECT Diagnosis, COUNT(*) AS count\nFROM Examination\nWHERE aCL IgM != 0 OR RF != 'Negative'\nGROUP BY Diagnosis\nORDER BY count DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1256": "\nSELECT COUNT(*) FROM Patient WHERE ID NOT IN (SELECT ID FROM Laboratory WHERE CRP = 'normal')\n\n\t----- bird -----\tthrombosis_prediction",
    "1257": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CRP != 'N' AND Patient.Birthday > DATE('now', '-18 years')\n\n\t----- bird -----\tthrombosis_prediction",
    "1258": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Laboratory.RF = 'normal' AND (Examination.KCT != 'normal' OR Examination.RVVT != 'normal' OR Examination.LAC != 'normal')\n\n\t----- bird -----\tthrombosis_prediction",
    "1259": "\nSELECT DISTINCT P.Diagnosis\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.Birthday > '1995-01-01' AND E.RF = 'normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1260": "\nSELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RF = 'normal' AND TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) > 60\n\n\t----- bird -----\tthrombosis_prediction",
    "1261": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.RF = 0 AND Examination.Thrombosis = 0;\n\n\t----- bird -----\tthrombosis_prediction",
    "1262": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.ANA = 1 AND Examination.ANA_Pattern = 'P' AND Laboratory.C3 IS NOT NULL AND Laboratory.C3 >= 90 AND Laboratory.C3 <= 180\n\n\t----- bird -----\tthrombosis_prediction",
    "1263": "\nSELECT P.ID FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.LAC != 'normal' ORDER BY E.aCL_IgG DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1264": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.Thrombosis = 1 AND Laboratory.C4 IS NOT NULL AND Laboratory.C4 >= 0 AND Laboratory.C4 <= 0.25\n\n\t----- bird -----\tthrombosis_prediction",
    "1265": "\nSELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.Admission IS NOT NULL AND L.RNP = 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1266": "\nSELECT Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE RNP != 'N' OR RNP IS NOT NULL ORDER BY Birthday ASC LIMIT 1)\n\n\t----- bird -----\tthrombosis_prediction",
    "1267": "\nSELECT COUNT(*) \nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.SM = 0 AND e.Thrombosis = (SELECT MAX(Thrombosis) FROM Examination WHERE SM = 0)\n\n\t----- bird -----\tthrombosis_prediction",
    "1268": "\nSELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE SM != 'N') ORDER BY Birthday ASC LIMIT 3\n\n\t----- bird -----\tthrombosis_prediction",
    "1269": "\nSELECT DISTINCT P.ID\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nJOIN Laboratory L ON P.ID = L.ID\nWHERE E.\"Examination Date\" > '1997-01-01' AND L.SM = 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1270": "\nSELECT COUNT(P.ID) \nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.SEX = 'male' AND E.Symptoms LIKE '%vertigo%' AND E.SM = 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1271": "\nSELECT COUNT(P.ID) \nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.First Date < '1990-01-01' AND L.SSA = 0\n\n\t----- bird -----\tthrombosis_prediction",
    "1272": "\nSELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA = 1 ORDER BY P.First_Date ASC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1273": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.SSB = 0 AND Examination.Diagnosis = 'SLE';\n\n\t----- bird -----\tthrombosis_prediction",
    "1274": "\nSELECT COUNT(E.ID) \nFROM Examination E\nJOIN Laboratory L ON E.ID = L.ID\nWHERE E.SSB = 'Normal' AND E.Symptoms IS NOT NULL AND E.Symptoms != ''\n\n\t----- bird -----\tthrombosis_prediction",
    "1275": "\nSELECT COUNT(P.ID) \nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nJOIN Examination E ON P.ID = E.ID\nWHERE L.CENTROMEA = 'Normal' AND L.SSB = 'Normal' AND P.SEX = 'Male'\n\n\t----- bird -----\tthrombosis_prediction",
    "1276": "\nSELECT DISTINCT P.Diagnosis\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE E.DNA <> 0 OR E.DNA_II <> 0;\n\n\t----- bird -----\tthrombosis_prediction",
    "1277": "\nSELECT COUNT(*) FROM Patient WHERE ID NOT IN (SELECT ID FROM Laboratory WHERE DNA = 0 OR DNA IS NULL)\n\n\t----- bird -----\tthrombosis_prediction",
    "1278": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.DNA-II IS NOT NULL AND Laboratory.DNA-II != 0\nAND Patient.Admission IS NOT NULL;\n\n\t----- bird -----\tthrombosis_prediction",
    "1279": "\nSELECT CAST(COUNT(CASE WHEN T1.GOT > 40 AND T2.Diagnosis = 'SLE' THEN T1.ID ELSE NULL END) AS FLOAT) * 100 / COUNT(T2.ID) AS Percentage_SLE_Abnormal_GOT\nFROM Laboratory AS T1\nJOIN Examination AS T2 ON T1.ID = T2.ID\nWHERE T2.Diagnosis = 'SLE'\n\n\t----- bird -----\tthrombosis_prediction",
    "1280": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'male' AND Laboratory.GOT BETWEEN 15 AND 40\n\n\t----- bird -----\tthrombosis_prediction",
    "1281": "\nSELECT MIN(T2.Birthday) AS Youngest_Birthdate\nFROM Laboratory AS T1\nJOIN Patient AS T2 ON T1.ID = T2.ID\nWHERE T1.GOT > NORMAL_GOT_VALUE -- Replace NORMAL_GOT_VALUE with the actual normal value for GOT\n\n\t----- bird -----\tthrombosis_prediction",
    "1282": "\nSELECT P.Birthday\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.GPT BETWEEN 10 AND 40 -- Assuming normal range for GPT is between 10 and 40 IU/L\nORDER BY L.GPT DESC\nLIMIT 3\n\n\t----- bird -----\tthrombosis_prediction",
    "1283": "\nSELECT COUNT(P.ID) AS Male_Patients_With_Normal_GPT\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'male' AND L.GPT <= 40\n\n\t----- bird -----\tthrombosis_prediction",
    "1284": "\nSELECT P.First_Date FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.LDH BETWEEN 100 AND 230 ORDER BY L.LDH DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1285": "\nSELECT MAX(T2.Date) AS LatestRecordDate\nFROM Patient AS T1\nJOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.LDH > (SELECT AVG(LDH) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1286": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.ALP IS NOT NULL AND Laboratory.ALP != 0 AND Patient.Admission IS NOT NULL\n\n\t----- bird -----\tthrombosis_prediction",
    "1287": "\nSELECT COUNT(*) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Admission = 'outpatient' AND L.ALP IS NOT NULL AND L.ALP BETWEEN 30 AND 120\n\n\t----- bird -----\tthrombosis_prediction",
    "1288": "\nSELECT P.Diagnosis\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.TP < (SELECT AVG(TP) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1289": "\nSELECT COUNT(Laboratory.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Diagnosis = 'SJS' AND Laboratory.TP BETWEEN 6.0 AND 8.0;\n\n\t----- bird -----\tthrombosis_prediction",
    "1290": "\nSELECT E.Examination_Date FROM Examination E JOIN Laboratory L ON E.ID = L.ID WHERE L.ALB = (SELECT MAX(ALB) AS MaxAlbumin FROM Laboratory WHERE ALB BETWEEN 3.5 AND 4.8) LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1291": "\nSELECT COUNT(P.ID) AS Male_Patients_With_Normal_ALB_TP\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'male'\nAND L.ALB BETWEEN 35 AND 50\nAND L.TP BETWEEN 62 AND 82;\n\n\t----- bird -----\tthrombosis_prediction",
    "1292": "\nSELECT E.aCL_IgG, E.aCL_IgM FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID JOIN Laboratory AS L ON L.ID = P.ID WHERE P.SEX = 'female' AND L.UA BETWEEN 200 AND 400 ORDER BY L.UA DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1293": "\nSELECT MAX(P.Diagnosis) AS Max_ANA_Concentration, L.CRE AS Creatinine_Level\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.CRE = (SELECT AVG(CRE) FROM Laboratory)\nAND P.ID IN (\n    SELECT ID\n    FROM Examination\n    WHERE ANA = 1\n)\n\n\t----- bird -----\tthrombosis_prediction",
    "1294": "\nSELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CRE BETWEEN 0.6 AND 1.2 ORDER BY (SELECT MAX(T.aCL_IgG + T.aCL_IgM) FROM Examination AS T WHERE T.ID = P.ID) DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1295": "\nSELECT COUNT(E.ID) \nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE E.ANA = 1 AND E.ANA_Pattern = 'Peripheral' AND E.T_BIL > (SELECT AVG(T_BIL) FROM Laboratory WHERE T_BIL IS NOT NULL)\n\n\t----- bird -----\tthrombosis_prediction",
    "1296": "\nSELECT P.ID, E.ANA\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nJOIN Examination AS E ON P.ID = E.ID\nWHERE L.T_BIL BETWEEN 0 AND 1.2 -- Assuming the normal range for total bilirubin is up to 1.2 mg/dL\nORDER BY L.T_BIL DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1297": "\nSELECT COUNT(E.ID) \nFROM Examination E\nJOIN Laboratory L ON E.ID = L.ID\nWHERE E.RVVT = 'Negative' AND L.T_CHO > (SELECT AVG(T_CHO) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1298": "\nSELECT COUNT(E.ID) \nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE E.ANA = 1 AND E.ANA_Pattern = 'P' AND E.RVVT = 'N'\nAND (E.T_BIL BETWEEN 0 AND 20 OR E.T_BIL IS NULL)\n\n\t----- bird -----\tthrombosis_prediction",
    "1299": "\nSELECT COUNT(*) \nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE E.TG IS NOT NULL AND E.TG <= 150 AND E.Symptoms IS NOT NULL AND E.Symptoms != ''\n\n\t----- bird -----\tthrombosis_prediction",
    "1300": "\nSELECT P.Diagnosis\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.TG BETWEEN 50 AND 150\nORDER BY L.TG DESC\nLIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1301": "\nSELECT P.ID FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Thrombosis = 0 AND L.CPK > (SELECT AVG(CPK) FROM Laboratory)\n\n\t----- bird -----\tthrombosis_prediction",
    "1302": "\nSELECT COUNT(E.ID) \nFROM Examination E\nJOIN Laboratory L ON E.ID = L.ID\nWHERE L.CPK BETWEEN 24 AND 160 AND E.KCT LIKE '%positive%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1303": "\nSELECT Birthday FROM Patient WHERE ID IN (\n    SELECT ID FROM Laboratory WHERE GLU NOT BETWEEN 70 AND 110\n) ORDER BY Birthday ASC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1304": "\nSELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.LAC = '\u6b63\u5e38' AND e.Thrombosis = 0;\n\n\t----- bird -----\tthrombosis_prediction",
    "1305": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.WBC BETWEEN 4 AND 10;\n\n\t----- bird -----\tthrombosis_prediction",
    "1306": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Examination.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 4 AND 10\n\n\t----- bird -----\tthrombosis_prediction",
    "1307": "\nSELECT P.ID FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE RBC != 'normal' AND Admission = 'outpatient'\n\n\t----- bird -----\tthrombosis_prediction",
    "1308": "\nSELECT COUNT(*) \nFROM Examination \nWHERE PLT = 'normal' AND Symptoms IS NOT NULL AND Symptoms != ''\n\n\t----- bird -----\tthrombosis_prediction",
    "1309": "\nSELECT P.ID, L.PLT\nFROM Patient AS P\nJOIN Examination AS E ON P.ID = E.ID\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE E.Diagnosis = 'MCTD' AND L.PLT BETWEEN 150 AND 400\n\n\t----- bird -----\tthrombosis_prediction",
    "1310": "\nSELECT AVG(L.PT) AS Average_PT\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'male' AND L.PT IS NOT NULL AND L.PT >= 10 AND L.PT <= 13\n\n\t----- bird -----\tthrombosis_prediction",
    "1311": "\nSELECT COUNT(Patient.ID) \nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE Examination.Thrombosis > 0 AND Examination.PT = 'Normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1312": "\nSELECT m.link_to_major, ma.major_name \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.first_name = 'Angela' AND m.last_name = 'Sanders';\n\n\t----- bird -----\tstudent_club",
    "1313": "\nSELECT COUNT(m.member_id)\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.college = 'College of Engineering'\n\n\t----- bird -----\tstudent_club",
    "1314": "\nSELECT first_name, last_name FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'Art and Design')\n\n\t----- bird -----\tstudent_club",
    "1315": "\nSELECT COUNT(DISTINCT m.member_id) \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women\\'s Soccer'\nAND m.position = 'Student_Club';\n\n\t----- bird -----\tstudent_club",
    "1316": "\nSELECT m.phone\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women\\'s Soccer'\nAND m.position = 'Student_Club';\n\n\t----- bird -----\tstudent_club",
    "1317": "\nSELECT COUNT(m.member_id) \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women\\'s Soccer' AND m.t_shirt_size = 'Medium' AND m.position = 'Student_Club'\n\n\t----- bird -----\tstudent_club",
    "1318": "\nSELECT e.event_name, COUNT(a.link_to_member) AS attendance_count\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nJOIN member m ON a.link_to_member = m.member_id\nWHERE m.position = 'Student_Club'\nGROUP BY e.event_id, e.event_name\nORDER BY attendance_count DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1319": "\nSELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'vice president' AND T1.first_name || ' ' || T1.last_name LIKE '%Student_Club%'\n\n\t----- bird -----\tstudent_club",
    "1320": "\nSELECT e.event_name FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean'\n\n\t----- bird -----\tstudent_club",
    "1321": "\nSELECT COUNT(a.link_to_event) \nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nJOIN member m ON a.link_to_member = m.member_id\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND e.type = 'Student_Club' AND STRFTIME('%Y', e.event_date) = '2019'\n\n\t----- bird -----\tstudent_club",
    "1322": "\nSELECT COUNT(e.event_id) AS meeting_count\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type = 'meeting'\nGROUP BY e.event_id\nHAVING COUNT(DISTINCT a.link_to_member) > 10\n\n\t----- bird -----\tstudent_club",
    "1323": "\nSELECT e.event_name FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event WHERE e.type = 'Student_Club' GROUP BY e.event_name HAVING COUNT(DISTINCT a.link_to_member) > 20\n\n\t----- bird -----\tstudent_club",
    "1324": "\nSELECT AVG(T2.link_to_member) AS average_attendance\nFROM event AS T1\nJOIN attendance AS T2 ON T1.event_id = T2.link_to_event\nWHERE YEAR(T1.event_date) = 2020 AND T1.type = 'meeting'\nGROUP BY YEAR(T1.event_date)\n\n\t----- bird -----\tstudent_club",
    "1325": "\nSELECT MAX(cost) AS max_cost, expense_description \nFROM expense\nWHERE approved = 'yes'\nGROUP BY expense_id\nORDER BY max_cost DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1326": "\nSELECT COUNT(*) FROM member AS m JOIN major AS ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Environmental Engineering'\n\n\t----- bird -----\tstudent_club",
    "1327": "\nSELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Laugh Out Loud'\nAND m.position = 'Student_Club';\n\n\t----- bird -----\tstudent_club",
    "1328": "\nSELECT last_name FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Law and Constitutional Studies')\n\n\t----- bird -----\tstudent_club",
    "1329": "\nSELECT T2.county FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\n\n\t----- bird -----\tstudent_club",
    "1330": "\nSELECT T2.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\n\n\t----- bird -----\tstudent_club",
    "1331": "\nSELECT SUM(amount) AS total_funds_received\nFROM income\nWHERE link_to_member IN (\n    SELECT member_id\n    FROM member\n    WHERE position = 'Vice President'\n);\n\n\t----- bird -----\tstudent_club",
    "1332": "\nSELECT SUM(e.cost) AS total_spent_on_food\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE e.expense_description LIKE '%food%' AND ev.event_name = 'September Meeting' AND b.category = 'Student_Club'\n\n\t----- bird -----\tstudent_club",
    "1333": "\nSELECT T2.city, T2.state \nFROM member AS T1 \nJOIN zip_code AS T2 ON T1.zip = T2.zip_code \nWHERE T1.position = 'President' AND T1.first_name || ' ' || T1.last_name = 'Student_Club President'\n\n\t----- bird -----\tstudent_club",
    "1334": "\nSELECT first_name || ' ' || last_name AS full_name FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Illinois')\n\n\t----- bird -----\tstudent_club",
    "1335": "\nSELECT SUM(e.cost) AS total_spent\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE e.expense_description = 'advertisement' AND ev.event_name = 'September Meeting'\n\n\t----- bird -----\tstudent_club",
    "1336": "\nSELECT department FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE first_name = 'Pierce' AND last_name = 'Guidi')\n\n\t----- bird -----\tstudent_club",
    "1337": "\nSELECT SUM(amount) AS total_budgeted_amount\nFROM budget\nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker')\n\n\t----- bird -----\tstudent_club",
    "1338": "\nSELECT expense_id, approved FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08'))\n\n\t----- bird -----\tstudent_club",
    "1339": "\nSELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah' AND m.last_name = 'Allen'\nAND (EXTRACT(MONTH FROM e.expense_date) = 9 OR EXTRACT(MONTH FROM e.expense_date) = 10)\n\n\t----- bird -----\tstudent_club",
    "1340": "\nSELECT SUM(CASE WHEN EXTRACT(YEAR FROM event.event_date) = 2019 THEN budget.spent ELSE 0 END) - \n       SUM(CASE WHEN EXTRACT(YEAR FROM event.event_date) = 2020 THEN budget.spent ELSE 0 END) AS difference\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.type = 'Student_Club'\n\n\t----- bird -----\tstudent_club",
    "1341": "\nSELECT location FROM event WHERE event_name = 'Spring Budget Review'\n\n\t----- bird -----\tstudent_club",
    "1342": "\nSELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019/9/4'\n\n\t----- bird -----\tstudent_club",
    "1343": "\nSELECT MAX(T1.remaining) AS remaining FROM budget AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food'\n\n\t----- bird -----\tstudent_club",
    "1344": "\nSELECT notes FROM event WHERE event_date = '2019/9/14' AND type = 'fundraising'\n\n\t----- bird -----\tstudent_club",
    "1345": "\nSELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences'\n\n\t----- bird -----\tstudent_club",
    "1346": "\nSELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\n\n\t----- bird -----\tstudent_club",
    "1347": "\nSELECT z.county FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Adela' AND m.last_name = 'O''Gallagher'\n\n\t----- bird -----\tstudent_club",
    "1348": "\nSELECT COUNT(*) \nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'November Meeting' AND b.spent > b.amount;\n\n\t----- bird -----\tstudent_club",
    "1349": "\nSELECT SUM(amount) AS total_budget_amount\nFROM budget\nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker')\n\n\t----- bird -----\tstudent_club",
    "1350": "\nSELECT e.status\nFROM event AS e\nJOIN expense AS ex ON e.event_id = ex.link_to_budget\nWHERE ex.expense_description = 'Post Cards, Posters' AND ex.expense_date = '2019/8/20'\n\n\t----- bird -----\tstudent_club",
    "1351": "\nSELECT m.link_to_major, ma.major_name \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.first_name = 'Brent' AND m.last_name = 'Thomason';\n\n\t----- bird -----\tstudent_club",
    "1352": "\nSELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major_name = 'Human Development and Family Studies' AND t_shirt_size = 'Large';\n\n\t----- bird -----\tstudent_club",
    "1353": "\nSELECT T2.type FROM member AS T1 JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielsen'\n\n\t----- bird -----\tstudent_club",
    "1354": "\nSELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1355": "\nSELECT z.short_state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison'\n\n\t----- bird -----\tstudent_club",
    "1356": "\nSELECT T2.department FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\n\n\t----- bird -----\tstudent_club",
    "1357": "\nSELECT date_received FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton')\n\n\t----- bird -----\tstudent_club",
    "1358": "\nSELECT first_name, last_name FROM member WHERE date_received = (SELECT MIN(date_received) FROM income)\n\n\t----- bird -----\tstudent_club",
    "1359": "\nSELECT COUNT(b1.budget_id) \nFROM budget b1\nJOIN event e1 ON b1.link_to_event = e1.event_id\nWHERE b1.category = 'Advertisement' AND e1.event_name = 'Yearly Kickoff'\nAND (\n    SELECT COUNT(*) \n    FROM budget b2\n    JOIN event e2 ON b2.link_to_event = e2.event_id\n    WHERE b2.spent > b1.spent AND e2.event_name LIKE '%October Meeting%'\n) > 0\n\n\t----- bird -----\tstudent_club",
    "1360": "\nWITH total_budget AS (\n    SELECT SUM(amount) as total_amount\n    FROM budget\n    WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Speaker')\n),\nparking_budget AS (\n    SELECT SUM(amount) as parking_amount\n    FROM budget\n    WHERE category = 'Parking' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Speaker')\n)\nSELECT \n    CASE \n        WHEN total_amount = 0 THEN 0\n        ELSE (parking_amount * 100.0 / total_amount)\n    END as parking_percentage\nFROM \n    total_budget, parking_budget;\n\n\t----- bird -----\tstudent_club",
    "1361": "\nSELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description LIKE '%pizza%';\n\n\t----- bird -----\tstudent_club",
    "1362": "\nSELECT COUNT(DISTINCT city) AS city_count\nFROM zip_code\nWHERE county = 'Orange' AND state = 'Virginia';\n\n\t----- bird -----\tstudent_club",
    "1363": "\nSELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences'\n\n\t----- bird -----\tstudent_club",
    "1364": "\nSELECT z.city, z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Amy' AND m.last_name = 'Firth'\n\n\t----- bird -----\tstudent_club",
    "1365": "\nSELECT e.* FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE b.remaining = (SELECT MIN(remaining) FROM budget)\n\n\t----- bird -----\tstudent_club",
    "1366": "\nSELECT m.first_name, m.last_name \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'October Meeting';\n\n\t----- bird -----\tstudent_club",
    "1367": "\nSELECT college, COUNT(*) AS member_count\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nGROUP BY college\nORDER BY member_count DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1368": "\nSELECT m.link_to_major, ma.major_name \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.phone = '809-555-3360';\n\n\t----- bird -----\tstudent_club",
    "1369": "\nSELECT e.event_name, b.amount\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nORDER BY b.amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1370": "\nSELECT expense.expense_description, expense.cost, expense.expense_date \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE member.position = 'vice president'\n\n\t----- bird -----\tstudent_club",
    "1371": "\nSELECT COUNT(a.link_to_member) AS number_of_attendees\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women\\'s Soccer'\n\n\t----- bird -----\tstudent_club",
    "1372": "\nSELECT T1.date_received FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Casey' AND T2.last_name = 'Mason'\n\n\t----- bird -----\tstudent_club",
    "1373": "\nSELECT COUNT(*) \nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Maryland';\n\n\t----- bird -----\tstudent_club",
    "1374": "\nSELECT COUNT(DISTINCT link_to_event) \nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nWHERE phone = '954-555-6240';\n\n\t----- bird -----\tstudent_club",
    "1375": "\nSELECT first_name, last_name FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'School of Applied Sciences, Technology and Education')\n\n\t----- bird -----\tstudent_club",
    "1376": "\nSELECT e.event_name, b.spent / b.amount AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'closed'\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1377": "\nSELECT COUNT(*) FROM member WHERE position = 'president';\n\n\t----- bird -----\tstudent_club",
    "1378": "\nSELECT MAX(spent) AS highest_spent FROM budget\n\n\t----- bird -----\tstudent_club",
    "1379": "\nSELECT COUNT(*) FROM event WHERE type = 'meeting' AND event_date LIKE '2020-%'\n\n\t----- bird -----\tstudent_club",
    "1380": "\nSELECT SUM(cost) AS total_spent_for_food\nFROM expense\nWHERE expense_description = 'Food';\n\n\t----- bird -----\tstudent_club",
    "1381": "\nSELECT m.first_name, m.last_name \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7\n\n\t----- bird -----\tstudent_club",
    "1382": "\nSELECT m.first_name, m.last_name \nFROM member m\nJOIN event e ON (e.event_id = a.link_to_event)\nWHERE m.link_to_major = (\n    SELECT major_id FROM major WHERE major_name = 'interior design'\n) AND e.event_name = 'Community Theater' AND EXISTS (\n    SELECT 1 FROM attendance a WHERE a.link_to_member = m.member_id\n);\n\n\t----- bird -----\tstudent_club",
    "1383": "\nSELECT first_name, last_name FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE city = 'Georgetown' AND state = 'South Carolina')\n\n\t----- bird -----\tstudent_club",
    "1384": "\nSELECT COUNT(*) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour')\n\n\t----- bird -----\tstudent_club",
    "1385": "\nSELECT m.first_name, m.last_name \nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.amount > 40\nGROUP BY m.first_name, m.last_name\nORDER BY SUM(i.amount) DESC;\n\n\t----- bird -----\tstudent_club",
    "1386": "\nSELECT SUM(cost) AS total_expense\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'Yearly Kickoff'\nAND budget.event_status = 'approved';\n\n\t----- bird -----\tstudent_club",
    "1387": "\nSELECT m.first_name, m.last_name \nFROM member m\nJOIN budget b ON m.member_id = b.link_to_member\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff' AND b.category = 'Manager'\n\n\t----- bird -----\tstudent_club",
    "1388": "\nSELECT m.first_name, m.last_name, i.source \nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nORDER BY i.amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1389": "\nSELECT e.event_name, SUM(exp.cost) AS total_cost\nFROM event e\nJOIN expense exp ON e.event_id = exp.link_to_budget\nGROUP BY e.event_id, e.event_name\nORDER BY total_cost ASC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1390": "\nWITH total_cost AS (\n    SELECT SUM(cost) as total FROM expense\n),\nyearly_kickoff_cost AS (\n    SELECT SUM(cost) as yearly_kickoff_total FROM expense \n    JOIN event ON expense.link_to_budget = budget.link_to_event\n    WHERE event.event_name = 'Yearly Kickoff'\n)\nSELECT (yearly_kickoff_cost.yearly_kickoff_total * 100.0 / total_cost.total) AS percentage_of_yearly_kickoff\nFROM yearly_kickoff_cost, total_cost\n\n\t----- bird -----\tstudent_club",
    "1391": "\nSELECT \n    (SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Finance')) * 1.0 /\n    (SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics'))\nAS ratio\n\n\t----- bird -----\tstudent_club",
    "1392": "\nSELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1393": "\nSELECT first_name, last_name, email \nFROM member \nWHERE position = 'Secretary';\n\n\t----- bird -----\tstudent_club",
    "1394": "\nSELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\n\n\t----- bird -----\tstudent_club",
    "1395": "\nSELECT COUNT(a.link_to_member) \nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Community Theater' AND e.event_date LIKE '2019-%'\n\n\t----- bird -----\tstudent_club",
    "1396": "\nSELECT COUNT(a.link_to_event) AS number_of_events_attended, m.link_to_major \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nWHERE m.first_name = 'Luisa' AND m.last_name = 'Guidi'\nGROUP BY m.link_to_major;\n\n\t----- bird -----\tstudent_club",
    "1397": "\nSELECT AVG(cost) AS average_food_expense\nFROM expense\nWHERE expense_description LIKE '%food%' AND link_to_budget IN (\n    SELECT budget_id\n    FROM budget\n    WHERE event_status = 'past'\n);\n\n\t----- bird -----\tstudent_club",
    "1398": "\nSELECT event_name FROM event WHERE event_id = (\n    SELECT link_to_event FROM budget WHERE category = 'Advertisement' ORDER BY spent DESC LIMIT 1\n)\n\n\t----- bird -----\tstudent_club",
    "1399": "\nSELECT a.link_to_event FROM attendance AS a JOIN member AS m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND EXISTS (SELECT e.event_id FROM event AS e WHERE e.event_name = 'Women\\'s Soccer' AND e.event_id = a.link_to_event)\n\n\t----- bird -----\tstudent_club",
    "1400": "\nSELECT CAST(COUNT(CASE WHEN type = 'Community Service' THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS percentage_community_service_events\nFROM event\nWHERE status = 'Completed' AND event_date LIKE '2019-%'\n\n\t----- bird -----\tstudent_club",
    "1401": "\nSELECT cost FROM expense WHERE expense_description = 'Posters' AND link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker'))\n\n\t----- bird -----\tstudent_club",
    "1402": "\nSELECT t_shirt_size, COUNT(t_shirt_size) AS popularity\nFROM member\nWHERE t_shirt_size IS NOT NULL\nGROUP BY t_shirt_size\nORDER BY popularity DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1403": "\nSELECT e.event_name FROM event AS e JOIN budget AS b ON e.event_id = b.link_to_event WHERE e.status = 'closed' AND b.spent > b.amount ORDER BY (b.spent - b.amount) DESC LIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1404": "\nSELECT expense.expense_description, SUM(expense.cost) AS total_value\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'yes'\nGROUP BY expense.expense_description\n\n\t----- bird -----\tstudent_club",
    "1405": "\nSELECT category, amount FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') ORDER BY amount ASC\n\n\t----- bird -----\tstudent_club",
    "1406": "\nSELECT link_to_event, MAX(amount) AS highest_budgeted_amount\nFROM budget\nWHERE category = 'Food'\nGROUP BY link_to_event\nORDER BY highest_budgeted_amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1407": "\nSELECT link_to_event, SUM(amount) AS total_budgeted_amount\nFROM budget\nWHERE category = 'Advertising'\nGROUP BY link_to_event\nORDER BY total_budgeted_amount DESC\nLIMIT 3\n\n\t----- bird -----\tstudent_club",
    "1408": "\nSELECT SUM(cost) AS total_parking_cost\nFROM expense\nWHERE expense_description = 'Parking';\n\n\t----- bird -----\tstudent_club",
    "1409": "\nSELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '8/20/2019';\n\n\t----- bird -----\tstudent_club",
    "1410": "\nSELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.first_name, m.last_name\n\n\t----- bird -----\tstudent_club",
    "1411": "\nSELECT expense_description FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison')\n\n\t----- bird -----\tstudent_club",
    "1412": "\nSELECT expense.expense_description, expense.cost, member.t_shirt_size \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE member.t_shirt_size = 'X-Large'\n\n\t----- bird -----\tstudent_club",
    "1413": "\nSELECT m.zip FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost < 50\n\n\t----- bird -----\tstudent_club",
    "1414": "\nSELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen'\n\n\t----- bird -----\tstudent_club",
    "1415": "\nSELECT position FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business')\n\n\t----- bird -----\tstudent_club",
    "1416": "\nSELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'Business') AND t_shirt_size = 'Medium'\n\n\t----- bird -----\tstudent_club",
    "1417": "\nSELECT DISTINCT e.type\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.remaining > 30\n\n\t----- bird -----\tstudent_club",
    "1418": "\nSELECT DISTINCT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.location = 'MU 215'\n\n\t----- bird -----\tstudent_club",
    "1419": "\nSELECT type FROM event WHERE event_date = '2020-03-24T12:00:00'\n\n\t----- bird -----\tstudent_club",
    "1420": "\nSELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1421": "\nSELECT CAST(COUNT(CASE WHEN major_name = 'Mathematics' THEN member_id END) AS FLOAT) * 100 / COUNT(member_id) AS percentage_math_major\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id;\n\n\t----- bird -----\tstudent_club",
    "1422": "\nSELECT DISTINCT b.category FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.location = 'MU 215'\n\n\t----- bird -----\tstudent_club",
    "1423": "\nSELECT COUNT(*) FROM income WHERE amount = 50;\n\n\t----- bird -----\tstudent_club",
    "1424": "\nSELECT COUNT(*) FROM member WHERE t_shirt_size = 'extra large';\n\n\t----- bird -----\tstudent_club",
    "1425": "\nSELECT COUNT(*) \nFROM major \nWHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\n\n\t----- bird -----\tstudent_club",
    "1426": "\nSELECT m.last_name, ma.department, ma.college \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering'\n\n\t----- bird -----\tstudent_club",
    "1427": "\nSELECT DISTINCT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.location = 'MU 215' AND e.type = 'guest speaker' AND b.spent = 0\n\n\t----- bird -----\tstudent_club",
    "1428": "\nSELECT m.first_name, m.last_name, z.city, z.state \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE ma.department = 'Electrical and Computer Engineering'\n\n\t----- bird -----\tstudent_club",
    "1429": "\nSELECT e.event_name FROM event AS e\nJOIN attendance AS a ON e.event_id = a.link_to_event\nJOIN member AS m ON a.link_to_member = m.member_id\nWHERE m.position = 'Vice President' AND m.zip = (\n    SELECT zip_code FROM zip_code WHERE city = 'Bloomington' AND state = 'IN'\n) AND e.location = '900 E. Washington St.' AND e.type = 'Social';\n\n\t----- bird -----\tstudent_club",
    "1430": "\nSELECT m.last_name, m.position FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.source = 'pizza' AND i.date_received = '09/10/2019'\n\n\t----- bird -----\tstudent_club",
    "1431": "\nSELECT m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'women\\'s soccer';\n\n\t----- bird -----\tstudent_club",
    "1432": "\nSELECT CAST(SUM(CASE WHEN i.amount = 50 THEN i.amount ELSE 0 END) AS REAL) * 100 / SUM(i.amount) AS percentage_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.t_shirt_size = 'medium' AND i.source = 'Student_Club'\n\n\t----- bird -----\tstudent_club",
    "1433": "\nSELECT DISTINCT z.state AS country\nFROM zip_code z\nWHERE z.type = 'Post Office Box'\nGROUP BY z.state\n\n\t----- bird -----\tstudent_club",
    "1434": "\nSELECT DISTINCT T1.zip_code\nFROM zip_code AS T1\nJOIN member AS T2 ON T1.zip_code = T2.zip\nWHERE T1.city = 'San Juan Municipio' AND T1.state = 'Puerto Rico' AND EXISTS (\n    SELECT 1\n    FROM member\n    WHERE link_to_major IN (\n        SELECT major_id\n        FROM major\n        WHERE department LIKE '%Post Office%'\n    )\n)\nAND T2.link_to_major IN (\n    SELECT major_id\n    FROM major\n    WHERE department LIKE '%Post Office%'\n)\n\n\t----- bird -----\tstudent_club",
    "1435": "\nSELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '3/15/2019' AND '3/20/2020'\n\n\t----- bird -----\tstudent_club",
    "1436": "\nSELECT DISTINCT a.link_to_event\nFROM attendance AS a\nJOIN member AS m ON a.link_to_member = m.member_id\nJOIN income AS i ON m.member_id = i.link_to_member\nWHERE i.amount > 50\n\n\t----- bird -----\tstudent_club",
    "1437": "\nSELECT m.first_name, m.last_name, a.link_to_event\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nWHERE EXISTS (\n    SELECT 1\n    FROM expense e\n    WHERE e.link_to_member = m.member_id AND e.approved = 'yes' AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\n)\n\n\t----- bird -----\tstudent_club",
    "1438": "\nSELECT m.link_to_major, ma.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.first_name = 'Katy' AND m.link_to_major = 'rec1N0upiVLy5esTO'\n\n\t----- bird -----\tstudent_club",
    "1439": "\nSELECT member.phone\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business' AND major.college = 'College of Agriculture and Applied Sciences';\n\n\t----- bird -----\tstudent_club",
    "1440": "\nSELECT DISTINCT m.email\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.amount > 20 AND i.date_received BETWEEN '9/10/2019' AND '11/19/2019'\nORDER BY m.email;\n\n\t----- bird -----\tstudent_club",
    "1441": "\nSELECT COUNT(*) \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.college = 'College of Education & Human Services'\nAND ma.department = 'Education';\n\n\t----- bird -----\tstudent_club",
    "1442": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM event) * 100 AS percentage_over_budget\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.spent > b.amount;\n\n\t----- bird -----\tstudent_club",
    "1443": "\nSELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\n\n\t----- bird -----\tstudent_club",
    "1444": "\nSELECT expense_id, expense_description, cost, approved, link_to_member, link_to_budget \nFROM expense \nWHERE cost > 50\n\n\t----- bird -----\tstudent_club",
    "1445": "\nSELECT first_name, last_name FROM member WHERE t_shirt_size = 'extra large'\n\n\t----- bird -----\tstudent_club",
    "1446": "\nSELECT CAST(COUNT(CASE WHEN type = 'PO Box' THEN zip_code ELSE NULL END) AS FLOAT) * 100 / COUNT(*) AS percentage_po_boxes\nFROM zip_code\n\n\t----- bird -----\tstudent_club",
    "1447": "\nSELECT e.event_name, e.location\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.spent < b.amount;\n\n\t----- bird -----\tstudent_club",
    "1448": "\nSELECT e.event_name, e.event_date\nFROM event e\nJOIN expense ex ON e.event_id = ex.link_to_budget\nWHERE ex.expense_description LIKE '%pizza%' AND ex.cost > 50 AND ex.cost < 100\nGROUP BY e.event_name, e.event_date\n\n\t----- bird -----\tstudent_club",
    "1449": "\nSELECT m.first_name, m.last_name, ma.major_name \nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE e.cost > 100\n\n\t----- bird -----\tstudent_club",
    "1450": "\nSELECT e.location, z.city, z.state \nFROM event AS e\nJOIN zip_code AS z ON e.location = z.zip_code\nWHERE (SELECT COUNT(*) FROM income WHERE link_to_event = e.event_id) > 40;\n\n\t----- bird -----\tstudent_club",
    "1451": "\nSELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(DISTINCT e.link_to_budget) > 1\nORDER BY total_cost DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1452": "\nSELECT AVG(amount) AS average_amount_paid\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.position != 'member'\n\n\t----- bird -----\tstudent_club",
    "1453": "\nSELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'Parking'\nGROUP BY e.event_id, e.event_name\nHAVING SUM(b.spent) < (SELECT AVG(total_parking_cost) FROM (\n    SELECT SUM(spent) AS total_parking_cost\n    FROM budget\n    WHERE category = 'Parking'\n    GROUP BY link_to_event\n) AS avg_parking)\n\n\t----- bird -----\tstudent_club",
    "1454": "\nSELECT SUM(CASE WHEN e.type = 'game' THEN exp.cost ELSE 0 END) * 100 / SUM(exp.cost) AS percentage_game_event_cost\nFROM event e\nJOIN expense exp ON e.event_id = exp.link_to_budget\nWHERE e.type = 'game'\n\n\t----- bird -----\tstudent_club",
    "1455": "\nSELECT b.link_to_event, SUM(b.amount) AS total_amount\nFROM budget b\nJOIN expense e ON b.budget_id = e.link_to_budget\nWHERE b.category IN ('water', 'chips', 'cookies')\nGROUP BY b.link_to_event\nORDER BY total_amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1456": "\nSELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spending\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id\nORDER BY total_spending DESC\nLIMIT 5\n\n\t----- bird -----\tstudent_club",
    "1457": "\nSELECT m.first_name || ' ' || m.last_name AS full_name, m.phone \nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense)\n\n\t----- bird -----\tstudent_club",
    "1458": "\nSELECT \n    (COUNT(CASE WHEN z.state = 'Maine' THEN m.member_id END) * 100 / COUNT(m.member_id)) - \n    (COUNT(CASE WHEN z.state = 'Vermont' THEN m.member_id END) * 100 / COUNT(m.member_id)) AS percentage_difference\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\n\n\t----- bird -----\tstudent_club",
    "1459": "\nSELECT major.major_name, major.department FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke';\n\n\t----- bird -----\tstudent_club",
    "1460": "\nSELECT m.first_name, m.last_name, e.cost \nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description IN ('water', 'veggie tray', 'supplies')\nGROUP BY m.first_name, m.last_name, e.cost\n\n\t----- bird -----\tstudent_club",
    "1461": "\nSELECT m.last_name, m.phone\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Elementary Education'\nAND m.position = 'student';\n\n\t----- bird -----\tstudent_club",
    "1462": "\nSELECT b.category, b.amount FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker'\n\n\t----- bird -----\tstudent_club",
    "1463": "\nSELECT DISTINCT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.category = 'food'\n\n\t----- bird -----\tstudent_club",
    "1464": "\nSELECT m.first_name || ' ' || m.last_name AS full_name, i.amount \nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.date_received = '9/9/2019'\nORDER BY i.amount DESC;\n\n\t----- bird -----\tstudent_club",
    "1465": "\nSELECT b.category FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.expense_description = 'Posters'\n\n\t----- bird -----\tstudent_club",
    "1466": "\nSELECT m.first_name, m.last_name, ma.college \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.position = 'Secretary'\n\n\t----- bird -----\tstudent_club",
    "1467": "\nSELECT SUM(b.spent) AS total_spent, e.event_name \nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Speaker Gifts'\nGROUP BY e.event_name\n\n\t----- bird -----\tstudent_club",
    "1468": "\nSELECT z.city AS hometown\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE m.first_name = 'Garrett' AND m.last_name = 'Girke'\n\n\t----- bird -----\tstudent_club",
    "1469": "\nSELECT m.first_name, m.last_name, m.position \nFROM member AS m\nJOIN zip_code AS z ON m.zip = z.zip_code\nWHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = 28092;\n\n\t----- bird -----\tstudent_club",
    "1470": "\nSELECT COUNT(GasStationID) \nFROM gasstations \nWHERE Country = 'CZE' AND Segment = 'Premium'\n\n\t----- bird -----\tdebit_card_specializing",
    "1471": "\nSELECT (SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS EUR_Ratio,\n       (SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS CZK_Ratio\nFROM customers\n\n\t----- bird -----\tdebit_card_specializing",
    "1472": "\nSELECT c.CustomerID, ym.Consumption\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'LAM' AND ym.Date LIKE '2012-%'\nORDER BY ym.Consumption ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1473": "\nSELECT AVG(Consumption) AS Average_Monthly_Consumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME' AND ym.Date LIKE '2013-%'\nGROUP BY YEAR(yr.\"Date\"), MONTH(yr.\"Date\")\n\n\t----- bird -----\tdebit_card_specializing",
    "1474": "\nSELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Currency = 'CZK' AND y.Date LIKE '2011-%'\nGROUP BY c.CustomerID\nORDER BY TotalConsumption DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1475": "\nSELECT COUNT(*)\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'KAM' AND CAST(ym.Date AS DATE) BETWEEN '2012-01-01' AND '2012-12-31' AND ym.Consumption < 30000\n\n\t----- bird -----\tdebit_card_specializing",
    "1476": "\nSELECT \n    SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) - \n    SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS ConsumptionDifference\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    ym.Date LIKE '2012-%'\n\n\t----- bird -----\tdebit_card_specializing",
    "1477": "\nSELECT Date FROM yearmonth WHERE Consumption = (SELECT MAX(Consumption) FROM yearmonth) AND Currency = 'EUR' GROUP BY Date ORDER BY Consumption DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1478": "\nSELECT Segment, SUM(Consumption) AS TotalConsumption\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nGROUP BY Segment\nORDER BY TotalConsumption ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1479": "\nSELECT Date FROM yearmonth WHERE Consumption > 0 AND CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'CZK') GROUP BY Date ORDER BY SUM(Consumption) DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1480": "\nSELECT Date FROM yearmonth WHERE CustomerID IN (\n    SELECT CustomerID FROM customers WHERE Segment = 'SME'\n) AND Date LIKE '2013%' ORDER BY Consumption DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1481": "\nWITH annual_consumption AS (\n    SELECT \n        c.Segment,\n        ym.CustomerID,\n        SUM(ym.Consumption) as total_consumption\n    FROM \n        yearmonth ym\n    JOIN \n        customers c ON ym.CustomerID = c.CustomerID\n    WHERE \n        c.Currency = 'CZK' AND \n        ym.Date LIKE '2013%'\n    GROUP BY \n        c.Segment, ym.CustomerID\n),\nleast_consumption AS (\n    SELECT \n        Segment,\n        MIN(total_consumption) as min_consumption\n    FROM \n        annual_consumption\n    GROUP BY \n        Segment\n)\nSELECT \n    a.Segment,\n    b.min_consumption,\n    AVG(a.total_consumption) as avg_annual_consumption\nFROM \n    annual_consumption a\nJOIN \n    least_consumption b ON a.Segment = b.Segment AND a.total_consumption = b.min_consumption\nGROUP BY \n    a.Segment, b.min_consumption\nORDER BY \n    a.Segment;\n\n\t----- bird -----\tdebit_card_specializing",
    "1482": "\nWITH consumption_change AS (\n    SELECT c.Segment,\n           ym1.Consumption AS Consumption_2012,\n           ym2.Consumption AS Consumption_2013,\n           ((ym2.Consumption - ym1.Consumption) / ym1.Consumption::float * 100) AS Percentage_Increase\n    FROM customers c\n    JOIN yearmonth ym1 ON c.CustomerID = ym1.CustomerID AND ym1.Date LIKE '2012-%'\n    JOIN yearmonth ym2 ON c.CustomerID = ym2.CustomerID AND ym2.Date LIKE '2013-%'\n    WHERE c.Currency = 'EUR'\n)\nSELECT Segment,\n       MAX(Percentage_Increase) AS Max_Percentage_Increase,\n       MIN(Percentage_Increase) AS Min_Percentage_Increase\nFROM consumption_change\nGROUP BY Segment;\n\n\t----- bird -----\tdebit_card_specializing",
    "1483": "\nSELECT SUM(Consumption) AS Total_Consumption\nFROM yearmonth\nWHERE CustomerID = 6 AND Date BETWEEN '2013-08-01' AND '2013-11-30'\n\n\t----- bird -----\tdebit_card_specializing",
    "1484": "\nSELECT Country, COUNT(GasStationID) AS DiscountGasStations\nFROM gasstations\nWHERE Segment = 'discount'\nGROUP BY Country\n\n\t----- bird -----\tdebit_card_specializing",
    "1485": "\nSELECT (SUM(CASE WHEN t1.CustomerID = 7 THEN Consumption ELSE 0 END) - SUM(CASE WHEN t1.CustomerID = 5 THEN Consumption ELSE 0 END)) AS consumption_difference\nFROM yearmonth t1\nWHERE Date LIKE '2013-04-%'\n\n\t----- bird -----\tdebit_card_specializing",
    "1486": "\nSELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS difference\nFROM customers AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T1.Segment = 'SME'\n\n\t----- bird -----\tdebit_card_specializing",
    "1487": "\nSELECT c.CustomerID, ym.Consumption\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'LAM' AND c.Currency = 'Euro' AND ym.Date = '2013-10'\nORDER BY ym.Consumption DESC\nLIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1488": "\nSELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Segment = 'KAM'\nGROUP BY c.CustomerID\nORDER BY TotalConsumption DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1489": "\nSELECT SUM(consumption) AS Total_Consumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Date LIKE '2013-05%' AND Segment = 'KAM'\n\n\t----- bird -----\tdebit_card_specializing",
    "1490": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM') * 100 \nFROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID \nWHERE c.Segment = 'LAM' AND ym.Consumption > 46.73\n\n\t----- bird -----\tdebit_card_specializing",
    "1491": "\nSELECT Country, COUNT(GasStationID) AS ValueForMoneyGasStationsCount\nFROM gasstations\nWHERE Segment = 'value for money'\nGROUP BY Country\n\n\t----- bird -----\tdebit_card_specializing",
    "1492": "\nSELECT CAST(COUNT(CASE WHEN T1.currency = 'EUR' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM customers AS T1 JOIN gasstations AS T2 ON T1.segment = T2.segment WHERE T1.segment = 'KAM'\n\n\t----- bird -----\tdebit_card_specializing",
    "1493": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date LIKE '2012-02%') * 100 \nFROM yearmonth \nWHERE Date LIKE '2012-02%' AND Consumption > 528.3\n\n\t----- bird -----\tdebit_card_specializing",
    "1494": "\nSELECT CAST(COUNT(CASE WHEN Segment = 'Premium' THEN GasStationID END) AS FLOAT) * 100 / COUNT(GasStationID) AS PremiumPercentage\nFROM gasstations\nWHERE Country = 'Slovakia';\n\n\t----- bird -----\tdebit_card_specializing",
    "1495": "\nSELECT CustomerID FROM yearmonth WHERE Date = '2013-09' ORDER BY Consumption DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1496": "\nSELECT c.Segment\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE ym.Date = '2013-09'\nGROUP BY c.Segment\nORDER BY SUM(ym.Consumption) ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1497": "\nSELECT c.CustomerID, ym.Consumption \nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'SME' AND ym.Date = '2012-06'\nORDER BY ym.Consumption ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1498": "\nSELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE Date BETWEEN '2012-01-01' AND '2012-12-31'\n\n\t----- bird -----\tdebit_card_specializing",
    "1499": "\nSELECT MAX(T2.Consumption) AS BiggestMonthlyConsumption\nFROM customers AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T1.Currency = 'Euro'\n\n\t----- bird -----\tdebit_card_specializing",
    "1500": "\nSELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nWHERE t.Date BETWEEN '2013-09-01' AND '2013-09-30'\n\n\t----- bird -----\tdebit_card_specializing",
    "1501": "\nSELECT DISTINCT gs.Country\nFROM gasstations gs\nJOIN transactions_1k t ON gs.GasStationID = t.GasStationID\nWHERE t.Date BETWEEN '2013-06-01' AND '2013-06-30'\n\n\t----- bird -----\tdebit_card_specializing",
    "1502": "\nSELECT DISTINCT g.ChainID, c.Currency\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.Currency = 'Euro'\nGROUP BY g.ChainID, c.Currency\n\n\t----- bird -----\tdebit_card_specializing",
    "1503": "\nSELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE c.Currency = 'Euro'\n\n\t----- bird -----\tdebit_card_specializing",
    "1504": "\nSELECT AVG(Price) AS AverageTotalPrice\nFROM transactions_1k\nWHERE Date >= '2012-01-01' AND Date <= '2012-01-31'\n\n\t----- bird -----\tdebit_card_specializing",
    "1505": "\nSELECT COUNT(DISTINCT c.CustomerID) \nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Currency = 'Euro' AND ym.Consumption > 1000\n\n\t----- bird -----\tdebit_card_specializing",
    "1506": "\nSELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'Czech Republic'\n\n\t----- bird -----\tdebit_card_specializing",
    "1507": "\nSELECT DISTINCT t.Time\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11\nORDER BY t.Time\n\n\t----- bird -----\tdebit_card_specializing",
    "1508": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'Czech Republic' AND t.Price > 1000\n\n\t----- bird -----\tdebit_card_specializing",
    "1509": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'Czech Republic' AND t.Date > '2012-01-01'\n\n\t----- bird -----\tdebit_card_specializing",
    "1510": "\nSELECT AVG(t.Amount * t.Price) AS AverageTotalPrice\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'Czech Republic'\n\n\t----- bird -----\tdebit_card_specializing",
    "1511": "\nSELECT AVG(TotalPrice) AS AverageTotalPrice\nFROM (\n    SELECT CustomerID, SUM(Price) AS TotalPrice\n    FROM transactions_1k t\n    JOIN customers c ON t.CustomerID = c.CustomerID\n    WHERE c.Currency = 'Euro'\n    GROUP BY CustomerID\n) AS Subquery\n\n\t----- bird -----\tdebit_card_specializing",
    "1512": "\nSELECT CustomerID, SUM(Amount) AS TotalSpent\nFROM transactions_1k\nWHERE Date = '2012-08-25'\nGROUP BY CustomerID\nORDER BY TotalSpent DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1513": "\nSELECT T1.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-25' ORDER BY T2.TransactionID LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1514": "\nSELECT c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-24' AND t.Time = '16:25:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1515": "\nSELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00'\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1516": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR' AND t.Date = '2012-08-26' AND t.Time LIKE '%AM%'\n\n\t----- bird -----\tdebit_card_specializing",
    "1517": "\nSELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers)\n\n\t----- bird -----\tdebit_card_specializing",
    "1518": "\nSELECT T1.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Time = '12:42:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1519": "\nSELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1520": "\nSELECT y.Date, y.Consumption \nFROM yearmonth y\nJOIN transactions_1k t ON y.CustomerID = t.CustomerID\nWHERE y.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 124.05 AND Date = '2012-08-24')\nAND DATE_FORMAT(t.Date, '%Y-%m') = '2012-01'\n\n\t----- bird -----\tdebit_card_specializing",
    "1521": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26' AND t.Time BETWEEN '08:00' AND '09:00' AND g.Country = 'CZE'\n\n\t----- bird -----\tdebit_card_specializing",
    "1522": "\nSELECT c.Currency FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '2013-06' AND ym.Consumption = 214582.17\n\n\t----- bird -----\tdebit_card_specializing",
    "1523": "\nSELECT T2.Country FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467 LIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1524": "\nSELECT c.Country\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE ym.Date = '2012-08-24' AND ym.Consumption = 548.4\n\n\t----- bird -----\tdebit_card_specializing",
    "1525": "\nSELECT CAST(COUNT(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.CustomerID) AS Percentage_EUR_Currency\nFROM customers AS T1\nJOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T2.Date = '2012-8-25'\n\n\t----- bird -----\tdebit_card_specializing",
    "1526": "\nWITH customer_info AS (\n    SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25'\n),\nyearly_consumption AS (\n    SELECT ym.CustomerID, \n           SUBSTR(ym.Date, 1, 4) AS Year,\n           SUM(ym.Consumption) AS TotalConsumption\n    FROM yearmonth ym\n    JOIN customer_info ci ON ym.CustomerID = ci.CustomerID\n    WHERE ym.Date IN ('2012', '2013')\n    GROUP BY ym.CustomerID, SUBSTR(ym.Date, 1, 4)\n)\nSELECT \n    (yc_2012.TotalConsumption - yc_2013.TotalConsumption) / yc_2012.TotalConsumption * 100 AS ConsumptionDecreaseRate\nFROM yearly_consumption yc_2012\nJOIN yearly_consumption yc_2013 ON yc_2012.CustomerID = yc_2013.CustomerID\nWHERE yc_2012.Year = '2012' AND yc_2013.Year = '2013';\n\n\t----- bird -----\tdebit_card_specializing",
    "1527": "\nSELECT g.GasStationID, SUM(t.Amount * t.Price) AS TotalRevenue\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nGROUP BY g.GasStationID\nORDER BY TotalRevenue DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1528": "\nSELECT CAST(COUNT(CASE WHEN t4.Segment = 'premium' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM gasstations AS t3 JOIN customers AS t4 ON t3.Segment = t4.Segment WHERE t3.Country = 'SVK'\n\n\t----- bird -----\tdebit_card_specializing",
    "1529": "\nSELECT SUM(Price) AS TotalSpent, \n       (SELECT SUM(Price) FROM transactions_1k WHERE CustomerID = 38508 AND Date BETWEEN '2012-01-01' AND '2012-01-31') AS January2012Spent\nFROM transactions_1k \nWHERE CustomerID = 38508;\n\n\t----- bird -----\tdebit_card_specializing",
    "1530": "\nSELECT p.Description AS ProductName, SUM(t.Amount) AS TotalSales\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nGROUP BY p.ProductID, p.Description\nORDER BY TotalSales DESC\nLIMIT 5\n\n\t----- bird -----\tdebit_card_specializing",
    "1531": "\nWITH TopSpendingCustomer AS (\n    SELECT CustomerID, SUM(Amount * Price) AS TotalSpent\n    FROM transactions_1k\n    GROUP BY CustomerID\n    ORDER BY TotalSpent DESC\n    LIMIT 1\n),\nAveragePricePerItem AS (\n    SELECT t.CustomerID, AVG(t.Price) AS AvgPricePerItem\n    FROM transactions_1k t\n    JOIN TopSpendingCustomer tc ON t.CustomerID = tc.CustomerID\n    GROUP BY t.CustomerID\n)\nSELECT c.CustomerID, c.Currency, tsp.AvgPricePerItem\nFROM customers c\nJOIN AveragePricePerItem tsp ON c.CustomerID = tsp.CustomerID;\n\n\t----- bird -----\tdebit_card_specializing",
    "1532": "\nSELECT T1.Country\nFROM gasstations AS T1\nJOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID\nWHERE T2.ProductID = 2\nORDER BY T2.Price DESC\nLIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1533": "\nSELECT ym.Date, ym.Consumption\nFROM yearmonth ym\nJOIN transactions_1k t ON ym.CustomerID = t.CustomerID\nWHERE t.ProductID = 5 AND t.Price > 29.00 AND EXTRACT(YEAR FROM CAST(t.Date AS DATE)) = 2012 AND EXTRACT(MONTH FROM CAST(t.Date AS DATE)) = 8\nGROUP BY ym.Date, ym.Consumption\n\n\t----- bird -----\tdebit_card_specializing"
}